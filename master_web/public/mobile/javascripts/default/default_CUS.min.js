let aswter1 = {
    "tab0": {
        cn: "产品名",
        en: "Products"
    },
    "tab1": {
        cn: "公司名",
        en: "Company"
    },
    "tab2": {
        cn: "HS编码",
        en: "HS Code"
    },
    "search_btn": {
        cn: "搜索",
        en: "Search"
    },
    "his_text": {
        cn: "搜索历史",
        en: "Search History"
    },
    "hot_text": {
        cn: "热门",
        en: "Hot"
    },
    "search_text": {
        cn: "请输入",
        en: "Please enter"
    },
    'a38': {
        cn: "采购商",
        en: "Buyers"
    },
    'a39': {
        cn: "供应商",
        en: "Supplier"
    },
    "a9": {
        cn: "抱歉，您的会员权限不足",
        en: "Insufficient User Permissions"
    },
    "a9-other": {
        cn: "黄钻会员可查阅此板块内容/使用此功能，建议您升级",
        en: "Yellow Diamond Members Have Permission To Get"
    },
    'a10': {
        cn: "警告!",
        en: "warn!"
    },
    'a11': {
        cn: "搜索内容不能为空!",
        en: "The search cannot be empty!"
    },
    'a12': {
        cn: "抱歉，您的会员权限不足",
        en: "Insufficient User Permissions"
    },
    'a13': {
        cn: "VIP会员可查阅此板块内容/使用此功能，建议您升级",
        en: "VIP Members Have Permission To Get"
    },
    'a14': {
        cn: "购买会员",
        en: "Buy Membership"
    },
    'a15': {
        cn: "登录提示",
        en: "Login Tips"
    },
    'a16': {
        cn: "建议您登陆/注册后尝试查询",
        en: "Query after logging in or registering"
    },
    'a17': {
        cn: "去登陆",
        en: "Login"
    },
    'a18': {
        cn: "去注册",
        en: "Register"
    },
    'a19': {
        cn: "警告",
        en: "warn"
    },
    'a20': {
        cn: "搜索框内容不能为空",
        en: "Content cannot be empty!"
    },
    'a21': {
        cn: "请输入纯数字的HS编码",
        en: "Please enter the numeric HS code"
    }
};

let lang = wg.lang

function get_lang(lang, aswter, index_name) {
    console.log(aswter[index_name][lang], "898989898")
    return aswter[index_name][lang]
}

function search_toast() {
    let img_src=$(".container").data("img")
    $("html").css("overflow-y", "hidden")
    let display = false,
        search_type = 2,
        corg_flag = 0

    let $box = $(`
    <div class="box" id="ws_search_box">
    <div class="header">
    <img class="backbtn" src="${img_src}mobile/images/layout/header/backbtn-left.png" />
    <a href="/"><img class="logo" style="margin-left:0;" src="${img_src}mobile/images/layout/header/logo.png" alt="外贸邦"/></a>
    <div class="right">
        
    </div>
    </div>
    <span class="del-btn"><img
            src="${img_src}mobile/images/company/company_list/del_btn.png" alt=""></span>
    <div class="tab">
        <span id="flag" data-id="2" class="active">
            ${get_lang(lang,aswter1,'tab0')}
        </span>
        <span id="flag" data-id="1">
        ${get_lang(lang,aswter1,'tab1')}
        </span>
        <span id="flag" data-id="3">
        ${get_lang(lang,aswter1,'tab2')}
        </span>
    </div>
    <div class="search-box">
        <span id="borm" class="borm">
            ${get_lang(lang,aswter1,"a38")}
        </span>
        <img src="${img_src}mobile/images/user/register/down.png" class="down" id="down" />
        <div class="select">
            <span id="options" class="select-active" data-id="0">
            ${get_lang(lang,aswter1,"a38")}
            </span>
            <span id="options" data-id="1">
            ${get_lang(lang,aswter1,"a39")}
            </span>
        </div>
        <span>|</span>
        <input placeholder=${get_lang(lang,aswter1,'search_text')}${get_lang(lang,aswter1,'tab0')} id="search_code" type="search" />
        <a id="search_btn">
        ${get_lang(lang,aswter1,"search_btn")}
        </a>
    </div>
    <div class="hostory" id="hostory">
        <h3>
        ${get_lang(lang,aswter1,"his_text")}
        </h3>
        <div class="context">
            <!-- 渲染 -->
        </div>
    </div>
    <div class="hot hostory">
        <h3>
        ${get_lang(lang,aswter1,"hot_text")}
        </h3>
        <div class="context">
            <!-- 渲染 -->
        </div>
    </div>
    </div>`)
    $(".container").append($box)

    get_his_data()
    get_hot_data()

    let tab_index_g = 2
    // 搜索下拉弹窗，顶部tab
    $(".tab #flag").click(function () {
        tab_index_g = $(this).data("id")
        // 先判断登录，再判断是否黄钻用户
        if ($(this).data("id") == 3) {
            // 是否登录
            if (!wg.user.encrypt_user_name) {
                // 搜索按钮不可用
                buy_vip_toast(`${get_lang(lang,aswter1,"a15")}`, `${get_lang(lang,aswter1,"a16")}`, `${get_lang(lang,aswter1,"a17")}`, `${get_lang(lang,aswter1,"a18")}`, `login`, `register`);
            } else if (wg.user.vip_level !== "yd") {
                // '': '普通用户',
                // 'v': 'Vip用户',
                // 'bd': '蓝钻用户',
                // 'yd': '黄钻用户'
                // 判断是否是黄钻会员，提示购买弹窗
                buy_vip_toast1(
                    `${get_lang(lang,aswter1,"a9")}`,
                    `${get_lang(lang,aswter1,"a9-other")}`,
                    `${get_lang(lang,aswter1,"a14")}`,
                    "/Alipay?yd"
                );
            } else {
                $(this).addClass("active").siblings().removeClass("active");
                search_type = $(this).data("id");
                tab_text = $(this).text();
                console.log(tab_text, "656656565")
                $("#search_code").attr("placeholder", `${get_lang(lang,aswter1,'search_text')}` + tab_text.replaceAll(" ", ""));
            }
        } else {
            $(this).addClass("active").siblings().removeClass("active");
            search_type = $(this).data("id");
            tab_text = $(this).text();
            console.log(tab_text, "656656565")
            $("#search_code").attr("placeholder", `${get_lang(lang,aswter1,'search_text')}` + tab_text.replaceAll(" ", ""));
            $("#search_code").val('')
        }

        console.log(search_type, corg_flag)
    });

    // 下拉按钮
    $(".search-box #down,#borm").click(function (e) {
        e.stopPropagation();
        display = !display;
        if (display) {
            $("#down").css("transform", "rotate(180deg)");
        } else {
            $("#down").css("transform", "rotate(0deg)");
        }
        $(".select").toggle();
    });


//百度统计代码
    var _hmt = _hmt || [];
    (function() {
      var hm = document.createElement("script");
      hm.src = "https://hm.baidu.com/hm.js?c131adc40651cdf84b4c7d5fdfbec963";
      var s = document.getElementsByTagName("script")[0]; 
      s.parentNode.insertBefore(hm, s);
    })();    


    // 左侧选择采购商，供应商
    $(".search-box .select #options").click(function () {
        display = !display;

        $(this).addClass("select-active").siblings().removeClass("select-active");

        $(".select").toggle();

        if (display) {
            $("#down").css("transform", "rotate(180deg)");
        } else {
            $("#down").css("transform", "rotate(0deg)");
        }

        corg_flag = $(this).data("id");


        if (corg_flag == 0) {
            $("#borm").text($(this).text());
        } else {
            $("#borm").text($(this).text());
        }
    });

    // 搜索按钮
    $("#search_btn").click(function () {
        if ($("#search_code").val() == "") {
            text_toast({
                p1: `${get_lang(lang,aswter1,"a19")}`,
                p2: `${get_lang(lang,aswter1,"a20")}`
            })
            return
        }

        if (tab_index_g == 3) {
            let rest = /^[0-9]*[1-9][0-9]*$/;
            if (!rest.test($("#search_code").val())) {
                text_toast({
                    p1: `${get_lang(lang,aswter1,"a19")}`,
                    p2: `${get_lang(lang,aswter1,"a21")}`
                })
                $("#search_code").val('')
                return false
            }

        }

        let search_key = $("#search_code").val()
        $(".container .box .del-btn img").click()

        $(this).attr("href", `${corg_flag==0?"buy-":"sup-"}${search_key}?search_type=${search_type}`)

    });

    // del
    $(".container .box .del-btn img").click(function () {
        $(".container>.box").slideUp('fast', function () {
            $(".container>.box").remove()
            $("html").css("overflow", "scroll")
        });
    })

    $(".container>.box>.header>.backbtn").click(function () {
        window.location.pathname = "/"
    })

    // 获取浏览历史 and 热门
    // 历史记录
    function get_his_data() {
        axios.get("/async/historyKeys").then((res) => {
            if (res.data.list.length !== 0) {
                res.data.list.forEach((item) => {
                    let $box = $(`<div class='his-box'><a>${item.keywords}</a></div>`);
                    $("#hostory .context").append($box);
                });
            } else {
                $("#hostory").hide();
            }
        });
    };

    // 热门搜索
    function get_hot_data() {
        axios.get("/async/hotKeys").then((res) => {
            if (res.data.list) {
                res.data.list.forEach((item) => {
                    let $box = $(`<div class='his-box'><a>${item.keywords}</a></div>`);
                    $(".hot .context").append($box);
                });
            }
        });
    };

    $('body').click(function (event) {
        // 阻止事件捕获
        event.stopImmediatePropagation();
        if ($(".search-box .select").css("display") == 'block') {
            $(".search-box .select").toggle();
            $(".search-box>img").css({
                'transform': 'rotate(0deg)'
            })
        }
    })

    // 选择历史记录
    // 动态添加的子元素用 .on 获取
    $("#hostory .context").on("click", ".his-box a", function () {
        // $(this).parent().addClass("active").siblings().removeClass("active");

        let his_flag = $(this).text();
        $("#search_code").val(his_flag);
        $("#context-search").val(his_flag);
        $(".container .box .del-btn img").click()
        $(this).attr("href", `${corg_flag==0?"buy-":"sup-"}${his_flag}?search_type=${search_type}`)
    });

    // 选择热门搜索
    $(".hot .context").on("click", ".his-box a", function () {
        // $(this).parent().addClass("active").siblings().removeClass("active");

        let hot_flag = $(this).text();
        $("#search_code").val(hot_flag);
        $("#context-search").val(hot_flag);
        $(".container .box .del-btn img").click()
        $(this).attr("href", `${corg_flag==0?"buy-":"sup-"}${hot_flag}?search_type=${search_type}`)
        // $(this).parent().removeClass("active")
    });

}

function llAlert(e) {
    var t = document.createElement("div");
    t.className = "zhezhao", t.innerHTML = '\n      <div class="alert">\n          <div class="header1"><span class="title">' + e.title + '</span><span class="close">X</span></div>\n          <div class="main">\n          <p>' + e.content + "</p>\n          </div>\n      </div>\n      ";
    var n = document.querySelector("body");
    n.appendChild(t);
    var i = document.querySelector(".close");
    i.onclick = function () {
        console.log("22222"), n.removeChild(t)
    }
}

function loadding() {
    var img_src=$(".container").data("img")
    console.log()
    var e = document.createElement("div");
    e.className = "loadding", e.innerHTML = `\n          <img src="${img_src}mobile/images/company/company_list/loading.gif" />\n      `;
    var t = document.querySelector("body");
    t.appendChild(e)
}

function delloadding() {
    let e = document.querySelectorAll(".loadding");
    window.document.body.removeChild(e[0])
}

function text_toast(e) {
    var t = document.createElement("div");
    t.className = "text_toast", t.innerHTML = `\n      <div class="alert">\n          <span>${e.p1}</span>\n      <span>${e.p2}</span>\n      ${!e.p3?'<img src="https://static.52wmb.com/wmb_new/mobile/images/company/company_list/text_close.png" class="close"></img>':""}\n      </div>\n      `;
    var n = document.querySelector("body");
    n.appendChild(t);
    // 有按钮
    if (!e.p3) {
        var i = document.querySelector(".close");
        i.onclick = function () {
            console.log("22222"), n.removeChild(t)
        }
    } else {
        // 无按钮，自动跳转
        setTimeout(function () {
            n.removeChild(t)
        }, 1000)
    }
}
//双按钮弹窗
function buy_vip_toast(e, t, n1, n2, i1, i2) {
    console.log(e, t, n1, n2, i1, i2,"登录注册弹窗")
    var r = document.createElement("div");
    r.className = "buy_vip_toast", r.innerHTML = `\n      <div class="alert">\n      <h3>${e}</h3>\n      <span>${t}</span>\n      <div>   <a class='s-btn' id="buy_vip_toast_l_btn" href="/${i1}">${n1}</a>     <a class='s-btn' id="buy_vip_toast_r_btn" href="/${i2}">${n2}</a>  </div>\n  <img src="https://static.52wmb.com/wmb_new/mobile/images/company/company_list/text_close.png" class="close">\n      </div>\n      `;
    var o = document.querySelector("body");
    o.appendChild(r),
        $("#buy_vip_toast_l_btn").click(function () {
            o.removeChild(r)
        });
    $("#buy_vip_toast_r_btn").click(function () {
        o.removeChild(r)
    });

    // 背景不可滚动
    $("body").css('overflow-y','hidden')
    var a = document.querySelector(".close");
    a.onclick = function () {
        $("body").css('overflow-y','scroll')
        console.log("22222"), o.removeChild(r)
    }
} 

//单按钮弹窗
function buy_vip_toast1(e, t, n1, i1) {
    console.log(e, t, n1, i1)
    var r = document.createElement("div");
    r.className = "buy_vip_toast1", r.innerHTML = `\n      <div class="alert">\n      <h3>${e}</h3>\n      <span>${t}</span>\n      <div>   <a id="buy_vip_toast1_l_btn" href="${i1}">${n1}</a>     </div>\n  <img src="https://static.52wmb.com/wmb_new/mobile/images/company/company_list/text_close.png" class="close">\n      </div>\n      `;
    var o = document.querySelector("body");
    o.appendChild(r),
        $("#buy_vip_toast1_l_btn").click(function () {
            o.removeChild(r)
        });

        // 背景不可滚动
    $("body").css('overflow-y','hidden')

    var a = document.querySelector(".close");
    a.onclick = function () {
        $("body").css('overflow-y','scroll')
        console.log("22222"), o.removeChild(r)
    }
}

function buy_vip_toast2(e, t, n1, i1) {
    console.log(e, t, n1, i1)
    var r = document.createElement("div");
    r.className = "buy_vip_toast1", r.innerHTML = `\n      <div class="alert">\n      <h3>${e}</h3>\n      <span>${t}</span>\n      <div>   <button id="buy_vip_toast1_l_btn">${n1}</button>     </div>\n       </div>\n      `;
    
    $("body").css('overflow-y','hidden')
    var o = document.querySelector("body");
    o.appendChild(r),
        $("#buy_vip_toast1_l_btn").click(function () {
            axios.get(`/async/recheck/product?order_no=${i1}`).then(function (res) {
                console.log(res, "取消支付")
                if (res.data.state == 0) {
                    window.location.reload()
                    o.removeChild(r)
                }
            })
        });
}! function (e) {
    "use strict";
    var t = document,
        n = "querySelectorAll",
        i = "getElementsByClassName",
        r = function (e) {
            return t[n](e)
        },
        o = {
            type: 0,
            shade: !0,
            shadeClose: !0,
            fixed: !0,
            anim: "scale"
        },
        a = {
            extend: function (e) {
                var t = JSON.parse(JSON.stringify(o));
                for (var n in e) t[n] = e[n];
                return t
            },
            timer: {},
            end: {},
            touch: function (e, t) {
                e.addEventListener("click", function (e) {
                    t.call(this, e)
                }, !1)
            }
        },
        s = 0,
        l = ["layui-m-layer"],
        u = function (e) {
            var t = this;
            t.config = a.extend(e), t.view()
        };
    u.prototype.view = function () {
        var e = this,
            n = e.config,
            o = t.createElement("div");
        e.id = o.id = l[0] + s, o.setAttribute("class", l[0] + " " + l[0] + (n.type || 0)), o.setAttribute("index", s);
        var a = function () {
                var e = "object" == typeof n.title;
                return n.title ? '<h3 style="' + (e ? n.title[1] : "") + '">' + (e ? n.title[0] : n.title) + "</h3>" : ""
            }(),
            u = function () {
                "string" == typeof n.btn && (n.btn = [n.btn]);
                var e, t = (n.btn || []).length;
                return 0 !== t && n.btn ? (e = '<span yes type="1">' + n.btn[0] + "</span>", 2 === t && (e = '<span no type="0">' + n.btn[1] + "</span>" + e), '<div class="layui-m-layerbtn">' + e + "</div>") : ""
            }();
        if (n.fixed || (n.top = n.hasOwnProperty("top") ? n.top : 100, n.style = n.style || "", n.style += " top:" + (t.body.scrollTop + n.top) + "px"), 2 === n.type && (n.content = '<i></i><i class="layui-m-layerload"></i><i></i><p>' + (n.content || "") + "</p>"), n.skin && (n.anim = "up"), "msg" === n.skin && (n.shade = !1), o.innerHTML = (n.shade ? "<div " + ("string" == typeof n.shade ? 'style="' + n.shade + '"' : "") + ' class="layui-m-layershade"></div>' : "") + '<div class="layui-m-layermain" ' + (n.fixed ? "" : 'style="position:static;"') + '><div class="layui-m-layersection"><div class="layui-m-layerchild ' + (n.skin ? "layui-m-layer-" + n.skin + " " : "") + (n.className ? n.className : "") + " " + (n.anim ? "layui-m-anim-" + n.anim : "") + '" ' + (n.style ? 'style="' + n.style + '"' : "") + ">" + a + '<div class="layui-m-layercont">' + n.content + "</div>" + u + "</div></div></div>", !n.type || 2 === n.type) {
            var c = t[i](l[0] + n.type),
                p = c.length;
            p >= 1 && layer.close(c[0].getAttribute("index"))
        }
        document.body.appendChild(o);
        var h = e.elem = r("#" + e.id)[0];
        n.success && n.success(h), e.index = s++, e.action(n, h)
    }, u.prototype.action = function (e, t) {
        var n = this;
        e.time && (a.timer[n.index] = setTimeout(function () {
            layer.close(n.index)
        }, 1e3 * e.time));
        var r = function () {
            var t = this.getAttribute("type");
            0 == t ? (e.no && e.no(), layer.close(n.index)) : e.yes ? e.yes(n.index) : layer.close(n.index)
        };
        if (e.btn)
            for (var o = t[i]("layui-m-layerbtn")[0].children, s = o.length, l = 0; s > l; l++) a.touch(o[l], r);
        if (e.shade && e.shadeClose) {
            var u = t[i]("layui-m-layershade")[0];
            a.touch(u, function () {
                layer.close(n.index, e.end)
            })
        }
        e.end && (a.end[n.index] = e.end)
    }, e.layer = {
        v: "2.0",
        index: s,
        open: function (e) {
            var t = new u(e || {});
            return t.index
        },
        close: function (e) {
            var n = r("#" + l[0] + e)[0];
            n && (n.innerHTML = "", t.body.removeChild(n), clearTimeout(a.timer[e]), delete a.timer[e], "function" == typeof a.end[e] && a.end[e](), delete a.end[e])
        },
        closeAll: function () {
            for (var e = t[i](l[0]), n = 0, r = e.length; r > n; n++) layer.close(0 | e[0].getAttribute("index"))
        }
    }, "function" == typeof define ? define(function () {
        return layer
    }) : function () {
        var e = document.scripts,
            n = e[e.length - 1],
            i = n.src,
            r = i.substring(0, i.lastIndexOf("/") + 1),
            o = i.substring(0, i.indexOf("javascripts"));
        console.log(i, r), n.getAttribute("merge") || document.head.appendChild(function () {
            var e = t.createElement("link");
            return e.href = o + "css/layui_mobile/layer.css", e.type = "text/css", e.rel = "styleSheet", e.id = "layermcss", e
        }())
    }()
}(window),
function (e, t) {
    function n(e) {
        var t = e.length,
            n = ce.type(e);
        return !ce.isWindow(e) && (!(1 !== e.nodeType || !t) || ("array" === n || "function" !== n && (0 === t || "number" == typeof t && t > 0 && t - 1 in e)))
    }

    function i(e) {
        var t = Ce[e] = {};
        return ce.each(e.match(he) || [], function (e, n) {
            t[n] = !0
        }), t
    }

    function r(e, n, i, r) {
        if (ce.acceptData(e)) {
            var o, a, s = ce.expando,
                l = e.nodeType,
                u = l ? ce.cache : e,
                c = l ? e[s] : e[s] && s;
            if (c && u[c] && (r || u[c].data) || i !== t || "string" != typeof n) return c || (c = l ? e[s] = te.pop() || ce.guid++ : s), u[c] || (u[c] = l ? {} : {
                toJSON: ce.noop
            }), ("object" == typeof n || "function" == typeof n) && (r ? u[c] = ce.extend(u[c], n) : u[c].data = ce.extend(u[c].data, n)), a = u[c], r || (a.data || (a.data = {}), a = a.data), i !== t && (a[ce.camelCase(n)] = i), "string" == typeof n ? (o = a[n], null == o && (o = a[ce.camelCase(n)])) : o = a, o
        }
    }

    function o(e, t, n) {
        if (ce.acceptData(e)) {
            var i, r, o = e.nodeType,
                a = o ? ce.cache : e,
                l = o ? e[ce.expando] : ce.expando;
            if (a[l]) {
                if (t && (i = n ? a[l] : a[l].data)) {
                    ce.isArray(t) ? t = t.concat(ce.map(t, ce.camelCase)) : t in i ? t = [t] : (t = ce.camelCase(t), t = t in i ? [t] : t.split(" ")), r = t.length;
                    for (; r--;) delete i[t[r]];
                    if (n ? !s(i) : !ce.isEmptyObject(i)) return
                }(n || (delete a[l].data, s(a[l]))) && (o ? ce.cleanData([e], !0) : ce.support.deleteExpando || a != a.window ? delete a[l] : a[l] = null)
            }
        }
    }

    function a(e, n, i) {
        if (i === t && 1 === e.nodeType) {
            var r = "data-" + n.replace(Ie, "-$1").toLowerCase();
            if (i = e.getAttribute(r), "string" == typeof i) {
                try {
                    i = "true" === i || "false" !== i && ("null" === i ? null : +i + "" === i ? +i : Me.test(i) ? ce.parseJSON(i) : i)
                } catch (e) {}
                ce.data(e, n, i)
            } else i = t
        }
        return i
    }

    function s(e) {
        var t;
        for (t in e)
            if (("data" !== t || !ce.isEmptyObject(e[t])) && "toJSON" !== t) return !1;
        return !0
    }

    function l() {
        return !0
    }

    function u() {
        return !1
    }

    function c() {
        try {
            return $.activeElement
        } catch (e) {}
    }

    function p(e, t) {
        do {
            e = e[t]
        } while (e && 1 !== e.nodeType);
        return e
    }

    function h(e, t, n) {
        if (ce.isFunction(t)) return ce.grep(e, function (e, i) {
            return !!t.call(e, i, e) !== n
        });
        if (t.nodeType) return ce.grep(e, function (e) {
            return e === t !== n
        });
        if ("string" == typeof t) {
            if (Ve.test(t)) return ce.filter(t, e, n);
            t = ce.filter(t, e)
        }
        return ce.grep(e, function (e) {
            return ce.inArray(e, t) >= 0 !== n
        })
    }

    function d(e) {
        var t = Ye.split("|"),
            n = e.createDocumentFragment();
        if (n.createElement)
            for (; t.length;) n.createElement(t.pop());
        return n
    }

    function f(e, t) {
        return ce.nodeName(e, "table") && ce.nodeName(1 === t.nodeType ? t : t.firstChild, "tr") ? e.getElementsByTagName("tbody")[0] || e.appendChild(e.ownerDocument.createElement("tbody")) : e
    }

    function g(e) {
        return e.type = (null !== ce.find.attr(e, "type")) + "/" + e.type, e
    }

    function m(e) {
        var t = rt.exec(e.type);
        return t ? e.type = t[1] : e.removeAttribute("type"), e
    }

    function y(e, t) {
        for (var n, i = 0; null != (n = e[i]); i++) ce._data(n, "globalEval", !t || ce._data(t[i], "globalEval"))
    }

    function v(e, t) {
        if (1 === t.nodeType && ce.hasData(e)) {
            var n, i, r, o = ce._data(e),
                a = ce._data(t, o),
                s = o.events;
            if (s)
                for (n in delete a.handle, a.events = {}, s)
                    for (i = 0, r = s[n].length; r > i; i++) ce.event.add(t, n, s[n][i]);
            a.data && (a.data = ce.extend({}, a.data))
        }
    }

    function x(e, t) {
        var n, i, r;
        if (1 === t.nodeType) {
            if (n = t.nodeName.toLowerCase(), !ce.support.noCloneEvent && t[ce.expando]) {
                for (i in r = ce._data(t), r.events) ce.removeEvent(t, i, r.handle);
                t.removeAttribute(ce.expando)
            }
            "script" === n && t.text !== e.text ? (g(t).text = e.text, m(t)) : "object" === n ? (t.parentNode && (t.outerHTML = e.outerHTML), ce.support.html5Clone && e.innerHTML && !ce.trim(t.innerHTML) && (t.innerHTML = e.innerHTML)) : "input" === n && tt.test(e.type) ? (t.defaultChecked = t.checked = e.checked, t.value !== e.value && (t.value = e.value)) : "option" === n ? t.defaultSelected = t.selected = e.defaultSelected : ("input" === n || "textarea" === n) && (t.defaultValue = e.defaultValue)
        }
    }

    function _(e, n) {
        var i, r, o = 0,
            a = typeof e.getElementsByTagName !== q ? e.getElementsByTagName(n || "*") : typeof e.querySelectorAll !== q ? e.querySelectorAll(n || "*") : t;
        if (!a)
            for (a = [], i = e.childNodes || e; null != (r = i[o]); o++) !n || ce.nodeName(r, n) ? a.push(r) : ce.merge(a, _(r, n));
        return n === t || n && ce.nodeName(e, n) ? ce.merge([e], a) : a
    }

    function w(e) {
        tt.test(e.type) && (e.defaultChecked = e.checked)
    }

    function b(e, t) {
        if (t in e) return t;
        for (var n = t.charAt(0).toUpperCase() + t.slice(1), i = t, r = Tt.length; r--;)
            if (t = Tt[r] + n, t in e) return t;
        return i
    }

    function S(e, t) {
        return e = t || e, "none" === ce.css(e, "display") || !ce.contains(e.ownerDocument, e)
    }

    function T(e, t) {
        for (var n, i, r, o = [], a = 0, s = e.length; s > a; a++) i = e[a], i.style && (o[a] = ce._data(i, "olddisplay"), n = i.style.display, t ? (o[a] || "none" !== n || (i.style.display = ""), "" === i.style.display && S(i) && (o[a] = ce._data(i, "olddisplay", k(i.nodeName)))) : o[a] || (r = S(i), (n && "none" !== n || !r) && ce._data(i, "olddisplay", r ? n : ce.css(i, "display"))));
        for (a = 0; s > a; a++) i = e[a], i.style && (t && "none" !== i.style.display && "" !== i.style.display || (i.style.display = t ? o[a] || "" : "none"));
        return e
    }

    function C(e, t, n) {
        var i = yt.exec(t);
        return i ? Math.max(0, i[1] - (n || 0)) + (i[2] || "px") : t
    }

    function M(e, t, n, i, r) {
        for (var o = n === (i ? "border" : "content") ? 4 : "width" === t ? 1 : 0, a = 0; 4 > o; o += 2) "margin" === n && (a += ce.css(e, n + St[o], !0, r)), i ? ("content" === n && (a -= ce.css(e, "padding" + St[o], !0, r)), "margin" !== n && (a -= ce.css(e, "border" + St[o] + "Width", !0, r))) : (a += ce.css(e, "padding" + St[o], !0, r), "padding" !== n && (a += ce.css(e, "border" + St[o] + "Width", !0, r)));
        return a
    }

    function I(e, t, n) {
        var i = !0,
            r = "width" === t ? e.offsetWidth : e.offsetHeight,
            o = ct(e),
            a = ce.support.boxSizing && "border-box" === ce.css(e, "boxSizing", !1, o);
        if (0 >= r || null == r) {
            if (r = pt(e, t, o), (0 > r || null == r) && (r = e.style[t]), vt.test(r)) return r;
            i = a && (ce.support.boxSizingReliable || r === e.style[t]), r = parseFloat(r) || 0
        }
        return r + M(e, t, n || (a ? "border" : "content"), i, o) + "px"
    }

    function k(e) {
        var t = $,
            n = _t[e];
        return n || (n = D(e, t), "none" !== n && n || (ut = (ut || ce("<iframe frameborder='0' width='0' height='0'/>").css("cssText", "display:block !important")).appendTo(t.documentElement), t = (ut[0].contentWindow || ut[0].contentDocument).document, t.write("<!doctype html><html><body>"), t.close(), n = D(e, t), ut.detach()), _t[e] = n), n
    }

    function D(e, t) {
        var n = ce(t.createElement(e)).appendTo(t.body),
            i = ce.css(n[0], "display");
        return n.remove(), i
    }

    function A(e, t, n, i) {
        var r;
        if (ce.isArray(t)) ce.each(t, function (t, r) {
            n || Mt.test(e) ? i(e, r) : A(e + "[" + ("object" == typeof r ? t : "") + "]", r, n, i)
        });
        else if (n || "object" !== ce.type(t)) i(e, t);
        else
            for (r in t) A(e + "[" + r + "]", t[r], n, i)
    }

    function P(e) {
        return function (t, n) {
            "string" != typeof t && (n = t, t = "*");
            var i, r = 0,
                o = t.toLowerCase().match(he) || [];
            if (ce.isFunction(n))
                for (; i = o[r++];) "+" === i[0] ? (i = i.slice(1) || "*", (e[i] = e[i] || []).unshift(n)) : (e[i] = e[i] || []).push(n)
        }
    }

    function L(e, n, i, r) {
        function o(l) {
            var u;
            return a[l] = !0, ce.each(e[l] || [], function (e, l) {
                var c = l(n, i, r);
                return "string" != typeof c || s || a[c] ? s ? !(u = c) : t : (n.dataTypes.unshift(c), o(c), !1)
            }), u
        }
        var a = {},
            s = e === Wt;
        return o(n.dataTypes[0]) || !a["*"] && o("*")
    }

    function N(e, n) {
        var i, r, o = ce.ajaxSettings.flatOptions || {};
        for (r in n) n[r] !== t && ((o[r] ? e : i || (i = {}))[r] = n[r]);
        return i && ce.extend(!0, e, i), e
    }

    function O(e, n, i) {
        for (var r, o, a, s, l = e.contents, u = e.dataTypes;
            "*" === u[0];) u.shift(), o === t && (o = e.mimeType || n.getResponseHeader("Content-Type"));
        if (o)
            for (s in l)
                if (l[s] && l[s].test(o)) {
                    u.unshift(s);
                    break
                } if (u[0] in i) a = u[0];
        else {
            for (s in i) {
                if (!u[0] || e.converters[s + " " + u[0]]) {
                    a = s;
                    break
                }
                r || (r = s)
            }
            a = a || r
        }
        return a ? (a !== u[0] && u.unshift(a), i[a]) : t
    }

    function E(e, t, n, i) {
        var r, o, a, s, l, u = {},
            c = e.dataTypes.slice();
        if (c[1])
            for (a in e.converters) u[a.toLowerCase()] = e.converters[a];
        for (o = c.shift(); o;)
            if (e.responseFields[o] && (n[e.responseFields[o]] = t), !l && i && e.dataFilter && (t = e.dataFilter(t, e.dataType)), l = o, o = c.shift())
                if ("*" === o) o = l;
                else if ("*" !== l && l !== o) {
            if (a = u[l + " " + o] || u["* " + o], !a)
                for (r in u)
                    if (s = r.split(" "), s[1] === o && (a = u[l + " " + s[0]] || u["* " + s[0]])) {
                        !0 === a ? a = u[r] : !0 !== u[r] && (o = s[0], c.unshift(s[1]));
                        break
                    } if (!0 !== a)
                if (a && e.throws) t = a(t);
                else try {
                    t = a(t)
                } catch (e) {
                    return {
                        state: "parsererror",
                        error: a ? e : "No conversion from " + l + " to " + o
                    }
                }
        }
        return {
            state: "success",
            data: t
        }
    }

    function R() {
        try {
            return new e.XMLHttpRequest
        } catch (e) {}
    }

    function z() {
        try {
            return new e.ActiveXObject("Microsoft.XMLHTTP")
        } catch (e) {}
    }

    function B() {
        return setTimeout(function () {
            Kt = t
        }), Kt = ce.now()
    }

    function F(e, t, n) {
        for (var i, r = (rn[t] || []).concat(rn["*"]), o = 0, a = r.length; a > o; o++)
            if (i = r[o].call(n, t, e)) return i
    }

    function H(e, t, n) {
        var i, r, o = 0,
            a = nn.length,
            s = ce.Deferred().always(function () {
                delete l.elem
            }),
            l = function () {
                if (r) return !1;
                for (var t = Kt || B(), n = Math.max(0, u.startTime + u.duration - t), i = n / u.duration || 0, o = 1 - i, a = 0, l = u.tweens.length; l > a; a++) u.tweens[a].run(o);
                return s.notifyWith(e, [u, o, n]), 1 > o && l ? n : (s.resolveWith(e, [u]), !1)
            },
            u = s.promise({
                elem: e,
                props: ce.extend({}, t),
                opts: ce.extend(!0, {
                    specialEasing: {}
                }, n),
                originalProperties: t,
                originalOptions: n,
                startTime: Kt || B(),
                duration: n.duration,
                tweens: [],
                createTween: function (t, n) {
                    var i = ce.Tween(e, u.opts, t, n, u.opts.specialEasing[t] || u.opts.easing);
                    return u.tweens.push(i), i
                },
                stop: function (t) {
                    var n = 0,
                        i = t ? u.tweens.length : 0;
                    if (r) return this;
                    for (r = !0; i > n; n++) u.tweens[n].run(1);
                    return t ? s.resolveWith(e, [u, t]) : s.rejectWith(e, [u, t]), this
                }
            }),
            c = u.props;
        for (G(c, u.opts.specialEasing); a > o; o++)
            if (i = nn[o].call(u, e, c, u.opts)) return i;
        return ce.map(c, F, u), ce.isFunction(u.opts.start) && u.opts.start.call(e, u), ce.fx.timer(ce.extend(l, {
            elem: e,
            anim: u,
            queue: u.opts.queue
        })), u.progress(u.opts.progress).done(u.opts.done, u.opts.complete).fail(u.opts.fail).always(u.opts.always)
    }

    function G(e, t) {
        var n, i, r, o, a;
        for (n in e)
            if (i = ce.camelCase(n), r = t[i], o = e[n], ce.isArray(o) && (r = o[1], o = e[n] = o[0]), n !== i && (e[i] = o, delete e[n]), a = ce.cssHooks[i], a && "expand" in a)
                for (n in o = a.expand(o), delete e[i], o) n in e || (e[n] = o[n], t[n] = r);
            else t[i] = r
    }

    function V(e, t, n) {
        var i, r, o, a, s, l, u = this,
            c = {},
            p = e.style,
            h = e.nodeType && S(e),
            d = ce._data(e, "fxshow");
        for (i in n.queue || (s = ce._queueHooks(e, "fx"), null == s.unqueued && (s.unqueued = 0, l = s.empty.fire, s.empty.fire = function () {
                s.unqueued || l()
            }), s.unqueued++, u.always(function () {
                u.always(function () {
                    s.unqueued--, ce.queue(e, "fx").length || s.empty.fire()
                })
            })), 1 === e.nodeType && ("height" in t || "width" in t) && (n.overflow = [p.overflow, p.overflowX, p.overflowY], "inline" === ce.css(e, "display") && "none" === ce.css(e, "float") && (ce.support.inlineBlockNeedsLayout && "inline" !== k(e.nodeName) ? p.zoom = 1 : p.display = "inline-block")), n.overflow && (p.overflow = "hidden", ce.support.shrinkWrapBlocks || u.always(function () {
                p.overflow = n.overflow[0], p.overflowX = n.overflow[1], p.overflowY = n.overflow[2]
            })), t)
            if (r = t[i], Qt.exec(r)) {
                if (delete t[i], o = o || "toggle" === r, r === (h ? "hide" : "show")) continue;
                c[i] = d && d[i] || ce.style(e, i)
            } if (!ce.isEmptyObject(c))
            for (i in d ? "hidden" in d && (h = d.hidden) : d = ce._data(e, "fxshow", {}), o && (d.hidden = !h), h ? ce(e).show() : u.done(function () {
                    ce(e).hide()
                }), u.done(function () {
                    var t;
                    for (t in ce._removeData(e, "fxshow"), c) ce.style(e, t, c[t])
                }), c) a = F(h ? d[i] : 0, i, u), i in d || (d[i] = a.start, h && (a.end = a.start, a.start = "width" === i || "height" === i ? 1 : 0))
    }

    function W(e, t, n, i, r) {
        return new W.prototype.init(e, t, n, i, r)
    }

    function j(e, t) {
        var n, i = {
                height: e
            },
            r = 0;
        for (t = t ? 1 : 0; 4 > r; r += 2 - t) n = St[r], i["margin" + n] = i["padding" + n] = e;
        return t && (i.opacity = i.width = e), i
    }

    function X(e) {
        return ce.isWindow(e) ? e : 9 === e.nodeType && (e.defaultView || e.parentWindow)
    }
    var Y, U, q = typeof t,
        Z = e.location,
        $ = e.document,
        K = $.documentElement,
        J = e.jQuery,
        Q = e.$,
        ee = {},
        te = [],
        ne = "1.10.2",
        ie = te.concat,
        re = te.push,
        oe = te.slice,
        ae = te.indexOf,
        se = ee.toString,
        le = ee.hasOwnProperty,
        ue = ne.trim,
        ce = function (e, t) {
            return new ce.fn.init(e, t, U)
        },
        pe = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
        he = /\S+/g,
        de = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
        fe = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
        ge = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
        me = /^[\],:{}\s]*$/,
        ye = /(?:^|:|,)(?:\s*\[)+/g,
        ve = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
        xe = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,
        _e = /^-ms-/,
        we = /-([\da-z])/gi,
        be = function (e, t) {
            return t.toUpperCase()
        },
        Se = function (e) {
            ($.addEventListener || "load" === e.type || "complete" === $.readyState) && (Te(), ce.ready())
        },
        Te = function () {
            $.addEventListener ? ($.removeEventListener("DOMContentLoaded", Se, !1), e.removeEventListener("load", Se, !1)) : ($.detachEvent("onreadystatechange", Se), e.detachEvent("onload", Se))
        };
    ce.fn = ce.prototype = {
            jquery: ne,
            constructor: ce,
            init: function (e, n, i) {
                var r, o;
                if (!e) return this;
                if ("string" == typeof e) {
                    if (r = "<" === e.charAt(0) && ">" === e.charAt(e.length - 1) && e.length >= 3 ? [null, e, null] : fe.exec(e), !r || !r[1] && n) return !n || n.jquery ? (n || i).find(e) : this.constructor(n).find(e);
                    if (r[1]) {
                        if (n = n instanceof ce ? n[0] : n, ce.merge(this, ce.parseHTML(r[1], n && n.nodeType ? n.ownerDocument || n : $, !0)), ge.test(r[1]) && ce.isPlainObject(n))
                            for (r in n) ce.isFunction(this[r]) ? this[r](n[r]) : this.attr(r, n[r]);
                        return this
                    }
                    if (o = $.getElementById(r[2]), o && o.parentNode) {
                        if (o.id !== r[2]) return i.find(e);
                        this.length = 1, this[0] = o
                    }
                    return this.context = $, this.selector = e, this
                }
                return e.nodeType ? (this.context = this[0] = e, this.length = 1, this) : ce.isFunction(e) ? i.ready(e) : (e.selector !== t && (this.selector = e.selector, this.context = e.context), ce.makeArray(e, this))
            },
            selector: "",
            length: 0,
            toArray: function () {
                return oe.call(this)
            },
            get: function (e) {
                return null == e ? this.toArray() : 0 > e ? this[this.length + e] : this[e]
            },
            pushStack: function (e) {
                var t = ce.merge(this.constructor(), e);
                return t.prevObject = this, t.context = this.context, t
            },
            each: function (e, t) {
                return ce.each(this, e, t)
            },
            ready: function (e) {
                return ce.ready.promise().done(e), this
            },
            slice: function () {
                return this.pushStack(oe.apply(this, arguments))
            },
            first: function () {
                return this.eq(0)
            },
            last: function () {
                return this.eq(-1)
            },
            eq: function (e) {
                var t = this.length,
                    n = +e + (0 > e ? t : 0);
                return this.pushStack(n >= 0 && t > n ? [this[n]] : [])
            },
            map: function (e) {
                return this.pushStack(ce.map(this, function (t, n) {
                    return e.call(t, n, t)
                }))
            },
            end: function () {
                return this.prevObject || this.constructor(null)
            },
            push: re,
            sort: [].sort,
            splice: [].splice
        }, ce.fn.init.prototype = ce.fn, ce.extend = ce.fn.extend = function () {
            var e, n, i, r, o, a, s = arguments[0] || {},
                l = 1,
                u = arguments.length,
                c = !1;
            for ("boolean" == typeof s && (c = s, s = arguments[1] || {}, l = 2), "object" == typeof s || ce.isFunction(s) || (s = {}), u === l && (s = this, --l); u > l; l++)
                if (null != (o = arguments[l]))
                    for (r in o) e = s[r], i = o[r], s !== i && (c && i && (ce.isPlainObject(i) || (n = ce.isArray(i))) ? (n ? (n = !1, a = e && ce.isArray(e) ? e : []) : a = e && ce.isPlainObject(e) ? e : {}, s[r] = ce.extend(c, a, i)) : i !== t && (s[r] = i));
            return s
        }, ce.extend({
            expando: "jQuery" + (ne + Math.random()).replace(/\D/g, ""),
            noConflict: function (t) {
                return e.$ === ce && (e.$ = Q), t && e.jQuery === ce && (e.jQuery = J), ce
            },
            isReady: !1,
            readyWait: 1,
            holdReady: function (e) {
                e ? ce.readyWait++ : ce.ready(!0)
            },
            ready: function (e) {
                if (!0 === e ? !--ce.readyWait : !ce.isReady) {
                    if (!$.body) return setTimeout(ce.ready);
                    ce.isReady = !0, !0 !== e && --ce.readyWait > 0 || (Y.resolveWith($, [ce]), ce.fn.trigger && ce($).trigger("ready").off("ready"))
                }
            },
            isFunction: function (e) {
                return "function" === ce.type(e)
            },
            isArray: Array.isArray || function (e) {
                return "array" === ce.type(e)
            },
            isWindow: function (e) {
                return null != e && e == e.window
            },
            isNumeric: function (e) {
                return !isNaN(parseFloat(e)) && isFinite(e)
            },
            type: function (e) {
                return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? ee[se.call(e)] || "object" : typeof e
            },
            isPlainObject: function (e) {
                var n;
                if (!e || "object" !== ce.type(e) || e.nodeType || ce.isWindow(e)) return !1;
                try {
                    if (e.constructor && !le.call(e, "constructor") && !le.call(e.constructor.prototype, "isPrototypeOf")) return !1
                } catch (e) {
                    return !1
                }
                if (ce.support.ownLast)
                    for (n in e) return le.call(e, n);
                for (n in e);
                return n === t || le.call(e, n)
            },
            isEmptyObject: function (e) {
                var t;
                for (t in e) return !1;
                return !0
            },
            error: function (e) {
                throw Error(e)
            },
            parseHTML: function (e, t, n) {
                if (!e || "string" != typeof e) return null;
                "boolean" == typeof t && (n = t, t = !1), t = t || $;
                var i = ge.exec(e),
                    r = !n && [];
                return i ? [t.createElement(i[1])] : (i = ce.buildFragment([e], t, r), r && ce(r).remove(), ce.merge([], i.childNodes))
            },
            parseJSON: function (n) {
                return e.JSON && e.JSON.parse ? e.JSON.parse(n) : null === n ? n : "string" == typeof n && (n = ce.trim(n), n && me.test(n.replace(ve, "@").replace(xe, "]").replace(ye, ""))) ? Function("return " + n)() : (ce.error("Invalid JSON: " + n), t)
            },
            parseXML: function (n) {
                var i, r;
                if (!n || "string" != typeof n) return null;
                try {
                    e.DOMParser ? (r = new DOMParser, i = r.parseFromString(n, "text/xml")) : (i = new ActiveXObject("Microsoft.XMLDOM"), i.async = "false", i.loadXML(n))
                } catch (e) {
                    i = t
                }
                return i && i.documentElement && !i.getElementsByTagName("parsererror").length || ce.error("Invalid XML: " + n), i
            },
            noop: function () {},
            globalEval: function (t) {
                t && ce.trim(t) && (e.execScript || function (t) {
                    e.eval.call(e, t)
                })(t)
            },
            camelCase: function (e) {
                return e.replace(_e, "ms-").replace(we, be)
            },
            nodeName: function (e, t) {
                return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase()
            },
            each: function (e, t, i) {
                var r, o = 0,
                    a = e.length,
                    s = n(e);
                if (i) {
                    if (s)
                        for (; a > o && (r = t.apply(e[o], i), !1 !== r); o++);
                    else
                        for (o in e)
                            if (r = t.apply(e[o], i), !1 === r) break
                } else if (s)
                    for (; a > o && (r = t.call(e[o], o, e[o]), !1 !== r); o++);
                else
                    for (o in e)
                        if (r = t.call(e[o], o, e[o]), !1 === r) break;
                return e
            },
            trim: ue && !ue.call("\ufeff ") ? function (e) {
                return null == e ? "" : ue.call(e)
            } : function (e) {
                return null == e ? "" : (e + "").replace(de, "")
            },
            makeArray: function (e, t) {
                var i = t || [];
                return null != e && (n(Object(e)) ? ce.merge(i, "string" == typeof e ? [e] : e) : re.call(i, e)), i
            },
            inArray: function (e, t, n) {
                var i;
                if (t) {
                    if (ae) return ae.call(t, e, n);
                    for (i = t.length, n = n ? 0 > n ? Math.max(0, i + n) : n : 0; i > n; n++)
                        if (n in t && t[n] === e) return n
                }
                return -1
            },
            merge: function (e, n) {
                var i = n.length,
                    r = e.length,
                    o = 0;
                if ("number" == typeof i)
                    for (; i > o; o++) e[r++] = n[o];
                else
                    for (; n[o] !== t;) e[r++] = n[o++];
                return e.length = r, e
            },
            grep: function (e, t, n) {
                var i, r = [],
                    o = 0,
                    a = e.length;
                for (n = !!n; a > o; o++) i = !!t(e[o], o), n !== i && r.push(e[o]);
                return r
            },
            map: function (e, t, i) {
                var r, o = 0,
                    a = e.length,
                    s = n(e),
                    l = [];
                if (s)
                    for (; a > o; o++) r = t(e[o], o, i), null != r && (l[l.length] = r);
                else
                    for (o in e) r = t(e[o], o, i), null != r && (l[l.length] = r);
                return ie.apply([], l)
            },
            guid: 1,
            proxy: function (e, n) {
                var i, r, o;
                return "string" == typeof n && (o = e[n], n = e, e = o), ce.isFunction(e) ? (i = oe.call(arguments, 2), r = function () {
                    return e.apply(n || this, i.concat(oe.call(arguments)))
                }, r.guid = e.guid = e.guid || ce.guid++, r) : t
            },
            access: function (e, n, i, r, o, a, s) {
                var l = 0,
                    u = e.length,
                    c = null == i;
                if ("object" === ce.type(i))
                    for (l in o = !0, i) ce.access(e, n, l, i[l], !0, a, s);
                else if (r !== t && (o = !0, ce.isFunction(r) || (s = !0), c && (s ? (n.call(e, r), n = null) : (c = n, n = function (e, t, n) {
                        return c.call(ce(e), n)
                    })), n))
                    for (; u > l; l++) n(e[l], i, s ? r : r.call(e[l], l, n(e[l], i)));
                return o ? e : c ? n.call(e) : u ? n(e[0], i) : a
            },
            now: function () {
                return (new Date).getTime()
            },
            swap: function (e, t, n, i) {
                var r, o, a = {};
                for (o in t) a[o] = e.style[o], e.style[o] = t[o];
                for (o in r = n.apply(e, i || []), t) e.style[o] = a[o];
                return r
            }
        }), ce.ready.promise = function (t) {
            if (!Y)
                if (Y = ce.Deferred(), "complete" === $.readyState) setTimeout(ce.ready);
                else if ($.addEventListener) $.addEventListener("DOMContentLoaded", Se, !1), e.addEventListener("load", Se, !1);
            else {
                $.attachEvent("onreadystatechange", Se), e.attachEvent("onload", Se);
                var n = !1;
                try {
                    n = null == e.frameElement && $.documentElement
                } catch (e) {}
                n && n.doScroll && function e() {
                    if (!ce.isReady) {
                        try {
                            n.doScroll("left")
                        } catch (t) {
                            return setTimeout(e, 50)
                        }
                        Te(), ce.ready()
                    }
                }()
            }
            return Y.promise(t)
        }, ce.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function (e, t) {
            ee["[object " + t + "]"] = t.toLowerCase()
        }), U = ce($),
        function (e, t) {
            function n(e, t, n, i) {
                var r, o, a, s, l, u, c, p, f, g;
                if ((t ? t.ownerDocument || t : H) !== L && P(t), t = t || L, n = n || [], !e || "string" != typeof e) return n;
                if (1 !== (s = t.nodeType) && 9 !== s) return [];
                if (O && !i) {
                    if (r = xe.exec(e))
                        if (a = r[1]) {
                            if (9 === s) {
                                if (o = t.getElementById(a), !o || !o.parentNode) return n;
                                if (o.id === a) return n.push(o), n
                            } else if (t.ownerDocument && (o = t.ownerDocument.getElementById(a)) && B(t, o) && o.id === a) return n.push(o), n
                        } else {
                            if (r[2]) return ee.apply(n, t.getElementsByTagName(e)), n;
                            if ((a = r[3]) && S.getElementsByClassName && t.getElementsByClassName) return ee.apply(n, t.getElementsByClassName(a)), n
                        } if (S.qsa && (!E || !E.test(e))) {
                        if (p = c = F, f = t, g = 9 === s && e, 1 === s && "object" !== t.nodeName.toLowerCase()) {
                            for (u = h(e), (c = t.getAttribute("id")) ? p = c.replace(be, "\\$&") : t.setAttribute("id", p), p = "[id='" + p + "'] ", l = u.length; l--;) u[l] = p + d(u[l]);
                            f = de.test(e) && t.parentNode || t, g = u.join(",")
                        }
                        if (g) try {
                            return ee.apply(n, f.querySelectorAll(g)), n
                        } catch (e) {} finally {
                            c || t.removeAttribute("id")
                        }
                    }
                }
                return w(e.replace(ue, "$1"), t, n, i)
            }

            function i() {
                function e(n, i) {
                    return t.push(n += " ") > C.cacheLength && delete e[t.shift()], e[n] = i
                }
                var t = [];
                return e
            }

            function r(e) {
                return e[F] = !0, e
            }

            function o(e) {
                var t = L.createElement("div");
                try {
                    return !!e(t)
                } catch (e) {
                    return !1
                } finally {
                    t.parentNode && t.parentNode.removeChild(t), t = null
                }
            }

            function a(e, t) {
                for (var n = e.split("|"), i = e.length; i--;) C.attrHandle[n[i]] = t
            }

            function s(e, t) {
                var n = t && e,
                    i = n && 1 === e.nodeType && 1 === t.nodeType && (~t.sourceIndex || Z) - (~e.sourceIndex || Z);
                if (i) return i;
                if (n)
                    for (; n = n.nextSibling;)
                        if (n === t) return -1;
                return e ? 1 : -1
            }

            function l(e) {
                return function (t) {
                    var n = t.nodeName.toLowerCase();
                    return "input" === n && t.type === e
                }
            }

            function u(e) {
                return function (t) {
                    var n = t.nodeName.toLowerCase();
                    return ("input" === n || "button" === n) && t.type === e
                }
            }

            function c(e) {
                return r(function (t) {
                    return t = +t, r(function (n, i) {
                        for (var r, o = e([], n.length, t), a = o.length; a--;) n[r = o[a]] && (n[r] = !(i[r] = n[r]))
                    })
                })
            }

            function p() {}

            function h(e, t) {
                var i, r, o, a, s, l, u, c = j[e + " "];
                if (c) return t ? 0 : c.slice(0);
                for (s = e, l = [], u = C.preFilter; s;) {
                    for (a in (!i || (r = pe.exec(s))) && (r && (s = s.slice(r[0].length) || s), l.push(o = [])), i = !1, (r = he.exec(s)) && (i = r.shift(), o.push({
                            value: i,
                            type: r[0].replace(ue, " ")
                        }), s = s.slice(i.length)), C.filter) !(r = ye[a].exec(s)) || u[a] && !(r = u[a](r)) || (i = r.shift(), o.push({
                        value: i,
                        type: a,
                        matches: r
                    }), s = s.slice(i.length));
                    if (!i) break
                }
                return t ? s.length : s ? n.error(e) : j(e, l).slice(0)
            }

            function d(e) {
                for (var t = 0, n = e.length, i = ""; n > t; t++) i += e[t].value;
                return i
            }

            function f(e, t, n) {
                var i = t.dir,
                    r = n && "parentNode" === i,
                    o = V++;
                return t.first ? function (t, n, o) {
                    for (; t = t[i];)
                        if (1 === t.nodeType || r) return e(t, n, o)
                } : function (t, n, a) {
                    var s, l, u, c = G + " " + o;
                    if (a) {
                        for (; t = t[i];)
                            if ((1 === t.nodeType || r) && e(t, n, a)) return !0
                    } else
                        for (; t = t[i];)
                            if (1 === t.nodeType || r)
                                if (u = t[F] || (t[F] = {}), (l = u[i]) && l[0] === c) {
                                    if (!0 === (s = l[1]) || s === T) return !0 === s
                                } else if (l = u[i] = [c], l[1] = e(t, n, a) || T, !0 === l[1]) return !0
                }
            }

            function g(e) {
                return e.length > 1 ? function (t, n, i) {
                    for (var r = e.length; r--;)
                        if (!e[r](t, n, i)) return !1;
                    return !0
                } : e[0]
            }

            function m(e, t, n, i, r) {
                for (var o, a = [], s = 0, l = e.length, u = null != t; l > s; s++)(o = e[s]) && (!n || n(o, i, r)) && (a.push(o), u && t.push(s));
                return a
            }

            function y(e, t, n, i, o, a) {
                return i && !i[F] && (i = y(i)), o && !o[F] && (o = y(o, a)), r(function (r, a, s, l) {
                    var u, c, p, h = [],
                        d = [],
                        f = a.length,
                        g = r || _(t || "*", s.nodeType ? [s] : s, []),
                        y = !e || !r && t ? g : m(g, h, e, s, l),
                        v = n ? o || (r ? e : f || i) ? [] : a : y;
                    if (n && n(y, v, s, l), i)
                        for (u = m(v, d), i(u, [], s, l), c = u.length; c--;)(p = u[c]) && (v[d[c]] = !(y[d[c]] = p));
                    if (r) {
                        if (o || e) {
                            if (o) {
                                for (u = [], c = v.length; c--;)(p = v[c]) && u.push(y[c] = p);
                                o(null, v = [], u, l)
                            }
                            for (c = v.length; c--;)(p = v[c]) && (u = o ? ne.call(r, p) : h[c]) > -1 && (r[u] = !(a[u] = p))
                        }
                    } else v = m(v === a ? v.splice(f, v.length) : v), o ? o(null, a, v, l) : ee.apply(a, v)
                })
            }

            function v(e) {
                for (var t, n, i, r = e.length, o = C.relative[e[0].type], a = o || C.relative[" "], s = o ? 1 : 0, l = f(function (e) {
                        return e === t
                    }, a, !0), u = f(function (e) {
                        return ne.call(t, e) > -1
                    }, a, !0), c = [function (e, n, i) {
                        return !o && (i || n !== D) || ((t = n).nodeType ? l(e, n, i) : u(e, n, i))
                    }]; r > s; s++)
                    if (n = C.relative[e[s].type]) c = [f(g(c), n)];
                    else {
                        if (n = C.filter[e[s].type].apply(null, e[s].matches), n[F]) {
                            for (i = ++s; r > i && !C.relative[e[i].type]; i++);
                            return y(s > 1 && g(c), s > 1 && d(e.slice(0, s - 1).concat({
                                value: " " === e[s - 2].type ? "*" : ""
                            })).replace(ue, "$1"), n, i > s && v(e.slice(s, i)), r > i && v(e = e.slice(i)), r > i && d(e))
                        }
                        c.push(n)
                    } return g(c)
            }

            function x(e, t) {
                var i = 0,
                    o = t.length > 0,
                    a = e.length > 0,
                    s = function (r, s, l, u, c) {
                        var p, h, d, f = [],
                            g = 0,
                            y = "0",
                            v = r && [],
                            x = null != c,
                            _ = D,
                            w = r || a && C.find.TAG("*", c && s.parentNode || s),
                            b = G += null == _ ? 1 : Math.random() || .1;
                        for (x && (D = s !== L && s, T = i); null != (p = w[y]); y++) {
                            if (a && p) {
                                for (h = 0; d = e[h++];)
                                    if (d(p, s, l)) {
                                        u.push(p);
                                        break
                                    } x && (G = b, T = ++i)
                            }
                            o && ((p = !d && p) && g--, r && v.push(p))
                        }
                        if (g += y, o && y !== g) {
                            for (h = 0; d = t[h++];) d(v, f, s, l);
                            if (r) {
                                if (g > 0)
                                    for (; y--;) v[y] || f[y] || (f[y] = J.call(u));
                                f = m(f)
                            }
                            ee.apply(u, f), x && !r && f.length > 0 && g + t.length > 1 && n.uniqueSort(u)
                        }
                        return x && (G = b, D = _), v
                    };
                return o ? r(s) : s
            }

            function _(e, t, i) {
                for (var r = 0, o = t.length; o > r; r++) n(e, t[r], i);
                return i
            }

            function w(e, t, n, i) {
                var r, o, a, s, l, u = h(e);
                if (!i && 1 === u.length) {
                    if (o = u[0] = u[0].slice(0), o.length > 2 && "ID" === (a = o[0]).type && S.getById && 9 === t.nodeType && O && C.relative[o[1].type]) {
                        if (t = (C.find.ID(a.matches[0].replace(Se, Te), t) || [])[0], !t) return n;
                        e = e.slice(o.shift().value.length)
                    }
                    for (r = ye.needsContext.test(e) ? 0 : o.length; r-- && (a = o[r], !C.relative[s = a.type]);)
                        if ((l = C.find[s]) && (i = l(a.matches[0].replace(Se, Te), de.test(o[0].type) && t.parentNode || t))) {
                            if (o.splice(r, 1), e = i.length && d(o), !e) return ee.apply(n, i), n;
                            break
                        }
                }
                return k(e, u)(i, t, !O, n, de.test(e)), n
            }
            var b, S, T, C, M, I, k, D, A, P, L, N, O, E, R, z, B, F = "sizzle" + -new Date,
                H = e.document,
                G = 0,
                V = 0,
                W = i(),
                j = i(),
                X = i(),
                Y = !1,
                U = function (e, t) {
                    return e === t ? (Y = !0, 0) : 0
                },
                q = typeof t,
                Z = 1 << 31,
                $ = {}.hasOwnProperty,
                K = [],
                J = K.pop,
                Q = K.push,
                ee = K.push,
                te = K.slice,
                ne = K.indexOf || function (e) {
                    for (var t = 0, n = this.length; n > t; t++)
                        if (this[t] === e) return t;
                    return -1
                },
                ie = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
                re = "[\\x20\\t\\r\\n\\f]",
                oe = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
                ae = oe.replace("w", "w#"),
                se = "\\[" + re + "*(" + oe + ")" + re + "*(?:([*^$|!~]?=)" + re + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + ae + ")|)|)" + re + "*\\]",
                le = ":(" + oe + ")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + se.replace(3, 8) + ")*)|.*)\\)|)",
                ue = RegExp("^" + re + "+|((?:^|[^\\\\])(?:\\\\.)*)" + re + "+$", "g"),
                pe = RegExp("^" + re + "*," + re + "*"),
                he = RegExp("^" + re + "*([>+~]|" + re + ")" + re + "*"),
                de = RegExp(re + "*[+~]"),
                fe = RegExp("=" + re + "*([^\\]'\"]*)" + re + "*\\]", "g"),
                ge = RegExp(le),
                me = RegExp("^" + ae + "$"),
                ye = {
                    ID: RegExp("^#(" + oe + ")"),
                    CLASS: RegExp("^\\.(" + oe + ")"),
                    TAG: RegExp("^(" + oe.replace("w", "w*") + ")"),
                    ATTR: RegExp("^" + se),
                    PSEUDO: RegExp("^" + le),
                    CHILD: RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + re + "*(even|odd|(([+-]|)(\\d*)n|)" + re + "*(?:([+-]|)" + re + "*(\\d+)|))" + re + "*\\)|)", "i"),
                    bool: RegExp("^(?:" + ie + ")$", "i"),
                    needsContext: RegExp("^" + re + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + re + "*((?:-\\d)?\\d*)" + re + "*\\)|)(?=[^-]|$)", "i")
                },
                ve = /^[^{]+\{\s*\[native \w/,
                xe = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
                _e = /^(?:input|select|textarea|button)$/i,
                we = /^h\d$/i,
                be = /'|\\/g,
                Se = RegExp("\\\\([\\da-f]{1,6}" + re + "?|(" + re + ")|.)", "ig"),
                Te = function (e, t, n) {
                    var i = "0x" + t - 65536;
                    return i != i || n ? t : 0 > i ? String.fromCharCode(i + 65536) : String.fromCharCode(55296 | i >> 10, 56320 | 1023 & i)
                };
            try {
                ee.apply(K = te.call(H.childNodes), H.childNodes), K[H.childNodes.length].nodeType
            } catch (e) {
                ee = {
                    apply: K.length ? function (e, t) {
                        Q.apply(e, te.call(t))
                    } : function (e, t) {
                        for (var n = e.length, i = 0; e[n++] = t[i++];);
                        e.length = n - 1
                    }
                }
            }
            for (b in I = n.isXML = function (e) {
                    var t = e && (e.ownerDocument || e).documentElement;
                    return !!t && "HTML" !== t.nodeName
                }, S = n.support = {}, P = n.setDocument = function (e) {
                    var n = e ? e.ownerDocument || e : H,
                        i = n.defaultView;
                    return n !== L && 9 === n.nodeType && n.documentElement ? (L = n, N = n.documentElement, O = !I(n), i && i.attachEvent && i !== i.top && i.attachEvent("onbeforeunload", function () {
                        P()
                    }), S.attributes = o(function (e) {
                        return e.className = "i", !e.getAttribute("className")
                    }), S.getElementsByTagName = o(function (e) {
                        return e.appendChild(n.createComment("")), !e.getElementsByTagName("*").length
                    }), S.getElementsByClassName = o(function (e) {
                        return e.innerHTML = "<div class='a'></div><div class='a i'></div>", e.firstChild.className = "i", 2 === e.getElementsByClassName("i").length
                    }), S.getById = o(function (e) {
                        return N.appendChild(e).id = F, !n.getElementsByName || !n.getElementsByName(F).length
                    }), S.getById ? (C.find.ID = function (e, t) {
                        if (typeof t.getElementById !== q && O) {
                            var n = t.getElementById(e);
                            return n && n.parentNode ? [n] : []
                        }
                    }, C.filter.ID = function (e) {
                        var t = e.replace(Se, Te);
                        return function (e) {
                            return e.getAttribute("id") === t
                        }
                    }) : (delete C.find.ID, C.filter.ID = function (e) {
                        var t = e.replace(Se, Te);
                        return function (e) {
                            var n = typeof e.getAttributeNode !== q && e.getAttributeNode("id");
                            return n && n.value === t
                        }
                    }), C.find.TAG = S.getElementsByTagName ? function (e, n) {
                        return typeof n.getElementsByTagName !== q ? n.getElementsByTagName(e) : t
                    } : function (e, t) {
                        var n, i = [],
                            r = 0,
                            o = t.getElementsByTagName(e);
                        if ("*" === e) {
                            for (; n = o[r++];) 1 === n.nodeType && i.push(n);
                            return i
                        }
                        return o
                    }, C.find.CLASS = S.getElementsByClassName && function (e, n) {
                        return typeof n.getElementsByClassName !== q && O ? n.getElementsByClassName(e) : t
                    }, R = [], E = [], (S.qsa = ve.test(n.querySelectorAll)) && (o(function (e) {
                        e.innerHTML = "<select><option selected=''></option></select>", e.querySelectorAll("[selected]").length || E.push("\\[" + re + "*(?:value|" + ie + ")"), e.querySelectorAll(":checked").length || E.push(":checked")
                    }), o(function (e) {
                        var t = n.createElement("input");
                        t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("t", ""), e.querySelectorAll("[t^='']").length && E.push("[*^$]=" + re + "*(?:''|\"\")"), e.querySelectorAll(":enabled").length || E.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), E.push(",.*:")
                    })), (S.matchesSelector = ve.test(z = N.webkitMatchesSelector || N.mozMatchesSelector || N.oMatchesSelector || N.msMatchesSelector)) && o(function (e) {
                        S.disconnectedMatch = z.call(e, "div"), z.call(e, "[s!='']:x"), R.push("!=", le)
                    }), E = E.length && RegExp(E.join("|")), R = R.length && RegExp(R.join("|")), B = ve.test(N.contains) || N.compareDocumentPosition ? function (e, t) {
                        var n = 9 === e.nodeType ? e.documentElement : e,
                            i = t && t.parentNode;
                        return e === i || !(!i || 1 !== i.nodeType || !(n.contains ? n.contains(i) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(i)))
                    } : function (e, t) {
                        if (t)
                            for (; t = t.parentNode;)
                                if (t === e) return !0;
                        return !1
                    }, U = N.compareDocumentPosition ? function (e, t) {
                        if (e === t) return Y = !0, 0;
                        var i = t.compareDocumentPosition && e.compareDocumentPosition && e.compareDocumentPosition(t);
                        return i ? 1 & i || !S.sortDetached && t.compareDocumentPosition(e) === i ? e === n || B(H, e) ? -1 : t === n || B(H, t) ? 1 : A ? ne.call(A, e) - ne.call(A, t) : 0 : 4 & i ? -1 : 1 : e.compareDocumentPosition ? -1 : 1
                    } : function (e, t) {
                        var i, r = 0,
                            o = e.parentNode,
                            a = t.parentNode,
                            l = [e],
                            u = [t];
                        if (e === t) return Y = !0, 0;
                        if (!o || !a) return e === n ? -1 : t === n ? 1 : o ? -1 : a ? 1 : A ? ne.call(A, e) - ne.call(A, t) : 0;
                        if (o === a) return s(e, t);
                        for (i = e; i = i.parentNode;) l.unshift(i);
                        for (i = t; i = i.parentNode;) u.unshift(i);
                        for (; l[r] === u[r];) r++;
                        return r ? s(l[r], u[r]) : l[r] === H ? -1 : u[r] === H ? 1 : 0
                    }, n) : L
                }, n.matches = function (e, t) {
                    return n(e, null, null, t)
                }, n.matchesSelector = function (e, t) {
                    if ((e.ownerDocument || e) !== L && P(e), t = t.replace(fe, "='$1']"), !(!S.matchesSelector || !O || R && R.test(t) || E && E.test(t))) try {
                        var i = z.call(e, t);
                        if (i || S.disconnectedMatch || e.document && 11 !== e.document.nodeType) return i
                    } catch (e) {}
                    return n(t, L, null, [e]).length > 0
                }, n.contains = function (e, t) {
                    return (e.ownerDocument || e) !== L && P(e), B(e, t)
                }, n.attr = function (e, n) {
                    (e.ownerDocument || e) !== L && P(e);
                    var i = C.attrHandle[n.toLowerCase()],
                        r = i && $.call(C.attrHandle, n.toLowerCase()) ? i(e, n, !O) : t;
                    return r === t ? S.attributes || !O ? e.getAttribute(n) : (r = e.getAttributeNode(n)) && r.specified ? r.value : null : r
                }, n.error = function (e) {
                    throw Error("Syntax error, unrecognized expression: " + e)
                }, n.uniqueSort = function (e) {
                    var t, n = [],
                        i = 0,
                        r = 0;
                    if (Y = !S.detectDuplicates, A = !S.sortStable && e.slice(0), e.sort(U), Y) {
                        for (; t = e[r++];) t === e[r] && (i = n.push(r));
                        for (; i--;) e.splice(n[i], 1)
                    }
                    return e
                }, M = n.getText = function (e) {
                    var t, n = "",
                        i = 0,
                        r = e.nodeType;
                    if (r) {
                        if (1 === r || 9 === r || 11 === r) {
                            if ("string" == typeof e.textContent) return e.textContent;
                            for (e = e.firstChild; e; e = e.nextSibling) n += M(e)
                        } else if (3 === r || 4 === r) return e.nodeValue
                    } else
                        for (; t = e[i]; i++) n += M(t);
                    return n
                }, C = n.selectors = {
                    cacheLength: 50,
                    createPseudo: r,
                    match: ye,
                    attrHandle: {},
                    find: {},
                    relative: {
                        ">": {
                            dir: "parentNode",
                            first: !0
                        },
                        " ": {
                            dir: "parentNode"
                        },
                        "+": {
                            dir: "previousSibling",
                            first: !0
                        },
                        "~": {
                            dir: "previousSibling"
                        }
                    },
                    preFilter: {
                        ATTR: function (e) {
                            return e[1] = e[1].replace(Se, Te), e[3] = (e[4] || e[5] || "").replace(Se, Te), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4)
                        },
                        CHILD: function (e) {
                            return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || n.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && n.error(e[0]), e
                        },
                        PSEUDO: function (e) {
                            var n, i = !e[5] && e[2];
                            return ye.CHILD.test(e[0]) ? null : (e[3] && e[4] !== t ? e[2] = e[4] : i && ge.test(i) && (n = h(i, !0)) && (n = i.indexOf(")", i.length - n) - i.length) && (e[0] = e[0].slice(0, n), e[2] = i.slice(0, n)), e.slice(0, 3))
                        }
                    },
                    filter: {
                        TAG: function (e) {
                            var t = e.replace(Se, Te).toLowerCase();
                            return "*" === e ? function () {
                                return !0
                            } : function (e) {
                                return e.nodeName && e.nodeName.toLowerCase() === t
                            }
                        },
                        CLASS: function (e) {
                            var t = W[e + " "];
                            return t || (t = RegExp("(^|" + re + ")" + e + "(" + re + "|$)")) && W(e, function (e) {
                                return t.test("string" == typeof e.className && e.className || typeof e.getAttribute !== q && e.getAttribute("class") || "")
                            })
                        },
                        ATTR: function (e, t, i) {
                            return function (r) {
                                var o = n.attr(r, e);
                                return null == o ? "!=" === t : !t || (o += "", "=" === t ? o === i : "!=" === t ? o !== i : "^=" === t ? i && 0 === o.indexOf(i) : "*=" === t ? i && o.indexOf(i) > -1 : "$=" === t ? i && o.slice(-i.length) === i : "~=" === t ? (" " + o + " ").indexOf(i) > -1 : "|=" === t && (o === i || o.slice(0, i.length + 1) === i + "-"))
                            }
                        },
                        CHILD: function (e, t, n, i, r) {
                            var o = "nth" !== e.slice(0, 3),
                                a = "last" !== e.slice(-4),
                                s = "of-type" === t;
                            return 1 === i && 0 === r ? function (e) {
                                return !!e.parentNode
                            } : function (t, n, l) {
                                var u, c, p, h, d, f, g = o !== a ? "nextSibling" : "previousSibling",
                                    m = t.parentNode,
                                    y = s && t.nodeName.toLowerCase(),
                                    v = !l && !s;
                                if (m) {
                                    if (o) {
                                        for (; g;) {
                                            for (p = t; p = p[g];)
                                                if (s ? p.nodeName.toLowerCase() === y : 1 === p.nodeType) return !1;
                                            f = g = "only" === e && !f && "nextSibling"
                                        }
                                        return !0
                                    }
                                    if (f = [a ? m.firstChild : m.lastChild], a && v) {
                                        for (c = m[F] || (m[F] = {}), u = c[e] || [], d = u[0] === G && u[1], h = u[0] === G && u[2], p = d && m.childNodes[d]; p = ++d && p && p[g] || (h = d = 0) || f.pop();)
                                            if (1 === p.nodeType && ++h && p === t) {
                                                c[e] = [G, d, h];
                                                break
                                            }
                                    } else if (v && (u = (t[F] || (t[F] = {}))[e]) && u[0] === G) h = u[1];
                                    else
                                        for (;
                                            (p = ++d && p && p[g] || (h = d = 0) || f.pop()) && ((s ? p.nodeName.toLowerCase() !== y : 1 !== p.nodeType) || !++h || (v && ((p[F] || (p[F] = {}))[e] = [G, h]), p !== t)););
                                    return h -= r, h === i || 0 == h % i && h / i >= 0
                                }
                            }
                        },
                        PSEUDO: function (e, t) {
                            var i, o = C.pseudos[e] || C.setFilters[e.toLowerCase()] || n.error("unsupported pseudo: " + e);
                            return o[F] ? o(t) : o.length > 1 ? (i = [e, e, "", t], C.setFilters.hasOwnProperty(e.toLowerCase()) ? r(function (e, n) {
                                for (var i, r = o(e, t), a = r.length; a--;) i = ne.call(e, r[a]), e[i] = !(n[i] = r[a])
                            }) : function (e) {
                                return o(e, 0, i)
                            }) : o
                        }
                    },
                    pseudos: {
                        not: r(function (e) {
                            var t = [],
                                n = [],
                                i = k(e.replace(ue, "$1"));
                            return i[F] ? r(function (e, t, n, r) {
                                for (var o, a = i(e, null, r, []), s = e.length; s--;)(o = a[s]) && (e[s] = !(t[s] = o))
                            }) : function (e, r, o) {
                                return t[0] = e, i(t, null, o, n), !n.pop()
                            }
                        }),
                        has: r(function (e) {
                            return function (t) {
                                return n(e, t).length > 0
                            }
                        }),
                        contains: r(function (e) {
                            return function (t) {
                                return (t.textContent || t.innerText || M(t)).indexOf(e) > -1
                            }
                        }),
                        lang: r(function (e) {
                            return me.test(e || "") || n.error("unsupported lang: " + e), e = e.replace(Se, Te).toLowerCase(),
                                function (t) {
                                    var n;
                                    do {
                                        if (n = O ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang")) return n = n.toLowerCase(), n === e || 0 === n.indexOf(e + "-")
                                    } while ((t = t.parentNode) && 1 === t.nodeType);
                                    return !1
                                }
                        }),
                        target: function (t) {
                            var n = e.location && e.location.hash;
                            return n && n.slice(1) === t.id
                        },
                        root: function (e) {
                            return e === N
                        },
                        focus: function (e) {
                            return e === L.activeElement && (!L.hasFocus || L.hasFocus()) && !!(e.type || e.href || ~e.tabIndex)
                        },
                        enabled: function (e) {
                            return !1 === e.disabled
                        },
                        disabled: function (e) {
                            return !0 === e.disabled
                        },
                        checked: function (e) {
                            var t = e.nodeName.toLowerCase();
                            return "input" === t && !!e.checked || "option" === t && !!e.selected
                        },
                        selected: function (e) {
                            return e.parentNode && e.parentNode.selectedIndex, !0 === e.selected
                        },
                        empty: function (e) {
                            for (e = e.firstChild; e; e = e.nextSibling)
                                if (e.nodeName > "@" || 3 === e.nodeType || 4 === e.nodeType) return !1;
                            return !0
                        },
                        parent: function (e) {
                            return !C.pseudos.empty(e)
                        },
                        header: function (e) {
                            return we.test(e.nodeName)
                        },
                        input: function (e) {
                            return _e.test(e.nodeName)
                        },
                        button: function (e) {
                            var t = e.nodeName.toLowerCase();
                            return "input" === t && "button" === e.type || "button" === t
                        },
                        text: function (e) {
                            var t;
                            return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || t.toLowerCase() === e.type)
                        },
                        first: c(function () {
                            return [0]
                        }),
                        last: c(function (e, t) {
                            return [t - 1]
                        }),
                        eq: c(function (e, t, n) {
                            return [0 > n ? n + t : n]
                        }),
                        even: c(function (e, t) {
                            for (var n = 0; t > n; n += 2) e.push(n);
                            return e
                        }),
                        odd: c(function (e, t) {
                            for (var n = 1; t > n; n += 2) e.push(n);
                            return e
                        }),
                        lt: c(function (e, t, n) {
                            for (var i = 0 > n ? n + t : n; --i >= 0;) e.push(i);
                            return e
                        }),
                        gt: c(function (e, t, n) {
                            for (var i = 0 > n ? n + t : n; t > ++i;) e.push(i);
                            return e
                        })
                    }
                }, C.pseudos.nth = C.pseudos.eq, {
                    radio: !0,
                    checkbox: !0,
                    file: !0,
                    password: !0,
                    image: !0
                }) C.pseudos[b] = l(b);
            for (b in {
                    submit: !0,
                    reset: !0
                }) C.pseudos[b] = u(b);
            p.prototype = C.filters = C.pseudos, C.setFilters = new p, k = n.compile = function (e, t) {
                var n, i = [],
                    r = [],
                    o = X[e + " "];
                if (!o) {
                    for (t || (t = h(e)), n = t.length; n--;) o = v(t[n]), o[F] ? i.push(o) : r.push(o);
                    o = X(e, x(r, i))
                }
                return o
            }, S.sortStable = F.split("").sort(U).join("") === F, S.detectDuplicates = Y, P(), S.sortDetached = o(function (e) {
                return 1 & e.compareDocumentPosition(L.createElement("div"))
            }), o(function (e) {
                return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href")
            }) || a("type|href|height|width", function (e, n, i) {
                return i ? t : e.getAttribute(n, "type" === n.toLowerCase() ? 1 : 2)
            }), S.attributes && o(function (e) {
                return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value")
            }) || a("value", function (e, n, i) {
                return i || "input" !== e.nodeName.toLowerCase() ? t : e.defaultValue
            }), o(function (e) {
                return null == e.getAttribute("disabled")
            }) || a(ie, function (e, n, i) {
                var r;
                return i ? t : (r = e.getAttributeNode(n)) && r.specified ? r.value : !0 === e[n] ? n.toLowerCase() : null
            }), ce.find = n, ce.expr = n.selectors, ce.expr[":"] = ce.expr.pseudos, ce.unique = n.uniqueSort, ce.text = n.getText, ce.isXMLDoc = n.isXML, ce.contains = n.contains
        }(e);
    var Ce = {};
    ce.Callbacks = function (e) {
        e = "string" == typeof e ? Ce[e] || i(e) : ce.extend({}, e);
        var n, r, o, a, s, l, u = [],
            c = !e.once && [],
            p = function (t) {
                for (r = e.memory && t, o = !0, s = l || 0, l = 0, a = u.length, n = !0; u && a > s; s++)
                    if (!1 === u[s].apply(t[0], t[1]) && e.stopOnFalse) {
                        r = !1;
                        break
                    } n = !1, u && (c ? c.length && p(c.shift()) : r ? u = [] : h.disable())
            },
            h = {
                add: function () {
                    if (u) {
                        var t = u.length;
                        (function t(n) {
                            ce.each(n, function (n, i) {
                                var r = ce.type(i);
                                "function" === r ? e.unique && h.has(i) || u.push(i) : i && i.length && "string" !== r && t(i)
                            })
                        })(arguments), n ? a = u.length : r && (l = t, p(r))
                    }
                    return this
                },
                remove: function () {
                    return u && ce.each(arguments, function (e, t) {
                        for (var i;
                            (i = ce.inArray(t, u, i)) > -1;) u.splice(i, 1), n && (a >= i && a--, s >= i && s--)
                    }), this
                },
                has: function (e) {
                    return e ? ce.inArray(e, u) > -1 : !(!u || !u.length)
                },
                empty: function () {
                    return u = [], a = 0, this
                },
                disable: function () {
                    return u = c = r = t, this
                },
                disabled: function () {
                    return !u
                },
                lock: function () {
                    return c = t, r || h.disable(), this
                },
                locked: function () {
                    return !c
                },
                fireWith: function (e, t) {
                    return !u || o && !c || (t = t || [], t = [e, t.slice ? t.slice() : t], n ? c.push(t) : p(t)), this
                },
                fire: function () {
                    return h.fireWith(this, arguments), this
                },
                fired: function () {
                    return !!o
                }
            };
        return h
    }, ce.extend({
        Deferred: function (e) {
            var t = [
                    ["resolve", "done", ce.Callbacks("once memory"), "resolved"],
                    ["reject", "fail", ce.Callbacks("once memory"), "rejected"],
                    ["notify", "progress", ce.Callbacks("memory")]
                ],
                n = "pending",
                i = {
                    state: function () {
                        return n
                    },
                    always: function () {
                        return r.done(arguments).fail(arguments), this
                    },
                    then: function () {
                        var e = arguments;
                        return ce.Deferred(function (n) {
                            ce.each(t, function (t, o) {
                                var a = o[0],
                                    s = ce.isFunction(e[t]) && e[t];
                                r[o[1]](function () {
                                    var e = s && s.apply(this, arguments);
                                    e && ce.isFunction(e.promise) ? e.promise().done(n.resolve).fail(n.reject).progress(n.notify) : n[a + "With"](this === i ? n.promise() : this, s ? [e] : arguments)
                                })
                            }), e = null
                        }).promise()
                    },
                    promise: function (e) {
                        return null != e ? ce.extend(e, i) : i
                    }
                },
                r = {};
            return i.pipe = i.then, ce.each(t, function (e, o) {
                var a = o[2],
                    s = o[3];
                i[o[1]] = a.add, s && a.add(function () {
                    n = s
                }, t[1 ^ e][2].disable, t[2][2].lock), r[o[0]] = function () {
                    return r[o[0] + "With"](this === r ? i : this, arguments), this
                }, r[o[0] + "With"] = a.fireWith
            }), i.promise(r), e && e.call(r, r), r
        },
        when: function (e) {
            var t, n, i, r = 0,
                o = oe.call(arguments),
                a = o.length,
                s = 1 !== a || e && ce.isFunction(e.promise) ? a : 0,
                l = 1 === s ? e : ce.Deferred(),
                u = function (e, n, i) {
                    return function (r) {
                        n[e] = this, i[e] = arguments.length > 1 ? oe.call(arguments) : r, i === t ? l.notifyWith(n, i) : --s || l.resolveWith(n, i)
                    }
                };
            if (a > 1)
                for (t = Array(a), n = Array(a), i = Array(a); a > r; r++) o[r] && ce.isFunction(o[r].promise) ? o[r].promise().done(u(r, i, o)).fail(l.reject).progress(u(r, n, t)) : --s;
            return s || l.resolveWith(i, o), l.promise()
        }
    }), ce.support = function (t) {
        var n, i, r, o, a, s, l, u, c, p = $.createElement("div");
        if (p.setAttribute("className", "t"), p.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", n = p.getElementsByTagName("*") || [], i = p.getElementsByTagName("a")[0], !i || !i.style || !n.length) return t;
        o = $.createElement("select"), s = o.appendChild($.createElement("option")), r = p.getElementsByTagName("input")[0], i.style.cssText = "top:1px;float:left;opacity:.5", t.getSetAttribute = "t" !== p.className, t.leadingWhitespace = 3 === p.firstChild.nodeType, t.tbody = !p.getElementsByTagName("tbody").length, t.htmlSerialize = !!p.getElementsByTagName("link").length, t.style = /top/.test(i.getAttribute("style")), t.hrefNormalized = "/a" === i.getAttribute("href"), t.opacity = /^0.5/.test(i.style.opacity), t.cssFloat = !!i.style.cssFloat, t.checkOn = !!r.value, t.optSelected = s.selected, t.enctype = !!$.createElement("form").enctype, t.html5Clone = "<:nav></:nav>" !== $.createElement("nav").cloneNode(!0).outerHTML, t.inlineBlockNeedsLayout = !1, t.shrinkWrapBlocks = !1, t.pixelPosition = !1, t.deleteExpando = !0, t.noCloneEvent = !0, t.reliableMarginRight = !0, t.boxSizingReliable = !0, r.checked = !0, t.noCloneChecked = r.cloneNode(!0).checked, o.disabled = !0, t.optDisabled = !s.disabled;
        try {
            delete p.test
        } catch (e) {
            t.deleteExpando = !1
        }
        for (c in r = $.createElement("input"), r.setAttribute("value", ""), t.input = "" === r.getAttribute("value"), r.value = "t", r.setAttribute("type", "radio"), t.radioValue = "t" === r.value, r.setAttribute("checked", "t"), r.setAttribute("name", "t"), a = $.createDocumentFragment(), a.appendChild(r), t.appendChecked = r.checked, t.checkClone = a.cloneNode(!0).cloneNode(!0).lastChild.checked, p.attachEvent && (p.attachEvent("onclick", function () {
                t.noCloneEvent = !1
            }), p.cloneNode(!0).click()), {
                submit: !0,
                change: !0,
                focusin: !0
            }) p.setAttribute(l = "on" + c, "t"), t[c + "Bubbles"] = l in e || !1 === p.attributes[l].expando;
        for (c in p.style.backgroundClip = "content-box", p.cloneNode(!0).style.backgroundClip = "", t.clearCloneStyle = "content-box" === p.style.backgroundClip, ce(t)) break;
        return t.ownLast = "0" !== c, ce(function () {
            var n, i, r, o = "padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;",
                a = $.getElementsByTagName("body")[0];
            a && (n = $.createElement("div"), n.style.cssText = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px", a.appendChild(n).appendChild(p), p.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", r = p.getElementsByTagName("td"), r[0].style.cssText = "padding:0;margin:0;border:0;display:none", u = 0 === r[0].offsetHeight, r[0].style.display = "", r[1].style.display = "none", t.reliableHiddenOffsets = u && 0 === r[0].offsetHeight, p.innerHTML = "", p.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;", ce.swap(a, null != a.style.zoom ? {
                zoom: 1
            } : {}, function () {
                t.boxSizing = 4 === p.offsetWidth
            }), e.getComputedStyle && (t.pixelPosition = "1%" !== (e.getComputedStyle(p, null) || {}).top, t.boxSizingReliable = "4px" === (e.getComputedStyle(p, null) || {
                width: "4px"
            }).width, i = p.appendChild($.createElement("div")), i.style.cssText = p.style.cssText = o, i.style.marginRight = i.style.width = "0", p.style.width = "1px", t.reliableMarginRight = !parseFloat((e.getComputedStyle(i, null) || {}).marginRight)), typeof p.style.zoom !== q && (p.innerHTML = "", p.style.cssText = o + "width:1px;padding:1px;display:inline;zoom:1", t.inlineBlockNeedsLayout = 3 === p.offsetWidth, p.style.display = "block", p.innerHTML = "<div></div>", p.firstChild.style.width = "5px", t.shrinkWrapBlocks = 3 !== p.offsetWidth, t.inlineBlockNeedsLayout && (a.style.zoom = 1)), a.removeChild(n), n = p = r = i = null)
        }), n = o = a = s = i = r = null, t
    }({});
    var Me = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,
        Ie = /([A-Z])/g;
    ce.extend({
        cache: {},
        noData: {
            applet: !0,
            embed: !0,
            object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
        },
        hasData: function (e) {
            return e = e.nodeType ? ce.cache[e[ce.expando]] : e[ce.expando], !!e && !s(e)
        },
        data: function (e, t, n) {
            return r(e, t, n)
        },
        removeData: function (e, t) {
            return o(e, t)
        },
        _data: function (e, t, n) {
            return r(e, t, n, !0)
        },
        _removeData: function (e, t) {
            return o(e, t, !0)
        },
        acceptData: function (e) {
            if (e.nodeType && 1 !== e.nodeType && 9 !== e.nodeType) return !1;
            var t = e.nodeName && ce.noData[e.nodeName.toLowerCase()];
            return !t || !0 !== t && e.getAttribute("classid") === t
        }
    }), ce.fn.extend({
        data: function (e, n) {
            var i, r, o = null,
                s = 0,
                l = this[0];
            if (e === t) {
                if (this.length && (o = ce.data(l), 1 === l.nodeType && !ce._data(l, "parsedAttrs"))) {
                    for (i = l.attributes; i.length > s; s++) r = i[s].name, 0 === r.indexOf("data-") && (r = ce.camelCase(r.slice(5)), a(l, r, o[r]));
                    ce._data(l, "parsedAttrs", !0)
                }
                return o
            }
            return "object" == typeof e ? this.each(function () {
                ce.data(this, e)
            }) : arguments.length > 1 ? this.each(function () {
                ce.data(this, e, n)
            }) : l ? a(l, e, ce.data(l, e)) : null
        },
        removeData: function (e) {
            return this.each(function () {
                ce.removeData(this, e)
            })
        }
    }), ce.extend({
        queue: function (e, n, i) {
            var r;
            return e ? (n = (n || "fx") + "queue", r = ce._data(e, n), i && (!r || ce.isArray(i) ? r = ce._data(e, n, ce.makeArray(i)) : r.push(i)), r || []) : t
        },
        dequeue: function (e, t) {
            t = t || "fx";
            var n = ce.queue(e, t),
                i = n.length,
                r = n.shift(),
                o = ce._queueHooks(e, t),
                a = function () {
                    ce.dequeue(e, t)
                };
            "inprogress" === r && (r = n.shift(), i--), r && ("fx" === t && n.unshift("inprogress"), delete o.stop, r.call(e, a, o)), !i && o && o.empty.fire()
        },
        _queueHooks: function (e, t) {
            var n = t + "queueHooks";
            return ce._data(e, n) || ce._data(e, n, {
                empty: ce.Callbacks("once memory").add(function () {
                    ce._removeData(e, t + "queue"), ce._removeData(e, n)
                })
            })
        }
    }), ce.fn.extend({
        queue: function (e, n) {
            var i = 2;
            return "string" != typeof e && (n = e, e = "fx", i--), i > arguments.length ? ce.queue(this[0], e) : n === t ? this : this.each(function () {
                var t = ce.queue(this, e, n);
                ce._queueHooks(this, e), "fx" === e && "inprogress" !== t[0] && ce.dequeue(this, e)
            })
        },
        dequeue: function (e) {
            return this.each(function () {
                ce.dequeue(this, e)
            })
        },
        delay: function (e, t) {
            return e = ce.fx && ce.fx.speeds[e] || e, t = t || "fx", this.queue(t, function (t, n) {
                var i = setTimeout(t, e);
                n.stop = function () {
                    clearTimeout(i)
                }
            })
        },
        clearQueue: function (e) {
            return this.queue(e || "fx", [])
        },
        promise: function (e, n) {
            var i, r = 1,
                o = ce.Deferred(),
                a = this,
                s = this.length,
                l = function () {
                    --r || o.resolveWith(a, [a])
                };
            for ("string" != typeof e && (n = e, e = t), e = e || "fx"; s--;) i = ce._data(a[s], e + "queueHooks"), i && i.empty && (r++, i.empty.add(l));
            return l(), o.promise(n)
        }
    });
    var ke, De, Ae = /[\t\r\n\f]/g,
        Pe = /\r/g,
        Le = /^(?:input|select|textarea|button|object)$/i,
        Ne = /^(?:a|area)$/i,
        Oe = /^(?:checked|selected)$/i,
        Ee = ce.support.getSetAttribute,
        Re = ce.support.input;
    ce.fn.extend({
        attr: function (e, t) {
            return ce.access(this, ce.attr, e, t, arguments.length > 1)
        },
        removeAttr: function (e) {
            return this.each(function () {
                ce.removeAttr(this, e)
            })
        },
        prop: function (e, t) {
            return ce.access(this, ce.prop, e, t, arguments.length > 1)
        },
        removeProp: function (e) {
            return e = ce.propFix[e] || e, this.each(function () {
                try {
                    this[e] = t, delete this[e]
                } catch (e) {}
            })
        },
        addClass: function (e) {
            var t, n, i, r, o, a = 0,
                s = this.length,
                l = "string" == typeof e && e;
            if (ce.isFunction(e)) return this.each(function (t) {
                ce(this).addClass(e.call(this, t, this.className))
            });
            if (l)
                for (t = (e || "").match(he) || []; s > a; a++)
                    if (n = this[a], i = 1 === n.nodeType && (n.className ? (" " + n.className + " ").replace(Ae, " ") : " ")) {
                        for (o = 0; r = t[o++];) 0 > i.indexOf(" " + r + " ") && (i += r + " ");
                        n.className = ce.trim(i)
                    } return this
        },
        removeClass: function (e) {
            var t, n, i, r, o, a = 0,
                s = this.length,
                l = 0 === arguments.length || "string" == typeof e && e;
            if (ce.isFunction(e)) return this.each(function (t) {
                ce(this).removeClass(e.call(this, t, this.className))
            });
            if (l)
                for (t = (e || "").match(he) || []; s > a; a++)
                    if (n = this[a], i = 1 === n.nodeType && (n.className ? (" " + n.className + " ").replace(Ae, " ") : "")) {
                        for (o = 0; r = t[o++];)
                            for (; i.indexOf(" " + r + " ") >= 0;) i = i.replace(" " + r + " ", " ");
                        n.className = e ? ce.trim(i) : ""
                    } return this
        },
        toggleClass: function (e, t) {
            var n = typeof e;
            return "boolean" == typeof t && "string" === n ? t ? this.addClass(e) : this.removeClass(e) : ce.isFunction(e) ? this.each(function (n) {
                ce(this).toggleClass(e.call(this, n, this.className, t), t)
            }) : this.each(function () {
                if ("string" === n)
                    for (var t, i = 0, r = ce(this), o = e.match(he) || []; t = o[i++];) r.hasClass(t) ? r.removeClass(t) : r.addClass(t);
                else(n === q || "boolean" === n) && (this.className && ce._data(this, "__className__", this.className), this.className = this.className || !1 === e ? "" : ce._data(this, "__className__") || "")
            })
        },
        hasClass: function (e) {
            for (var t = " " + e + " ", n = 0, i = this.length; i > n; n++)
                if (1 === this[n].nodeType && (" " + this[n].className + " ").replace(Ae, " ").indexOf(t) >= 0) return !0;
            return !1
        },
        val: function (e) {
            var n, i, r, o = this[0];
            return arguments.length ? (r = ce.isFunction(e), this.each(function (n) {
                var o;
                1 === this.nodeType && (o = r ? e.call(this, n, ce(this).val()) : e, null == o ? o = "" : "number" == typeof o ? o += "" : ce.isArray(o) && (o = ce.map(o, function (e) {
                    return null == e ? "" : e + ""
                })), i = ce.valHooks[this.type] || ce.valHooks[this.nodeName.toLowerCase()], i && "set" in i && i.set(this, o, "value") !== t || (this.value = o))
            })) : o ? (i = ce.valHooks[o.type] || ce.valHooks[o.nodeName.toLowerCase()], i && "get" in i && (n = i.get(o, "value")) !== t ? n : (n = o.value, "string" == typeof n ? n.replace(Pe, "") : null == n ? "" : n)) : void 0
        }
    }), ce.extend({
        valHooks: {
            option: {
                get: function (e) {
                    var t = ce.find.attr(e, "value");
                    return null != t ? t : e.text
                }
            },
            select: {
                get: function (e) {
                    for (var t, n, i = e.options, r = e.selectedIndex, o = "select-one" === e.type || 0 > r, a = o ? null : [], s = o ? r + 1 : i.length, l = 0 > r ? s : o ? r : 0; s > l; l++)
                        if (n = i[l], !(!n.selected && l !== r || (ce.support.optDisabled ? n.disabled : null !== n.getAttribute("disabled")) || n.parentNode.disabled && ce.nodeName(n.parentNode, "optgroup"))) {
                            if (t = ce(n).val(), o) return t;
                            a.push(t)
                        } return a
                },
                set: function (e, t) {
                    for (var n, i, r = e.options, o = ce.makeArray(t), a = r.length; a--;) i = r[a], (i.selected = ce.inArray(ce(i).val(), o) >= 0) && (n = !0);
                    return n || (e.selectedIndex = -1), o
                }
            }
        },
        attr: function (e, n, i) {
            var r, o, a = e.nodeType;
            if (e && 3 !== a && 8 !== a && 2 !== a) return typeof e.getAttribute === q ? ce.prop(e, n, i) : (1 === a && ce.isXMLDoc(e) || (n = n.toLowerCase(), r = ce.attrHooks[n] || (ce.expr.match.bool.test(n) ? De : ke)), i === t ? r && "get" in r && null !== (o = r.get(e, n)) ? o : (o = ce.find.attr(e, n), null == o ? t : o) : null !== i ? r && "set" in r && (o = r.set(e, i, n)) !== t ? o : (e.setAttribute(n, i + ""), i) : (ce.removeAttr(e, n), t))
        },
        removeAttr: function (e, t) {
            var n, i, r = 0,
                o = t && t.match(he);
            if (o && 1 === e.nodeType)
                for (; n = o[r++];) i = ce.propFix[n] || n, ce.expr.match.bool.test(n) ? Re && Ee || !Oe.test(n) ? e[i] = !1 : e[ce.camelCase("default-" + n)] = e[i] = !1 : ce.attr(e, n, ""), e.removeAttribute(Ee ? n : i)
        },
        attrHooks: {
            type: {
                set: function (e, t) {
                    if (!ce.support.radioValue && "radio" === t && ce.nodeName(e, "input")) {
                        var n = e.value;
                        return e.setAttribute("type", t), n && (e.value = n), t
                    }
                }
            }
        },
        propFix: {
            for: "htmlFor",
            class: "className"
        },
        prop: function (e, n, i) {
            var r, o, a, s = e.nodeType;
            if (e && 3 !== s && 8 !== s && 2 !== s) return a = 1 !== s || !ce.isXMLDoc(e), a && (n = ce.propFix[n] || n, o = ce.propHooks[n]), i !== t ? o && "set" in o && (r = o.set(e, i, n)) !== t ? r : e[n] = i : o && "get" in o && null !== (r = o.get(e, n)) ? r : e[n]
        },
        propHooks: {
            tabIndex: {
                get: function (e) {
                    var t = ce.find.attr(e, "tabindex");
                    return t ? parseInt(t, 10) : Le.test(e.nodeName) || Ne.test(e.nodeName) && e.href ? 0 : -1
                }
            }
        }
    }), De = {
        set: function (e, t, n) {
            return !1 === t ? ce.removeAttr(e, n) : Re && Ee || !Oe.test(n) ? e.setAttribute(!Ee && ce.propFix[n] || n, n) : e[ce.camelCase("default-" + n)] = e[n] = !0, n
        }
    }, ce.each(ce.expr.match.bool.source.match(/\w+/g), function (e, n) {
        var i = ce.expr.attrHandle[n] || ce.find.attr;
        ce.expr.attrHandle[n] = Re && Ee || !Oe.test(n) ? function (e, n, r) {
            var o = ce.expr.attrHandle[n],
                a = r ? t : (ce.expr.attrHandle[n] = t) != i(e, n, r) ? n.toLowerCase() : null;
            return ce.expr.attrHandle[n] = o, a
        } : function (e, n, i) {
            return i ? t : e[ce.camelCase("default-" + n)] ? n.toLowerCase() : null
        }
    }), Re && Ee || (ce.attrHooks.value = {
        set: function (e, n, i) {
            return ce.nodeName(e, "input") ? (e.defaultValue = n, t) : ke && ke.set(e, n, i)
        }
    }), Ee || (ke = {
        set: function (e, n, i) {
            var r = e.getAttributeNode(i);
            return r || e.setAttributeNode(r = e.ownerDocument.createAttribute(i)), r.value = n += "", "value" === i || n === e.getAttribute(i) ? n : t
        }
    }, ce.expr.attrHandle.id = ce.expr.attrHandle.name = ce.expr.attrHandle.coords = function (e, n, i) {
        var r;
        return i ? t : (r = e.getAttributeNode(n)) && "" !== r.value ? r.value : null
    }, ce.valHooks.button = {
        get: function (e, n) {
            var i = e.getAttributeNode(n);
            return i && i.specified ? i.value : t
        },
        set: ke.set
    }, ce.attrHooks.contenteditable = {
        set: function (e, t, n) {
            ke.set(e, "" !== t && t, n)
        }
    }, ce.each(["width", "height"], function (e, n) {
        ce.attrHooks[n] = {
            set: function (e, i) {
                return "" === i ? (e.setAttribute(n, "auto"), i) : t
            }
        }
    })), ce.support.hrefNormalized || ce.each(["href", "src"], function (e, t) {
        ce.propHooks[t] = {
            get: function (e) {
                return e.getAttribute(t, 4)
            }
        }
    }), ce.support.style || (ce.attrHooks.style = {
        get: function (e) {
            return e.style.cssText || t
        },
        set: function (e, t) {
            return e.style.cssText = t + ""
        }
    }), ce.support.optSelected || (ce.propHooks.selected = {
        get: function (e) {
            var t = e.parentNode;
            return t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex), null
        }
    }), ce.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
        ce.propFix[this.toLowerCase()] = this
    }), ce.support.enctype || (ce.propFix.enctype = "encoding"), ce.each(["radio", "checkbox"], function () {
        ce.valHooks[this] = {
            set: function (e, n) {
                return ce.isArray(n) ? e.checked = ce.inArray(ce(e).val(), n) >= 0 : t
            }
        }, ce.support.checkOn || (ce.valHooks[this].get = function (e) {
            return null === e.getAttribute("value") ? "on" : e.value
        })
    });
    var ze = /^(?:input|select|textarea)$/i,
        Be = /^key/,
        Fe = /^(?:mouse|contextmenu)|click/,
        He = /^(?:focusinfocus|focusoutblur)$/,
        Ge = /^([^.]*)(?:\.(.+)|)$/;
    ce.event = {
        global: {},
        add: function (e, n, i, r, o) {
            var a, s, l, u, c, p, h, d, f, g, m, y = ce._data(e);
            if (y) {
                for (i.handler && (u = i, i = u.handler, o = u.selector), i.guid || (i.guid = ce.guid++), (s = y.events) || (s = y.events = {}), (p = y.handle) || (p = y.handle = function (e) {
                        return typeof ce === q || e && ce.event.triggered === e.type ? t : ce.event.dispatch.apply(p.elem, arguments)
                    }, p.elem = e), n = (n || "").match(he) || [""], l = n.length; l--;) a = Ge.exec(n[l]) || [], f = m = a[1], g = (a[2] || "").split(".").sort(), f && (c = ce.event.special[f] || {}, f = (o ? c.delegateType : c.bindType) || f, c = ce.event.special[f] || {}, h = ce.extend({
                    type: f,
                    origType: m,
                    data: r,
                    handler: i,
                    guid: i.guid,
                    selector: o,
                    needsContext: o && ce.expr.match.needsContext.test(o),
                    namespace: g.join(".")
                }, u), (d = s[f]) || (d = s[f] = [], d.delegateCount = 0, c.setup && !1 !== c.setup.call(e, r, g, p) || (e.addEventListener ? e.addEventListener(f, p, !1) : e.attachEvent && e.attachEvent("on" + f, p))), c.add && (c.add.call(e, h), h.handler.guid || (h.handler.guid = i.guid)), o ? d.splice(d.delegateCount++, 0, h) : d.push(h), ce.event.global[f] = !0);
                e = null
            }
        },
        remove: function (e, t, n, i, r) {
            var o, a, s, l, u, c, p, h, d, f, g, m = ce.hasData(e) && ce._data(e);
            if (m && (c = m.events)) {
                for (t = (t || "").match(he) || [""], u = t.length; u--;)
                    if (s = Ge.exec(t[u]) || [], d = g = s[1], f = (s[2] || "").split(".").sort(), d) {
                        for (p = ce.event.special[d] || {}, d = (i ? p.delegateType : p.bindType) || d, h = c[d] || [], s = s[2] && RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)"), l = o = h.length; o--;) a = h[o], !r && g !== a.origType || n && n.guid !== a.guid || s && !s.test(a.namespace) || i && i !== a.selector && ("**" !== i || !a.selector) || (h.splice(o, 1), a.selector && h.delegateCount--, p.remove && p.remove.call(e, a));
                        l && !h.length && (p.teardown && !1 !== p.teardown.call(e, f, m.handle) || ce.removeEvent(e, d, m.handle), delete c[d])
                    } else
                        for (d in c) ce.event.remove(e, d + t[u], n, i, !0);
                ce.isEmptyObject(c) && (delete m.handle, ce._removeData(e, "events"))
            }
        },
        trigger: function (n, i, r, o) {
            var a, s, l, u, c, p, h, d = [r || $],
                f = le.call(n, "type") ? n.type : n,
                g = le.call(n, "namespace") ? n.namespace.split(".") : [];
            if (l = p = r = r || $, 3 !== r.nodeType && 8 !== r.nodeType && !He.test(f + ce.event.triggered) && (f.indexOf(".") >= 0 && (g = f.split("."), f = g.shift(), g.sort()), s = 0 > f.indexOf(":") && "on" + f, n = n[ce.expando] ? n : new ce.Event(f, "object" == typeof n && n), n.isTrigger = o ? 2 : 3, n.namespace = g.join("."), n.namespace_re = n.namespace ? RegExp("(^|\\.)" + g.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, n.result = t, n.target || (n.target = r), i = null == i ? [n] : ce.makeArray(i, [n]), c = ce.event.special[f] || {}, o || !c.trigger || !1 !== c.trigger.apply(r, i))) {
                if (!o && !c.noBubble && !ce.isWindow(r)) {
                    for (u = c.delegateType || f, He.test(u + f) || (l = l.parentNode); l; l = l.parentNode) d.push(l), p = l;
                    p === (r.ownerDocument || $) && d.push(p.defaultView || p.parentWindow || e)
                }
                for (h = 0;
                    (l = d[h++]) && !n.isPropagationStopped();) n.type = h > 1 ? u : c.bindType || f, a = (ce._data(l, "events") || {})[n.type] && ce._data(l, "handle"), a && a.apply(l, i), a = s && l[s], a && ce.acceptData(l) && a.apply && !1 === a.apply(l, i) && n.preventDefault();
                if (n.type = f, !o && !n.isDefaultPrevented() && (!c._default || !1 === c._default.apply(d.pop(), i)) && ce.acceptData(r) && s && r[f] && !ce.isWindow(r)) {
                    p = r[s], p && (r[s] = null), ce.event.triggered = f;
                    try {
                        r[f]()
                    } catch (e) {}
                    ce.event.triggered = t, p && (r[s] = p)
                }
                return n.result
            }
        },
        dispatch: function (e) {
            e = ce.event.fix(e);
            var n, i, r, o, a, s = [],
                l = oe.call(arguments),
                u = (ce._data(this, "events") || {})[e.type] || [],
                c = ce.event.special[e.type] || {};
            if (l[0] = e, e.delegateTarget = this, !c.preDispatch || !1 !== c.preDispatch.call(this, e)) {
                for (s = ce.event.handlers.call(this, e, u), n = 0;
                    (o = s[n++]) && !e.isPropagationStopped();)
                    for (e.currentTarget = o.elem, a = 0;
                        (r = o.handlers[a++]) && !e.isImmediatePropagationStopped();)(!e.namespace_re || e.namespace_re.test(r.namespace)) && (e.handleObj = r, e.data = r.data, i = ((ce.event.special[r.origType] || {}).handle || r.handler).apply(o.elem, l), i !== t && !1 === (e.result = i) && (e.preventDefault(), e.stopPropagation()));
                return c.postDispatch && c.postDispatch.call(this, e), e.result
            }
        },
        handlers: function (e, n) {
            var i, r, o, a, s = [],
                l = n.delegateCount,
                u = e.target;
            if (l && u.nodeType && (!e.button || "click" !== e.type))
                for (; u != this; u = u.parentNode || this)
                    if (1 === u.nodeType && (!0 !== u.disabled || "click" !== e.type)) {
                        for (o = [], a = 0; l > a; a++) r = n[a], i = r.selector + " ", o[i] === t && (o[i] = r.needsContext ? ce(i, this).index(u) >= 0 : ce.find(i, this, null, [u]).length), o[i] && o.push(r);
                        o.length && s.push({
                            elem: u,
                            handlers: o
                        })
                    } return n.length > l && s.push({
                elem: this,
                handlers: n.slice(l)
            }), s
        },
        fix: function (e) {
            if (e[ce.expando]) return e;
            var t, n, i, r = e.type,
                o = e,
                a = this.fixHooks[r];
            for (a || (this.fixHooks[r] = a = Fe.test(r) ? this.mouseHooks : Be.test(r) ? this.keyHooks : {}), i = a.props ? this.props.concat(a.props) : this.props, e = new ce.Event(o), t = i.length; t--;) n = i[t], e[n] = o[n];
            return e.target || (e.target = o.srcElement || $), 3 === e.target.nodeType && (e.target = e.target.parentNode), e.metaKey = !!e.metaKey, a.filter ? a.filter(e, o) : e
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function (e, t) {
                return null == e.which && (e.which = null != t.charCode ? t.charCode : t.keyCode), e
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function (e, n) {
                var i, r, o, a = n.button,
                    s = n.fromElement;
                return null == e.pageX && null != n.clientX && (r = e.target.ownerDocument || $, o = r.documentElement, i = r.body, e.pageX = n.clientX + (o && o.scrollLeft || i && i.scrollLeft || 0) - (o && o.clientLeft || i && i.clientLeft || 0), e.pageY = n.clientY + (o && o.scrollTop || i && i.scrollTop || 0) - (o && o.clientTop || i && i.clientTop || 0)), !e.relatedTarget && s && (e.relatedTarget = s === e.target ? n.toElement : s), e.which || a === t || (e.which = 1 & a ? 1 : 2 & a ? 3 : 4 & a ? 2 : 0), e
            }
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                trigger: function () {
                    if (this !== c() && this.focus) try {
                        return this.focus(), !1
                    } catch (e) {}
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function () {
                    return this === c() && this.blur ? (this.blur(), !1) : t
                },
                delegateType: "focusout"
            },
            click: {
                trigger: function () {
                    return ce.nodeName(this, "input") && "checkbox" === this.type && this.click ? (this.click(), !1) : t
                },
                _default: function (e) {
                    return ce.nodeName(e.target, "a")
                }
            },
            beforeunload: {
                postDispatch: function (e) {
                    e.result !== t && (e.originalEvent.returnValue = e.result)
                }
            }
        },
        simulate: function (e, t, n, i) {
            var r = ce.extend(new ce.Event, n, {
                type: e,
                isSimulated: !0,
                originalEvent: {}
            });
            i ? ce.event.trigger(r, null, t) : ce.event.dispatch.call(t, r), r.isDefaultPrevented() && n.preventDefault()
        }
    }, ce.removeEvent = $.removeEventListener ? function (e, t, n) {
        e.removeEventListener && e.removeEventListener(t, n, !1)
    } : function (e, t, n) {
        var i = "on" + t;
        e.detachEvent && (typeof e[i] === q && (e[i] = null), e.detachEvent(i, n))
    }, ce.Event = function (e, n) {
        return this instanceof ce.Event ? (e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || !1 === e.returnValue || e.getPreventDefault && e.getPreventDefault() ? l : u) : this.type = e, n && ce.extend(this, n), this.timeStamp = e && e.timeStamp || ce.now(), this[ce.expando] = !0, t) : new ce.Event(e, n)
    }, ce.Event.prototype = {
        isDefaultPrevented: u,
        isPropagationStopped: u,
        isImmediatePropagationStopped: u,
        preventDefault: function () {
            var e = this.originalEvent;
            this.isDefaultPrevented = l,
                e && (e.preventDefault ? e.preventDefault() : e.returnValue = !1)
        },
        stopPropagation: function () {
            var e = this.originalEvent;
            this.isPropagationStopped = l, e && (e.stopPropagation && e.stopPropagation(), e.cancelBubble = !0)
        },
        stopImmediatePropagation: function () {
            this.isImmediatePropagationStopped = l, this.stopPropagation()
        }
    }, ce.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }, function (e, t) {
        ce.event.special[e] = {
            delegateType: t,
            bindType: t,
            handle: function (e) {
                var n, i = this,
                    r = e.relatedTarget,
                    o = e.handleObj;
                return (!r || r !== i && !ce.contains(i, r)) && (e.type = o.origType, n = o.handler.apply(this, arguments), e.type = t), n
            }
        }
    }), ce.support.submitBubbles || (ce.event.special.submit = {
        setup: function () {
            return !ce.nodeName(this, "form") && (ce.event.add(this, "click._submit keypress._submit", function (e) {
                var n = e.target,
                    i = ce.nodeName(n, "input") || ce.nodeName(n, "button") ? n.form : t;
                i && !ce._data(i, "submitBubbles") && (ce.event.add(i, "submit._submit", function (e) {
                    e._submit_bubble = !0
                }), ce._data(i, "submitBubbles", !0))
            }), t)
        },
        postDispatch: function (e) {
            e._submit_bubble && (delete e._submit_bubble, this.parentNode && !e.isTrigger && ce.event.simulate("submit", this.parentNode, e, !0))
        },
        teardown: function () {
            return !ce.nodeName(this, "form") && (ce.event.remove(this, "._submit"), t)
        }
    }), ce.support.changeBubbles || (ce.event.special.change = {
        setup: function () {
            return ze.test(this.nodeName) ? (("checkbox" === this.type || "radio" === this.type) && (ce.event.add(this, "propertychange._change", function (e) {
                "checked" === e.originalEvent.propertyName && (this._just_changed = !0)
            }), ce.event.add(this, "click._change", function (e) {
                this._just_changed && !e.isTrigger && (this._just_changed = !1), ce.event.simulate("change", this, e, !0)
            })), !1) : (ce.event.add(this, "beforeactivate._change", function (e) {
                var t = e.target;
                ze.test(t.nodeName) && !ce._data(t, "changeBubbles") && (ce.event.add(t, "change._change", function (e) {
                    !this.parentNode || e.isSimulated || e.isTrigger || ce.event.simulate("change", this.parentNode, e, !0)
                }), ce._data(t, "changeBubbles", !0))
            }), t)
        },
        handle: function (e) {
            var n = e.target;
            return this !== n || e.isSimulated || e.isTrigger || "radio" !== n.type && "checkbox" !== n.type ? e.handleObj.handler.apply(this, arguments) : t
        },
        teardown: function () {
            return ce.event.remove(this, "._change"), !ze.test(this.nodeName)
        }
    }), ce.support.focusinBubbles || ce.each({
        focus: "focusin",
        blur: "focusout"
    }, function (e, t) {
        var n = 0,
            i = function (e) {
                ce.event.simulate(t, e.target, ce.event.fix(e), !0)
            };
        ce.event.special[t] = {
            setup: function () {
                0 == n++ && $.addEventListener(e, i, !0)
            },
            teardown: function () {
                0 == --n && $.removeEventListener(e, i, !0)
            }
        }
    }), ce.fn.extend({
        on: function (e, n, i, r, o) {
            var a, s;
            if ("object" == typeof e) {
                for (a in "string" != typeof n && (i = i || n, n = t), e) this.on(a, n, i, e[a], o);
                return this
            }
            if (null == i && null == r ? (r = n, i = n = t) : null == r && ("string" == typeof n ? (r = i, i = t) : (r = i, i = n, n = t)), !1 === r) r = u;
            else if (!r) return this;
            return 1 === o && (s = r, r = function (e) {
                return ce().off(e), s.apply(this, arguments)
            }, r.guid = s.guid || (s.guid = ce.guid++)), this.each(function () {
                ce.event.add(this, e, r, i, n)
            })
        },
        one: function (e, t, n, i) {
            return this.on(e, t, n, i, 1)
        },
        off: function (e, n, i) {
            var r, o;
            if (e && e.preventDefault && e.handleObj) return r = e.handleObj, ce(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler), this;
            if ("object" == typeof e) {
                for (o in e) this.off(o, n, e[o]);
                return this
            }
            return (!1 === n || "function" == typeof n) && (i = n, n = t), !1 === i && (i = u), this.each(function () {
                ce.event.remove(this, e, i, n)
            })
        },
        trigger: function (e, t) {
            return this.each(function () {
                ce.event.trigger(e, t, this)
            })
        },
        triggerHandler: function (e, n) {
            var i = this[0];
            return i ? ce.event.trigger(e, n, i, !0) : t
        }
    });
    var Ve = /^.[^:#\[\.,]*$/,
        We = /^(?:parents|prev(?:Until|All))/,
        je = ce.expr.match.needsContext,
        Xe = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
    ce.fn.extend({
        find: function (e) {
            var t, n = [],
                i = this,
                r = i.length;
            if ("string" != typeof e) return this.pushStack(ce(e).filter(function () {
                for (t = 0; r > t; t++)
                    if (ce.contains(i[t], this)) return !0
            }));
            for (t = 0; r > t; t++) ce.find(e, i[t], n);
            return n = this.pushStack(r > 1 ? ce.unique(n) : n), n.selector = this.selector ? this.selector + " " + e : e, n
        },
        has: function (e) {
            var t, n = ce(e, this),
                i = n.length;
            return this.filter(function () {
                for (t = 0; i > t; t++)
                    if (ce.contains(this, n[t])) return !0
            })
        },
        not: function (e) {
            return this.pushStack(h(this, e || [], !0))
        },
        filter: function (e) {
            return this.pushStack(h(this, e || [], !1))
        },
        is: function (e) {
            return !!h(this, "string" == typeof e && je.test(e) ? ce(e) : e || [], !1).length
        },
        closest: function (e, t) {
            for (var n, i = 0, r = this.length, o = [], a = je.test(e) || "string" != typeof e ? ce(e, t || this.context) : 0; r > i; i++)
                for (n = this[i]; n && n !== t; n = n.parentNode)
                    if (11 > n.nodeType && (a ? a.index(n) > -1 : 1 === n.nodeType && ce.find.matchesSelector(n, e))) {
                        n = o.push(n);
                        break
                    } return this.pushStack(o.length > 1 ? ce.unique(o) : o)
        },
        index: function (e) {
            return e ? "string" == typeof e ? ce.inArray(this[0], ce(e)) : ce.inArray(e.jquery ? e[0] : e, this) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        },
        add: function (e, t) {
            var n = "string" == typeof e ? ce(e, t) : ce.makeArray(e && e.nodeType ? [e] : e),
                i = ce.merge(this.get(), n);
            return this.pushStack(ce.unique(i))
        },
        addBack: function (e) {
            return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
        }
    }), ce.each({
        parent: function (e) {
            var t = e.parentNode;
            return t && 11 !== t.nodeType ? t : null
        },
        parents: function (e) {
            return ce.dir(e, "parentNode")
        },
        parentsUntil: function (e, t, n) {
            return ce.dir(e, "parentNode", n)
        },
        next: function (e) {
            return p(e, "nextSibling")
        },
        prev: function (e) {
            return p(e, "previousSibling")
        },
        nextAll: function (e) {
            return ce.dir(e, "nextSibling")
        },
        prevAll: function (e) {
            return ce.dir(e, "previousSibling")
        },
        nextUntil: function (e, t, n) {
            return ce.dir(e, "nextSibling", n)
        },
        prevUntil: function (e, t, n) {
            return ce.dir(e, "previousSibling", n)
        },
        siblings: function (e) {
            return ce.sibling((e.parentNode || {}).firstChild, e)
        },
        children: function (e) {
            return ce.sibling(e.firstChild)
        },
        contents: function (e) {
            return ce.nodeName(e, "iframe") ? e.contentDocument || e.contentWindow.document : ce.merge([], e.childNodes)
        }
    }, function (e, t) {
        ce.fn[e] = function (n, i) {
            var r = ce.map(this, t, n);
            return "Until" !== e.slice(-5) && (i = n), i && "string" == typeof i && (r = ce.filter(i, r)), this.length > 1 && (Xe[e] || (r = ce.unique(r)), We.test(e) && (r = r.reverse())), this.pushStack(r)
        }
    }), ce.extend({
        filter: function (e, t, n) {
            var i = t[0];
            return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === i.nodeType ? ce.find.matchesSelector(i, e) ? [i] : [] : ce.find.matches(e, ce.grep(t, function (e) {
                return 1 === e.nodeType
            }))
        },
        dir: function (e, n, i) {
            for (var r = [], o = e[n]; o && 9 !== o.nodeType && (i === t || 1 !== o.nodeType || !ce(o).is(i));) 1 === o.nodeType && r.push(o), o = o[n];
            return r
        },
        sibling: function (e, t) {
            for (var n = []; e; e = e.nextSibling) 1 === e.nodeType && e !== t && n.push(e);
            return n
        }
    });
    var Ye = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
        Ue = / jQuery\d+="(?:null|\d+)"/g,
        qe = RegExp("<(?:" + Ye + ")[\\s/>]", "i"),
        Ze = /^\s+/,
        $e = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
        Ke = /<([\w:]+)/,
        Je = /<tbody/i,
        Qe = /<|&#?\w+;/,
        et = /<(?:script|style|link)/i,
        tt = /^(?:checkbox|radio)$/i,
        nt = /checked\s*(?:[^=]|=\s*.checked.)/i,
        it = /^$|\/(?:java|ecma)script/i,
        rt = /^true\/(.*)/,
        ot = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
        at = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            area: [1, "<map>", "</map>"],
            param: [1, "<object>", "</object>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: ce.support.htmlSerialize ? [0, "", ""] : [1, "X<div>", "</div>"]
        },
        st = d($),
        lt = st.appendChild($.createElement("div"));
    at.optgroup = at.option, at.tbody = at.tfoot = at.colgroup = at.caption = at.thead, at.th = at.td, ce.fn.extend({
        text: function (e) {
            return ce.access(this, function (e) {
                return e === t ? ce.text(this) : this.empty().append((this[0] && this[0].ownerDocument || $).createTextNode(e))
            }, null, e, arguments.length)
        },
        append: function () {
            return this.domManip(arguments, function (e) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var t = f(this, e);
                    t.appendChild(e)
                }
            })
        },
        prepend: function () {
            return this.domManip(arguments, function (e) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var t = f(this, e);
                    t.insertBefore(e, t.firstChild)
                }
            })
        },
        before: function () {
            return this.domManip(arguments, function (e) {
                this.parentNode && this.parentNode.insertBefore(e, this)
            })
        },
        after: function () {
            return this.domManip(arguments, function (e) {
                this.parentNode && this.parentNode.insertBefore(e, this.nextSibling)
            })
        },
        remove: function (e, t) {
            for (var n, i = e ? ce.filter(e, this) : this, r = 0; null != (n = i[r]); r++) t || 1 !== n.nodeType || ce.cleanData(_(n)), n.parentNode && (t && ce.contains(n.ownerDocument, n) && y(_(n, "script")), n.parentNode.removeChild(n));
            return this
        },
        empty: function () {
            for (var e, t = 0; null != (e = this[t]); t++) {
                for (1 === e.nodeType && ce.cleanData(_(e, !1)); e.firstChild;) e.removeChild(e.firstChild);
                e.options && ce.nodeName(e, "select") && (e.options.length = 0)
            }
            return this
        },
        clone: function (e, t) {
            return e = null != e && e, t = null == t ? e : t, this.map(function () {
                return ce.clone(this, e, t)
            })
        },
        html: function (e) {
            return ce.access(this, function (e) {
                var n = this[0] || {},
                    i = 0,
                    r = this.length;
                if (e === t) return 1 === n.nodeType ? n.innerHTML.replace(Ue, "") : t;
                if (!("string" != typeof e || et.test(e) || !ce.support.htmlSerialize && qe.test(e) || !ce.support.leadingWhitespace && Ze.test(e) || at[(Ke.exec(e) || ["", ""])[1].toLowerCase()])) {
                    e = e.replace($e, "<$1></$2>");
                    try {
                        for (; r > i; i++) n = this[i] || {}, 1 === n.nodeType && (ce.cleanData(_(n, !1)), n.innerHTML = e);
                        n = 0
                    } catch (e) {}
                }
                n && this.empty().append(e)
            }, null, e, arguments.length)
        },
        replaceWith: function () {
            var e = ce.map(this, function (e) {
                    return [e.nextSibling, e.parentNode]
                }),
                t = 0;
            return this.domManip(arguments, function (n) {
                var i = e[t++],
                    r = e[t++];
                r && (i && i.parentNode !== r && (i = this.nextSibling), ce(this).remove(), r.insertBefore(n, i))
            }, !0), t ? this : this.remove()
        },
        detach: function (e) {
            return this.remove(e, !0)
        },
        domManip: function (e, t, n) {
            e = ie.apply([], e);
            var i, r, o, a, s, l, u = 0,
                c = this.length,
                p = this,
                h = c - 1,
                d = e[0],
                f = ce.isFunction(d);
            if (f || !(1 >= c || "string" != typeof d || ce.support.checkClone) && nt.test(d)) return this.each(function (i) {
                var r = p.eq(i);
                f && (e[0] = d.call(this, i, r.html())), r.domManip(e, t, n)
            });
            if (c && (l = ce.buildFragment(e, this[0].ownerDocument, !1, !n && this), i = l.firstChild, 1 === l.childNodes.length && (l = i), i)) {
                for (a = ce.map(_(l, "script"), g), o = a.length; c > u; u++) r = l, u !== h && (r = ce.clone(r, !0, !0), o && ce.merge(a, _(r, "script"))), t.call(this[u], r, u);
                if (o)
                    for (s = a[a.length - 1].ownerDocument, ce.map(a, m), u = 0; o > u; u++) r = a[u], it.test(r.type || "") && !ce._data(r, "globalEval") && ce.contains(s, r) && (r.src ? ce._evalUrl(r.src) : ce.globalEval((r.text || r.textContent || r.innerHTML || "").replace(ot, "")));
                l = i = null
            }
            return this
        }
    }), ce.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function (e, t) {
        ce.fn[e] = function (e) {
            for (var n, i = 0, r = [], o = ce(e), a = o.length - 1; a >= i; i++) n = i === a ? this : this.clone(!0), ce(o[i])[t](n), re.apply(r, n.get());
            return this.pushStack(r)
        }
    }), ce.extend({
        clone: function (e, t, n) {
            var i, r, o, a, s, l = ce.contains(e.ownerDocument, e);
            if (ce.support.html5Clone || ce.isXMLDoc(e) || !qe.test("<" + e.nodeName + ">") ? o = e.cloneNode(!0) : (lt.innerHTML = e.outerHTML, lt.removeChild(o = lt.firstChild)), !(ce.support.noCloneEvent && ce.support.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || ce.isXMLDoc(e)))
                for (i = _(o), s = _(e), a = 0; null != (r = s[a]); ++a) i[a] && x(r, i[a]);
            if (t)
                if (n)
                    for (s = s || _(e), i = i || _(o), a = 0; null != (r = s[a]); a++) v(r, i[a]);
                else v(e, o);
            return i = _(o, "script"), i.length > 0 && y(i, !l && _(e, "script")), i = s = r = null, o
        },
        buildFragment: function (e, t, n, i) {
            for (var r, o, a, s, l, u, c, p = e.length, h = d(t), f = [], g = 0; p > g; g++)
                if (o = e[g], o || 0 === o)
                    if ("object" === ce.type(o)) ce.merge(f, o.nodeType ? [o] : o);
                    else if (Qe.test(o)) {
                for (s = s || h.appendChild(t.createElement("div")), l = (Ke.exec(o) || ["", ""])[1].toLowerCase(), c = at[l] || at._default, s.innerHTML = c[1] + o.replace($e, "<$1></$2>") + c[2], r = c[0]; r--;) s = s.lastChild;
                if (!ce.support.leadingWhitespace && Ze.test(o) && f.push(t.createTextNode(Ze.exec(o)[0])), !ce.support.tbody)
                    for (o = "table" !== l || Je.test(o) ? "<table>" !== c[1] || Je.test(o) ? 0 : s : s.firstChild, r = o && o.childNodes.length; r--;) ce.nodeName(u = o.childNodes[r], "tbody") && !u.childNodes.length && o.removeChild(u);
                for (ce.merge(f, s.childNodes), s.textContent = ""; s.firstChild;) s.removeChild(s.firstChild);
                s = h.lastChild
            } else f.push(t.createTextNode(o));
            for (s && h.removeChild(s), ce.support.appendChecked || ce.grep(_(f, "input"), w), g = 0; o = f[g++];)
                if ((!i || -1 === ce.inArray(o, i)) && (a = ce.contains(o.ownerDocument, o), s = _(h.appendChild(o), "script"), a && y(s), n))
                    for (r = 0; o = s[r++];) it.test(o.type || "") && n.push(o);
            return s = null, h
        },
        cleanData: function (e, t) {
            for (var n, i, r, o, a = 0, s = ce.expando, l = ce.cache, u = ce.support.deleteExpando, c = ce.event.special; null != (n = e[a]); a++)
                if ((t || ce.acceptData(n)) && (r = n[s], o = r && l[r])) {
                    if (o.events)
                        for (i in o.events) c[i] ? ce.event.remove(n, i) : ce.removeEvent(n, i, o.handle);
                    l[r] && (delete l[r], u ? delete n[s] : typeof n.removeAttribute !== q ? n.removeAttribute(s) : n[s] = null, te.push(r))
                }
        },
        _evalUrl: function (e) {
            return ce.ajax({
                url: e,
                type: "GET",
                dataType: "script",
                async: !1,
                global: !1,
                throws: !0
            })
        }
    }), ce.fn.extend({
        wrapAll: function (e) {
            if (ce.isFunction(e)) return this.each(function (t) {
                ce(this).wrapAll(e.call(this, t))
            });
            if (this[0]) {
                var t = ce(e, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && t.insertBefore(this[0]), t.map(function () {
                    for (var e = this; e.firstChild && 1 === e.firstChild.nodeType;) e = e.firstChild;
                    return e
                }).append(this)
            }
            return this
        },
        wrapInner: function (e) {
            return ce.isFunction(e) ? this.each(function (t) {
                ce(this).wrapInner(e.call(this, t))
            }) : this.each(function () {
                var t = ce(this),
                    n = t.contents();
                n.length ? n.wrapAll(e) : t.append(e)
            })
        },
        wrap: function (e) {
            var t = ce.isFunction(e);
            return this.each(function (n) {
                ce(this).wrapAll(t ? e.call(this, n) : e)
            })
        },
        unwrap: function () {
            return this.parent().each(function () {
                ce.nodeName(this, "body") || ce(this).replaceWith(this.childNodes)
            }).end()
        }
    });
    var ut, ct, pt, ht = /alpha\([^)]*\)/i,
        dt = /opacity\s*=\s*([^)]*)/,
        ft = /^(top|right|bottom|left)$/,
        gt = /^(none|table(?!-c[ea]).+)/,
        mt = /^margin/,
        yt = RegExp("^(" + pe + ")(.*)$", "i"),
        vt = RegExp("^(" + pe + ")(?!px)[a-z%]+$", "i"),
        xt = RegExp("^([+-])=(" + pe + ")", "i"),
        _t = {
            BODY: "block"
        },
        wt = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        },
        bt = {
            letterSpacing: 0,
            fontWeight: 400
        },
        St = ["Top", "Right", "Bottom", "Left"],
        Tt = ["Webkit", "O", "Moz", "ms"];
    ce.fn.extend({
        css: function (e, n) {
            return ce.access(this, function (e, n, i) {
                var r, o, a = {},
                    s = 0;
                if (ce.isArray(n)) {
                    for (o = ct(e), r = n.length; r > s; s++) a[n[s]] = ce.css(e, n[s], !1, o);
                    return a
                }
                return i !== t ? ce.style(e, n, i) : ce.css(e, n)
            }, e, n, arguments.length > 1)
        },
        show: function () {
            return T(this, !0)
        },
        hide: function () {
            return T(this)
        },
        toggle: function (e) {
            return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function () {
                S(this) ? ce(this).show() : ce(this).hide()
            })
        }
    }), ce.extend({
        cssHooks: {
            opacity: {
                get: function (e, t) {
                    if (t) {
                        var n = pt(e, "opacity");
                        return "" === n ? "1" : n
                    }
                }
            }
        },
        cssNumber: {
            columnCount: !0,
            fillOpacity: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            float: ce.support.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function (e, n, i, r) {
            if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                var o, a, s, l = ce.camelCase(n),
                    u = e.style;
                if (n = ce.cssProps[l] || (ce.cssProps[l] = b(u, l)), s = ce.cssHooks[n] || ce.cssHooks[l], i === t) return s && "get" in s && (o = s.get(e, !1, r)) !== t ? o : u[n];
                if (a = typeof i, "string" === a && (o = xt.exec(i)) && (i = (o[1] + 1) * o[2] + parseFloat(ce.css(e, n)), a = "number"), !(null == i || "number" === a && isNaN(i) || ("number" !== a || ce.cssNumber[l] || (i += "px"), ce.support.clearCloneStyle || "" !== i || 0 !== n.indexOf("background") || (u[n] = "inherit"), s && "set" in s && (i = s.set(e, i, r)) === t))) try {
                    u[n] = i
                } catch (e) {}
            }
        },
        css: function (e, n, i, r) {
            var o, a, s, l = ce.camelCase(n);
            return n = ce.cssProps[l] || (ce.cssProps[l] = b(e.style, l)), s = ce.cssHooks[n] || ce.cssHooks[l], s && "get" in s && (a = s.get(e, !0, i)), a === t && (a = pt(e, n, r)), "normal" === a && n in bt && (a = bt[n]), "" === i || i ? (o = parseFloat(a), !0 === i || ce.isNumeric(o) ? o || 0 : a) : a
        }
    }), e.getComputedStyle ? (ct = function (t) {
        return e.getComputedStyle(t, null)
    }, pt = function (e, n, i) {
        var r, o, a, s = i || ct(e),
            l = s ? s.getPropertyValue(n) || s[n] : t,
            u = e.style;
        return s && ("" !== l || ce.contains(e.ownerDocument, e) || (l = ce.style(e, n)), vt.test(l) && mt.test(n) && (r = u.width, o = u.minWidth, a = u.maxWidth, u.minWidth = u.maxWidth = u.width = l, l = s.width, u.width = r, u.minWidth = o, u.maxWidth = a)), l
    }) : $.documentElement.currentStyle && (ct = function (e) {
        return e.currentStyle
    }, pt = function (e, n, i) {
        var r, o, a, s = i || ct(e),
            l = s ? s[n] : t,
            u = e.style;
        return null == l && u && u[n] && (l = u[n]), vt.test(l) && !ft.test(n) && (r = u.left, o = e.runtimeStyle, a = o && o.left, a && (o.left = e.currentStyle.left), u.left = "fontSize" === n ? "1em" : l, l = u.pixelLeft + "px", u.left = r, a && (o.left = a)), "" === l ? "auto" : l
    }), ce.each(["height", "width"], function (e, n) {
        ce.cssHooks[n] = {
            get: function (e, i, r) {
                return i ? 0 === e.offsetWidth && gt.test(ce.css(e, "display")) ? ce.swap(e, wt, function () {
                    return I(e, n, r)
                }) : I(e, n, r) : t
            },
            set: function (e, t, i) {
                var r = i && ct(e);
                return C(e, t, i ? M(e, n, i, ce.support.boxSizing && "border-box" === ce.css(e, "boxSizing", !1, r), r) : 0)
            }
        }
    }), ce.support.opacity || (ce.cssHooks.opacity = {
        get: function (e, t) {
            return dt.test((t && e.currentStyle ? e.currentStyle.filter : e.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : t ? "1" : ""
        },
        set: function (e, t) {
            var n = e.style,
                i = e.currentStyle,
                r = ce.isNumeric(t) ? "alpha(opacity=" + 100 * t + ")" : "",
                o = i && i.filter || n.filter || "";
            n.zoom = 1, (t >= 1 || "" === t) && "" === ce.trim(o.replace(ht, "")) && n.removeAttribute && (n.removeAttribute("filter"), "" === t || i && !i.filter) || (n.filter = ht.test(o) ? o.replace(ht, r) : o + " " + r)
        }
    }), ce(function () {
        ce.support.reliableMarginRight || (ce.cssHooks.marginRight = {
            get: function (e, n) {
                return n ? ce.swap(e, {
                    display: "inline-block"
                }, pt, [e, "marginRight"]) : t
            }
        }), !ce.support.pixelPosition && ce.fn.position && ce.each(["top", "left"], function (e, n) {
            ce.cssHooks[n] = {
                get: function (e, i) {
                    return i ? (i = pt(e, n), vt.test(i) ? ce(e).position()[n] + "px" : i) : t
                }
            }
        })
    }), ce.expr && ce.expr.filters && (ce.expr.filters.hidden = function (e) {
        return 0 >= e.offsetWidth && 0 >= e.offsetHeight || !ce.support.reliableHiddenOffsets && "none" === (e.style && e.style.display || ce.css(e, "display"))
    }, ce.expr.filters.visible = function (e) {
        return !ce.expr.filters.hidden(e)
    }), ce.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function (e, t) {
        ce.cssHooks[e + t] = {
            expand: function (n) {
                for (var i = 0, r = {}, o = "string" == typeof n ? n.split(" ") : [n]; 4 > i; i++) r[e + St[i] + t] = o[i] || o[i - 2] || o[0];
                return r
            }
        }, mt.test(e) || (ce.cssHooks[e + t].set = C)
    });
    var Ct = /%20/g,
        Mt = /\[\]$/,
        It = /\r?\n/g,
        kt = /^(?:submit|button|image|reset|file)$/i,
        Dt = /^(?:input|select|textarea|keygen)/i;
    ce.fn.extend({
        serialize: function () {
            return ce.param(this.serializeArray())
        },
        serializeArray: function () {
            return this.map(function () {
                var e = ce.prop(this, "elements");
                return e ? ce.makeArray(e) : this
            }).filter(function () {
                var e = this.type;
                return this.name && !ce(this).is(":disabled") && Dt.test(this.nodeName) && !kt.test(e) && (this.checked || !tt.test(e))
            }).map(function (e, t) {
                var n = ce(this).val();
                return null == n ? null : ce.isArray(n) ? ce.map(n, function (e) {
                    return {
                        name: t.name,
                        value: e.replace(It, "\r\n")
                    }
                }) : {
                    name: t.name,
                    value: n.replace(It, "\r\n")
                }
            }).get()
        }
    }), ce.param = function (e, n) {
        var i, r = [],
            o = function (e, t) {
                t = ce.isFunction(t) ? t() : null == t ? "" : t, r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(t)
            };
        if (n === t && (n = ce.ajaxSettings && ce.ajaxSettings.traditional), ce.isArray(e) || e.jquery && !ce.isPlainObject(e)) ce.each(e, function () {
            o(this.name, this.value)
        });
        else
            for (i in e) A(i, e[i], n, o);
        return r.join("&").replace(Ct, "+")
    }, ce.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function (e, t) {
        ce.fn[t] = function (e, n) {
            return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t)
        }
    }), ce.fn.extend({
        hover: function (e, t) {
            return this.mouseenter(e).mouseleave(t || e)
        },
        bind: function (e, t, n) {
            return this.on(e, null, t, n)
        },
        unbind: function (e, t) {
            return this.off(e, null, t)
        },
        delegate: function (e, t, n, i) {
            return this.on(t, e, n, i)
        },
        undelegate: function (e, t, n) {
            return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n)
        }
    });
    var At, Pt, Lt = ce.now(),
        Nt = /\?/,
        Ot = /#.*$/,
        Et = /([?&])_=[^&]*/,
        Rt = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm,
        zt = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
        Bt = /^(?:GET|HEAD)$/,
        Ft = /^\/\//,
        Ht = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,
        Gt = ce.fn.load,
        Vt = {},
        Wt = {},
        jt = "*/".concat("*");
    try {
        Pt = Z.href
    } catch (e) {
        Pt = $.createElement("a"), Pt.href = "", Pt = Pt.href
    }
    At = Ht.exec(Pt.toLowerCase()) || [], ce.fn.load = function (e, n, i) {
        if ("string" != typeof e && Gt) return Gt.apply(this, arguments);
        var r, o, a, s = this,
            l = e.indexOf(" ");
        return l >= 0 && (r = e.slice(l, e.length), e = e.slice(0, l)), ce.isFunction(n) ? (i = n, n = t) : n && "object" == typeof n && (a = "POST"), s.length > 0 && ce.ajax({
            url: e,
            type: a,
            dataType: "html",
            data: n
        }).done(function (e) {
            o = arguments, s.html(r ? ce("<div>").append(ce.parseHTML(e)).find(r) : e)
        }).complete(i && function (e, t) {
            s.each(i, o || [e.responseText, t, e])
        }), this
    }, ce.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (e, t) {
        ce.fn[t] = function (e) {
            return this.on(t, e)
        }
    }), ce.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: Pt,
            type: "GET",
            isLocal: zt.test(At[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": jt,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": ce.parseJSON,
                "text xml": ce.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function (e, t) {
            return t ? N(N(e, ce.ajaxSettings), t) : N(ce.ajaxSettings, e)
        },
        ajaxPrefilter: P(Vt),
        ajaxTransport: P(Wt),
        ajax: function (e, n) {
            function i(e, n, i, r) {
                var o, p, v, x, w, S = n;
                2 !== _ && (_ = 2, l && clearTimeout(l), c = t, s = r || "", b.readyState = e > 0 ? 4 : 0, o = e >= 200 && 300 > e || 304 === e, i && (x = O(h, b, i)), x = E(h, x, b, o), o ? (h.ifModified && (w = b.getResponseHeader("Last-Modified"), w && (ce.lastModified[a] = w), w = b.getResponseHeader("etag"), w && (ce.etag[a] = w)), 204 === e || "HEAD" === h.type ? S = "nocontent" : 304 === e ? S = "notmodified" : (S = x.state, p = x.data, v = x.error, o = !v)) : (v = S, (e || !S) && (S = "error", 0 > e && (e = 0))), b.status = e, b.statusText = (n || S) + "", o ? g.resolveWith(d, [p, S, b]) : g.rejectWith(d, [b, S, v]), b.statusCode(y), y = t, u && f.trigger(o ? "ajaxSuccess" : "ajaxError", [b, h, o ? p : v]), m.fireWith(d, [b, S]), u && (f.trigger("ajaxComplete", [b, h]), --ce.active || ce.event.trigger("ajaxStop")))
            }
            "object" == typeof e && (n = e, e = t), n = n || {};
            var r, o, a, s, l, u, c, p, h = ce.ajaxSetup({}, n),
                d = h.context || h,
                f = h.context && (d.nodeType || d.jquery) ? ce(d) : ce.event,
                g = ce.Deferred(),
                m = ce.Callbacks("once memory"),
                y = h.statusCode || {},
                v = {},
                x = {},
                _ = 0,
                w = "canceled",
                b = {
                    readyState: 0,
                    getResponseHeader: function (e) {
                        var t;
                        if (2 === _) {
                            if (!p)
                                for (p = {}; t = Rt.exec(s);) p[t[1].toLowerCase()] = t[2];
                            t = p[e.toLowerCase()]
                        }
                        return null == t ? null : t
                    },
                    getAllResponseHeaders: function () {
                        return 2 === _ ? s : null
                    },
                    setRequestHeader: function (e, t) {
                        var n = e.toLowerCase();
                        return _ || (e = x[n] = x[n] || e, v[e] = t), this
                    },
                    overrideMimeType: function (e) {
                        return _ || (h.mimeType = e), this
                    },
                    statusCode: function (e) {
                        var t;
                        if (e)
                            if (2 > _)
                                for (t in e) y[t] = [y[t], e[t]];
                            else b.always(e[b.status]);
                        return this
                    },
                    abort: function (e) {
                        var t = e || w;
                        return c && c.abort(t), i(0, t), this
                    }
                };
            if (g.promise(b).complete = m.add, b.success = b.done, b.error = b.fail, h.url = ((e || h.url || Pt) + "").replace(Ot, "").replace(Ft, At[1] + "//"), h.type = n.method || n.type || h.method || h.type, h.dataTypes = ce.trim(h.dataType || "*").toLowerCase().match(he) || [""], null == h.crossDomain && (r = Ht.exec(h.url.toLowerCase()), h.crossDomain = !(!r || r[1] === At[1] && r[2] === At[2] && (r[3] || ("http:" === r[1] ? "80" : "443")) === (At[3] || ("http:" === At[1] ? "80" : "443")))), h.data && h.processData && "string" != typeof h.data && (h.data = ce.param(h.data, h.traditional)), L(Vt, h, n, b), 2 === _) return b;
            for (o in u = h.global, u && 0 == ce.active++ && ce.event.trigger("ajaxStart"), h.type = h.type.toUpperCase(), h.hasContent = !Bt.test(h.type), a = h.url, h.hasContent || (h.data && (a = h.url += (Nt.test(a) ? "&" : "?") + h.data, delete h.data), !1 === h.cache && (h.url = Et.test(a) ? a.replace(Et, "$1_=" + Lt++) : a + (Nt.test(a) ? "&" : "?") + "_=" + Lt++)), h.ifModified && (ce.lastModified[a] && b.setRequestHeader("If-Modified-Since", ce.lastModified[a]), ce.etag[a] && b.setRequestHeader("If-None-Match", ce.etag[a])), (h.data && h.hasContent && !1 !== h.contentType || n.contentType) && b.setRequestHeader("Content-Type", h.contentType), b.setRequestHeader("Accept", h.dataTypes[0] && h.accepts[h.dataTypes[0]] ? h.accepts[h.dataTypes[0]] + ("*" !== h.dataTypes[0] ? ", " + jt + "; q=0.01" : "") : h.accepts["*"]), h.headers) b.setRequestHeader(o, h.headers[o]);
            if (h.beforeSend && (!1 === h.beforeSend.call(d, b, h) || 2 === _)) return b.abort();
            for (o in w = "abort", {
                    success: 1,
                    error: 1,
                    complete: 1
                }) b[o](h[o]);
            if (c = L(Wt, h, n, b)) {
                b.readyState = 1, u && f.trigger("ajaxSend", [b, h]), h.async && h.timeout > 0 && (l = setTimeout(function () {
                    b.abort("timeout")
                }, h.timeout));
                try {
                    _ = 1, c.send(v, i)
                } catch (e) {
                    if (!(2 > _)) throw e;
                    i(-1, e)
                }
            } else i(-1, "No Transport");
            return b
        },
        getJSON: function (e, t, n) {
            return ce.get(e, t, n, "json")
        },
        getScript: function (e, n) {
            return ce.get(e, t, n, "script")
        }
    }), ce.each(["get", "post"], function (e, n) {
        ce[n] = function (e, i, r, o) {
            return ce.isFunction(i) && (o = o || r, r = i, i = t), ce.ajax({
                url: e,
                type: n,
                dataType: o,
                data: i,
                success: r
            })
        }
    }), ce.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /(?:java|ecma)script/
        },
        converters: {
            "text script": function (e) {
                return ce.globalEval(e), e
            }
        }
    }), ce.ajaxPrefilter("script", function (e) {
        e.cache === t && (e.cache = !1), e.crossDomain && (e.type = "GET", e.global = !1)
    }), ce.ajaxTransport("script", function (e) {
        if (e.crossDomain) {
            var n, i = $.head || ce("head")[0] || $.documentElement;
            return {
                send: function (t, r) {
                    n = $.createElement("script"), n.async = !0, e.scriptCharset && (n.charset = e.scriptCharset), n.src = e.url, n.onload = n.onreadystatechange = function (e, t) {
                        (t || !n.readyState || /loaded|complete/.test(n.readyState)) && (n.onload = n.onreadystatechange = null, n.parentNode && n.parentNode.removeChild(n), n = null, t || r(200, "success"))
                    }, i.insertBefore(n, i.firstChild)
                },
                abort: function () {
                    n && n.onload(t, !0)
                }
            }
        }
    });
    var Xt = [],
        Yt = /(=)\?(?=&|$)|\?\?/;
    ce.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function () {
            var e = Xt.pop() || ce.expando + "_" + Lt++;
            return this[e] = !0, e
        }
    }), ce.ajaxPrefilter("json jsonp", function (n, i, r) {
        var o, a, s, l = !1 !== n.jsonp && (Yt.test(n.url) ? "url" : "string" == typeof n.data && !(n.contentType || "").indexOf("application/x-www-form-urlencoded") && Yt.test(n.data) && "data");
        return l || "jsonp" === n.dataTypes[0] ? (o = n.jsonpCallback = ce.isFunction(n.jsonpCallback) ? n.jsonpCallback() : n.jsonpCallback, l ? n[l] = n[l].replace(Yt, "$1" + o) : !1 !== n.jsonp && (n.url += (Nt.test(n.url) ? "&" : "?") + n.jsonp + "=" + o), n.converters["script json"] = function () {
            return s || ce.error(o + " was not called"), s[0]
        }, n.dataTypes[0] = "json", a = e[o], e[o] = function () {
            s = arguments
        }, r.always(function () {
            e[o] = a, n[o] && (n.jsonpCallback = i.jsonpCallback, Xt.push(o)), s && ce.isFunction(a) && a(s[0]), s = a = t
        }), "script") : t
    });
    var Ut, qt, Zt = 0,
        $t = e.ActiveXObject && function () {
            var e;
            for (e in Ut) Ut[e](t, !0)
        };
    ce.ajaxSettings.xhr = e.ActiveXObject ? function () {
        return !this.isLocal && R() || z()
    } : R, qt = ce.ajaxSettings.xhr(), ce.support.cors = !!qt && "withCredentials" in qt, qt = ce.support.ajax = !!qt, qt && ce.ajaxTransport(function (n) {
        var i;
        if (!n.crossDomain || ce.support.cors) return {
            send: function (r, o) {
                var a, s, l = n.xhr();
                if (n.username ? l.open(n.type, n.url, n.async, n.username, n.password) : l.open(n.type, n.url, n.async), n.xhrFields)
                    for (s in n.xhrFields) l[s] = n.xhrFields[s];
                n.mimeType && l.overrideMimeType && l.overrideMimeType(n.mimeType), n.crossDomain || r["X-Requested-With"] || (r["X-Requested-With"] = "XMLHttpRequest");
                try {
                    for (s in r) l.setRequestHeader(s, r[s])
                } catch (e) {}
                l.send(n.hasContent && n.data || null), i = function (e, r) {
                    var s, u, c, p;
                    try {
                        if (i && (r || 4 === l.readyState))
                            if (i = t, a && (l.onreadystatechange = ce.noop, $t && delete Ut[a]), r) 4 !== l.readyState && l.abort();
                            else {
                                p = {}, s = l.status, u = l.getAllResponseHeaders(), "string" == typeof l.responseText && (p.text = l.responseText);
                                try {
                                    c = l.statusText
                                } catch (e) {
                                    c = ""
                                }
                                s || !n.isLocal || n.crossDomain ? 1223 === s && (s = 204) : s = p.text ? 200 : 404
                            }
                    } catch (e) {
                        r || o(-1, e)
                    }
                    p && o(s, c, p, u)
                }, n.async ? 4 === l.readyState ? setTimeout(i) : (a = ++Zt, $t && (Ut || (Ut = {}, ce(e).unload($t)), Ut[a] = i), l.onreadystatechange = i) : i()
            },
            abort: function () {
                i && i(t, !0)
            }
        }
    });
    var Kt, Jt, Qt = /^(?:toggle|show|hide)$/,
        en = RegExp("^(?:([+-])=|)(" + pe + ")([a-z%]*)$", "i"),
        tn = /queueHooks$/,
        nn = [V],
        rn = {
            "*": [function (e, t) {
                var n = this.createTween(e, t),
                    i = n.cur(),
                    r = en.exec(t),
                    o = r && r[3] || (ce.cssNumber[e] ? "" : "px"),
                    a = (ce.cssNumber[e] || "px" !== o && +i) && en.exec(ce.css(n.elem, e)),
                    s = 1,
                    l = 20;
                if (a && a[3] !== o) {
                    o = o || a[3], r = r || [], a = +i || 1;
                    do {
                        s = s || ".5", a /= s, ce.style(n.elem, e, a + o)
                    } while (s !== (s = n.cur() / i) && 1 !== s && --l)
                }
                return r && (a = n.start = +a || +i || 0, n.unit = o, n.end = r[1] ? a + (r[1] + 1) * r[2] : +r[2]), n
            }]
        };
    ce.Animation = ce.extend(H, {
            tweener: function (e, t) {
                ce.isFunction(e) ? (t = e, e = ["*"]) : e = e.split(" ");
                for (var n, i = 0, r = e.length; r > i; i++) n = e[i], rn[n] = rn[n] || [], rn[n].unshift(t)
            },
            prefilter: function (e, t) {
                t ? nn.unshift(e) : nn.push(e)
            }
        }), ce.Tween = W, W.prototype = {
            constructor: W,
            init: function (e, t, n, i, r, o) {
                this.elem = e, this.prop = n, this.easing = r || "swing", this.options = t, this.start = this.now = this.cur(), this.end = i, this.unit = o || (ce.cssNumber[n] ? "" : "px")
            },
            cur: function () {
                var e = W.propHooks[this.prop];
                return e && e.get ? e.get(this) : W.propHooks._default.get(this)
            },
            run: function (e) {
                var t, n = W.propHooks[this.prop];
                return this.pos = t = this.options.duration ? ce.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : W.propHooks._default.set(this), this
            }
        }, W.prototype.init.prototype = W.prototype, W.propHooks = {
            _default: {
                get: function (e) {
                    var t;
                    return null == e.elem[e.prop] || e.elem.style && null != e.elem.style[e.prop] ? (t = ce.css(e.elem, e.prop, ""), t && "auto" !== t ? t : 0) : e.elem[e.prop]
                },
                set: function (e) {
                    ce.fx.step[e.prop] ? ce.fx.step[e.prop](e) : e.elem.style && (null != e.elem.style[ce.cssProps[e.prop]] || ce.cssHooks[e.prop]) ? ce.style(e.elem, e.prop, e.now + e.unit) : e.elem[e.prop] = e.now
                }
            }
        }, W.propHooks.scrollTop = W.propHooks.scrollLeft = {
            set: function (e) {
                e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
            }
        }, ce.each(["toggle", "show", "hide"], function (e, t) {
            var n = ce.fn[t];
            ce.fn[t] = function (e, i, r) {
                return null == e || "boolean" == typeof e ? n.apply(this, arguments) : this.animate(j(t, !0), e, i, r)
            }
        }), ce.fn.extend({
            fadeTo: function (e, t, n, i) {
                return this.filter(S).css("opacity", 0).show().end().animate({
                    opacity: t
                }, e, n, i)
            },
            animate: function (e, t, n, i) {
                var r = ce.isEmptyObject(e),
                    o = ce.speed(t, n, i),
                    a = function () {
                        var t = H(this, ce.extend({}, e), o);
                        (r || ce._data(this, "finish")) && t.stop(!0)
                    };
                return a.finish = a, r || !1 === o.queue ? this.each(a) : this.queue(o.queue, a)
            },
            stop: function (e, n, i) {
                var r = function (e) {
                    var t = e.stop;
                    delete e.stop, t(i)
                };
                return "string" != typeof e && (i = n, n = e, e = t), n && !1 !== e && this.queue(e || "fx", []), this.each(function () {
                    var t = !0,
                        n = null != e && e + "queueHooks",
                        o = ce.timers,
                        a = ce._data(this);
                    if (n) a[n] && a[n].stop && r(a[n]);
                    else
                        for (n in a) a[n] && a[n].stop && tn.test(n) && r(a[n]);
                    for (n = o.length; n--;) o[n].elem !== this || null != e && o[n].queue !== e || (o[n].anim.stop(i), t = !1, o.splice(n, 1));
                    (t || !i) && ce.dequeue(this, e)
                })
            },
            finish: function (e) {
                return !1 !== e && (e = e || "fx"), this.each(function () {
                    var t, n = ce._data(this),
                        i = n[e + "queue"],
                        r = n[e + "queueHooks"],
                        o = ce.timers,
                        a = i ? i.length : 0;
                    for (n.finish = !0, ce.queue(this, e, []), r && r.stop && r.stop.call(this, !0), t = o.length; t--;) o[t].elem === this && o[t].queue === e && (o[t].anim.stop(!0), o.splice(t, 1));
                    for (t = 0; a > t; t++) i[t] && i[t].finish && i[t].finish.call(this);
                    delete n.finish
                })
            }
        }), ce.each({
            slideDown: j("show"),
            slideUp: j("hide"),
            slideToggle: j("toggle"),
            fadeIn: {
                opacity: "show"
            },
            fadeOut: {
                opacity: "hide"
            },
            fadeToggle: {
                opacity: "toggle"
            }
        }, function (e, t) {
            ce.fn[e] = function (e, n, i) {
                return this.animate(t, e, n, i)
            }
        }), ce.speed = function (e, t, n) {
            var i = e && "object" == typeof e ? ce.extend({}, e) : {
                complete: n || !n && t || ce.isFunction(e) && e,
                duration: e,
                easing: n && t || t && !ce.isFunction(t) && t
            };
            return i.duration = ce.fx.off ? 0 : "number" == typeof i.duration ? i.duration : i.duration in ce.fx.speeds ? ce.fx.speeds[i.duration] : ce.fx.speeds._default, (null == i.queue || !0 === i.queue) && (i.queue = "fx"), i.old = i.complete, i.complete = function () {
                ce.isFunction(i.old) && i.old.call(this), i.queue && ce.dequeue(this, i.queue)
            }, i
        }, ce.easing = {
            linear: function (e) {
                return e
            },
            swing: function (e) {
                return .5 - Math.cos(e * Math.PI) / 2
            }
        }, ce.timers = [], ce.fx = W.prototype.init, ce.fx.tick = function () {
            var e, n = ce.timers,
                i = 0;
            for (Kt = ce.now(); n.length > i; i++) e = n[i], e() || n[i] !== e || n.splice(i--, 1);
            n.length || ce.fx.stop(), Kt = t
        }, ce.fx.timer = function (e) {
            e() && ce.timers.push(e) && ce.fx.start()
        }, ce.fx.interval = 13, ce.fx.start = function () {
            Jt || (Jt = setInterval(ce.fx.tick, ce.fx.interval))
        },
        ce.fx.stop = function () {
            clearInterval(Jt), Jt = null
        }, ce.fx.speeds = {
            slow: 600,
            fast: 200,
            _default: 400
        }, ce.fx.step = {}, ce.expr && ce.expr.filters && (ce.expr.filters.animated = function (e) {
            return ce.grep(ce.timers, function (t) {
                return e === t.elem
            }).length
        }), ce.fn.offset = function (e) {
            if (arguments.length) return e === t ? this : this.each(function (t) {
                ce.offset.setOffset(this, e, t)
            });
            var n, i, r = {
                    top: 0,
                    left: 0
                },
                o = this[0],
                a = o && o.ownerDocument;
            return a ? (n = a.documentElement, ce.contains(n, o) ? (typeof o.getBoundingClientRect !== q && (r = o.getBoundingClientRect()), i = X(a), {
                top: r.top + (i.pageYOffset || n.scrollTop) - (n.clientTop || 0),
                left: r.left + (i.pageXOffset || n.scrollLeft) - (n.clientLeft || 0)
            }) : r) : void 0
        }, ce.offset = {
            setOffset: function (e, t, n) {
                var i = ce.css(e, "position");
                "static" === i && (e.style.position = "relative");
                var r, o, a = ce(e),
                    s = a.offset(),
                    l = ce.css(e, "top"),
                    u = ce.css(e, "left"),
                    c = ("absolute" === i || "fixed" === i) && ce.inArray("auto", [l, u]) > -1,
                    p = {},
                    h = {};
                c ? (h = a.position(), r = h.top, o = h.left) : (r = parseFloat(l) || 0, o = parseFloat(u) || 0), ce.isFunction(t) && (t = t.call(e, n, s)), null != t.top && (p.top = t.top - s.top + r), null != t.left && (p.left = t.left - s.left + o), "using" in t ? t.using.call(e, p) : a.css(p)
            }
        }, ce.fn.extend({
            position: function () {
                if (this[0]) {
                    var e, t, n = {
                            top: 0,
                            left: 0
                        },
                        i = this[0];
                    return "fixed" === ce.css(i, "position") ? t = i.getBoundingClientRect() : (e = this.offsetParent(), t = this.offset(), ce.nodeName(e[0], "html") || (n = e.offset()), n.top += ce.css(e[0], "borderTopWidth", !0), n.left += ce.css(e[0], "borderLeftWidth", !0)), {
                        top: t.top - n.top - ce.css(i, "marginTop", !0),
                        left: t.left - n.left - ce.css(i, "marginLeft", !0)
                    }
                }
            },
            offsetParent: function () {
                return this.map(function () {
                    for (var e = this.offsetParent || K; e && !ce.nodeName(e, "html") && "static" === ce.css(e, "position");) e = e.offsetParent;
                    return e || K
                })
            }
        }), ce.each({
            scrollLeft: "pageXOffset",
            scrollTop: "pageYOffset"
        }, function (e, n) {
            var i = /Y/.test(n);
            ce.fn[e] = function (r) {
                return ce.access(this, function (e, r, o) {
                    var a = X(e);
                    return o === t ? a ? n in a ? a[n] : a.document.documentElement[r] : e[r] : (a ? a.scrollTo(i ? ce(a).scrollLeft() : o, i ? o : ce(a).scrollTop()) : e[r] = o, t)
                }, e, r, arguments.length, null)
            }
        }), ce.each({
            Height: "height",
            Width: "width"
        }, function (e, n) {
            ce.each({
                padding: "inner" + e,
                content: n,
                "": "outer" + e
            }, function (i, r) {
                ce.fn[r] = function (r, o) {
                    var a = arguments.length && (i || "boolean" != typeof r),
                        s = i || (!0 === r || !0 === o ? "margin" : "border");
                    return ce.access(this, function (n, i, r) {
                        var o;
                        return ce.isWindow(n) ? n.document.documentElement["client" + e] : 9 === n.nodeType ? (o = n.documentElement, Math.max(n.body["scroll" + e], o["scroll" + e], n.body["offset" + e], o["offset" + e], o["client" + e])) : r === t ? ce.css(n, i, s) : ce.style(n, i, r, s)
                    }, n, a ? r : t, a, null)
                }
            })
        }), ce.fn.size = function () {
            return this.length
        }, ce.fn.andSelf = ce.fn.addBack, "object" == typeof module && module && "object" == typeof module.exports ? module.exports = ce : (e.jQuery = e.$ = ce, "function" == typeof define && define.amd && define("jquery", [], function () {
            return ce
        }))
}(window),
function (e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).axios = t()
}(this, function () {
    "use strict";

    function e(t) {
        return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }, e(t)
    }

    function t(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }

    function n(e, t) {
        for (var n = 0; n < t.length; n++) {
            var i = t[n];
            i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
        }
    }

    function i(e, t, i) {
        return t && n(e.prototype, t), i && n(e, i), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e
    }

    function r(e, t) {
        return function () {
            return e.apply(t, arguments)
        }
    }

    function o(t, n) {
        var i, r, o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
            a = o.allOwnKeys,
            s = void 0 !== a && a;
        if (null != t)
            if ("object" !== e(t) && (t = [t]), z(t))
                for (i = 0, r = t.length; i < r; i++) n.call(null, t[i], i, t);
            else {
                var l, u = s ? Object.getOwnPropertyNames(t) : Object.keys(t),
                    c = u.length;
                for (i = 0; i < c; i++) l = u[i], n.call(null, t[l], l, t)
            }
    }

    function a(e, t, n, i, r) {
        Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = (new Error).stack, this.message = e, this.name = "AxiosError", t && (this.code = t), n && (this.config = n), i && (this.request = i), r && (this.response = r)
    }

    function s(e) {
        return te.isPlainObject(e) || te.isArray(e)
    }

    function l(e) {
        return te.endsWith(e, "[]") ? e.slice(0, -2) : e
    }

    function u(e, t, n) {
        return e ? e.concat(t).map(function (e, t) {
            return e = l(e), !n && t ? "[" + e + "]" : e
        }).join(n ? "." : "") : t
    }

    function c(t, n, i) {
        function r(e) {
            if (null === e) return "";
            if (te.isDate(e)) return e.toISOString();
            if (!g && te.isBlob(e)) throw new a("Blob is not supported. Use a Buffer instead.");
            return te.isArrayBuffer(e) || te.isTypedArray(e) ? g && "function" == typeof Blob ? new Blob([e]) : Buffer.from(e) : e
        }

        function o(t, i, o) {
            var a = t;
            if (t && !o && "object" === e(t))
                if (te.endsWith(i, "{}")) i = p ? i : i.slice(0, -2), t = JSON.stringify(t);
                else if (te.isArray(t) && function (e) {
                    return te.isArray(e) && !e.some(s)
                }(t) || te.isFileList(t) || te.endsWith(i, "[]") && (a = te.toArray(t))) return i = l(i), a.forEach(function (e, t) {
                !te.isUndefined(e) && null !== e && n.append(!0 === f ? u([i], t, d) : null === f ? i : i + "[]", r(e))
            }), !1;
            return !!s(t) || (n.append(u(o, i, d), r(t)), !1)
        }
        if (!te.isObject(t)) throw new TypeError("target must be an object");
        n = n || new(re || FormData);
        var c, p = (i = te.toFlatObject(i, {
                metaTokens: !0,
                dots: !1,
                indexes: !1
            }, !1, function (e, t) {
                return !te.isUndefined(t[e])
            })).metaTokens,
            h = i.visitor || o,
            d = i.dots,
            f = i.indexes,
            g = (i.Blob || "undefined" != typeof Blob && Blob) && (c = n) && te.isFunction(c.append) && "FormData" === c[Symbol.toStringTag] && c[Symbol.iterator];
        if (!te.isFunction(h)) throw new TypeError("visitor must be a function");
        var m = [],
            y = Object.assign(oe, {
                defaultVisitor: o,
                convertValue: r,
                isVisitable: s
            });
        if (!te.isObject(t)) throw new TypeError("data must be an object");
        return function e(t, i) {
            if (!te.isUndefined(t)) {
                if (-1 !== m.indexOf(t)) throw Error("Circular reference detected in " + i.join("."));
                m.push(t), te.forEach(t, function (t, r) {
                    !0 === (!(te.isUndefined(t) || null === t) && h.call(n, t, te.isString(r) ? r.trim() : r, i, y)) && e(t, i ? i.concat(r) : [r])
                }), m.pop()
            }
        }(t), n
    }

    function p(e) {
        var t = {
            "!": "%21",
            "'": "%27",
            "(": "%28",
            ")": "%29",
            "~": "%7E",
            "%20": "+",
            "%00": "\0"
        };
        return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function (e) {
            return t[e]
        })
    }

    function h(e, t) {
        this._pairs = [], e && c(e, this, t)
    }

    function d(e) {
        return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
    }

    function f(e, t, n) {
        if (!t) return e;
        var i, r = n && n.encode || d,
            o = n && n.serialize;
        if (i = o ? o(t, n) : te.isURLSearchParams(t) ? t.toString() : new h(t, n).toString(r)) {
            var a = e.indexOf("#"); - 1 !== a && (e = e.slice(0, a)), e += (-1 === e.indexOf("?") ? "?" : "&") + i
        }
        return e
    }

    function g(e) {
        function t(e, n, i, r) {
            var o = e[r++],
                a = Number.isFinite(+o),
                s = r >= e.length;
            return o = !o && te.isArray(i) ? i.length : o, s ? (te.hasOwnProp(i, o) ? i[o] = [i[o], n] : i[o] = n, !a) : (i[o] && te.isObject(i[o]) || (i[o] = []), t(e, n, i[o], r) && te.isArray(i[o]) && (i[o] = function (e) {
                var t, n, i = {},
                    r = Object.keys(e),
                    o = r.length;
                for (t = 0; t < o; t++) i[n = r[t]] = e[n];
                return i
            }(i[o])), !a)
        }
        if (te.isFormData(e) && te.isFunction(e.entries)) {
            var n = {};
            return te.forEachEntry(e, function (e, i) {
                t(function (e) {
                    return te.matchAll(/\w+|\[(\w*)]/g, e).map(function (e) {
                        return "[]" === e[0] ? "" : e[1] || e[0]
                    })
                }(e), i, n, 0)
            }), n
        }
        return null
    }

    function m(e, t) {
        return e && !/^([a-z][a-z\d+\-.]*:)?\/\//i.test(t) ? function (e, t) {
            return t ? e.replace(/\/+$/, "") + "/" + t.replace(/^\/+/, "") : e
        }(e, t) : t
    }

    function y(e, t, n) {
        a.call(this, null == e ? "canceled" : e, a.ERR_CANCELED, t, n), this.name = "CanceledError"
    }

    function v(e) {
        return e && String(e).trim().toLowerCase()
    }

    function x(e) {
        return !1 === e || null == e ? e : te.isArray(e) ? e.map(x) : String(e)
    }

    function _(e, t, n, i) {
        return te.isFunction(i) ? i.call(this, t, n) : te.isString(t) ? te.isString(i) ? -1 !== t.indexOf(i) : te.isRegExp(i) ? i.test(t) : void 0 : void 0
    }

    function w(e, t) {
        t = t.toLowerCase();
        for (var n, i = Object.keys(e), r = i.length; r-- > 0;)
            if (t === (n = i[r]).toLowerCase()) return n;
        return null
    }

    function b(e, t) {
        e && this.set(e), this[ve] = t || null
    }

    function S(e, t) {
        var n = 0,
            i = function (e, t) {
                e = e || 10;
                var n, i = new Array(e),
                    r = new Array(e),
                    o = 0,
                    a = 0;
                return t = void 0 !== t ? t : 1e3,
                    function (s) {
                        var l = Date.now(),
                            u = r[a];
                        n || (n = l), i[o] = s, r[o] = l;
                        for (var c = a, p = 0; c !== o;) p += i[c++], c %= e;
                        if ((o = (o + 1) % e) === a && (a = (a + 1) % e), !(l - n < t)) {
                            var h = u && l - u;
                            return h ? Math.round(1e3 * p / h) : void 0
                        }
                    }
            }(50, 250);
        return function (r) {
            var o = r.loaded,
                a = r.lengthComputable ? r.total : void 0,
                s = o - n,
                l = i(s);
            n = o;
            var u = {
                loaded: o,
                total: a,
                progress: a ? o / a : void 0,
                bytes: s,
                rate: l || void 0,
                estimated: l && a && o <= a ? (a - o) / l : void 0
            };
            u[t ? "download" : "upload"] = !0, e(u)
        }
    }

    function T(e) {
        return new Promise(function (t, n) {
            function i() {
                e.cancelToken && e.cancelToken.unsubscribe(o), e.signal && e.signal.removeEventListener("abort", o)
            }

            function r() {
                if (c) {
                    var r = b.from("getAllResponseHeaders" in c && c.getAllResponseHeaders());
                    ! function (e, t, n) {
                        var i = n.config.validateStatus;
                        n.status && i && !i(n.status) ? t(new a("Request failed with status code " + n.status, [a.ERR_BAD_REQUEST, a.ERR_BAD_RESPONSE][Math.floor(n.status / 100) - 4], n.config, n.request, n)) : e(n)
                    }(function (e) {
                        t(e), i()
                    }, function (e) {
                        n(e), i()
                    }, {
                        data: u && "text" !== u && "json" !== u ? c.response : c.responseText,
                        status: c.status,
                        statusText: c.statusText,
                        headers: r,
                        config: e,
                        request: c
                    }), c = null
                }
            }
            var o, s = e.data,
                l = b.from(e.headers).normalize(),
                u = e.responseType;
            te.isFormData(s) && de.isStandardBrowserEnv && l.setContentType(!1);
            var c = new XMLHttpRequest;
            if (e.auth) {
                var p = e.auth.username || "",
                    h = e.auth.password ? unescape(encodeURIComponent(e.auth.password)) : "";
                l.set("Authorization", "Basic " + btoa(p + ":" + h))
            }
            var d = m(e.baseURL, e.url);
            if (c.open(e.method.toUpperCase(), f(d, e.params, e.paramsSerializer), !0), c.timeout = e.timeout, "onloadend" in c ? c.onloadend = r : c.onreadystatechange = function () {
                    c && 4 === c.readyState && (0 !== c.status || c.responseURL && 0 === c.responseURL.indexOf("file:")) && setTimeout(r)
                }, c.onabort = function () {
                    c && (n(new a("Request aborted", a.ECONNABORTED, e, c)), c = null)
                }, c.onerror = function () {
                    n(new a("Network Error", a.ERR_NETWORK, e, c)), c = null
                }, c.ontimeout = function () {
                    var t = e.timeout ? "timeout of " + e.timeout + "ms exceeded" : "timeout exceeded",
                        i = e.transitional || ue;
                    e.timeoutErrorMessage && (t = e.timeoutErrorMessage), n(new a(t, i.clarifyTimeoutError ? a.ETIMEDOUT : a.ECONNABORTED, e, c)), c = null
                }, de.isStandardBrowserEnv) {
                var g = (e.withCredentials || ge(d)) && e.xsrfCookieName && fe.read(e.xsrfCookieName);
                g && l.set(e.xsrfHeaderName, g)
            }
            void 0 === s && l.setContentType(null), "setRequestHeader" in c && te.forEach(l.toJSON(), function (e, t) {
                c.setRequestHeader(t, e)
            }), te.isUndefined(e.withCredentials) || (c.withCredentials = !!e.withCredentials), u && "json" !== u && (c.responseType = e.responseType), "function" == typeof e.onDownloadProgress && c.addEventListener("progress", S(e.onDownloadProgress, !0)), "function" == typeof e.onUploadProgress && c.upload && c.upload.addEventListener("progress", S(e.onUploadProgress)), (e.cancelToken || e.signal) && (o = function (t) {
                c && (n(!t || t.type ? new y(null, e, c) : t), c.abort(), c = null)
            }, e.cancelToken && e.cancelToken.subscribe(o), e.signal && (e.signal.aborted ? o() : e.signal.addEventListener("abort", o)));
            var v, x = (v = /^([-+\w]{1,25})(:?\/\/|:)/.exec(d)) && v[1] || "";
            x && -1 === de.protocols.indexOf(x) ? n(new a("Unsupported protocol " + x + ":", a.ERR_BAD_REQUEST, e)) : c.send(s || null)
        })
    }

    function C(e, t) {
        var n = this || Se,
            i = t || n,
            r = b.from(i.headers),
            o = i.data;
        return te.forEach(e, function (e) {
            o = e.call(n, o, r.normalize(), t ? t.status : void 0)
        }), r.normalize(), o
    }

    function M(e) {
        return !(!e || !e.__CANCEL__)
    }

    function I(e) {
        if (e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted) throw new y
    }

    function k(e) {
        return I(e), e.headers = b.from(e.headers), e.data = C.call(e, e.transformRequest), (e.adapter || Se.adapter)(e).then(function (t) {
            return I(e), t.data = C.call(e, e.transformResponse, t), t.headers = b.from(t.headers), t
        }, function (t) {
            return M(t) || (I(e), t && t.response && (t.response.data = C.call(e, e.transformResponse, t.response), t.response.headers = b.from(t.response.headers))), Promise.reject(t)
        })
    }

    function D(e, t) {
        function n(e, t) {
            return te.isPlainObject(e) && te.isPlainObject(t) ? te.merge(e, t) : te.isPlainObject(t) ? te.merge({}, t) : te.isArray(t) ? t.slice() : t
        }

        function i(i) {
            return te.isUndefined(t[i]) ? te.isUndefined(e[i]) ? void 0 : n(void 0, e[i]) : n(e[i], t[i])
        }

        function r(e) {
            if (!te.isUndefined(t[e])) return n(void 0, t[e])
        }

        function o(i) {
            return te.isUndefined(t[i]) ? te.isUndefined(e[i]) ? void 0 : n(void 0, e[i]) : n(void 0, t[i])
        }

        function a(i) {
            return i in t ? n(e[i], t[i]) : i in e ? n(void 0, e[i]) : void 0
        }
        t = t || {};
        var s = {},
            l = {
                url: r,
                method: r,
                data: r,
                baseURL: o,
                transformRequest: o,
                transformResponse: o,
                paramsSerializer: o,
                timeout: o,
                timeoutMessage: o,
                withCredentials: o,
                adapter: o,
                responseType: o,
                xsrfCookieName: o,
                xsrfHeaderName: o,
                onUploadProgress: o,
                onDownloadProgress: o,
                decompress: o,
                maxContentLength: o,
                maxBodyLength: o,
                beforeRedirect: o,
                transport: o,
                httpAgent: o,
                httpsAgent: o,
                cancelToken: o,
                socketPath: o,
                responseEncoding: o,
                validateStatus: a
            };
        return te.forEach(Object.keys(e).concat(Object.keys(t)), function (e) {
            var t = l[e] || i,
                n = t(e);
            te.isUndefined(n) && t !== a || (s[e] = n)
        }), s
    }
    var A, P, L = Object.prototype.toString,
        N = Object.getPrototypeOf,
        O = (A = Object.create(null), function (e) {
            var t = L.call(e);
            return A[t] || (A[t] = t.slice(8, -1).toLowerCase())
        }),
        E = function (e) {
            return e = e.toLowerCase(),
                function (t) {
                    return O(t) === e
                }
        },
        R = function (t) {
            return function (n) {
                return e(n) === t
            }
        },
        z = Array.isArray,
        B = R("undefined"),
        F = E("ArrayBuffer"),
        H = R("string"),
        G = R("function"),
        V = R("number"),
        W = function (t) {
            return null !== t && "object" === e(t)
        },
        j = function (e) {
            if ("object" !== O(e)) return !1;
            var t = N(e);
            return !(null !== t && t !== Object.prototype && null !== Object.getPrototypeOf(t) || Symbol.toStringTag in e || Symbol.iterator in e)
        },
        X = E("Date"),
        Y = E("File"),
        U = E("Blob"),
        q = E("FileList"),
        Z = E("URLSearchParams"),
        $ = (P = "undefined" != typeof Uint8Array && N(Uint8Array), function (e) {
            return P && e instanceof P
        }),
        K = E("HTMLFormElement"),
        J = function (e) {
            var t = Object.prototype.hasOwnProperty;
            return function (e, n) {
                return t.call(e, n)
            }
        }(),
        Q = E("RegExp"),
        ee = function (e, t) {
            var n = Object.getOwnPropertyDescriptors(e),
                i = {};
            o(n, function (n, r) {
                !1 !== t(n, r, e) && (i[r] = n)
            }), Object.defineProperties(e, i)
        },
        te = {
            isArray: z,
            isArrayBuffer: F,
            isBuffer: function (e) {
                return null !== e && !B(e) && null !== e.constructor && !B(e.constructor) && G(e.constructor.isBuffer) && e.constructor.isBuffer(e)
            },
            isFormData: function (e) {
                var t = "[object FormData]";
                return e && ("function" == typeof FormData && e instanceof FormData || L.call(e) === t || G(e.toString) && e.toString() === t)
            },
            isArrayBufferView: function (e) {
                return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(e) : e && e.buffer && F(e.buffer)
            },
            isString: H,
            isNumber: V,
            isBoolean: function (e) {
                return !0 === e || !1 === e
            },
            isObject: W,
            isPlainObject: j,
            isUndefined: B,
            isDate: X,
            isFile: Y,
            isBlob: U,
            isRegExp: Q,
            isFunction: G,
            isStream: function (e) {
                return W(e) && G(e.pipe)
            },
            isURLSearchParams: Z,
            isTypedArray: $,
            isFileList: q,
            forEach: o,
            merge: function e() {
                for (var t = {}, n = function (n, i) {
                        j(t[i]) && j(n) ? t[i] = e(t[i], n) : j(n) ? t[i] = e({}, n) : z(n) ? t[i] = n.slice() : t[i] = n
                    }, i = 0, r = arguments.length; i < r; i++) arguments[i] && o(arguments[i], n);
                return t
            },
            extend: function (e, t, n) {
                var i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
                    a = i.allOwnKeys;
                return o(t, function (t, i) {
                    n && G(t) ? e[i] = r(t, n) : e[i] = t
                }, {
                    allOwnKeys: a
                }), e
            },
            trim: function (e) {
                return e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")
            },
            stripBOM: function (e) {
                return 65279 === e.charCodeAt(0) && (e = e.slice(1)), e
            },
            inherits: function (e, t, n, i) {
                e.prototype = Object.create(t.prototype, i), e.prototype.constructor = e, Object.defineProperty(e, "super", {
                    value: t.prototype
                }), n && Object.assign(e.prototype, n)
            },
            toFlatObject: function (e, t, n, i) {
                var r, o, a, s = {};
                if (t = t || {}, null == e) return t;
                do {
                    for (o = (r = Object.getOwnPropertyNames(e)).length; o-- > 0;) a = r[o], i && !i(a, e, t) || s[a] || (t[a] = e[a], s[a] = !0);
                    e = !1 !== n && N(e)
                } while (e && (!n || n(e, t)) && e !== Object.prototype);
                return t
            },
            kindOf: O,
            kindOfTest: E,
            endsWith: function (e, t, n) {
                e = String(e), (void 0 === n || n > e.length) && (n = e.length), n -= t.length;
                var i = e.indexOf(t, n);
                return -1 !== i && i === n
            },
            toArray: function (e) {
                if (!e) return null;
                if (z(e)) return e;
                var t = e.length;
                if (!V(t)) return null;
                for (var n = new Array(t); t-- > 0;) n[t] = e[t];
                return n
            },
            forEachEntry: function (e, t) {
                for (var n, i = (e && e[Symbol.iterator]).call(e);
                    (n = i.next()) && !n.done;) {
                    var r = n.value;
                    t.call(e, r[0], r[1])
                }
            },
            matchAll: function (e, t) {
                for (var n, i = []; null !== (n = e.exec(t));) i.push(n);
                return i
            },
            isHTMLForm: K,
            hasOwnProperty: J,
            hasOwnProp: J,
            reduceDescriptors: ee,
            freezeMethods: function (e) {
                ee(e, function (t, n) {
                    var i = e[n];
                    G(i) && (t.enumerable = !1, "writable" in t ? t.writable = !1 : t.set || (t.set = function () {
                        throw Error("Can not read-only method '" + n + "'")
                    }))
                })
            },
            toObjectSet: function (e, t) {
                var n = {},
                    i = function (e) {
                        e.forEach(function (e) {
                            n[e] = !0
                        })
                    };
                return z(e) ? i(e) : i(String(e).split(t)), n
            },
            toCamelCase: function (e) {
                return e.toLowerCase().replace(/[_-\s]([a-z\d])(\w*)/g, function (e, t, n) {
                    return t.toUpperCase() + n
                })
            },
            noop: function () {},
            toFiniteNumber: function (e, t) {
                return e = +e, Number.isFinite(e) ? e : t
            }
        };
    te.inherits(a, Error, {
        toJSON: function () {
            return {
                message: this.message,
                name: this.name,
                description: this.description,
                number: this.number,
                fileName: this.fileName,
                lineNumber: this.lineNumber,
                columnNumber: this.columnNumber,
                stack: this.stack,
                config: this.config,
                code: this.code,
                status: this.response && this.response.status ? this.response.status : null
            }
        }
    });
    var ne = a.prototype,
        ie = {};
    ["ERR_BAD_OPTION_VALUE", "ERR_BAD_OPTION", "ECONNABORTED", "ETIMEDOUT", "ERR_NETWORK", "ERR_FR_TOO_MANY_REDIRECTS", "ERR_DEPRECATED", "ERR_BAD_RESPONSE", "ERR_BAD_REQUEST", "ERR_CANCELED", "ERR_NOT_SUPPORT", "ERR_INVALID_URL"].forEach(function (e) {
        ie[e] = {
            value: e
        }
    }), Object.defineProperties(a, ie), Object.defineProperty(ne, "isAxiosError", {
        value: !0
    }), a.from = function (e, t, n, i, r, o) {
        var s = Object.create(ne);
        return te.toFlatObject(e, s, function (e) {
            return e !== Error.prototype
        }, function (e) {
            return "isAxiosError" !== e
        }), a.call(s, e.message, t, n, i, r), s.cause = e, s.name = e.name, o && Object.assign(s, o), s
    };
    var re = "object" == ("undefined" == typeof self ? "undefined" : e(self)) ? self.FormData : window.FormData,
        oe = te.toFlatObject(te, {}, null, function (e) {
            return /^is[A-Z]/.test(e)
        }),
        ae = h.prototype;
    ae.append = function (e, t) {
        this._pairs.push([e, t])
    }, ae.toString = function (e) {
        var t = e ? function (t) {
            return e.call(this, t, p)
        } : p;
        return this._pairs.map(function (e) {
            return t(e[0]) + "=" + t(e[1])
        }, "").join("&")
    };
    var se, le = function () {
            function e() {
                t(this, e), this.handlers = []
            }
            return i(e, [{
                key: "use",
                value: function (e, t, n) {
                    return this.handlers.push({
                        fulfilled: e,
                        rejected: t,
                        synchronous: !!n && n.synchronous,
                        runWhen: n ? n.runWhen : null
                    }), this.handlers.length - 1
                }
            }, {
                key: "eject",
                value: function (e) {
                    this.handlers[e] && (this.handlers[e] = null)
                }
            }, {
                key: "clear",
                value: function () {
                    this.handlers && (this.handlers = [])
                }
            }, {
                key: "forEach",
                value: function (e) {
                    te.forEach(this.handlers, function (t) {
                        null !== t && e(t)
                    })
                }
            }]), e
        }(),
        ue = {
            silentJSONParsing: !0,
            forcedJSONParsing: !0,
            clarifyTimeoutError: !1
        },
        ce = "undefined" != typeof URLSearchParams ? URLSearchParams : h,
        pe = FormData,
        he = ("undefined" == typeof navigator || "ReactNative" !== (se = navigator.product) && "NativeScript" !== se && "NS" !== se) && "undefined" != typeof window && "undefined" != typeof document,
        de = {
            isBrowser: !0,
            classes: {
                URLSearchParams: ce,
                FormData: pe,
                Blob: Blob
            },
            isStandardBrowserEnv: he,
            protocols: ["http", "https", "file", "blob", "url", "data"]
        },
        fe = de.isStandardBrowserEnv ? {
            write: function (e, t, n, i, r, o) {
                var a = [];
                a.push(e + "=" + encodeURIComponent(t)), te.isNumber(n) && a.push("expires=" + new Date(n).toGMTString()), te.isString(i) && a.push("path=" + i), te.isString(r) && a.push("domain=" + r), !0 === o && a.push("secure"), document.cookie = a.join("; ")
            },
            read: function (e) {
                var t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
                return t ? decodeURIComponent(t[3]) : null
            },
            remove: function (e) {
                this.write(e, "", Date.now() - 864e5)
            }
        } : {
            write: function () {},
            read: function () {
                return null
            },
            remove: function () {}
        },
        ge = de.isStandardBrowserEnv ? function () {
            function e(e) {
                var t = e;
                return n && (i.setAttribute("href", t), t = i.href), i.setAttribute("href", t), {
                    href: i.href,
                    protocol: i.protocol ? i.protocol.replace(/:$/, "") : "",
                    host: i.host,
                    search: i.search ? i.search.replace(/^\?/, "") : "",
                    hash: i.hash ? i.hash.replace(/^#/, "") : "",
                    hostname: i.hostname,
                    port: i.port,
                    pathname: "/" === i.pathname.charAt(0) ? i.pathname : "/" + i.pathname
                }
            }
            var t, n = /(msie|trident)/i.test(navigator.userAgent),
                i = document.createElement("a");
            return t = e(window.location.href),
                function (n) {
                    var i = te.isString(n) ? e(n) : n;
                    return i.protocol === t.protocol && i.host === t.host
                }
        }() : function () {
            return !0
        };
    te.inherits(y, a, {
        __CANCEL__: !0
    });
    var me = te.toObjectSet(["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"]),
        ye = Symbol("internals"),
        ve = Symbol("defaults");
    Object.assign(b.prototype, {
        set: function (e, t, n) {
            function i(e, t, n) {
                var i = v(t);
                if (!i) throw new Error("header name must be a non-empty string");
                var o = w(r, i);
                (!o || !0 === n || !1 !== r[o] && !1 !== n) && (r[o || t] = x(e))
            }
            var r = this;
            return te.isPlainObject(e) ? te.forEach(e, function (e, n) {
                i(e, n, t)
            }) : i(t, e, n), this
        },
        get: function (e, t) {
            if (e = v(e)) {
                var n = w(this, e);
                if (n) {
                    var i = this[n];
                    if (!t) return i;
                    if (!0 === t) return function (e) {
                        for (var t, n = Object.create(null), i = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g; t = i.exec(e);) n[t[1]] = t[2];
                        return n
                    }(i);
                    if (te.isFunction(t)) return t.call(this, i, n);
                    if (te.isRegExp(t)) return t.exec(i);
                    throw new TypeError("parser must be boolean|regexp|function")
                }
            }
        },
        has: function (e, t) {
            if (e = v(e)) {
                var n = w(this, e);
                return !(!n || t && !_(0, this[n], n, t))
            }
            return !1
        },
        delete: function (e, t) {
            function n(e) {
                if (e = v(e)) {
                    var n = w(i, e);
                    !n || t && !_(0, i[n], n, t) || (delete i[n], r = !0)
                }
            }
            var i = this,
                r = !1;
            return te.isArray(e) ? e.forEach(n) : n(e), r
        },
        clear: function () {
            return Object.keys(this).forEach(this.delete.bind(this))
        },
        normalize: function (e) {
            var t = this,
                n = {};
            return te.forEach(this, function (i, r) {
                var o = w(n, r);
                if (o) return t[o] = x(i), void delete t[r];
                var a = e ? function (e) {
                    return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, function (e, t, n) {
                        return t.toUpperCase() + n
                    })
                }(r) : String(r).trim();
                a !== r && delete t[r], t[a] = x(i), n[a] = !0
            }), this
        },
        toJSON: function (e) {
            var t = Object.create(null);
            return te.forEach(Object.assign({}, this[ve] || null, this), function (n, i) {
                null != n && !1 !== n && (t[i] = e && te.isArray(n) ? n.join(", ") : n)
            }), t
        }
    }), Object.assign(b, {
        from: function (e) {
            return te.isString(e) ? new this((o = {}, (t = e) && t.split("\n").forEach(function (e) {
                r = e.indexOf(":"), n = e.substring(0, r).trim().toLowerCase(), i = e.substring(r + 1).trim(), !n || o[n] && me[n] || ("set-cookie" === n ? o[n] ? o[n].push(i) : o[n] = [i] : o[n] = o[n] ? o[n] + ", " + i : i)
            }), o)) : e instanceof this ? e : new this(e);
            var t, n, i, r, o
        },
        accessor: function (e) {
            function t(e) {
                var t = v(e);
                n[t] || (function (e, t) {
                    var n = te.toCamelCase(" " + t);
                    ["get", "set", "has"].forEach(function (i) {
                        Object.defineProperty(e, i + n, {
                            value: function (e, n, r) {
                                return this[i].call(this, t, e, n, r)
                            },
                            configurable: !0
                        })
                    })
                }(i, e), n[t] = !0)
            }
            var n = (this[ye] = this[ye] = {
                    accessors: {}
                }).accessors,
                i = this.prototype;
            return te.isArray(e) ? e.forEach(t) : t(e), this
        }
    }), b.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent"]), te.freezeMethods(b.prototype), te.freezeMethods(b);
    var xe, _e = {
            http: T,
            xhr: T
        },
        we = function (e) {
            if (te.isString(e)) {
                var t = _e[e];
                if (!e) throw Error(te.hasOwnProp(e) ? "Adapter '".concat(e, "' is not available in the build") : "Can not resolve adapter '".concat(e, "'"));
                return t
            }
            if (!te.isFunction(e)) throw new TypeError("adapter is not a function");
            return e
        },
        be = {
            "Content-Type": "application/x-www-form-urlencoded"
        },
        Se = {
            transitional: ue,
            adapter: ("undefined" != typeof XMLHttpRequest ? xe = we("xhr") : "undefined" != typeof process && "process" === te.kindOf(process) && (xe = we("http")), xe),
            transformRequest: [function (e, t) {
                var n, i = t.getContentType() || "",
                    r = i.indexOf("application/json") > -1,
                    o = te.isObject(e);
                if (o && te.isHTMLForm(e) && (e = new FormData(e)), te.isFormData(e)) return r && r ? JSON.stringify(g(e)) : e;
                if (te.isArrayBuffer(e) || te.isBuffer(e) || te.isStream(e) || te.isFile(e) || te.isBlob(e)) return e;
                if (te.isArrayBufferView(e)) return e.buffer;
                if (te.isURLSearchParams(e)) return t.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), e.toString();
                if (o) {
                    if (i.indexOf("application/x-www-form-urlencoded") > -1) return function (e, t) {
                        return c(e, new de.classes.URLSearchParams, Object.assign({
                            visitor: function (e, t, n, i) {
                                return de.isNode && te.isBuffer(e) ? (this.append(t, e.toString("base64")), !1) : i.defaultVisitor.apply(this, arguments)
                            }
                        }, t))
                    }(e, this.formSerializer).toString();
                    if ((n = te.isFileList(e)) || i.indexOf("multipart/form-data") > -1) {
                        var a = this.env && this.env.FormData;
                        return c(n ? {
                            "files[]": e
                        } : e, a && new a, this.formSerializer)
                    }
                }
                return o || r ? (t.setContentType("application/json", !1), function (e, t, n) {
                    if (te.isString(e)) try {
                        return (t || JSON.parse)(e), te.trim(e)
                    } catch (e) {
                        if ("SyntaxError" !== e.name) throw e
                    }
                    return (n || JSON.stringify)(e)
                }(e)) : e
            }],
            transformResponse: [function (e) {
                var t = this.transitional || Se.transitional,
                    n = t && t.forcedJSONParsing,
                    i = "json" === this.responseType;
                if (e && te.isString(e) && (n && !this.responseType || i)) {
                    var r = !(t && t.silentJSONParsing) && i;
                    try {
                        return JSON.parse(e)
                    } catch (e) {
                        if (r) {
                            if ("SyntaxError" === e.name) throw a.from(e, a.ERR_BAD_RESPONSE, this, null, this.response);
                            throw e
                        }
                    }
                }
                return e
            }],
            timeout: 0,
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            maxContentLength: -1,
            maxBodyLength: -1,
            env: {
                FormData: de.classes.FormData,
                Blob: de.classes.Blob
            },
            validateStatus: function (e) {
                return e >= 200 && e < 300
            },
            headers: {
                common: {
                    Accept: "application/json, text/plain, */*"
                }
            }
        };
    te.forEach(["delete", "get", "head"], function (e) {
        Se.headers[e] = {}
    }), te.forEach(["post", "put", "patch"], function (e) {
        Se.headers[e] = te.merge(be)
    });
    var Te = "1.1.3",
        Ce = {};
    ["object", "boolean", "number", "function", "string", "symbol"].forEach(function (t, n) {
        Ce[t] = function (i) {
            return e(i) === t || "a" + (n < 1 ? "n " : " ") + t
        }
    });
    var Me = {};
    Ce.transitional = function (e, t, n) {
        function i(e, t) {
            return "[Axios v1.1.3] Transitional option '" + e + "'" + t + (n ? ". " + n : "")
        }
        return function (n, r, o) {
            if (!1 === e) throw new a(i(r, " has been removed" + (t ? " in " + t : "")), a.ERR_DEPRECATED);
            return t && !Me[r] && (Me[r] = !0, console.warn(i(r, " has been deprecated since v" + t + " and will be removed in the near future"))), !e || e(n, r, o)
        }
    };
    var Ie = {
            assertOptions: function (t, n, i) {
                if ("object" !== e(t)) throw new a("options must be an object", a.ERR_BAD_OPTION_VALUE);
                for (var r = Object.keys(t), o = r.length; o-- > 0;) {
                    var s = r[o],
                        l = n[s];
                    if (l) {
                        var u = t[s],
                            c = void 0 === u || l(u, s, t);
                        if (!0 !== c) throw new a("option " + s + " must be " + c, a.ERR_BAD_OPTION_VALUE)
                    } else if (!0 !== i) throw new a("Unknown option " + s, a.ERR_BAD_OPTION)
                }
            },
            validators: Ce
        },
        ke = Ie.validators,
        De = function () {
            function e(n) {
                t(this, e), this.defaults = n, this.interceptors = {
                    request: new le,
                    response: new le
                }
            }
            return i(e, [{
                key: "request",
                value: function (e, t) {
                    "string" == typeof e ? (t = t || {}).url = e : t = e || {};
                    var n = t = D(this.defaults, t),
                        i = n.transitional,
                        r = n.paramsSerializer;
                    void 0 !== i && Ie.assertOptions(i, {
                        silentJSONParsing: ke.transitional(ke.boolean),
                        forcedJSONParsing: ke.transitional(ke.boolean),
                        clarifyTimeoutError: ke.transitional(ke.boolean)
                    }, !1), void 0 !== r && Ie.assertOptions(r, {
                        encode: ke.function,
                        serialize: ke.function
                    }, !0), t.method = (t.method || this.defaults.method || "get").toLowerCase();
                    var o = t.headers && te.merge(t.headers.common, t.headers[t.method]);
                    o && te.forEach(["delete", "get", "head", "post", "put", "patch", "common"], function (e) {
                        delete t.headers[e]
                    }), t.headers = new b(t.headers, o);
                    var a = [],
                        s = !0;
                    this.interceptors.request.forEach(function (e) {
                        "function" == typeof e.runWhen && !1 === e.runWhen(t) || (s = s && e.synchronous, a.unshift(e.fulfilled, e.rejected))
                    });
                    var l, u = [];
                    this.interceptors.response.forEach(function (e) {
                        u.push(e.fulfilled, e.rejected)
                    });
                    var c, p = 0;
                    if (!s) {
                        var h = [k.bind(this), void 0];
                        for (h.unshift.apply(h, a), h.push.apply(h, u), c = h.length, l = Promise.resolve(t); p < c;) l = l.then(h[p++], h[p++]);
                        return l
                    }
                    c = a.length;
                    var d = t;
                    for (p = 0; p < c;) {
                        var f = a[p++],
                            g = a[p++];
                        try {
                            d = f(d)
                        } catch (e) {
                            g.call(this, e);
                            break
                        }
                    }
                    try {
                        l = k.call(this, d)
                    } catch (e) {
                        return Promise.reject(e)
                    }
                    for (p = 0, c = u.length; p < c;) l = l.then(u[p++], u[p++]);
                    return l
                }
            }, {
                key: "getUri",
                value: function (e) {
                    return f(m((e = D(this.defaults, e)).baseURL, e.url), e.params, e.paramsSerializer)
                }
            }]), e
        }();
    te.forEach(["delete", "get", "head", "options"], function (e) {
        De.prototype[e] = function (t, n) {
            return this.request(D(n || {}, {
                method: e,
                url: t,
                data: (n || {}).data
            }))
        }
    }), te.forEach(["post", "put", "patch"], function (e) {
        function t(t) {
            return function (n, i, r) {
                return this.request(D(r || {}, {
                    method: e,
                    headers: t ? {
                        "Content-Type": "multipart/form-data"
                    } : {},
                    url: n,
                    data: i
                }))
            }
        }
        De.prototype[e] = t(), De.prototype[e + "Form"] = t(!0)
    });
    var Ae = function () {
            function e(n) {
                if (t(this, e), "function" != typeof n) throw new TypeError("executor must be a function.");
                var i;
                this.promise = new Promise(function (e) {
                    i = e
                });
                var r = this;
                this.promise.then(function (e) {
                    if (r._listeners) {
                        for (var t = r._listeners.length; t-- > 0;) r._listeners[t](e);
                        r._listeners = null
                    }
                }), this.promise.then = function (e) {
                    var t, n = new Promise(function (e) {
                        r.subscribe(e), t = e
                    }).then(e);
                    return n.cancel = function () {
                        r.unsubscribe(t)
                    }, n
                }, n(function (e, t, n) {
                    r.reason || (r.reason = new y(e, t, n), i(r.reason))
                })
            }
            return i(e, [{
                key: "throwIfRequested",
                value: function () {
                    if (this.reason) throw this.reason
                }
            }, {
                key: "subscribe",
                value: function (e) {
                    this.reason ? e(this.reason) : this._listeners ? this._listeners.push(e) : this._listeners = [e]
                }
            }, {
                key: "unsubscribe",
                value: function (e) {
                    if (this._listeners) {
                        var t = this._listeners.indexOf(e); - 1 !== t && this._listeners.splice(t, 1)
                    }
                }
            }], [{
                key: "source",
                value: function () {
                    var t;
                    return {
                        token: new e(function (e) {
                            t = e
                        }),
                        cancel: t
                    }
                }
            }]), e
        }(),
        Pe = function e(t) {
            var n = new De(t),
                i = r(De.prototype.request, n);
            return te.extend(i, De.prototype, n, {
                allOwnKeys: !0
            }), te.extend(i, n, null, {
                allOwnKeys: !0
            }), i.create = function (n) {
                return e(D(t, n))
            }, i
        }(Se);
    return Pe.Axios = De, Pe.CanceledError = y, Pe.CancelToken = Ae, Pe.isCancel = M, Pe.VERSION = Te, Pe.toFormData = c, Pe.AxiosError = a, Pe.Cancel = Pe.CanceledError, Pe.all = function (e) {
        return Promise.all(e)
    }, Pe.spread = function (e) {
        return function (t) {
            return e.apply(null, t)
        }
    }, Pe.isAxiosError = function (e) {
        return te.isObject(e) && !0 === e.isAxiosError
    }, Pe.formToJSON = function (e) {
        return g(te.isHTMLForm(e) ? new FormData(e) : e)
    }, Pe
}),
function (e, t) {
    var n = t.document.documentElement,
        i = "orientationchange" in window ? "orientationchange" : "resize",
        r = function () {
            var i = t.innerWidth || e.documentElement.clientWidth || e.body.clientWidth;
            if (i) {
                var r, o = i;
                r = 16 * o / 375, n.style.fontSize = r + "px", console.log(r, "html_font-size")
            }
        };
    e.addEventListener && (t.addEventListener(i, r, !1), e.addEventListener("DOMContentLoaded", r, !1), r())
}(document, window),
function () {
    "use strict";
    var e, t, n = function (t, i) {
        function r(e) {
            return Math.floor(e)
        }

        function o() {
            var e = _.params.autoplay,
                t = _.slides.eq(_.activeIndex);
            t.attr("data-swiper-autoplay") && (e = t.attr("data-swiper-autoplay") || _.params.autoplay), _.autoplayTimeoutId = setTimeout(function () {
                _.params.loop ? (_.fixLoop(), _._slideNext(), _.emit("onAutoplay", _)) : _.isEnd ? i.autoplayStopOnLast ? _.stopAutoplay() : (_._slideTo(0), _.emit("onAutoplay", _)) : (_._slideNext(), _.emit("onAutoplay", _))
            }, e)
        }

        function a(t, n) {
            var i = e(t.target);
            if (!i.is(n))
                if ("string" == typeof n) i = i.parents(n);
                else if (n.nodeType) {
                var r;
                return i.parents().each(function (e, t) {
                    t === n && (r = n)
                }), r ? n : void 0
            }
            if (0 !== i.length) return i[0]
        }

        function s(e, t) {
            t = t || {};
            var n = window.MutationObserver || window.WebkitMutationObserver,
                i = new n(function (e) {
                    e.forEach(function (e) {
                        _.onResize(!0), _.emit("onObserverUpdate", _, e)
                    })
                });
            i.observe(e, {
                attributes: void 0 === t.attributes || t.attributes,
                childList: void 0 === t.childList || t.childList,
                characterData: void 0 === t.characterData || t.characterData
            }), _.observers.push(i)
        }

        function l(e) {
            e.originalEvent && (e = e.originalEvent);
            var t = e.keyCode || e.charCode;
            if (!_.params.allowSwipeToNext && (_.isHorizontal() && 39 === t || !_.isHorizontal() && 40 === t)) return !1;
            if (!_.params.allowSwipeToPrev && (_.isHorizontal() && 37 === t || !_.isHorizontal() && 38 === t)) return !1;
            if (!(e.shiftKey || e.altKey || e.ctrlKey || e.metaKey || document.activeElement && document.activeElement.nodeName && ("input" === document.activeElement.nodeName.toLowerCase() || "textarea" === document.activeElement.nodeName.toLowerCase()))) {
                if (37 === t || 39 === t || 38 === t || 40 === t) {
                    var n = !1;
                    if (_.container.parents("." + _.params.slideClass).length > 0 && 0 === _.container.parents("." + _.params.slideActiveClass).length) return;
                    var i = {
                            left: window.pageXOffset,
                            top: window.pageYOffset
                        },
                        r = window.innerWidth,
                        o = window.innerHeight,
                        a = _.container.offset();
                    _.rtl && (a.left = a.left - _.container[0].scrollLeft);
                    for (var s = [
                            [a.left, a.top],
                            [a.left + _.width, a.top],
                            [a.left, a.top + _.height],
                            [a.left + _.width, a.top + _.height]
                        ], l = 0; l < s.length; l++) {
                        var u = s[l];
                        u[0] >= i.left && u[0] <= i.left + r && u[1] >= i.top && u[1] <= i.top + o && (n = !0)
                    }
                    if (!n) return
                }
                _.isHorizontal() ? (37 !== t && 39 !== t || (e.preventDefault ? e.preventDefault() : e.returnValue = !1), (39 === t && !_.rtl || 37 === t && _.rtl) && _.slideNext(), (37 === t && !_.rtl || 39 === t && _.rtl) && _.slidePrev()) : (38 !== t && 40 !== t || (e.preventDefault ? e.preventDefault() : e.returnValue = !1), 40 === t && _.slideNext(), 38 === t && _.slidePrev()), _.emit("onKeyPress", _, t)
            }
        }

        function u(e) {
            var t = 0,
                n = 0,
                i = 0,
                r = 0;
            return "detail" in e && (n = e.detail), "wheelDelta" in e && (n = -e.wheelDelta / 120), "wheelDeltaY" in e && (n = -e.wheelDeltaY / 120), "wheelDeltaX" in e && (t = -e.wheelDeltaX / 120), "axis" in e && e.axis === e.HORIZONTAL_AXIS && (t = n, n = 0), i = 10 * t, r = 10 * n, "deltaY" in e && (r = e.deltaY), "deltaX" in e && (i = e.deltaX), (i || r) && e.deltaMode && (1 === e.deltaMode ? (i *= 40, r *= 40) : (i *= 800, r *= 800)), i && !t && (t = i < 1 ? -1 : 1), r && !n && (n = r < 1 ? -1 : 1), {
                spinX: t,
                spinY: n,
                pixelX: i,
                pixelY: r
            }
        }

        function c(e) {
            e.originalEvent && (e = e.originalEvent);
            var t = 0,
                n = _.rtl ? -1 : 1,
                i = u(e);
            if (_.params.mousewheelForceToAxis)
                if (_.isHorizontal()) {
                    if (!(Math.abs(i.pixelX) > Math.abs(i.pixelY))) return;
                    t = i.pixelX * n
                } else {
                    if (!(Math.abs(i.pixelY) > Math.abs(i.pixelX))) return;
                    t = i.pixelY
                }
            else t = Math.abs(i.pixelX) > Math.abs(i.pixelY) ? -i.pixelX * n : -i.pixelY;
            if (0 !== t) {
                if (_.params.mousewheelInvert && (t = -t), _.params.freeMode) {
                    var r = _.getWrapperTranslate() + t * _.params.mousewheelSensitivity,
                        o = _.isBeginning,
                        a = _.isEnd;
                    if (r >= _.minTranslate() && (r = _.minTranslate()), r <= _.maxTranslate() && (r = _.maxTranslate()), _.setWrapperTransition(0), _.setWrapperTranslate(r), _.updateProgress(), _.updateActiveIndex(), (!o && _.isBeginning || !a && _.isEnd) && _.updateClasses(), _.params.freeModeSticky ? (clearTimeout(_.mousewheel.timeout), _.mousewheel.timeout = setTimeout(function () {
                            _.slideReset()
                        }, 300)) : _.params.lazyLoading && _.lazy && _.lazy.load(), _.emit("onScroll", _, e), _.params.autoplay && _.params.autoplayDisableOnInteraction && _.stopAutoplay(), 0 === r || r === _.maxTranslate()) return
                } else {
                    if ((new window.Date).getTime() - _.mousewheel.lastScrollTime > 60)
                        if (t < 0)
                            if (_.isEnd && !_.params.loop || _.animating) {
                                if (_.params.mousewheelReleaseOnEdges) return !0
                            } else _.slideNext(), _.emit("onScroll", _, e);
                    else if (_.isBeginning && !_.params.loop || _.animating) {
                        if (_.params.mousewheelReleaseOnEdges) return !0
                    } else _.slidePrev(), _.emit("onScroll", _, e);
                    _.mousewheel.lastScrollTime = (new window.Date).getTime()
                }
                return e.preventDefault ? e.preventDefault() : e.returnValue = !1, !1
            }
        }

        function p(t, n) {
            t = e(t);
            var i, r, o, a = _.rtl ? -1 : 1;
            i = t.attr("data-swiper-parallax") || "0", r = t.attr("data-swiper-parallax-x"), o = t.attr("data-swiper-parallax-y"), r || o ? (r = r || "0", o = o || "0") : _.isHorizontal() ? (r = i, o = "0") : (o = i, r = "0"), r = r.indexOf("%") >= 0 ? parseInt(r, 10) * n * a + "%" : r * n * a + "px", o = o.indexOf("%") >= 0 ? parseInt(o, 10) * n + "%" : o * n + "px", t.transform("translate3d(" + r + ", " + o + ",0px)")
        }

        function h(e) {
            return 0 !== e.indexOf("on") && (e = e[0] !== e[0].toUpperCase() ? "on" + e[0].toUpperCase() + e.substring(1) : "on" + e), e
        }
        if (!(this instanceof n)) return new n(t, i);
        var d = {
                direction: "horizontal",
                touchEventsTarget: "container",
                initialSlide: 0,
                speed: 300,
                autoplay: !1,
                autoplayDisableOnInteraction: !0,
                autoplayStopOnLast: !1,
                iOSEdgeSwipeDetection: !1,
                iOSEdgeSwipeThreshold: 20,
                freeMode: !1,
                freeModeMomentum: !0,
                freeModeMomentumRatio: 1,
                freeModeMomentumBounce: !0,
                freeModeMomentumBounceRatio: 1,
                freeModeMomentumVelocityRatio: 1,
                freeModeSticky: !1,
                freeModeMinimumVelocity: .02,
                autoHeight: !1,
                setWrapperSize: !1,
                virtualTranslate: !1,
                effect: "slide",
                coverflow: {
                    rotate: 50,
                    stretch: 0,
                    depth: 100,
                    modifier: 1,
                    slideShadows: !0
                },
                flip: {
                    slideShadows: !0,
                    limitRotation: !0
                },
                cube: {
                    slideShadows: !0,
                    shadow: !0,
                    shadowOffset: 20,
                    shadowScale: .94
                },
                fade: {
                    crossFade: !1
                },
                parallax: !1,
                zoom: !1,
                zoomMax: 3,
                zoomMin: 1,
                zoomToggle: !0,
                scrollbar: null,
                scrollbarHide: !0,
                scrollbarDraggable: !1,
                scrollbarSnapOnRelease: !1,
                keyboardControl: !1,
                mousewheelControl: !1,
                mousewheelReleaseOnEdges: !1,
                mousewheelInvert: !1,
                mousewheelForceToAxis: !1,
                mousewheelSensitivity: 1,
                mousewheelEventsTarged: "container",
                hashnav: !1,
                hashnavWatchState: !1,
                history: !1,
                replaceState: !1,
                breakpoints: void 0,
                spaceBetween: 0,
                slidesPerView: 1,
                slidesPerColumn: 1,
                slidesPerColumnFill: "column",
                slidesPerGroup: 1,
                centeredSlides: !1,
                slidesOffsetBefore: 0,
                slidesOffsetAfter: 0,
                roundLengths: !1,
                touchRatio: 1,
                touchAngle: 45,
                simulateTouch: !0,
                shortSwipes: !0,
                longSwipes: !0,
                longSwipesRatio: .5,
                longSwipesMs: 300,
                followFinger: !0,
                onlyExternal: !1,
                threshold: 0,
                touchMoveStopPropagation: !0,
                touchReleaseOnEdges: !1,
                uniqueNavElements: !0,
                pagination: null,
                paginationElement: "span",
                paginationClickable: !1,
                paginationHide: !1,
                paginationBulletRender: null,
                paginationProgressRender: null,
                paginationFractionRender: null,
                paginationCustomRender: null,
                paginationType: "bullets",
                resistance: !0,
                resistanceRatio: .85,
                nextButton: null,
                prevButton: null,
                watchSlidesProgress: !1,
                watchSlidesVisibility: !1,
                grabCursor: !1,
                preventClicks: !0,
                preventClicksPropagation: !0,
                slideToClickedSlide: !1,
                lazyLoading: !1,
                lazyLoadingInPrevNext: !1,
                lazyLoadingInPrevNextAmount: 1,
                lazyLoadingOnTransitionStart: !1,
                preloadImages: !0,
                updateOnImagesReady: !0,
                loop: !1,
                loopAdditionalSlides: 0,
                loopedSlides: null,
                control: void 0,
                controlInverse: !1,
                controlBy: "slide",
                normalizeSlideIndex: !0,
                allowSwipeToPrev: !0,
                allowSwipeToNext: !0,
                swipeHandler: null,
                noSwiping: !0,
                noSwipingClass: "swiper-no-swiping",
                passiveListeners: !0,
                containerModifierClass: "swiper-container-",
                slideClass: "swiper-slide",
                slideActiveClass: "swiper-slide-active",
                slideDuplicateActiveClass: "swiper-slide-duplicate-active",
                slideVisibleClass: "swiper-slide-visible",
                slideDuplicateClass: "swiper-slide-duplicate",
                slideNextClass: "swiper-slide-next",
                slideDuplicateNextClass: "swiper-slide-duplicate-next",
                slidePrevClass: "swiper-slide-prev",
                slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
                wrapperClass: "swiper-wrapper",
                bulletClass: "swiper-pagination-bullet",
                bulletActiveClass: "swiper-pagination-bullet-active",
                buttonDisabledClass: "swiper-button-disabled",
                paginationCurrentClass: "swiper-pagination-current",
                paginationTotalClass: "swiper-pagination-total",
                paginationHiddenClass: "swiper-pagination-hidden",
                paginationProgressbarClass: "swiper-pagination-progressbar",
                paginationClickableClass: "swiper-pagination-clickable",
                paginationModifierClass: "swiper-pagination-",
                lazyLoadingClass: "swiper-lazy",
                lazyStatusLoadingClass: "swiper-lazy-loading",
                lazyStatusLoadedClass: "swiper-lazy-loaded",
                lazyPreloaderClass: "swiper-lazy-preloader",
                notificationClass: "swiper-notification",
                preloaderClass: "preloader",
                zoomContainerClass: "swiper-zoom-container",
                observer: !1,
                observeParents: !1,
                a11y: !1,
                prevSlideMessage: "Previous slide",
                nextSlideMessage: "Next slide",
                firstSlideMessage: "This is the first slide",
                lastSlideMessage: "This is the last slide",
                paginationBulletMessage: "Go to slide {{index}}",
                runCallbacksOnInit: !0
            },
            f = i && i.virtualTranslate;
        i = i || {};
        var g = {};
        for (var m in i)
            if ("object" != typeof i[m] || null === i[m] || i[m].nodeType || i[m] === window || i[m] === document || "undefined" != typeof Dom7 && i[m] instanceof Dom7 || "undefined" != typeof jQuery && i[m] instanceof jQuery) g[m] = i[m];
            else
                for (var y in g[m] = {}, i[m]) g[m][y] = i[m][y];
        for (var v in d)
            if (void 0 === i[v]) i[v] = d[v];
            else if ("object" == typeof i[v])
            for (var x in d[v]) void 0 === i[v][x] && (i[v][x] = d[v][x]);
        var _ = this;
        if (_.params = i, _.originalParams = g, _.classNames = [], void 0 !== e && "undefined" != typeof Dom7 && (e = Dom7), (void 0 !== e || (e = "undefined" == typeof Dom7 ? window.Dom7 || window.Zepto || window.jQuery : Dom7)) && (_.$ = e, _.currentBreakpoint = void 0, _.getActiveBreakpoint = function () {
                if (!_.params.breakpoints) return !1;
                var e, t = !1,
                    n = [];
                for (e in _.params.breakpoints) _.params.breakpoints.hasOwnProperty(e) && n.push(e);
                n.sort(function (e, t) {
                    return parseInt(e, 10) > parseInt(t, 10)
                });
                for (var i = 0; i < n.length; i++)(e = n[i]) >= window.innerWidth && !t && (t = e);
                return t || "max"
            }, _.setBreakpoint = function () {
                var e = _.getActiveBreakpoint();
                if (e && _.currentBreakpoint !== e) {
                    var t = e in _.params.breakpoints ? _.params.breakpoints[e] : _.originalParams,
                        n = _.params.loop && t.slidesPerView !== _.params.slidesPerView;
                    for (var i in t) _.params[i] = t[i];
                    _.currentBreakpoint = e, n && _.destroyLoop && _.reLoop(!0)
                }
            }, _.params.breakpoints && _.setBreakpoint(), _.container = e(t), 0 !== _.container.length)) {
            if (_.container.length > 1) {
                var w = [];
                return _.container.each(function () {
                    w.push(new n(this, i))
                }), w
            }
            _.container[0].swiper = _, _.container.data("swiper", _), _.classNames.push(_.params.containerModifierClass + _.params.direction), _.params.freeMode && _.classNames.push(_.params.containerModifierClass + "free-mode"), _.support.flexbox || (_.classNames.push(_.params.containerModifierClass + "no-flexbox"), _.params.slidesPerColumn = 1), _.params.autoHeight && _.classNames.push(_.params.containerModifierClass + "autoheight"), (_.params.parallax || _.params.watchSlidesVisibility) && (_.params.watchSlidesProgress = !0), _.params.touchReleaseOnEdges && (_.params.resistanceRatio = 0), ["cube", "coverflow", "flip"].indexOf(_.params.effect) >= 0 && (_.support.transforms3d ? (_.params.watchSlidesProgress = !0, _.classNames.push(_.params.containerModifierClass + "3d")) : _.params.effect = "slide"), "slide" !== _.params.effect && _.classNames.push(_.params.containerModifierClass + _.params.effect), "cube" === _.params.effect && (_.params.resistanceRatio = 0, _.params.slidesPerView = 1, _.params.slidesPerColumn = 1, _.params.slidesPerGroup = 1, _.params.centeredSlides = !1, _.params.spaceBetween = 0, _.params.virtualTranslate = !0), "fade" !== _.params.effect && "flip" !== _.params.effect || (_.params.slidesPerView = 1, _.params.slidesPerColumn = 1, _.params.slidesPerGroup = 1, _.params.watchSlidesProgress = !0, _.params.spaceBetween = 0, void 0 === f && (_.params.virtualTranslate = !0)), _.params.grabCursor && _.support.touch && (_.params.grabCursor = !1), _.wrapper = _.container.children("." + _.params.wrapperClass), _.params.pagination && (_.paginationContainer = e(_.params.pagination), _.params.uniqueNavElements && "string" == typeof _.params.pagination && _.paginationContainer.length > 1 && 1 === _.container.find(_.params.pagination).length && (_.paginationContainer = _.container.find(_.params.pagination)), "bullets" === _.params.paginationType && _.params.paginationClickable ? _.paginationContainer.addClass(_.params.paginationModifierClass + "clickable") : _.params.paginationClickable = !1, _.paginationContainer.addClass(_.params.paginationModifierClass + _.params.paginationType)), (_.params.nextButton || _.params.prevButton) && (_.params.nextButton && (_.nextButton = e(_.params.nextButton), _.params.uniqueNavElements && "string" == typeof _.params.nextButton && _.nextButton.length > 1 && 1 === _.container.find(_.params.nextButton).length && (_.nextButton = _.container.find(_.params.nextButton))), _.params.prevButton && (_.prevButton = e(_.params.prevButton), _.params.uniqueNavElements && "string" == typeof _.params.prevButton && _.prevButton.length > 1 && 1 === _.container.find(_.params.prevButton).length && (_.prevButton = _.container.find(_.params.prevButton)))), _.isHorizontal = function () {
                return "horizontal" === _.params.direction
            }, _.rtl = _.isHorizontal() && ("rtl" === _.container[0].dir.toLowerCase() || "rtl" === _.container.css("direction")), _.rtl && _.classNames.push(_.params.containerModifierClass + "rtl"), _.rtl && (_.wrongRTL = "-webkit-box" === _.wrapper.css("display")), _.params.slidesPerColumn > 1 && _.classNames.push(_.params.containerModifierClass + "multirow"), _.device.android && _.classNames.push(_.params.containerModifierClass + "android"), _.container.addClass(_.classNames.join(" ")), _.translate = 0, _.progress = 0, _.velocity = 0, _.lockSwipeToNext = function () {
                _.params.allowSwipeToNext = !1, !1 === _.params.allowSwipeToPrev && _.params.grabCursor && _.unsetGrabCursor()
            }, _.lockSwipeToPrev = function () {
                _.params.allowSwipeToPrev = !1, !1 === _.params.allowSwipeToNext && _.params.grabCursor && _.unsetGrabCursor()
            }, _.lockSwipes = function () {
                _.params.allowSwipeToNext = _.params.allowSwipeToPrev = !1, _.params.grabCursor && _.unsetGrabCursor()
            }, _.unlockSwipeToNext = function () {
                _.params.allowSwipeToNext = !0, !0 === _.params.allowSwipeToPrev && _.params.grabCursor && _.setGrabCursor()
            }, _.unlockSwipeToPrev = function () {
                _.params.allowSwipeToPrev = !0, !0 === _.params.allowSwipeToNext && _.params.grabCursor && _.setGrabCursor()
            }, _.unlockSwipes = function () {
                _.params.allowSwipeToNext = _.params.allowSwipeToPrev = !0, _.params.grabCursor && _.setGrabCursor()
            }, _.setGrabCursor = function (e) {
                _.container[0].style.cursor = "move", _.container[0].style.cursor = e ? "-webkit-grabbing" : "-webkit-grab", _.container[0].style.cursor = e ? "-moz-grabbin" : "-moz-grab", _.container[0].style.cursor = e ? "grabbing" : "grab"
            }, _.unsetGrabCursor = function () {
                _.container[0].style.cursor = ""
            }, _.params.grabCursor && _.setGrabCursor(), _.imagesToLoad = [], _.imagesLoaded = 0, _.loadImage = function (e, t, n, i, r, o) {
                function a() {
                    o && o()
                }
                var s;
                e.complete && r ? a() : t ? (s = new window.Image, s.onload = a, s.onerror = a, i && (s.sizes = i), n && (s.srcset = n), t && (s.src = t)) : a()
            }, _.preloadImages = function () {
                function e() {
                    null != _ && _ && (void 0 !== _.imagesLoaded && _.imagesLoaded++, _.imagesLoaded === _.imagesToLoad.length && (_.params.updateOnImagesReady && _.update(), _.emit("onImagesReady", _)))
                }
                _.imagesToLoad = _.container.find("img");
                for (var t = 0; t < _.imagesToLoad.length; t++) _.loadImage(_.imagesToLoad[t], _.imagesToLoad[t].currentSrc || _.imagesToLoad[t].getAttribute("src"), _.imagesToLoad[t].srcset || _.imagesToLoad[t].getAttribute("srcset"), _.imagesToLoad[t].sizes || _.imagesToLoad[t].getAttribute("sizes"), !0, e)
            }, _.autoplayTimeoutId = void 0, _.autoplaying = !1, _.autoplayPaused = !1, _.startAutoplay = function () {
                return void 0 === _.autoplayTimeoutId && !!_.params.autoplay && !_.autoplaying && (_.autoplaying = !0, _.emit("onAutoplayStart", _), void o())
            }, _.stopAutoplay = function (e) {
                _.autoplayTimeoutId && (_.autoplayTimeoutId && clearTimeout(_.autoplayTimeoutId), _.autoplaying = !1, _.autoplayTimeoutId = void 0, _.emit("onAutoplayStop", _))
            }, _.pauseAutoplay = function (e) {
                _.autoplayPaused || (_.autoplayTimeoutId && clearTimeout(_.autoplayTimeoutId), _.autoplayPaused = !0, 0 === e ? (_.autoplayPaused = !1, o()) : _.wrapper.transitionEnd(function () {
                    _ && (_.autoplayPaused = !1, _.autoplaying ? o() : _.stopAutoplay())
                }))
            }, _.minTranslate = function () {
                return -_.snapGrid[0]
            }, _.maxTranslate = function () {
                return -_.snapGrid[_.snapGrid.length - 1]
            }, _.updateAutoHeight = function () {
                var e, t = [],
                    n = 0;
                if ("auto" !== _.params.slidesPerView && _.params.slidesPerView > 1)
                    for (e = 0; e < Math.ceil(_.params.slidesPerView); e++) {
                        var i = _.activeIndex + e;
                        if (i > _.slides.length) break;
                        t.push(_.slides.eq(i)[0])
                    } else t.push(_.slides.eq(_.activeIndex)[0]);
                for (e = 0; e < t.length; e++)
                    if (void 0 !== t[e]) {
                        var r = t[e].offsetHeight;
                        n = r > n ? r : n
                    } n && _.wrapper.css("height", n + "px")
            }, _.updateContainerSize = function () {
                var e, t;
                e = void 0 !== _.params.width ? _.params.width : _.container[0].clientWidth, t = void 0 !== _.params.height ? _.params.height : _.container[0].clientHeight, 0 === e && _.isHorizontal() || 0 === t && !_.isHorizontal() || (e = e - parseInt(_.container.css("padding-left"), 10) - parseInt(_.container.css("padding-right"), 10), t = t - parseInt(_.container.css("padding-top"), 10) - parseInt(_.container.css("padding-bottom"), 10), _.width = e, _.height = t, _.size = _.isHorizontal() ? _.width : _.height)
            }, _.updateSlidesSize = function () {
                _.slides = _.wrapper.children("." + _.params.slideClass), _.snapGrid = [], _.slidesGrid = [], _.slidesSizesGrid = [];
                var e, t = _.params.spaceBetween,
                    n = -_.params.slidesOffsetBefore,
                    i = 0,
                    o = 0;
                if (void 0 !== _.size) {
                    var a;
                    "string" == typeof t && t.indexOf("%") >= 0 && (t = parseFloat(t.replace("%", "")) / 100 * _.size), _.virtualSize = -t, _.rtl ? _.slides.css({
                        marginLeft: "",
                        marginTop: ""
                    }) : _.slides.css({
                        marginRight: "",
                        marginBottom: ""
                    }), _.params.slidesPerColumn > 1 && (a = Math.floor(_.slides.length / _.params.slidesPerColumn) === _.slides.length / _.params.slidesPerColumn ? _.slides.length : Math.ceil(_.slides.length / _.params.slidesPerColumn) * _.params.slidesPerColumn, "auto" !== _.params.slidesPerView && "row" === _.params.slidesPerColumnFill && (a = Math.max(a, _.params.slidesPerView * _.params.slidesPerColumn)));
                    var s, l, u = _.params.slidesPerColumn,
                        c = a / u,
                        p = c - (_.params.slidesPerColumn * c - _.slides.length);
                    for (e = 0; e < _.slides.length; e++) {
                        s = 0;
                        var h, d, f, g = _.slides.eq(e);
                        if (_.params.slidesPerColumn > 1) "column" === _.params.slidesPerColumnFill ? (d = Math.floor(e / u), f = e - d * u, (d > p || d === p && f === u - 1) && ++f >= u && (f = 0, d++), h = d + f * a / u, g.css({
                            "-webkit-box-ordinal-group": h,
                            "-moz-box-ordinal-group": h,
                            "-ms-flex-order": h,
                            "-webkit-order": h,
                            order: h
                        })) : (f = Math.floor(e / c), d = e - f * c), g.css("margin-" + (_.isHorizontal() ? "top" : "left"), 0 !== f && _.params.spaceBetween && _.params.spaceBetween + "px").attr("data-swiper-column", d).attr("data-swiper-row", f);
                        "none" !== g.css("display") && ("auto" === _.params.slidesPerView ? (s = _.isHorizontal() ? g.outerWidth(!0) : g.outerHeight(!0), _.params.roundLengths && (s = r(s))) : (s = (_.size - (_.params.slidesPerView - 1) * t) / _.params.slidesPerView, _.params.roundLengths && (s = r(s)), _.isHorizontal() ? _.slides[e].style.width = s + "px" : _.slides[e].style.height = s + "px"), _.slides[e].swiperSlideSize = s, _.slidesSizesGrid.push(s), _.params.centeredSlides ? (n = n + s / 2 + i / 2 + t, 0 === i && 0 !== e && (n = n - _.size / 2 - t), 0 === e && (n = n - _.size / 2 - t), Math.abs(n) < .001 && (n = 0), o % _.params.slidesPerGroup == 0 && _.snapGrid.push(n), _.slidesGrid.push(n)) : (o % _.params.slidesPerGroup == 0 && _.snapGrid.push(n), _.slidesGrid.push(n), n = n + s + t), _.virtualSize += s + t, i = s, o++)
                    }
                    if (_.virtualSize = Math.max(_.virtualSize, _.size) + _.params.slidesOffsetAfter, _.rtl && _.wrongRTL && ("slide" === _.params.effect || "coverflow" === _.params.effect) && _.wrapper.css({
                            width: _.virtualSize + _.params.spaceBetween + "px"
                        }), _.support.flexbox && !_.params.setWrapperSize || (_.isHorizontal() ? _.wrapper.css({
                            width: _.virtualSize + _.params.spaceBetween + "px"
                        }) : _.wrapper.css({
                            height: _.virtualSize + _.params.spaceBetween + "px"
                        })), _.params.slidesPerColumn > 1 && (_.virtualSize = (s + _.params.spaceBetween) * a, _.virtualSize = Math.ceil(_.virtualSize / _.params.slidesPerColumn) - _.params.spaceBetween, _.isHorizontal() ? _.wrapper.css({
                            width: _.virtualSize + _.params.spaceBetween + "px"
                        }) : _.wrapper.css({
                            height: _.virtualSize + _.params.spaceBetween + "px"
                        }), _.params.centeredSlides)) {
                        for (l = [], e = 0; e < _.snapGrid.length; e++) _.snapGrid[e] < _.virtualSize + _.snapGrid[0] && l.push(_.snapGrid[e]);
                        _.snapGrid = l
                    }
                    if (!_.params.centeredSlides) {
                        for (l = [], e = 0; e < _.snapGrid.length; e++) _.snapGrid[e] <= _.virtualSize - _.size && l.push(_.snapGrid[e]);
                        _.snapGrid = l, Math.floor(_.virtualSize - _.size) - Math.floor(_.snapGrid[_.snapGrid.length - 1]) > 1 && _.snapGrid.push(_.virtualSize - _.size)
                    }
                    0 === _.snapGrid.length && (_.snapGrid = [0]), 0 !== _.params.spaceBetween && (_.isHorizontal() ? _.rtl ? _.slides.css({
                        marginLeft: t + "px"
                    }) : _.slides.css({
                        marginRight: t + "px"
                    }) : _.slides.css({
                        marginBottom: t + "px"
                    })), _.params.watchSlidesProgress && _.updateSlidesOffset()
                }
            }, _.updateSlidesOffset = function () {
                for (var e = 0; e < _.slides.length; e++) _.slides[e].swiperSlideOffset = _.isHorizontal() ? _.slides[e].offsetLeft : _.slides[e].offsetTop
            }, _.currentSlidesPerView = function () {
                var e, t, n = 1;
                if (_.params.centeredSlides) {
                    var i, r = _.slides[_.activeIndex].swiperSlideSize;
                    for (e = _.activeIndex + 1; e < _.slides.length; e++) _.slides[e] && !i && (r += _.slides[e].swiperSlideSize, n++, r > _.size && (i = !0));
                    for (t = _.activeIndex - 1; t >= 0; t--) _.slides[t] && !i && (r += _.slides[t].swiperSlideSize, n++, r > _.size && (i = !0))
                } else
                    for (e = _.activeIndex + 1; e < _.slides.length; e++) _.slidesGrid[e] - _.slidesGrid[_.activeIndex] < _.size && n++;
                return n
            }, _.updateSlidesProgress = function (e) {
                if (void 0 === e && (e = _.translate || 0), 0 !== _.slides.length) {
                    void 0 === _.slides[0].swiperSlideOffset && _.updateSlidesOffset();
                    var t = -e;
                    _.rtl && (t = e), _.slides.removeClass(_.params.slideVisibleClass);
                    for (var n = 0; n < _.slides.length; n++) {
                        var i = _.slides[n],
                            r = (t + (_.params.centeredSlides ? _.minTranslate() : 0) - i.swiperSlideOffset) / (i.swiperSlideSize + _.params.spaceBetween);
                        if (_.params.watchSlidesVisibility) {
                            var o = -(t - i.swiperSlideOffset),
                                a = o + _.slidesSizesGrid[n];
                            (o >= 0 && o < _.size || a > 0 && a <= _.size || o <= 0 && a >= _.size) && _.slides.eq(n).addClass(_.params.slideVisibleClass)
                        }
                        i.progress = _.rtl ? -r : r
                    }
                }
            }, _.updateProgress = function (e) {
                void 0 === e && (e = _.translate || 0);
                var t = _.maxTranslate() - _.minTranslate(),
                    n = _.isBeginning,
                    i = _.isEnd;
                0 === t ? (_.progress = 0, _.isBeginning = _.isEnd = !0) : (_.progress = (e - _.minTranslate()) / t, _.isBeginning = _.progress <= 0, _.isEnd = _.progress >= 1), _.isBeginning && !n && _.emit("onReachBeginning", _), _.isEnd && !i && _.emit("onReachEnd", _), _.params.watchSlidesProgress && _.updateSlidesProgress(e), _.emit("onProgress", _, _.progress)
            }, _.updateActiveIndex = function () {
                var e, t, n, i = _.rtl ? _.translate : -_.translate;
                for (t = 0; t < _.slidesGrid.length; t++) void 0 !== _.slidesGrid[t + 1] ? i >= _.slidesGrid[t] && i < _.slidesGrid[t + 1] - (_.slidesGrid[t + 1] - _.slidesGrid[t]) / 2 ? e = t : i >= _.slidesGrid[t] && i < _.slidesGrid[t + 1] && (e = t + 1) : i >= _.slidesGrid[t] && (e = t);
                _.params.normalizeSlideIndex && (e < 0 || void 0 === e) && (e = 0), n = Math.floor(e / _.params.slidesPerGroup), n >= _.snapGrid.length && (n = _.snapGrid.length - 1), e !== _.activeIndex && (_.snapIndex = n, _.previousIndex = _.activeIndex, _.activeIndex = e, _.updateClasses(), _.updateRealIndex())
            }, _.updateRealIndex = function () {
                _.realIndex = parseInt(_.slides.eq(_.activeIndex).attr("data-swiper-slide-index") || _.activeIndex, 10)
            }, _.updateClasses = function () {
                _.slides.removeClass(_.params.slideActiveClass + " " + _.params.slideNextClass + " " + _.params.slidePrevClass + " " + _.params.slideDuplicateActiveClass + " " + _.params.slideDuplicateNextClass + " " + _.params.slideDuplicatePrevClass);
                var t = _.slides.eq(_.activeIndex);
                t.addClass(_.params.slideActiveClass), i.loop && (t.hasClass(_.params.slideDuplicateClass) ? _.wrapper.children("." + _.params.slideClass + ":not(." + _.params.slideDuplicateClass + ')[data-swiper-slide-index="' + _.realIndex + '"]').addClass(_.params.slideDuplicateActiveClass) : _.wrapper.children("." + _.params.slideClass + "." + _.params.slideDuplicateClass + '[data-swiper-slide-index="' + _.realIndex + '"]').addClass(_.params.slideDuplicateActiveClass));
                var n = t.next("." + _.params.slideClass).addClass(_.params.slideNextClass);
                _.params.loop && 0 === n.length && (n = _.slides.eq(0), n.addClass(_.params.slideNextClass));
                var r = t.prev("." + _.params.slideClass).addClass(_.params.slidePrevClass);
                if (_.params.loop && 0 === r.length && (r = _.slides.eq(-1), r.addClass(_.params.slidePrevClass)), i.loop && (n.hasClass(_.params.slideDuplicateClass) ? _.wrapper.children("." + _.params.slideClass + ":not(." + _.params.slideDuplicateClass + ')[data-swiper-slide-index="' + n.attr("data-swiper-slide-index") + '"]').addClass(_.params.slideDuplicateNextClass) : _.wrapper.children("." + _.params.slideClass + "." + _.params.slideDuplicateClass + '[data-swiper-slide-index="' + n.attr("data-swiper-slide-index") + '"]').addClass(_.params.slideDuplicateNextClass), r.hasClass(_.params.slideDuplicateClass) ? _.wrapper.children("." + _.params.slideClass + ":not(." + _.params.slideDuplicateClass + ')[data-swiper-slide-index="' + r.attr("data-swiper-slide-index") + '"]').addClass(_.params.slideDuplicatePrevClass) : _.wrapper.children("." + _.params.slideClass + "." + _.params.slideDuplicateClass + '[data-swiper-slide-index="' + r.attr("data-swiper-slide-index") + '"]').addClass(_.params.slideDuplicatePrevClass)), _.paginationContainer && _.paginationContainer.length > 0) {
                    var o, a = _.params.loop ? Math.ceil((_.slides.length - 2 * _.loopedSlides) / _.params.slidesPerGroup) : _.snapGrid.length;
                    if (_.params.loop ? (o = Math.ceil((_.activeIndex - _.loopedSlides) / _.params.slidesPerGroup), o > _.slides.length - 1 - 2 * _.loopedSlides && (o -= _.slides.length - 2 * _.loopedSlides), o > a - 1 && (o -= a), o < 0 && "bullets" !== _.params.paginationType && (o = a + o)) : o = void 0 !== _.snapIndex ? _.snapIndex : _.activeIndex || 0, "bullets" === _.params.paginationType && _.bullets && _.bullets.length > 0 && (_.bullets.removeClass(_.params.bulletActiveClass), _.paginationContainer.length > 1 ? _.bullets.each(function () {
                            e(this).index() === o && e(this).addClass(_.params.bulletActiveClass)
                        }) : _.bullets.eq(o).addClass(_.params.bulletActiveClass)), "fraction" === _.params.paginationType && (_.paginationContainer.find("." + _.params.paginationCurrentClass).text(o + 1), _.paginationContainer.find("." + _.params.paginationTotalClass).text(a)), "progress" === _.params.paginationType) {
                        var s = (o + 1) / a,
                            l = s,
                            u = 1;
                        _.isHorizontal() || (u = s, l = 1), _.paginationContainer.find("." + _.params.paginationProgressbarClass).transform("translate3d(0,0,0) scaleX(" + l + ") scaleY(" + u + ")").transition(_.params.speed)
                    }
                    "custom" === _.params.paginationType && _.params.paginationCustomRender && (_.paginationContainer.html(_.params.paginationCustomRender(_, o + 1, a)), _.emit("onPaginationRendered", _, _.paginationContainer[0]))
                }
                _.params.loop || (_.params.prevButton && _.prevButton && _.prevButton.length > 0 && (_.isBeginning ? (_.prevButton.addClass(_.params.buttonDisabledClass), _.params.a11y && _.a11y && _.a11y.disable(_.prevButton)) : (_.prevButton.removeClass(_.params.buttonDisabledClass), _.params.a11y && _.a11y && _.a11y.enable(_.prevButton))), _.params.nextButton && _.nextButton && _.nextButton.length > 0 && (_.isEnd ? (_.nextButton.addClass(_.params.buttonDisabledClass), _.params.a11y && _.a11y && _.a11y.disable(_.nextButton)) : (_.nextButton.removeClass(_.params.buttonDisabledClass), _.params.a11y && _.a11y && _.a11y.enable(_.nextButton))))
            }, _.updatePagination = function () {
                if (_.params.pagination && _.paginationContainer && _.paginationContainer.length > 0) {
                    var e = "";
                    if ("bullets" === _.params.paginationType) {
                        for (var t = _.params.loop ? Math.ceil((_.slides.length - 2 * _.loopedSlides) / _.params.slidesPerGroup) : _.snapGrid.length, n = 0; n < t; n++) e += _.params.paginationBulletRender ? _.params.paginationBulletRender(_, n, _.params.bulletClass) : "<" + _.params.paginationElement + ' class="' + _.params.bulletClass + '"></' + _.params.paginationElement + ">";
                        _.paginationContainer.html(e), _.bullets = _.paginationContainer.find("." + _.params.bulletClass), _.params.paginationClickable && _.params.a11y && _.a11y && _.a11y.initPagination()
                    }
                    "fraction" === _.params.paginationType && (e = _.params.paginationFractionRender ? _.params.paginationFractionRender(_, _.params.paginationCurrentClass, _.params.paginationTotalClass) : '<span class="' + _.params.paginationCurrentClass + '"></span> / <span class="' + _.params.paginationTotalClass + '"></span>', _.paginationContainer.html(e)), "progress" === _.params.paginationType && (e = _.params.paginationProgressRender ? _.params.paginationProgressRender(_, _.params.paginationProgressbarClass) : '<span class="' + _.params.paginationProgressbarClass + '"></span>', _.paginationContainer.html(e)), "custom" !== _.params.paginationType && _.emit("onPaginationRendered", _, _.paginationContainer[0])
                }
            }, _.update = function (e) {
                function t() {
                    _.rtl, _.translate, n = Math.min(Math.max(_.translate, _.maxTranslate()), _.minTranslate()), _.setWrapperTranslate(n), _.updateActiveIndex(), _.updateClasses()
                }
                var n;
                _ && (_.updateContainerSize(), _.updateSlidesSize(), _.updateProgress(), _.updatePagination(), _.updateClasses(), _.params.scrollbar && _.scrollbar && _.scrollbar.set(), e ? (_.controller && _.controller.spline && (_.controller.spline = void 0), _.params.freeMode ? (t(), _.params.autoHeight && _.updateAutoHeight()) : (("auto" === _.params.slidesPerView || _.params.slidesPerView > 1) && _.isEnd && !_.params.centeredSlides ? _.slideTo(_.slides.length - 1, 0, !1, !0) : _.slideTo(_.activeIndex, 0, !1, !0)) || t()) : _.params.autoHeight && _.updateAutoHeight())
            }, _.onResize = function (e) {
                _.params.onBeforeResize && _.params.onBeforeResize(_), _.params.breakpoints && _.setBreakpoint();
                var t = _.params.allowSwipeToPrev,
                    n = _.params.allowSwipeToNext;
                _.params.allowSwipeToPrev = _.params.allowSwipeToNext = !0, _.updateContainerSize(), _.updateSlidesSize(), ("auto" === _.params.slidesPerView || _.params.freeMode || e) && _.updatePagination(), _.params.scrollbar && _.scrollbar && _.scrollbar.set(), _.controller && _.controller.spline && (_.controller.spline = void 0);
                var i = !1;
                if (_.params.freeMode) {
                    var r = Math.min(Math.max(_.translate, _.maxTranslate()), _.minTranslate());
                    _.setWrapperTranslate(r), _.updateActiveIndex(), _.updateClasses(), _.params.autoHeight && _.updateAutoHeight()
                } else _.updateClasses(), i = ("auto" === _.params.slidesPerView || _.params.slidesPerView > 1) && _.isEnd && !_.params.centeredSlides ? _.slideTo(_.slides.length - 1, 0, !1, !0) : _.slideTo(_.activeIndex, 0, !1, !0);
                _.params.lazyLoading && !i && _.lazy && _.lazy.load(), _.params.allowSwipeToPrev = t, _.params.allowSwipeToNext = n, _.params.onAfterResize && _.params.onAfterResize(_)
            }, _.touchEventsDesktop = {
                start: "mousedown",
                move: "mousemove",
                end: "mouseup"
            }, window.navigator.pointerEnabled ? _.touchEventsDesktop = {
                start: "pointerdown",
                move: "pointermove",
                end: "pointerup"
            } : window.navigator.msPointerEnabled && (_.touchEventsDesktop = {
                start: "MSPointerDown",
                move: "MSPointerMove",
                end: "MSPointerUp"
            }), _.touchEvents = {
                start: _.support.touch || !_.params.simulateTouch ? "touchstart" : _.touchEventsDesktop.start,
                move: _.support.touch || !_.params.simulateTouch ? "touchmove" : _.touchEventsDesktop.move,
                end: _.support.touch || !_.params.simulateTouch ? "touchend" : _.touchEventsDesktop.end
            }, (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) && ("container" === _.params.touchEventsTarget ? _.container : _.wrapper).addClass("swiper-wp8-" + _.params.direction), _.initEvents = function (e) {
                var t = e ? "off" : "on",
                    n = e ? "removeEventListener" : "addEventListener",
                    r = "container" === _.params.touchEventsTarget ? _.container[0] : _.wrapper[0],
                    o = _.support.touch ? r : document,
                    a = !!_.params.nested;
                if (_.browser.ie) r[n](_.touchEvents.start, _.onTouchStart, !1), o[n](_.touchEvents.move, _.onTouchMove, a), o[n](_.touchEvents.end, _.onTouchEnd, !1);
                else {
                    if (_.support.touch) {
                        var s = !("touchstart" !== _.touchEvents.start || !_.support.passiveListener || !_.params.passiveListeners) && {
                            passive: !0,
                            capture: !1
                        };
                        r[n](_.touchEvents.start, _.onTouchStart, s), r[n](_.touchEvents.move, _.onTouchMove, a), r[n](_.touchEvents.end, _.onTouchEnd, s)
                    }(i.simulateTouch && !_.device.ios && !_.device.android || i.simulateTouch && !_.support.touch && _.device.ios) && (r[n]("mousedown", _.onTouchStart, !1), document[n]("mousemove", _.onTouchMove, a), document[n]("mouseup", _.onTouchEnd, !1))
                }
                window[n]("resize", _.onResize), _.params.nextButton && _.nextButton && _.nextButton.length > 0 && (_.nextButton[t]("click", _.onClickNext), _.params.a11y && _.a11y && _.nextButton[t]("keydown", _.a11y.onEnterKey)), _.params.prevButton && _.prevButton && _.prevButton.length > 0 && (_.prevButton[t]("click", _.onClickPrev), _.params.a11y && _.a11y && _.prevButton[t]("keydown", _.a11y.onEnterKey)), _.params.pagination && _.params.paginationClickable && (_.paginationContainer[t]("click", "." + _.params.bulletClass, _.onClickIndex), _.params.a11y && _.a11y && _.paginationContainer[t]("keydown", "." + _.params.bulletClass, _.a11y.onEnterKey)), (_.params.preventClicks || _.params.preventClicksPropagation) && r[n]("click", _.preventClicks, !0)
            }, _.attachEvents = function () {
                _.initEvents()
            }, _.detachEvents = function () {
                _.initEvents(!0)
            }, _.allowClick = !0, _.preventClicks = function (e) {
                _.allowClick || (_.params.preventClicks && e.preventDefault(), _.params.preventClicksPropagation && _.animating && (e.stopPropagation(), e.stopImmediatePropagation()))
            }, _.onClickNext = function (e) {
                e.preventDefault(), _.isEnd && !_.params.loop || _.slideNext()
            }, _.onClickPrev = function (e) {
                e.preventDefault(), _.isBeginning && !_.params.loop || _.slidePrev()
            }, _.onClickIndex = function (t) {
                t.preventDefault();
                var n = e(this).index() * _.params.slidesPerGroup;
                _.params.loop && (n += _.loopedSlides), _.slideTo(n)
            }, _.updateClickedSlide = function (t) {
                var n = a(t, "." + _.params.slideClass),
                    i = !1;
                if (n)
                    for (var r = 0; r < _.slides.length; r++) _.slides[r] === n && (i = !0);
                if (!n || !i) return _.clickedSlide = void 0, void(_.clickedIndex = void 0);
                if (_.clickedSlide = n, _.clickedIndex = e(n).index(), _.params.slideToClickedSlide && void 0 !== _.clickedIndex && _.clickedIndex !== _.activeIndex) {
                    var o, s = _.clickedIndex,
                        l = "auto" === _.params.slidesPerView ? _.currentSlidesPerView() : _.params.slidesPerView;
                    if (_.params.loop) {
                        if (_.animating) return;
                        o = parseInt(e(_.clickedSlide).attr("data-swiper-slide-index"), 10), _.params.centeredSlides ? s < _.loopedSlides - l / 2 || s > _.slides.length - _.loopedSlides + l / 2 ? (_.fixLoop(), s = _.wrapper.children("." + _.params.slideClass + '[data-swiper-slide-index="' + o + '"]:not(.' + _.params.slideDuplicateClass + ")").eq(0).index(), setTimeout(function () {
                            _.slideTo(s)
                        }, 0)) : _.slideTo(s) : s > _.slides.length - l ? (_.fixLoop(), s = _.wrapper.children("." + _.params.slideClass + '[data-swiper-slide-index="' + o + '"]:not(.' + _.params.slideDuplicateClass + ")").eq(0).index(), setTimeout(function () {
                            _.slideTo(s)
                        }, 0)) : _.slideTo(s)
                    } else _.slideTo(s)
                }
            };
            var b, S, T, C, M, I, k, D, A, P, L, N, O = "input, select, textarea, button, video",
                E = Date.now(),
                R = [];
            for (var z in _.animating = !1, _.touches = {
                    startX: 0,
                    startY: 0,
                    currentX: 0,
                    currentY: 0,
                    diff: 0
                }, _.onTouchStart = function (t) {
                    if (t.originalEvent && (t = t.originalEvent), (L = "touchstart" === t.type) || !("which" in t) || 3 !== t.which) {
                        if (_.params.noSwiping && a(t, "." + _.params.noSwipingClass)) return void(_.allowClick = !0);
                        if (!_.params.swipeHandler || a(t, _.params.swipeHandler)) {
                            var n = _.touches.currentX = "touchstart" === t.type ? t.targetTouches[0].pageX : t.pageX,
                                i = _.touches.currentY = "touchstart" === t.type ? t.targetTouches[0].pageY : t.pageY;
                            if (!(_.device.ios && _.params.iOSEdgeSwipeDetection && n <= _.params.iOSEdgeSwipeThreshold)) {
                                if (b = !0, S = !1, T = !0, M = void 0, N = void 0, _.touches.startX = n, _.touches.startY = i, C = Date.now(), _.allowClick = !0, _.updateContainerSize(), _.swipeDirection = void 0, _.params.threshold > 0 && (D = !1), "touchstart" !== t.type) {
                                    var r = !0;
                                    e(t.target).is(O) && (r = !1),
                                        document.activeElement && e(document.activeElement).is(O) && document.activeElement.blur(), r && t.preventDefault()
                                }
                                _.emit("onTouchStart", _, t)
                            }
                        }
                    }
                }, _.onTouchMove = function (t) {
                    if (t.originalEvent && (t = t.originalEvent), !L || "mousemove" !== t.type) {
                        if (t.preventedByNestedSwiper) return _.touches.startX = "touchmove" === t.type ? t.targetTouches[0].pageX : t.pageX, void(_.touches.startY = "touchmove" === t.type ? t.targetTouches[0].pageY : t.pageY);
                        if (_.params.onlyExternal) return _.allowClick = !1, void(b && (_.touches.startX = _.touches.currentX = "touchmove" === t.type ? t.targetTouches[0].pageX : t.pageX, _.touches.startY = _.touches.currentY = "touchmove" === t.type ? t.targetTouches[0].pageY : t.pageY, C = Date.now()));
                        if (L && _.params.touchReleaseOnEdges && !_.params.loop)
                            if (_.isHorizontal()) {
                                if (_.touches.currentX < _.touches.startX && _.translate <= _.maxTranslate() || _.touches.currentX > _.touches.startX && _.translate >= _.minTranslate()) return
                            } else if (_.touches.currentY < _.touches.startY && _.translate <= _.maxTranslate() || _.touches.currentY > _.touches.startY && _.translate >= _.minTranslate()) return;
                        if (L && document.activeElement && t.target === document.activeElement && e(t.target).is(O)) return S = !0, void(_.allowClick = !1);
                        if (T && _.emit("onTouchMove", _, t), !(t.targetTouches && t.targetTouches.length > 1)) {
                            var n;
                            if (_.touches.currentX = "touchmove" === t.type ? t.targetTouches[0].pageX : t.pageX, _.touches.currentY = "touchmove" === t.type ? t.targetTouches[0].pageY : t.pageY, void 0 === M) _.isHorizontal() && _.touches.currentY === _.touches.startY || !_.isHorizontal() && _.touches.currentX === _.touches.startX ? M = !1 : (n = 180 * Math.atan2(Math.abs(_.touches.currentY - _.touches.startY), Math.abs(_.touches.currentX - _.touches.startX)) / Math.PI, M = _.isHorizontal() ? n > _.params.touchAngle : 90 - n > _.params.touchAngle);
                            if (M && _.emit("onTouchMoveOpposite", _, t), void 0 === N && (_.touches.currentX === _.touches.startX && _.touches.currentY === _.touches.startY || (N = !0)), b) {
                                if (M) return void(b = !1);
                                if (N) {
                                    _.allowClick = !1, _.emit("onSliderMove", _, t), t.preventDefault(), _.params.touchMoveStopPropagation && !_.params.nested && t.stopPropagation(), S || (i.loop && _.fixLoop(), k = _.getWrapperTranslate(), _.setWrapperTransition(0), _.animating && _.wrapper.trigger("webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd"), _.params.autoplay && _.autoplaying && (_.params.autoplayDisableOnInteraction ? _.stopAutoplay() : _.pauseAutoplay()), P = !1, !_.params.grabCursor || !0 !== _.params.allowSwipeToNext && !0 !== _.params.allowSwipeToPrev || _.setGrabCursor(!0)), S = !0;
                                    var r = _.touches.diff = _.isHorizontal() ? _.touches.currentX - _.touches.startX : _.touches.currentY - _.touches.startY;
                                    r *= _.params.touchRatio, _.rtl && (r = -r), _.swipeDirection = r > 0 ? "prev" : "next", I = r + k;
                                    var o = !0;
                                    if (r > 0 && I > _.minTranslate() ? (o = !1, _.params.resistance && (I = _.minTranslate() - 1 + Math.pow(-_.minTranslate() + k + r, _.params.resistanceRatio))) : r < 0 && I < _.maxTranslate() && (o = !1, _.params.resistance && (I = _.maxTranslate() + 1 - Math.pow(_.maxTranslate() - k - r, _.params.resistanceRatio))), o && (t.preventedByNestedSwiper = !0), !_.params.allowSwipeToNext && "next" === _.swipeDirection && I < k && (I = k), !_.params.allowSwipeToPrev && "prev" === _.swipeDirection && I > k && (I = k), _.params.threshold > 0) {
                                        if (!(Math.abs(r) > _.params.threshold || D)) return void(I = k);
                                        if (!D) return D = !0, _.touches.startX = _.touches.currentX, _.touches.startY = _.touches.currentY, I = k, void(_.touches.diff = _.isHorizontal() ? _.touches.currentX - _.touches.startX : _.touches.currentY - _.touches.startY)
                                    }
                                    _.params.followFinger && ((_.params.freeMode || _.params.watchSlidesProgress) && _.updateActiveIndex(), _.params.freeMode && (0 === R.length && R.push({
                                        position: _.touches[_.isHorizontal() ? "startX" : "startY"],
                                        time: C
                                    }), R.push({
                                        position: _.touches[_.isHorizontal() ? "currentX" : "currentY"],
                                        time: (new window.Date).getTime()
                                    })), _.updateProgress(I), _.setWrapperTranslate(I))
                                }
                            }
                        }
                    }
                }, _.onTouchEnd = function (t) {
                    if (t.originalEvent && (t = t.originalEvent), T && _.emit("onTouchEnd", _, t), T = !1, b) {
                        _.params.grabCursor && S && b && (!0 === _.params.allowSwipeToNext || !0 === _.params.allowSwipeToPrev) && _.setGrabCursor(!1);
                        var n, i = Date.now(),
                            r = i - C;
                        if (_.allowClick && (_.updateClickedSlide(t), _.emit("onTap", _, t), r < 300 && i - E > 300 && (A && clearTimeout(A), A = setTimeout(function () {
                                _ && (_.params.paginationHide && _.paginationContainer.length > 0 && !e(t.target).hasClass(_.params.bulletClass) && _.paginationContainer.toggleClass(_.params.paginationHiddenClass), _.emit("onClick", _, t))
                            }, 300)), r < 300 && i - E < 300 && (A && clearTimeout(A), _.emit("onDoubleTap", _, t))), E = Date.now(), setTimeout(function () {
                                _ && (_.allowClick = !0)
                            }, 0), !b || !S || !_.swipeDirection || 0 === _.touches.diff || I === k) return void(b = S = !1);
                        if (b = S = !1, n = _.params.followFinger ? _.rtl ? _.translate : -_.translate : -I, _.params.freeMode) {
                            if (n < -_.minTranslate()) return void _.slideTo(_.activeIndex);
                            if (n > -_.maxTranslate()) return void(_.slides.length < _.snapGrid.length ? _.slideTo(_.snapGrid.length - 1) : _.slideTo(_.slides.length - 1));
                            if (_.params.freeModeMomentum) {
                                if (R.length > 1) {
                                    var o = R.pop(),
                                        a = R.pop(),
                                        s = o.position - a.position,
                                        l = o.time - a.time;
                                    _.velocity = s / l, _.velocity = _.velocity / 2, Math.abs(_.velocity) < _.params.freeModeMinimumVelocity && (_.velocity = 0), (l > 150 || (new window.Date).getTime() - o.time > 300) && (_.velocity = 0)
                                } else _.velocity = 0;
                                _.velocity = _.velocity * _.params.freeModeMomentumVelocityRatio, R.length = 0;
                                var u = 1e3 * _.params.freeModeMomentumRatio,
                                    c = _.velocity * u,
                                    p = _.translate + c;
                                _.rtl && (p = -p);
                                var h, d = !1,
                                    f = 20 * Math.abs(_.velocity) * _.params.freeModeMomentumBounceRatio;
                                if (p < _.maxTranslate()) _.params.freeModeMomentumBounce ? (p + _.maxTranslate() < -f && (p = _.maxTranslate() - f), h = _.maxTranslate(), d = !0, P = !0) : p = _.maxTranslate();
                                else if (p > _.minTranslate()) _.params.freeModeMomentumBounce ? (p - _.minTranslate() > f && (p = _.minTranslate() + f), h = _.minTranslate(), d = !0, P = !0) : p = _.minTranslate();
                                else if (_.params.freeModeSticky) {
                                    var g, m = 0;
                                    for (m = 0; m < _.snapGrid.length; m += 1)
                                        if (_.snapGrid[m] > -p) {
                                            g = m;
                                            break
                                        } p = Math.abs(_.snapGrid[g] - p) < Math.abs(_.snapGrid[g - 1] - p) || "next" === _.swipeDirection ? _.snapGrid[g] : _.snapGrid[g - 1], _.rtl || (p = -p)
                                }
                                if (0 !== _.velocity) u = _.rtl ? Math.abs((-p - _.translate) / _.velocity) : Math.abs((p - _.translate) / _.velocity);
                                else if (_.params.freeModeSticky) return void _.slideReset();
                                _.params.freeModeMomentumBounce && d ? (_.updateProgress(h), _.setWrapperTransition(u), _.setWrapperTranslate(p), _.onTransitionStart(), _.animating = !0, _.wrapper.transitionEnd(function () {
                                    _ && P && (_.emit("onMomentumBounce", _), _.setWrapperTransition(_.params.speed), _.setWrapperTranslate(h), _.wrapper.transitionEnd(function () {
                                        _ && _.onTransitionEnd()
                                    }))
                                })) : _.velocity ? (_.updateProgress(p), _.setWrapperTransition(u), _.setWrapperTranslate(p), _.onTransitionStart(), _.animating || (_.animating = !0, _.wrapper.transitionEnd(function () {
                                    _ && _.onTransitionEnd()
                                }))) : _.updateProgress(p), _.updateActiveIndex()
                            }
                            return void((!_.params.freeModeMomentum || r >= _.params.longSwipesMs) && (_.updateProgress(), _.updateActiveIndex()))
                        }
                        var y, v = 0,
                            x = _.slidesSizesGrid[0];
                        for (y = 0; y < _.slidesGrid.length; y += _.params.slidesPerGroup) void 0 !== _.slidesGrid[y + _.params.slidesPerGroup] ? n >= _.slidesGrid[y] && n < _.slidesGrid[y + _.params.slidesPerGroup] && (v = y, x = _.slidesGrid[y + _.params.slidesPerGroup] - _.slidesGrid[y]) : n >= _.slidesGrid[y] && (v = y, x = _.slidesGrid[_.slidesGrid.length - 1] - _.slidesGrid[_.slidesGrid.length - 2]);
                        var w = (n - _.slidesGrid[v]) / x;
                        if (r > _.params.longSwipesMs) {
                            if (!_.params.longSwipes) return void _.slideTo(_.activeIndex);
                            "next" === _.swipeDirection && (w >= _.params.longSwipesRatio ? _.slideTo(v + _.params.slidesPerGroup) : _.slideTo(v)), "prev" === _.swipeDirection && (w > 1 - _.params.longSwipesRatio ? _.slideTo(v + _.params.slidesPerGroup) : _.slideTo(v))
                        } else {
                            if (!_.params.shortSwipes) return void _.slideTo(_.activeIndex);
                            "next" === _.swipeDirection && _.slideTo(v + _.params.slidesPerGroup), "prev" === _.swipeDirection && _.slideTo(v)
                        }
                    }
                }, _._slideTo = function (e, t) {
                    return _.slideTo(e, t, !0, !0)
                }, _.slideTo = function (e, t, n, i) {
                    void 0 === n && (n = !0), void 0 === e && (e = 0), e < 0 && (e = 0), _.snapIndex = Math.floor(e / _.params.slidesPerGroup), _.snapIndex >= _.snapGrid.length && (_.snapIndex = _.snapGrid.length - 1);
                    var r = -_.snapGrid[_.snapIndex];
                    if (_.params.autoplay && _.autoplaying && (i || !_.params.autoplayDisableOnInteraction ? _.pauseAutoplay(t) : _.stopAutoplay()), _.updateProgress(r), _.params.normalizeSlideIndex)
                        for (var o = 0; o < _.slidesGrid.length; o++) - Math.floor(100 * r) >= Math.floor(100 * _.slidesGrid[o]) && (e = o);
                    return !(!_.params.allowSwipeToNext && r < _.translate && r < _.minTranslate() || !_.params.allowSwipeToPrev && r > _.translate && r > _.maxTranslate() && (_.activeIndex || 0) !== e || (void 0 === t && (t = _.params.speed), _.previousIndex = _.activeIndex || 0, _.activeIndex = e, _.updateRealIndex(), _.rtl && -r === _.translate || !_.rtl && r === _.translate ? (_.params.autoHeight && _.updateAutoHeight(), _.updateClasses(), "slide" !== _.params.effect && _.setWrapperTranslate(r), 1) : (_.updateClasses(), _.onTransitionStart(n), 0 === t || _.browser.lteIE9 ? (_.setWrapperTranslate(r), _.setWrapperTransition(0), _.onTransitionEnd(n)) : (_.setWrapperTranslate(r), _.setWrapperTransition(t), _.animating || (_.animating = !0, _.wrapper.transitionEnd(function () {
                        _ && _.onTransitionEnd(n)
                    }))), 0)))
                }, _.onTransitionStart = function (e) {
                    void 0 === e && (e = !0), _.params.autoHeight && _.updateAutoHeight(), _.lazy && _.lazy.onTransitionStart(), e && (_.emit("onTransitionStart", _), _.activeIndex !== _.previousIndex && (_.emit("onSlideChangeStart", _), _.activeIndex > _.previousIndex ? _.emit("onSlideNextStart", _) : _.emit("onSlidePrevStart", _)))
                }, _.onTransitionEnd = function (e) {
                    _.animating = !1, _.setWrapperTransition(0), void 0 === e && (e = !0), _.lazy && _.lazy.onTransitionEnd(), e && (_.emit("onTransitionEnd", _), _.activeIndex !== _.previousIndex && (_.emit("onSlideChangeEnd", _), _.activeIndex > _.previousIndex ? _.emit("onSlideNextEnd", _) : _.emit("onSlidePrevEnd", _))), _.params.history && _.history && _.history.setHistory(_.params.history, _.activeIndex), _.params.hashnav && _.hashnav && _.hashnav.setHash()
                }, _.slideNext = function (e, t, n) {
                    return _.params.loop ? !_.animating && (_.fixLoop(), _.container[0].clientLeft, _.slideTo(_.activeIndex + _.params.slidesPerGroup, t, e, n)) : _.slideTo(_.activeIndex + _.params.slidesPerGroup, t, e, n)
                }, _._slideNext = function (e) {
                    return _.slideNext(!0, e, !0)
                }, _.slidePrev = function (e, t, n) {
                    return _.params.loop ? !_.animating && (_.fixLoop(), _.container[0].clientLeft, _.slideTo(_.activeIndex - 1, t, e, n)) : _.slideTo(_.activeIndex - 1, t, e, n)
                }, _._slidePrev = function (e) {
                    return _.slidePrev(!0, e, !0)
                }, _.slideReset = function (e, t, n) {
                    return _.slideTo(_.activeIndex, t, e)
                }, _.disableTouchControl = function () {
                    return _.params.onlyExternal = !0, !0
                }, _.enableTouchControl = function () {
                    return _.params.onlyExternal = !1, !0
                }, _.setWrapperTransition = function (e, t) {
                    _.wrapper.transition(e), "slide" !== _.params.effect && _.effects[_.params.effect] && _.effects[_.params.effect].setTransition(e), _.params.parallax && _.parallax && _.parallax.setTransition(e), _.params.scrollbar && _.scrollbar && _.scrollbar.setTransition(e), _.params.control && _.controller && _.controller.setTransition(e, t), _.emit("onSetTransition", _, e)
                }, _.setWrapperTranslate = function (e, t, n) {
                    var i = 0,
                        o = 0;
                    _.isHorizontal() ? i = _.rtl ? -e : e : o = e, _.params.roundLengths && (i = r(i), o = r(o)), _.params.virtualTranslate || (_.support.transforms3d ? _.wrapper.transform("translate3d(" + i + "px, " + o + "px, 0px)") : _.wrapper.transform("translate(" + i + "px, " + o + "px)")), _.translate = _.isHorizontal() ? i : o;
                    var a, s = _.maxTranslate() - _.minTranslate();
                    a = 0 === s ? 0 : (e - _.minTranslate()) / s, a !== _.progress && _.updateProgress(e), t && _.updateActiveIndex(), "slide" !== _.params.effect && _.effects[_.params.effect] && _.effects[_.params.effect].setTranslate(_.translate), _.params.parallax && _.parallax && _.parallax.setTranslate(_.translate), _.params.scrollbar && _.scrollbar && _.scrollbar.setTranslate(_.translate), _.params.control && _.controller && _.controller.setTranslate(_.translate, n), _.emit("onSetTranslate", _, _.translate)
                }, _.getTranslate = function (e, t) {
                    var n, i, r, o;
                    return void 0 === t && (t = "x"), _.params.virtualTranslate ? _.rtl ? -_.translate : _.translate : (r = window.getComputedStyle(e, null), window.WebKitCSSMatrix ? (i = r.transform || r.webkitTransform, i.split(",").length > 6 && (i = i.split(", ").map(function (e) {
                        return e.replace(",", ".")
                    }).join(", ")), o = new window.WebKitCSSMatrix("none" === i ? "" : i)) : (o = r.MozTransform || r.OTransform || r.MsTransform || r.msTransform || r.transform || r.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,"), n = o.toString().split(",")), "x" === t && (i = window.WebKitCSSMatrix ? o.m41 : 16 === n.length ? parseFloat(n[12]) : parseFloat(n[4])), "y" === t && (i = window.WebKitCSSMatrix ? o.m42 : 16 === n.length ? parseFloat(n[13]) : parseFloat(n[5])), _.rtl && i && (i = -i), i || 0)
                }, _.getWrapperTranslate = function (e) {
                    return void 0 === e && (e = _.isHorizontal() ? "x" : "y"), _.getTranslate(_.wrapper[0], e)
                }, _.observers = [], _.initObservers = function () {
                    if (_.params.observeParents)
                        for (var e = _.container.parents(), t = 0; t < e.length; t++) s(e[t]);
                    s(_.container[0], {
                        childList: !1
                    }), s(_.wrapper[0], {
                        attributes: !1
                    })
                }, _.disconnectObservers = function () {
                    for (var e = 0; e < _.observers.length; e++) _.observers[e].disconnect();
                    _.observers = []
                }, _.createLoop = function () {
                    _.wrapper.children("." + _.params.slideClass + "." + _.params.slideDuplicateClass).remove();
                    var t = _.wrapper.children("." + _.params.slideClass);
                    "auto" !== _.params.slidesPerView || _.params.loopedSlides || (_.params.loopedSlides = t.length), _.loopedSlides = parseInt(_.params.loopedSlides || _.params.slidesPerView, 10), _.loopedSlides = _.loopedSlides + _.params.loopAdditionalSlides, _.loopedSlides > t.length && (_.loopedSlides = t.length);
                    var n, i = [],
                        r = [];
                    for (t.each(function (n, o) {
                            var a = e(this);
                            n < _.loopedSlides && r.push(o), n < t.length && n >= t.length - _.loopedSlides && i.push(o), a.attr("data-swiper-slide-index", n)
                        }), n = 0; n < r.length; n++) _.wrapper.append(e(r[n].cloneNode(!0)).addClass(_.params.slideDuplicateClass));
                    for (n = i.length - 1; n >= 0; n--) _.wrapper.prepend(e(i[n].cloneNode(!0)).addClass(_.params.slideDuplicateClass))
                }, _.destroyLoop = function () {
                    _.wrapper.children("." + _.params.slideClass + "." + _.params.slideDuplicateClass).remove(), _.slides.removeAttr("data-swiper-slide-index")
                }, _.reLoop = function (e) {
                    var t = _.activeIndex - _.loopedSlides;
                    _.destroyLoop(), _.createLoop(), _.updateSlidesSize(), e && _.slideTo(t + _.loopedSlides, 0, !1)
                }, _.fixLoop = function () {
                    var e;
                    _.activeIndex < _.loopedSlides ? (e = _.slides.length - 3 * _.loopedSlides + _.activeIndex, e += _.loopedSlides, _.slideTo(e, 0, !1, !0)) : ("auto" === _.params.slidesPerView && _.activeIndex >= 2 * _.loopedSlides || _.activeIndex > _.slides.length - 2 * _.params.slidesPerView) && (e = -_.slides.length + _.activeIndex + _.loopedSlides, e += _.loopedSlides, _.slideTo(e, 0, !1, !0))
                }, _.appendSlide = function (e) {
                    if (_.params.loop && _.destroyLoop(), "object" == typeof e && e.length)
                        for (var t = 0; t < e.length; t++) e[t] && _.wrapper.append(e[t]);
                    else _.wrapper.append(e);
                    _.params.loop && _.createLoop(), _.params.observer && _.support.observer || _.update(!0)
                }, _.prependSlide = function (e) {
                    _.params.loop && _.destroyLoop();
                    var t = _.activeIndex + 1;
                    if ("object" == typeof e && e.length) {
                        for (var n = 0; n < e.length; n++) e[n] && _.wrapper.prepend(e[n]);
                        t = _.activeIndex + e.length
                    } else _.wrapper.prepend(e);
                    _.params.loop && _.createLoop(), _.params.observer && _.support.observer || _.update(!0), _.slideTo(t, 0, !1)
                }, _.removeSlide = function (e) {
                    _.params.loop && (_.destroyLoop(), _.slides = _.wrapper.children("." + _.params.slideClass));
                    var t, n = _.activeIndex;
                    if ("object" == typeof e && e.length) {
                        for (var i = 0; i < e.length; i++) t = e[i], _.slides[t] && _.slides.eq(t).remove(), t < n && n--;
                        n = Math.max(n, 0)
                    } else t = e, _.slides[t] && _.slides.eq(t).remove(), t < n && n--, n = Math.max(n, 0);
                    _.params.loop && _.createLoop(), _.params.observer && _.support.observer || _.update(!0), _.params.loop ? _.slideTo(n + _.loopedSlides, 0, !1) : _.slideTo(n, 0, !1)
                }, _.removeAllSlides = function () {
                    for (var e = [], t = 0; t < _.slides.length; t++) e.push(t);
                    _.removeSlide(e)
                }, _.effects = {
                    fade: {
                        setTranslate: function () {
                            for (var e = 0; e < _.slides.length; e++) {
                                var t = _.slides.eq(e),
                                    n = t[0].swiperSlideOffset,
                                    i = -n;
                                _.params.virtualTranslate || (i -= _.translate);
                                var r = 0;
                                _.isHorizontal() || (r = i, i = 0);
                                var o = _.params.fade.crossFade ? Math.max(1 - Math.abs(t[0].progress), 0) : 1 + Math.min(Math.max(t[0].progress, -1), 0);
                                t.css({
                                    opacity: o
                                }).transform("translate3d(" + i + "px, " + r + "px, 0px)")
                            }
                        },
                        setTransition: function (e) {
                            if (_.slides.transition(e), _.params.virtualTranslate && 0 !== e) {
                                var t = !1;
                                _.slides.transitionEnd(function () {
                                    if (!t && _) {
                                        t = !0, _.animating = !1;
                                        for (var e = ["webkitTransitionEnd", "transitionend", "oTransitionEnd", "MSTransitionEnd", "msTransitionEnd"], n = 0; n < e.length; n++) _.wrapper.trigger(e[n])
                                    }
                                })
                            }
                        }
                    },
                    flip: {
                        setTranslate: function () {
                            for (var t = 0; t < _.slides.length; t++) {
                                var n = _.slides.eq(t),
                                    i = n[0].progress;
                                _.params.flip.limitRotation && (i = Math.max(Math.min(n[0].progress, 1), -1));
                                var r = n[0].swiperSlideOffset,
                                    o = -180 * i,
                                    a = o,
                                    s = 0,
                                    l = -r,
                                    u = 0;
                                if (_.isHorizontal() ? _.rtl && (a = -a) : (u = l, l = 0, s = -a, a = 0), n[0].style.zIndex = -Math.abs(Math.round(i)) + _.slides.length, _.params.flip.slideShadows) {
                                    var c = _.isHorizontal() ? n.find(".swiper-slide-shadow-left") : n.find(".swiper-slide-shadow-top"),
                                        p = _.isHorizontal() ? n.find(".swiper-slide-shadow-right") : n.find(".swiper-slide-shadow-bottom");
                                    0 === c.length && (c = e('<div class="swiper-slide-shadow-' + (_.isHorizontal() ? "left" : "top") + '"></div>'), n.append(c)), 0 === p.length && (p = e('<div class="swiper-slide-shadow-' + (_.isHorizontal() ? "right" : "bottom") + '"></div>'), n.append(p)), c.length && (c[0].style.opacity = Math.max(-i, 0)), p.length && (p[0].style.opacity = Math.max(i, 0))
                                }
                                n.transform("translate3d(" + l + "px, " + u + "px, 0px) rotateX(" + s + "deg) rotateY(" + a + "deg)")
                            }
                        },
                        setTransition: function (t) {
                            if (_.slides.transition(t).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(t), _.params.virtualTranslate && 0 !== t) {
                                var n = !1;
                                _.slides.eq(_.activeIndex).transitionEnd(function () {
                                    if (!n && _ && e(this).hasClass(_.params.slideActiveClass)) {
                                        n = !0, _.animating = !1;
                                        for (var t = ["webkitTransitionEnd", "transitionend", "oTransitionEnd", "MSTransitionEnd", "msTransitionEnd"], i = 0; i < t.length; i++) _.wrapper.trigger(t[i])
                                    }
                                })
                            }
                        }
                    },
                    cube: {
                        setTranslate: function () {
                            var t, n = 0;
                            _.params.cube.shadow && (_.isHorizontal() ? (t = _.wrapper.find(".swiper-cube-shadow"), 0 === t.length && (t = e('<div class="swiper-cube-shadow"></div>'), _.wrapper.append(t)), t.css({
                                height: _.width + "px"
                            })) : (t = _.container.find(".swiper-cube-shadow"), 0 === t.length && (t = e('<div class="swiper-cube-shadow"></div>'), _.container.append(t))));
                            for (var i = 0; i < _.slides.length; i++) {
                                var r = _.slides.eq(i),
                                    o = 90 * i,
                                    a = Math.floor(o / 360);
                                _.rtl && (o = -o, a = Math.floor(-o / 360));
                                var s = Math.max(Math.min(r[0].progress, 1), -1),
                                    l = 0,
                                    u = 0,
                                    c = 0;
                                i % 4 == 0 ? (l = 4 * -a * _.size, c = 0) : (i - 1) % 4 == 0 ? (l = 0, c = 4 * -a * _.size) : (i - 2) % 4 == 0 ? (l = _.size + 4 * a * _.size, c = _.size) : (i - 3) % 4 == 0 && (l = -_.size, c = 3 * _.size + 4 * _.size * a), _.rtl && (l = -l), _.isHorizontal() || (u = l, l = 0);
                                var p = "rotateX(" + (_.isHorizontal() ? 0 : -o) + "deg) rotateY(" + (_.isHorizontal() ? o : 0) + "deg) translate3d(" + l + "px, " + u + "px, " + c + "px)";
                                if (s <= 1 && s > -1 && (n = 90 * i + 90 * s, _.rtl && (n = 90 * -i - 90 * s)), r.transform(p), _.params.cube.slideShadows) {
                                    var h = _.isHorizontal() ? r.find(".swiper-slide-shadow-left") : r.find(".swiper-slide-shadow-top"),
                                        d = _.isHorizontal() ? r.find(".swiper-slide-shadow-right") : r.find(".swiper-slide-shadow-bottom");
                                    0 === h.length && (h = e('<div class="swiper-slide-shadow-' + (_.isHorizontal() ? "left" : "top") + '"></div>'), r.append(h)), 0 === d.length && (d = e('<div class="swiper-slide-shadow-' + (_.isHorizontal() ? "right" : "bottom") + '"></div>'), r.append(d)), h.length && (h[0].style.opacity = Math.max(-s, 0)), d.length && (d[0].style.opacity = Math.max(s, 0))
                                }
                            }
                            if (_.wrapper.css({
                                    "-webkit-transform-origin": "50% 50% -" + _.size / 2 + "px",
                                    "-moz-transform-origin": "50% 50% -" + _.size / 2 + "px",
                                    "-ms-transform-origin": "50% 50% -" + _.size / 2 + "px",
                                    "transform-origin": "50% 50% -" + _.size / 2 + "px"
                                }), _.params.cube.shadow)
                                if (_.isHorizontal()) t.transform("translate3d(0px, " + (_.width / 2 + _.params.cube.shadowOffset) + "px, " + -_.width / 2 + "px) rotateX(90deg) rotateZ(0deg) scale(" + _.params.cube.shadowScale + ")");
                                else {
                                    var f = Math.abs(n) - 90 * Math.floor(Math.abs(n) / 90),
                                        g = 1.5 - (Math.sin(2 * f * Math.PI / 360) / 2 + Math.cos(2 * f * Math.PI / 360) / 2),
                                        m = _.params.cube.shadowScale,
                                        y = _.params.cube.shadowScale / g,
                                        v = _.params.cube.shadowOffset;
                                    t.transform("scale3d(" + m + ", 1, " + y + ") translate3d(0px, " + (_.height / 2 + v) + "px, " + -_.height / 2 / y + "px) rotateX(-90deg)")
                                } var x = _.isSafari || _.isUiWebView ? -_.size / 2 : 0;
                            _.wrapper.transform("translate3d(0px,0," + x + "px) rotateX(" + (_.isHorizontal() ? 0 : n) + "deg) rotateY(" + (_.isHorizontal() ? -n : 0) + "deg)")
                        },
                        setTransition: function (e) {
                            _.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e), _.params.cube.shadow && !_.isHorizontal() && _.container.find(".swiper-cube-shadow").transition(e)
                        }
                    },
                    coverflow: {
                        setTranslate: function () {
                            for (var t = _.translate, n = _.isHorizontal() ? -t + _.width / 2 : -t + _.height / 2, i = _.isHorizontal() ? _.params.coverflow.rotate : -_.params.coverflow.rotate, r = _.params.coverflow.depth, o = 0, a = _.slides.length; o < a; o++) {
                                var s = _.slides.eq(o),
                                    l = _.slidesSizesGrid[o],
                                    u = s[0].swiperSlideOffset,
                                    c = (n - u - l / 2) / l * _.params.coverflow.modifier,
                                    p = _.isHorizontal() ? i * c : 0,
                                    h = _.isHorizontal() ? 0 : i * c,
                                    d = -r * Math.abs(c),
                                    f = _.isHorizontal() ? 0 : _.params.coverflow.stretch * c,
                                    g = _.isHorizontal() ? _.params.coverflow.stretch * c : 0;
                                Math.abs(g) < .001 && (g = 0), Math.abs(f) < .001 && (f = 0), Math.abs(d) < .001 && (d = 0), Math.abs(p) < .001 && (p = 0), Math.abs(h) < .001 && (h = 0);
                                var m = "translate3d(" + g + "px," + f + "px," + d + "px)  rotateX(" + h + "deg) rotateY(" + p + "deg)";
                                if (s.transform(m), s[0].style.zIndex = 1 - Math.abs(Math.round(c)), _.params.coverflow.slideShadows) {
                                    var y = _.isHorizontal() ? s.find(".swiper-slide-shadow-left") : s.find(".swiper-slide-shadow-top"),
                                        v = _.isHorizontal() ? s.find(".swiper-slide-shadow-right") : s.find(".swiper-slide-shadow-bottom");
                                    0 === y.length && (y = e('<div class="swiper-slide-shadow-' + (_.isHorizontal() ? "left" : "top") + '"></div>'), s.append(y)), 0 === v.length && (v = e('<div class="swiper-slide-shadow-' + (_.isHorizontal() ? "right" : "bottom") + '"></div>'), s.append(v)), y.length && (y[0].style.opacity = c > 0 ? c : 0), v.length && (v[0].style.opacity = -c > 0 ? -c : 0)
                                }
                            }
                            _.browser.ie && (_.wrapper[0].style.perspectiveOrigin = n + "px 50%")
                        },
                        setTransition: function (e) {
                            _.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)
                        }
                    }
                }, _.lazy = {
                    initialImageLoaded: !1,
                    loadImageInSlide: function (t, n) {
                        if (void 0 !== t && (void 0 === n && (n = !0), 0 !== _.slides.length)) {
                            var i = _.slides.eq(t),
                                r = i.find("." + _.params.lazyLoadingClass + ":not(." + _.params.lazyStatusLoadedClass + "):not(." + _.params.lazyStatusLoadingClass + ")");
                            !i.hasClass(_.params.lazyLoadingClass) || i.hasClass(_.params.lazyStatusLoadedClass) || i.hasClass(_.params.lazyStatusLoadingClass) || (r = r.add(i[0])), 0 !== r.length && r.each(function () {
                                var t = e(this);
                                t.addClass(_.params.lazyStatusLoadingClass);
                                var r = t.attr("data-background"),
                                    o = t.attr("data-src"),
                                    a = t.attr("data-srcset"),
                                    s = t.attr("data-sizes");
                                _.loadImage(t[0], o || r, a, s, !1, function () {
                                    if (null != _ && _) {
                                        if (r ? (t.css("background-image", 'url("' + r + '")'), t.removeAttr("data-background")) : (a && (t.attr("srcset", a), t.removeAttr("data-srcset")), s && (t.attr("sizes", s), t.removeAttr("data-sizes")), o && (t.attr("src", o), t.removeAttr("data-src"))), t.addClass(_.params.lazyStatusLoadedClass).removeClass(_.params.lazyStatusLoadingClass), i.find("." + _.params.lazyPreloaderClass + ", ." + _.params.preloaderClass).remove(), _.params.loop && n) {
                                            var e = i.attr("data-swiper-slide-index");
                                            if (i.hasClass(_.params.slideDuplicateClass)) {
                                                var l = _.wrapper.children('[data-swiper-slide-index="' + e + '"]:not(.' + _.params.slideDuplicateClass + ")");
                                                _.lazy.loadImageInSlide(l.index(), !1)
                                            } else {
                                                var u = _.wrapper.children("." + _.params.slideDuplicateClass + '[data-swiper-slide-index="' + e + '"]');
                                                _.lazy.loadImageInSlide(u.index(), !1)
                                            }
                                        }
                                        _.emit("onLazyImageReady", _, i[0], t[0])
                                    }
                                }), _.emit("onLazyImageLoad", _, i[0], t[0])
                            })
                        }
                    },
                    load: function () {
                        var t, n = _.params.slidesPerView;
                        if ("auto" === n && (n = 0), _.lazy.initialImageLoaded || (_.lazy.initialImageLoaded = !0), _.params.watchSlidesVisibility) _.wrapper.children("." + _.params.slideVisibleClass).each(function () {
                            _.lazy.loadImageInSlide(e(this).index())
                        });
                        else if (n > 1)
                            for (t = _.activeIndex; t < _.activeIndex + n; t++) _.slides[t] && _.lazy.loadImageInSlide(t);
                        else _.lazy.loadImageInSlide(_.activeIndex);
                        if (_.params.lazyLoadingInPrevNext)
                            if (n > 1 || _.params.lazyLoadingInPrevNextAmount && _.params.lazyLoadingInPrevNextAmount > 1) {
                                var i = _.params.lazyLoadingInPrevNextAmount,
                                    r = n,
                                    o = Math.min(_.activeIndex + r + Math.max(i, r), _.slides.length),
                                    a = Math.max(_.activeIndex - Math.max(r, i), 0);
                                for (t = _.activeIndex + n; t < o; t++) _.slides[t] && _.lazy.loadImageInSlide(t);
                                for (t = a; t < _.activeIndex; t++) _.slides[t] && _.lazy.loadImageInSlide(t)
                            } else {
                                var s = _.wrapper.children("." + _.params.slideNextClass);
                                s.length > 0 && _.lazy.loadImageInSlide(s.index());
                                var l = _.wrapper.children("." + _.params.slidePrevClass);
                                l.length > 0 && _.lazy.loadImageInSlide(l.index())
                            }
                    },
                    onTransitionStart: function () {
                        _.params.lazyLoading && (_.params.lazyLoadingOnTransitionStart || !_.params.lazyLoadingOnTransitionStart && !_.lazy.initialImageLoaded) && _.lazy.load()
                    },
                    onTransitionEnd: function () {
                        _.params.lazyLoading && !_.params.lazyLoadingOnTransitionStart && _.lazy.load()
                    }
                }, _.scrollbar = {
                    isTouched: !1,
                    setDragPosition: function (e) {
                        var t = _.scrollbar,
                            n = _.isHorizontal() ? "touchstart" === e.type || "touchmove" === e.type ? e.targetTouches[0].pageX : e.pageX || e.clientX : "touchstart" === e.type || "touchmove" === e.type ? e.targetTouches[0].pageY : e.pageY || e.clientY,
                            i = n - t.track.offset()[_.isHorizontal() ? "left" : "top"] - t.dragSize / 2,
                            r = -_.minTranslate() * t.moveDivider,
                            o = -_.maxTranslate() * t.moveDivider;
                        i < r ? i = r : i > o && (i = o), i = -i / t.moveDivider, _.updateProgress(i), _.setWrapperTranslate(i, !0)
                    },
                    dragStart: function (e) {
                        var t = _.scrollbar;
                        t.isTouched = !0, e.preventDefault(), e.stopPropagation(), t.setDragPosition(e), clearTimeout(t.dragTimeout), t.track.transition(0), _.params.scrollbarHide && t.track.css("opacity", 1), _.wrapper.transition(100), t.drag.transition(100), _.emit("onScrollbarDragStart", _)
                    },
                    dragMove: function (e) {
                        var t = _.scrollbar;
                        t.isTouched && (e.preventDefault ? e.preventDefault() : e.returnValue = !1, t.setDragPosition(e), _.wrapper.transition(0), t.track.transition(0), t.drag.transition(0), _.emit("onScrollbarDragMove", _))
                    },
                    dragEnd: function (e) {
                        var t = _.scrollbar;
                        t.isTouched && (t.isTouched = !1, _.params.scrollbarHide && (clearTimeout(t.dragTimeout), t.dragTimeout = setTimeout(function () {
                            t.track.css("opacity", 0), t.track.transition(400)
                        }, 1e3)), _.emit("onScrollbarDragEnd", _), _.params.scrollbarSnapOnRelease && _.slideReset())
                    },
                    draggableEvents: !1 !== _.params.simulateTouch || _.support.touch ? _.touchEvents : _.touchEventsDesktop,
                    enableDraggable: function () {
                        var t = _.scrollbar,
                            n = _.support.touch ? t.track : document;
                        e(t.track).on(t.draggableEvents.start, t.dragStart), e(n).on(t.draggableEvents.move, t.dragMove), e(n).on(t.draggableEvents.end, t.dragEnd)
                    },
                    disableDraggable: function () {
                        var t = _.scrollbar,
                            n = _.support.touch ? t.track : document;
                        e(t.track).off(t.draggableEvents.start, t.dragStart), e(n).off(t.draggableEvents.move, t.dragMove), e(n).off(t.draggableEvents.end, t.dragEnd)
                    },
                    set: function () {
                        if (_.params.scrollbar) {
                            var t = _.scrollbar;
                            t.track = e(_.params.scrollbar), _.params.uniqueNavElements && "string" == typeof _.params.scrollbar && t.track.length > 1 && 1 === _.container.find(_.params.scrollbar).length && (t.track = _.container.find(_.params.scrollbar)), t.drag = t.track.find(".swiper-scrollbar-drag"), 0 === t.drag.length && (t.drag = e('<div class="swiper-scrollbar-drag"></div>'), t.track.append(t.drag)), t.drag[0].style.width = "", t.drag[0].style.height = "", t.trackSize = _.isHorizontal() ? t.track[0].offsetWidth : t.track[0].offsetHeight, t.divider = _.size / _.virtualSize, t.moveDivider = t.divider * (t.trackSize / _.size), t.dragSize = t.trackSize * t.divider, _.isHorizontal() ? t.drag[0].style.width = t.dragSize + "px" : t.drag[0].style.height = t.dragSize + "px", t.divider >= 1 ? t.track[0].style.display = "none" : t.track[0].style.display = "", _.params.scrollbarHide && (t.track[0].style.opacity = 0)
                        }
                    },
                    setTranslate: function () {
                        if (_.params.scrollbar) {
                            var e, t = _.scrollbar,
                                n = (_.translate, t.dragSize);
                            e = (t.trackSize - t.dragSize) * _.progress, _.rtl && _.isHorizontal() ? (e = -e, e > 0 ? (n = t.dragSize - e, e = 0) : -e + t.dragSize > t.trackSize && (n = t.trackSize + e)) : e < 0 ? (n = t.dragSize + e, e = 0) : e + t.dragSize > t.trackSize && (n = t.trackSize - e), _.isHorizontal() ? (_.support.transforms3d ? t.drag.transform("translate3d(" + e + "px, 0, 0)") : t.drag.transform("translateX(" + e + "px)"), t.drag[0].style.width = n + "px") : (_.support.transforms3d ? t.drag.transform("translate3d(0px, " + e + "px, 0)") : t.drag.transform("translateY(" + e + "px)"), t.drag[0].style.height = n + "px"), _.params.scrollbarHide && (clearTimeout(t.timeout), t.track[0].style.opacity = 1, t.timeout = setTimeout(function () {
                                t.track[0].style.opacity = 0, t.track.transition(400)
                            }, 1e3))
                        }
                    },
                    setTransition: function (e) {
                        _.params.scrollbar && _.scrollbar.drag.transition(e)
                    }
                }, _.controller = {
                    LinearSpline: function (e, t) {
                        var n, i, r = function () {
                            var e, t, n;
                            return function (i, r) {
                                for (t = -1, e = i.length; e - t > 1;) i[n = e + t >> 1] <= r ? t = n : e = n;
                                return e
                            }
                        }();
                        this.x = e, this.y = t, this.lastIndex = e.length - 1, this.x.length, this.interpolate = function (e) {
                            return e ? (i = r(this.x, e), n = i - 1, (e - this.x[n]) * (this.y[i] - this.y[n]) / (this.x[i] - this.x[n]) + this.y[n]) : 0
                        }
                    },
                    getInterpolateFunction: function (e) {
                        _.controller.spline || (_.controller.spline = _.params.loop ? new _.controller.LinearSpline(_.slidesGrid, e.slidesGrid) : new _.controller.LinearSpline(_.snapGrid, e.snapGrid))
                    },
                    setTranslate: function (e, t) {
                        function i(t) {
                            e = t.rtl && "horizontal" === t.params.direction ? -_.translate : _.translate, "slide" === _.params.controlBy && (_.controller.getInterpolateFunction(t), o = -_.controller.spline.interpolate(-e)), o && "container" !== _.params.controlBy || (r = (t.maxTranslate() - t.minTranslate()) / (_.maxTranslate() - _.minTranslate()), o = (e - _.minTranslate()) * r + t.minTranslate()), _.params.controlInverse && (o = t.maxTranslate() - o), t.updateProgress(o), t.setWrapperTranslate(o, !1, _), t.updateActiveIndex()
                        }
                        var r, o, a = _.params.control;
                        if (Array.isArray(a))
                            for (var s = 0; s < a.length; s++) a[s] !== t && a[s] instanceof n && i(a[s]);
                        else a instanceof n && t !== a && i(a)
                    },
                    setTransition: function (e, t) {
                        function i(t) {
                            t.setWrapperTransition(e, _), 0 !== e && (t.onTransitionStart(), t.wrapper.transitionEnd(function () {
                                o && (t.params.loop && "slide" === _.params.controlBy && t.fixLoop(), t.onTransitionEnd())
                            }))
                        }
                        var r, o = _.params.control;
                        if (Array.isArray(o))
                            for (r = 0; r < o.length; r++) o[r] !== t && o[r] instanceof n && i(o[r]);
                        else o instanceof n && t !== o && i(o)
                    }
                }, _.hashnav = {
                    onHashCange: function (e, t) {
                        var n = document.location.hash.replace("#", "");
                        n !== _.slides.eq(_.activeIndex).attr("data-hash") && _.slideTo(_.wrapper.children("." + _.params.slideClass + '[data-hash="' + n + '"]').index())
                    },
                    attachEvents: function (t) {
                        var n = t ? "off" : "on";
                        e(window)[n]("hashchange", _.hashnav.onHashCange)
                    },
                    setHash: function () {
                        if (_.hashnav.initialized && _.params.hashnav)
                            if (_.params.replaceState && window.history && window.history.replaceState) window.history.replaceState(null, null, "#" + _.slides.eq(_.activeIndex).attr("data-hash") || "");
                            else {
                                var e = _.slides.eq(_.activeIndex),
                                    t = e.attr("data-hash") || e.attr("data-history");
                                document.location.hash = t || ""
                            }
                    },
                    init: function () {
                        if (_.params.hashnav && !_.params.history) {
                            _.hashnav.initialized = !0;
                            var e = document.location.hash.replace("#", "");
                            if (e)
                                for (var t = 0, n = _.slides.length; t < n; t++) {
                                    var i = _.slides.eq(t),
                                        r = i.attr("data-hash") || i.attr("data-history");
                                    if (r === e && !i.hasClass(_.params.slideDuplicateClass)) {
                                        var o = i.index();
                                        _.slideTo(o, 0, _.params.runCallbacksOnInit, !0)
                                    }
                                }
                            _.params.hashnavWatchState && _.hashnav.attachEvents()
                        }
                    },
                    destroy: function () {
                        _.params.hashnavWatchState && _.hashnav.attachEvents(!0)
                    }
                }, _.history = {
                    init: function () {
                        if (_.params.history) {
                            if (!window.history || !window.history.pushState) return _.params.history = !1, void(_.params.hashnav = !0);
                            _.history.initialized = !0, this.paths = this.getPathValues(), (this.paths.key || this.paths.value) && (this.scrollToSlide(0, this.paths.value, _.params.runCallbacksOnInit), _.params.replaceState || window.addEventListener("popstate", this.setHistoryPopState))
                        }
                    },
                    setHistoryPopState: function () {
                        _.history.paths = _.history.getPathValues(), _.history.scrollToSlide(_.params.speed, _.history.paths.value, !1)
                    },
                    getPathValues: function () {
                        var e = window.location.pathname.slice(1).split("/"),
                            t = e.length;
                        return {
                            key: e[t - 2],
                            value: e[t - 1]
                        }
                    },
                    setHistory: function (e, t) {
                        if (_.history.initialized && _.params.history) {
                            var n = _.slides.eq(t),
                                i = this.slugify(n.attr("data-history"));
                            window.location.pathname.includes(e) || (i = e + "/" + i), _.params.replaceState ? window.history.replaceState(null, null, i) : window.history.pushState(null, null, i)
                        }
                    },
                    slugify: function (e) {
                        return e.toString().toLowerCase().replace(/\s+/g, "-").replace(/[^\w\-]+/g, "").replace(/\-\-+/g, "-").replace(/^-+/, "").replace(/-+$/, "")
                    },
                    scrollToSlide: function (e, t, n) {
                        if (t)
                            for (var i = 0, r = _.slides.length; i < r; i++) {
                                var o = _.slides.eq(i),
                                    a = this.slugify(o.attr("data-history"));
                                if (a === t && !o.hasClass(_.params.slideDuplicateClass)) {
                                    var s = o.index();
                                    _.slideTo(s, e, n)
                                }
                            } else _.slideTo(0, e, n)
                    }
                }, _.disableKeyboardControl = function () {
                    _.params.keyboardControl = !1, e(document).off("keydown", l)
                }, _.enableKeyboardControl = function () {
                    _.params.keyboardControl = !0, e(document).on("keydown", l)
                }, _.mousewheel = {
                    event: !1,
                    lastScrollTime: (new window.Date).getTime()
                }, _.params.mousewheelControl && (_.mousewheel.event = navigator.userAgent.indexOf("firefox") > -1 ? "DOMMouseScroll" : function () {
                    var e = "onwheel" in document;
                    if (!e) {
                        var t = document.createElement("div");
                        t.setAttribute("onwheel", "return;"), e = "function" == typeof t.onwheel
                    }
                    return !e && document.implementation && document.implementation.hasFeature && !0 !== document.implementation.hasFeature("", "") && (e = document.implementation.hasFeature("Events.wheel", "3.0")), e
                }() ? "wheel" : "mousewheel"), _.disableMousewheelControl = function () {
                    if (!_.mousewheel.event) return !1;
                    var t = _.container;
                    return "container" !== _.params.mousewheelEventsTarged && (t = e(_.params.mousewheelEventsTarged)), t.off(_.mousewheel.event, c), _.params.mousewheelControl = !1, !0
                }, _.enableMousewheelControl = function () {
                    if (!_.mousewheel.event) return !1;
                    var t = _.container;
                    return "container" !== _.params.mousewheelEventsTarged && (t = e(_.params.mousewheelEventsTarged)), t.on(_.mousewheel.event, c), _.params.mousewheelControl = !0, !0
                }, _.parallax = {
                    setTranslate: function () {
                        _.container.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function () {
                            p(this, _.progress)
                        }), _.slides.each(function () {
                            var t = e(this);
                            t.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function () {
                                p(this, Math.min(Math.max(t[0].progress, -1), 1))
                            })
                        })
                    },
                    setTransition: function (t) {
                        void 0 === t && (t = _.params.speed), _.container.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function () {
                            var n = e(this),
                                i = parseInt(n.attr("data-swiper-parallax-duration"), 10) || t;
                            0 === t && (i = 0), n.transition(i)
                        })
                    }
                }, _.zoom = {
                    scale: 1,
                    currentScale: 1,
                    isScaling: !1,
                    gesture: {
                        slide: void 0,
                        slideWidth: void 0,
                        slideHeight: void 0,
                        image: void 0,
                        imageWrap: void 0,
                        zoomMax: _.params.zoomMax
                    },
                    image: {
                        isTouched: void 0,
                        isMoved: void 0,
                        currentX: void 0,
                        currentY: void 0,
                        minX: void 0,
                        minY: void 0,
                        maxX: void 0,
                        maxY: void 0,
                        width: void 0,
                        height: void 0,
                        startX: void 0,
                        startY: void 0,
                        touchesStart: {},
                        touchesCurrent: {}
                    },
                    velocity: {
                        x: void 0,
                        y: void 0,
                        prevPositionX: void 0,
                        prevPositionY: void 0,
                        prevTime: void 0
                    },
                    getDistanceBetweenTouches: function (e) {
                        if (e.targetTouches.length < 2) return 1;
                        var t = e.targetTouches[0].pageX,
                            n = e.targetTouches[0].pageY,
                            i = e.targetTouches[1].pageX,
                            r = e.targetTouches[1].pageY;
                        return Math.sqrt(Math.pow(i - t, 2) + Math.pow(r - n, 2))
                    },
                    onGestureStart: function (t) {
                        var n = _.zoom;
                        if (!_.support.gestures) {
                            if ("touchstart" !== t.type || "touchstart" === t.type && t.targetTouches.length < 2) return;
                            n.gesture.scaleStart = n.getDistanceBetweenTouches(t)
                        }
                        n.gesture.slide && n.gesture.slide.length || (n.gesture.slide = e(this), 0 === n.gesture.slide.length && (n.gesture.slide = _.slides.eq(_.activeIndex)), n.gesture.image = n.gesture.slide.find("img, svg, canvas"), n.gesture.imageWrap = n.gesture.image.parent("." + _.params.zoomContainerClass), n.gesture.zoomMax = n.gesture.imageWrap.attr("data-swiper-zoom") || _.params.zoomMax, 0 !== n.gesture.imageWrap.length) ? (n.gesture.image.transition(0), n.isScaling = !0) : n.gesture.image = void 0
                    },
                    onGestureChange: function (e) {
                        var t = _.zoom;
                        if (!_.support.gestures) {
                            if ("touchmove" !== e.type || "touchmove" === e.type && e.targetTouches.length < 2) return;
                            t.gesture.scaleMove = t.getDistanceBetweenTouches(e)
                        }
                        t.gesture.image && 0 !== t.gesture.image.length && (_.support.gestures ? t.scale = e.scale * t.currentScale : t.scale = t.gesture.scaleMove / t.gesture.scaleStart * t.currentScale, t.scale > t.gesture.zoomMax && (t.scale = t.gesture.zoomMax - 1 + Math.pow(t.scale - t.gesture.zoomMax + 1, .5)), t.scale < _.params.zoomMin && (t.scale = _.params.zoomMin + 1 - Math.pow(_.params.zoomMin - t.scale + 1, .5)), t.gesture.image.transform("translate3d(0,0,0) scale(" + t.scale + ")"))
                    },
                    onGestureEnd: function (e) {
                        var t = _.zoom;
                        !_.support.gestures && ("touchend" !== e.type || "touchend" === e.type && e.changedTouches.length < 2) || t.gesture.image && 0 !== t.gesture.image.length && (t.scale = Math.max(Math.min(t.scale, t.gesture.zoomMax), _.params.zoomMin), t.gesture.image.transition(_.params.speed).transform("translate3d(0,0,0) scale(" + t.scale + ")"), t.currentScale = t.scale, t.isScaling = !1, 1 === t.scale && (t.gesture.slide = void 0))
                    },
                    onTouchStart: function (e, t) {
                        var n = e.zoom;
                        n.gesture.image && 0 !== n.gesture.image.length && (n.image.isTouched || ("android" === e.device.os && t.preventDefault(), n.image.isTouched = !0, n.image.touchesStart.x = "touchstart" === t.type ? t.targetTouches[0].pageX : t.pageX, n.image.touchesStart.y = "touchstart" === t.type ? t.targetTouches[0].pageY : t.pageY))
                    },
                    onTouchMove: function (e) {
                        var t = _.zoom;
                        if (t.gesture.image && 0 !== t.gesture.image.length && (_.allowClick = !1, t.image.isTouched && t.gesture.slide)) {
                            t.image.isMoved || (t.image.width = t.gesture.image[0].offsetWidth, t.image.height = t.gesture.image[0].offsetHeight, t.image.startX = _.getTranslate(t.gesture.imageWrap[0], "x") || 0, t.image.startY = _.getTranslate(t.gesture.imageWrap[0], "y") || 0, t.gesture.slideWidth = t.gesture.slide[0].offsetWidth, t.gesture.slideHeight = t.gesture.slide[0].offsetHeight, t.gesture.imageWrap.transition(0), _.rtl && (t.image.startX = -t.image.startX), _.rtl && (t.image.startY = -t.image.startY));
                            var n = t.image.width * t.scale,
                                i = t.image.height * t.scale;
                            if (!(n < t.gesture.slideWidth && i < t.gesture.slideHeight)) {
                                if (t.image.minX = Math.min(t.gesture.slideWidth / 2 - n / 2, 0), t.image.maxX = -t.image.minX, t.image.minY = Math.min(t.gesture.slideHeight / 2 - i / 2, 0), t.image.maxY = -t.image.minY, t.image.touchesCurrent.x = "touchmove" === e.type ? e.targetTouches[0].pageX : e.pageX, t.image.touchesCurrent.y = "touchmove" === e.type ? e.targetTouches[0].pageY : e.pageY, !t.image.isMoved && !t.isScaling) {
                                    if (_.isHorizontal() && Math.floor(t.image.minX) === Math.floor(t.image.startX) && t.image.touchesCurrent.x < t.image.touchesStart.x || Math.floor(t.image.maxX) === Math.floor(t.image.startX) && t.image.touchesCurrent.x > t.image.touchesStart.x) return void(t.image.isTouched = !1);
                                    if (!_.isHorizontal() && Math.floor(t.image.minY) === Math.floor(t.image.startY) && t.image.touchesCurrent.y < t.image.touchesStart.y || Math.floor(t.image.maxY) === Math.floor(t.image.startY) && t.image.touchesCurrent.y > t.image.touchesStart.y) return void(t.image.isTouched = !1)
                                }
                                e.preventDefault(), e.stopPropagation(), t.image.isMoved = !0, t.image.currentX = t.image.touchesCurrent.x - t.image.touchesStart.x + t.image.startX, t.image.currentY = t.image.touchesCurrent.y - t.image.touchesStart.y + t.image.startY, t.image.currentX < t.image.minX && (t.image.currentX = t.image.minX + 1 - Math.pow(t.image.minX - t.image.currentX + 1, .8)), t.image.currentX > t.image.maxX && (t.image.currentX = t.image.maxX - 1 + Math.pow(t.image.currentX - t.image.maxX + 1, .8)), t.image.currentY < t.image.minY && (t.image.currentY = t.image.minY + 1 - Math.pow(t.image.minY - t.image.currentY + 1, .8)), t.image.currentY > t.image.maxY && (t.image.currentY = t.image.maxY - 1 + Math.pow(t.image.currentY - t.image.maxY + 1, .8)), t.velocity.prevPositionX || (t.velocity.prevPositionX = t.image.touchesCurrent.x), t.velocity.prevPositionY || (t.velocity.prevPositionY = t.image.touchesCurrent.y), t.velocity.prevTime || (t.velocity.prevTime = Date.now()), t.velocity.x = (t.image.touchesCurrent.x - t.velocity.prevPositionX) / (Date.now() - t.velocity.prevTime) / 2, t.velocity.y = (t.image.touchesCurrent.y - t.velocity.prevPositionY) / (Date.now() - t.velocity.prevTime) / 2, Math.abs(t.image.touchesCurrent.x - t.velocity.prevPositionX) < 2 && (t.velocity.x = 0), Math.abs(t.image.touchesCurrent.y - t.velocity.prevPositionY) < 2 && (t.velocity.y = 0), t.velocity.prevPositionX = t.image.touchesCurrent.x, t.velocity.prevPositionY = t.image.touchesCurrent.y, t.velocity.prevTime = Date.now(), t.gesture.imageWrap.transform("translate3d(" + t.image.currentX + "px, " + t.image.currentY + "px,0)")
                            }
                        }
                    },
                    onTouchEnd: function (e, t) {
                        var n = e.zoom;
                        if (n.gesture.image && 0 !== n.gesture.image.length) {
                            if (!n.image.isTouched || !n.image.isMoved) return n.image.isTouched = !1, void(n.image.isMoved = !1);
                            n.image.isTouched = !1, n.image.isMoved = !1;
                            var i = 300,
                                r = 300,
                                o = n.velocity.x * i,
                                a = n.image.currentX + o,
                                s = n.velocity.y * r,
                                l = n.image.currentY + s;
                            0 !== n.velocity.x && (i = Math.abs((a - n.image.currentX) / n.velocity.x)), 0 !== n.velocity.y && (r = Math.abs((l - n.image.currentY) / n.velocity.y));
                            var u = Math.max(i, r);
                            n.image.currentX = a, n.image.currentY = l;
                            var c = n.image.width * n.scale,
                                p = n.image.height * n.scale;
                            n.image.minX = Math.min(n.gesture.slideWidth / 2 - c / 2, 0), n.image.maxX = -n.image.minX, n.image.minY = Math.min(n.gesture.slideHeight / 2 - p / 2, 0), n.image.maxY = -n.image.minY, n.image.currentX = Math.max(Math.min(n.image.currentX, n.image.maxX), n.image.minX), n.image.currentY = Math.max(Math.min(n.image.currentY, n.image.maxY), n.image.minY), n.gesture.imageWrap.transition(u).transform("translate3d(" + n.image.currentX + "px, " + n.image.currentY + "px,0)")
                        }
                    },
                    onTransitionEnd: function (e) {
                        var t = e.zoom;
                        t.gesture.slide && e.previousIndex !== e.activeIndex && (t.gesture.image.transform("translate3d(0,0,0) scale(1)"), t.gesture.imageWrap.transform("translate3d(0,0,0)"), t.gesture.slide = t.gesture.image = t.gesture.imageWrap = void 0, t.scale = t.currentScale = 1)
                    },
                    toggleZoom: function (t, n) {
                        var i, r, o, a, s, l, u, c, p, h, d, f, g, m, y, v, x, _, w = t.zoom;
                        (w.gesture.slide || (w.gesture.slide = t.clickedSlide ? e(t.clickedSlide) : t.slides.eq(t.activeIndex), w.gesture.image = w.gesture.slide.find("img, svg, canvas"), w.gesture.imageWrap = w.gesture.image.parent("." + t.params.zoomContainerClass)), w.gesture.image && 0 !== w.gesture.image.length) && (void 0 === w.image.touchesStart.x && n ? (i = "touchend" === n.type ? n.changedTouches[0].pageX : n.pageX, r = "touchend" === n.type ? n.changedTouches[0].pageY : n.pageY) : (i = w.image.touchesStart.x, r = w.image.touchesStart.y), w.scale && 1 !== w.scale ? (w.scale = w.currentScale = 1, w.gesture.imageWrap.transition(300).transform("translate3d(0,0,0)"), w.gesture.image.transition(300).transform("translate3d(0,0,0) scale(1)"), w.gesture.slide = void 0) : (w.scale = w.currentScale = w.gesture.imageWrap.attr("data-swiper-zoom") || t.params.zoomMax, n ? (x = w.gesture.slide[0].offsetWidth, _ = w.gesture.slide[0].offsetHeight, o = w.gesture.slide.offset().left, a = w.gesture.slide.offset().top, s = o + x / 2 - i, l = a + _ / 2 - r, p = w.gesture.image[0].offsetWidth, h = w.gesture.image[0].offsetHeight, d = p * w.scale, f = h * w.scale, g = Math.min(x / 2 - d / 2, 0), m = Math.min(_ / 2 - f / 2, 0), y = -g, v = -m, u = s * w.scale, c = l * w.scale, u < g && (u = g), u > y && (u = y), c < m && (c = m), c > v && (c = v)) : (u = 0, c = 0), w.gesture.imageWrap.transition(300).transform("translate3d(" + u + "px, " + c + "px,0)"), w.gesture.image.transition(300).transform("translate3d(0,0,0) scale(" + w.scale + ")")))
                    },
                    attachEvents: function (t) {
                        var n = t ? "off" : "on";
                        if (_.params.zoom) {
                            var i = (_.slides, !("touchstart" !== _.touchEvents.start || !_.support.passiveListener || !_.params.passiveListeners) && {
                                passive: !0,
                                capture: !1
                            });
                            _.support.gestures ? (_.slides[n]("gesturestart", _.zoom.onGestureStart, i), _.slides[n]("gesturechange", _.zoom.onGestureChange, i), _.slides[n]("gestureend", _.zoom.onGestureEnd, i)) : "touchstart" === _.touchEvents.start && (_.slides[n](_.touchEvents.start, _.zoom.onGestureStart, i), _.slides[n](_.touchEvents.move, _.zoom.onGestureChange, i), _.slides[n](_.touchEvents.end, _.zoom.onGestureEnd, i)), _[n]("touchStart", _.zoom.onTouchStart), _.slides.each(function (t, i) {
                                e(i).find("." + _.params.zoomContainerClass).length > 0 && e(i)[n](_.touchEvents.move, _.zoom.onTouchMove)
                            }), _[n]("touchEnd", _.zoom.onTouchEnd), _[n]("transitionEnd", _.zoom.onTransitionEnd), _.params.zoomToggle && _.on("doubleTap", _.zoom.toggleZoom)
                        }
                    },
                    init: function () {
                        _.zoom.attachEvents()
                    },
                    destroy: function () {
                        _.zoom.attachEvents(!0)
                    }
                }, _._plugins = [], _.plugins) {
                var B = _.plugins[z](_, _.params[z]);
                B && _._plugins.push(B)
            }
            return _.callPlugins = function (e) {
                for (var t = 0; t < _._plugins.length; t++) e in _._plugins[t] && _._plugins[t][e](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5])
            }, _.emitterEventListeners = {}, _.emit = function (e) {
                var t;
                if (_.params[e] && _.params[e](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]), _.emitterEventListeners[e])
                    for (t = 0; t < _.emitterEventListeners[e].length; t++) _.emitterEventListeners[e][t](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
                _.callPlugins && _.callPlugins(e, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5])
            }, _.on = function (e, t) {
                return e = h(e), _.emitterEventListeners[e] || (_.emitterEventListeners[e] = []), _.emitterEventListeners[e].push(t), _
            }, _.off = function (e, t) {
                var n;
                if (e = h(e), void 0 === t) return _.emitterEventListeners[e] = [], _;
                if (_.emitterEventListeners[e] && 0 !== _.emitterEventListeners[e].length) {
                    for (n = 0; n < _.emitterEventListeners[e].length; n++) _.emitterEventListeners[e][n] === t && _.emitterEventListeners[e].splice(n, 1);
                    return _
                }
            }, _.once = function (e, t) {
                e = h(e);
                var n = function () {
                    t(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]), _.off(e, n)
                };
                return _.on(e, n), _
            }, _.a11y = {
                makeFocusable: function (e) {
                    return e.attr("tabIndex", "0"), e
                },
                addRole: function (e, t) {
                    return e.attr("role", t), e
                },
                addLabel: function (e, t) {
                    return e.attr("aria-label", t), e
                },
                disable: function (e) {
                    return e.attr("aria-disabled", !0), e
                },
                enable: function (e) {
                    return e.attr("aria-disabled", !1), e
                },
                onEnterKey: function (t) {
                    13 === t.keyCode && (e(t.target).is(_.params.nextButton) ? (_.onClickNext(t), _.isEnd ? _.a11y.notify(_.params.lastSlideMessage) : _.a11y.notify(_.params.nextSlideMessage)) : e(t.target).is(_.params.prevButton) && (_.onClickPrev(t), _.isBeginning ? _.a11y.notify(_.params.firstSlideMessage) : _.a11y.notify(_.params.prevSlideMessage)), e(t.target).is("." + _.params.bulletClass) && e(t.target)[0].click())
                },
                liveRegion: e('<span class="' + _.params.notificationClass + '" aria-live="assertive" aria-atomic="true"></span>'),
                notify: function (e) {
                    var t = _.a11y.liveRegion;
                    0 !== t.length && (t.html(""), t.html(e))
                },
                init: function () {
                    _.params.nextButton && _.nextButton && _.nextButton.length > 0 && (_.a11y.makeFocusable(_.nextButton), _.a11y.addRole(_.nextButton, "button"), _.a11y.addLabel(_.nextButton, _.params.nextSlideMessage)), _.params.prevButton && _.prevButton && _.prevButton.length > 0 && (_.a11y.makeFocusable(_.prevButton), _.a11y.addRole(_.prevButton, "button"), _.a11y.addLabel(_.prevButton, _.params.prevSlideMessage)), e(_.container).append(_.a11y.liveRegion)
                },
                initPagination: function () {
                    _.params.pagination && _.params.paginationClickable && _.bullets && _.bullets.length && _.bullets.each(function () {
                        var t = e(this);
                        _.a11y.makeFocusable(t), _.a11y.addRole(t, "button"), _.a11y.addLabel(t, _.params.paginationBulletMessage.replace(/{{index}}/, t.index() + 1))
                    })
                },
                destroy: function () {
                    _.a11y.liveRegion && _.a11y.liveRegion.length > 0 && _.a11y.liveRegion.remove()
                }
            }, _.init = function () {
                _.params.loop && _.createLoop(), _.updateContainerSize(), _.updateSlidesSize(), _.updatePagination(), _.params.scrollbar && _.scrollbar && (_.scrollbar.set(), _.params.scrollbarDraggable && _.scrollbar.enableDraggable()), "slide" !== _.params.effect && _.effects[_.params.effect] && (_.params.loop || _.updateProgress(), _.effects[_.params.effect].setTranslate()), _.params.loop ? _.slideTo(_.params.initialSlide + _.loopedSlides, 0, _.params.runCallbacksOnInit) : (_.slideTo(_.params.initialSlide, 0, _.params.runCallbacksOnInit), 0 === _.params.initialSlide && (_.parallax && _.params.parallax && _.parallax.setTranslate(), _.lazy && _.params.lazyLoading && (_.lazy.load(), _.lazy.initialImageLoaded = !0))), _.attachEvents(), _.params.observer && _.support.observer && _.initObservers(), _.params.preloadImages && !_.params.lazyLoading && _.preloadImages(), _.params.zoom && _.zoom && _.zoom.init(), _.params.autoplay && _.startAutoplay(), _.params.keyboardControl && _.enableKeyboardControl && _.enableKeyboardControl(), _.params.mousewheelControl && _.enableMousewheelControl && _.enableMousewheelControl(), _.params.hashnavReplaceState && (_.params.replaceState = _.params.hashnavReplaceState), _.params.history && _.history && _.history.init(), _.params.hashnav && _.hashnav && _.hashnav.init(), _.params.a11y && _.a11y && _.a11y.init(), _.emit("onInit", _)
            }, _.cleanupStyles = function () {
                _.container.removeClass(_.classNames.join(" ")).removeAttr("style"), _.wrapper.removeAttr("style"), _.slides && _.slides.length && _.slides.removeClass([_.params.slideVisibleClass, _.params.slideActiveClass, _.params.slideNextClass, _.params.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-column").removeAttr("data-swiper-row"), _.paginationContainer && _.paginationContainer.length && _.paginationContainer.removeClass(_.params.paginationHiddenClass), _.bullets && _.bullets.length && _.bullets.removeClass(_.params.bulletActiveClass), _.params.prevButton && e(_.params.prevButton).removeClass(_.params.buttonDisabledClass), _.params.nextButton && e(_.params.nextButton).removeClass(_.params.buttonDisabledClass), _.params.scrollbar && _.scrollbar && (_.scrollbar.track && _.scrollbar.track.length && _.scrollbar.track.removeAttr("style"), _.scrollbar.drag && _.scrollbar.drag.length && _.scrollbar.drag.removeAttr("style"))
            }, _.destroy = function (e, t) {
                _.detachEvents(), _.stopAutoplay(), _.params.scrollbar && _.scrollbar && _.params.scrollbarDraggable && _.scrollbar.disableDraggable(), _.params.loop && _.destroyLoop(), t && _.cleanupStyles(), _.disconnectObservers(), _.params.zoom && _.zoom && _.zoom.destroy(), _.params.keyboardControl && _.disableKeyboardControl && _.disableKeyboardControl(), _.params.mousewheelControl && _.disableMousewheelControl && _.disableMousewheelControl(), _.params.a11y && _.a11y && _.a11y.destroy(), _.params.history && !_.params.replaceState && window.removeEventListener("popstate", _.history.setHistoryPopState), _.params.hashnav && _.hashnav && _.hashnav.destroy(), _.emit("onDestroy"), !1 !== e && (_ = null)
            }, _.init(), _
        }
    };
    n.prototype = {
        isSafari: function () {
            var e = window.navigator.userAgent.toLowerCase();
            return e.indexOf("safari") >= 0 && e.indexOf("chrome") < 0 && e.indexOf("android") < 0
        }(),
        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),
        isArray: function (e) {
            return "[object Array]" === Object.prototype.toString.apply(e)
        },
        browser: {
            ie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled,
            ieTouch: window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1 || window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1,
            lteIE9: function () {
                var e = document.createElement("div");
                return e.innerHTML = "<!--[if lte IE 9]><i></i><![endif]-->", 1 === e.getElementsByTagName("i").length
            }()
        },
        device: function () {
            var e = window.navigator.userAgent,
                t = e.match(/(Android);?[\s\/]+([\d.]+)?/),
                n = e.match(/(iPad).*OS\s([\d_]+)/),
                i = e.match(/(iPod)(.*OS\s([\d_]+))?/),
                r = !n && e.match(/(iPhone\sOS|iOS)\s([\d_]+)/);
            return {
                ios: n || r || i,
                android: t
            }
        }(),
        support: {
            touch: window.Modernizr && !0 === Modernizr.touch || !!("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch),
            transforms3d: window.Modernizr && !0 === Modernizr.csstransforms3d || function () {
                var e = document.createElement("div").style;
                return "webkitPerspective" in e || "MozPerspective" in e || "OPerspective" in e || "MsPerspective" in e || "perspective" in e
            }(),
            flexbox: function () {
                for (var e = document.createElement("div").style, t = "alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "), n = 0; n < t.length; n++)
                    if (t[n] in e) return !0
            }(),
            observer: "MutationObserver" in window || "WebkitMutationObserver" in window,
            passiveListener: function () {
                var e = !1;
                try {
                    var t = Object.defineProperty({}, "passive", {
                        get: function () {
                            e = !0
                        }
                    });
                    window.addEventListener("testPassiveListener", null, t)
                } catch (e) {}
                return e
            }(),
            gestures: "ongesturestart" in window
        },
        plugins: {}
    };
    for (var i = ["jQuery", "Zepto", "Dom7"], r = 0; r < i.length; r++) window[i[r]] && function (e) {
        e.fn.swiper = function (t) {
            var i;
            return e(this).each(function () {
                var e = new n(this, t);
                i || (i = e)
            }), i
        }
    }(window[i[r]]);
    t = "undefined" == typeof Dom7 ? window.Dom7 || window.Zepto || window.jQuery : Dom7, t && ("transitionEnd" in t.fn || (t.fn.transitionEnd = function (e) {
        function t(o) {
            if (o.target === this)
                for (e.call(this, o), n = 0; n < i.length; n++) r.off(i[n], t)
        }
        var n, i = ["webkitTransitionEnd", "transitionend", "oTransitionEnd", "MSTransitionEnd", "msTransitionEnd"],
            r = this;
        if (e)
            for (n = 0; n < i.length; n++) r.on(i[n], t);
        return this
    }), "transform" in t.fn || (t.fn.transform = function (e) {
        for (var t = 0; t < this.length; t++) {
            var n = this[t].style;
            n.webkitTransform = n.MsTransform = n.msTransform = n.MozTransform = n.OTransform = n.transform = e
        }
        return this
    }), "transition" in t.fn || (t.fn.transition = function (e) {
        "string" != typeof e && (e += "ms");
        for (var t = 0; t < this.length; t++) {
            var n = this[t].style;
            n.webkitTransitionDuration = n.MsTransitionDuration = n.msTransitionDuration = n.MozTransitionDuration = n.OTransitionDuration = n.transitionDuration = e
        }
        return this
    }), "outerWidth" in t.fn || (t.fn.outerWidth = function (e) {
        return this.length > 0 ? e ? this[0].offsetWidth + parseFloat(this.css("margin-right")) + parseFloat(this.css("margin-left")) : this[0].offsetWidth : null
    })), window.Swiper = n
}(), "undefined" != typeof module ? module.exports = window.Swiper : "function" == typeof define && define.amd && define([], function () {
        "use strict";
        return window.Swiper
    }),
    function (e, t) {
        "object" == typeof exports && "undefined" != typeof module ? t(exports) : "function" == typeof define && define.amd ? define(["exports"], t) : t(e.echarts = {})
    }(this, function (e) {
        "use strict";

        function t(e, t) {
            function n() {
                this.constructor = e
            }
            if ("function" != typeof t && null !== t) throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
            Ox(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
        }

        function n(e, t) {
            var n = t.browser,
                i = e.match(/Firefox\/([\d.]+)/),
                r = e.match(/MSIE\s([\d.]+)/) || e.match(/Trident\/.+?rv:(([\d.]+))/),
                o = e.match(/Edge?\/([\d.]+)/),
                a = /micromessenger/i.test(e);
            i && (n.firefox = !0, n.version = i[1]), r && (n.ie = !0, n.version = r[1]), o && (n.edge = !0, n.version = o[1], n.newEdge = +o[1].split(".")[0] > 18), a && (n.weChat = !0), t.svgSupported = "undefined" != typeof SVGRect, t.touchEventsSupported = "ontouchstart" in window && !n.ie && !n.edge, t.pointerEventsSupported = "onpointerdown" in window && (n.edge || n.ie && +n.version >= 11), t.domSupported = "undefined" != typeof document;
            var s = document.documentElement.style;
            t.transform3dSupported = (n.ie && "transition" in s || n.edge || "WebKitCSSMatrix" in window && "m11" in new WebKitCSSMatrix || "MozPerspective" in s) && !("OTransition" in s), t.transformSupported = t.transform3dSupported || n.ie && +n.version >= 9
        }

        function i(e) {
            var t = {};
            if ("undefined" == typeof JSON) return t;
            for (var n = 0; n < e.length; n++) {
                var i = String.fromCharCode(n + 32),
                    r = (e.charCodeAt(n) - Gx) / Vx;
                t[i] = r
            }
            return t
        }

        function r(e) {
            for (var t in Xx) e[t] && (Xx[t] = e[t])
        }

        function o() {
            return i_++
        }

        function a() {
            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
            "undefined" != typeof console && console.error.apply(console, e)
        }

        function s(e) {
            if (null == e || "object" != typeof e) return e;
            var t = e,
                n = qx.call(e);
            if ("[object Array]" === n) {
                if (!X(e)) {
                    t = [];
                    for (var i = 0, r = e.length; r > i; i++) t[i] = s(e[i])
                }
            } else if (Ux[n]) {
                if (!X(e)) {
                    var o = e.constructor;
                    if (o.from) t = o.from(e);
                    else {
                        t = new o(e.length);
                        for (i = 0, r = e.length; r > i; i++) t[i] = e[i]
                    }
                }
            } else if (!Yx[n] && !X(e) && !L(e))
                for (var a in t = {}, e) e.hasOwnProperty(a) && a !== n_ && (t[a] = s(e[a]));
            return t
        }

        function l(e, t, n) {
            if (!D(t) || !D(e)) return n ? s(t) : e;
            for (var i in t)
                if (t.hasOwnProperty(i) && i !== n_) {
                    var r = e[i],
                        o = t[i];
                    !D(o) || !D(r) || T(o) || T(r) || L(o) || L(r) || A(o) || A(r) || X(o) || X(r) ? !n && i in e || (e[i] = s(t[i])) : l(r, o, n)
                } return e
        }

        function u(e, t) {
            for (var n = e[0], i = 1, r = e.length; r > i; i++) n = l(n, e[i], t);
            return n
        }

        function c(e, t) {
            if (Object.assign) Object.assign(e, t);
            else
                for (var n in t) t.hasOwnProperty(n) && n !== n_ && (e[n] = t[n]);
            return e
        }

        function p(e, t, n) {
            for (var i = w(t), r = 0; r < i.length; r++) {
                var o = i[r];
                (n ? null != t[o] : null == e[o]) && (e[o] = t[o])
            }
            return e
        }

        function h(e, t) {
            if (e) {
                if (e.indexOf) return e.indexOf(t);
                for (var n = 0, i = e.length; i > n; n++)
                    if (e[n] === t) return n
            }
            return -1
        }

        function d(e, t) {
            function n() {}
            var i = e.prototype;
            for (var r in n.prototype = t.prototype, e.prototype = new n, i) i.hasOwnProperty(r) && (e.prototype[r] = i[r]);
            e.prototype.constructor = e, e.superClass = t
        }

        function f(e, t, n) {
            if (e = "prototype" in e ? e.prototype : e, t = "prototype" in t ? t.prototype : t, Object.getOwnPropertyNames)
                for (var i = Object.getOwnPropertyNames(t), r = 0; r < i.length; r++) {
                    var o = i[r];
                    "constructor" !== o && (n ? null != t[o] : null == e[o]) && (e[o] = t[o])
                } else p(e, t, n)
        }

        function g(e) {
            return !!e && ("string" != typeof e && "number" == typeof e.length)
        }

        function m(e, t, n) {
            if (e && t)
                if (e.forEach && e.forEach === $x) e.forEach(t, n);
                else if (e.length === +e.length)
                for (var i = 0, r = e.length; r > i; i++) t.call(n, e[i], i, e);
            else
                for (var o in e) e.hasOwnProperty(o) && t.call(n, e[o], o, e)
        }

        function y(e, t, n) {
            if (!e) return [];
            if (!t) return H(e);
            if (e.map && e.map === Qx) return e.map(t, n);
            for (var i = [], r = 0, o = e.length; o > r; r++) i.push(t.call(n, e[r], r, e));
            return i
        }

        function v(e, t, n, i) {
            if (e && t) {
                for (var r = 0, o = e.length; o > r; r++) n = t.call(i, n, e[r], r, e);
                return n
            }
        }

        function x(e, t, n) {
            if (!e) return [];
            if (!t) return H(e);
            if (e.filter && e.filter === Kx) return e.filter(t, n);
            for (var i = [], r = 0, o = e.length; o > r; r++) t.call(n, e[r], r, e) && i.push(e[r]);
            return i
        }

        function _(e, t, n) {
            if (e && t)
                for (var i = 0, r = e.length; r > i; i++)
                    if (t.call(n, e[i], i, e)) return e[i]
        }

        function w(e) {
            if (!e) return [];
            if (Object.keys) return Object.keys(e);
            var t = [];
            for (var n in e) e.hasOwnProperty(n) && t.push(n);
            return t
        }

        function b(e, t) {
            for (var n = [], i = 2; i < arguments.length; i++) n[i - 2] = arguments[i];
            return function () {
                return e.apply(t, n.concat(Jx.call(arguments)))
            }
        }

        function S(e) {
            for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
            return function () {
                return e.apply(this, t.concat(Jx.call(arguments)))
            }
        }

        function T(e) {
            return Array.isArray ? Array.isArray(e) : "[object Array]" === qx.call(e)
        }

        function C(e) {
            return "function" == typeof e
        }

        function M(e) {
            return "string" == typeof e
        }

        function I(e) {
            return "[object String]" === qx.call(e)
        }

        function k(e) {
            return "number" == typeof e
        }

        function D(e) {
            var t = typeof e;
            return "function" === t || !!e && "object" === t
        }

        function A(e) {
            return !!Yx[qx.call(e)]
        }

        function P(e) {
            return !!Ux[qx.call(e)]
        }

        function L(e) {
            return "object" == typeof e && "number" == typeof e.nodeType && "object" == typeof e.ownerDocument
        }

        function N(e) {
            return null != e.colorStops
        }

        function O(e) {
            return null != e.image
        }

        function E(e) {
            return "[object RegExp]" === qx.call(e)
        }

        function R(e) {
            return e != e
        }

        function z() {
            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
            for (var n = 0, i = e.length; i > n; n++)
                if (null != e[n]) return e[n]
        }

        function B(e, t) {
            return null != e ? e : t
        }

        function F(e, t, n) {
            return null != e ? e : null != t ? t : n
        }

        function H(e) {
            for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
            return Jx.apply(e, t)
        }

        function G(e) {
            if ("number" == typeof e) return [e, e, e, e];
            var t = e.length;
            return 2 === t ? [e[0], e[1], e[0], e[1]] : 3 === t ? [e[0], e[1], e[2], e[1]] : e
        }

        function V(e, t) {
            if (!e) throw new Error(t)
        }

        function W(e) {
            return null == e ? null : "function" == typeof e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")
        }

        function j(e) {
            e[a_] = !0
        }

        function X(e) {
            return e[a_]
        }

        function Y(e) {
            return new s_(e)
        }

        function U(e, t) {
            for (var n = new e.constructor(e.length + t.length), i = 0; i < e.length; i++) n[i] = e[i];
            var r = e.length;
            for (i = 0; i < t.length; i++) n[i + r] = t[i];
            return n
        }

        function q(e, t) {
            var n;
            if (Object.create) n = Object.create(e);
            else {
                var i = function () {};
                i.prototype = e, n = new i
            }
            return t && c(n, t), n
        }

        function Z(e) {
            var t = e.style;
            t.webkitUserSelect = "none", t.userSelect = "none", t.webkitTapHighlightColor = "rgba(0,0,0,0)", t["-webkit-touch-callout"] = "none"
        }

        function $(e, t) {
            return e.hasOwnProperty(t)
        }

        function K() {}

        function J(e, t) {
            return null == e && (e = 0), null == t && (t = 0), [e, t]
        }

        function Q(e, t) {
            return e[0] = t[0], e[1] = t[1], e
        }

        function ee(e) {
            return [e[0], e[1]]
        }

        function te(e, t, n) {
            return e[0] = t, e[1] = n, e
        }

        function ne(e, t, n) {
            return e[0] = t[0] + n[0], e[1] = t[1] + n[1], e
        }

        function ie(e, t, n, i) {
            return e[0] = t[0] + n[0] * i, e[1] = t[1] + n[1] * i, e
        }

        function re(e, t, n) {
            return e[0] = t[0] - n[0], e[1] = t[1] - n[1], e
        }

        function oe(e) {
            return Math.sqrt(ae(e))
        }

        function ae(e) {
            return e[0] * e[0] + e[1] * e[1]
        }

        function se(e, t, n) {
            return e[0] = t[0] * n[0], e[1] = t[1] * n[1], e
        }

        function le(e, t, n) {
            return e[0] = t[0] / n[0], e[1] = t[1] / n[1], e
        }

        function ue(e, t) {
            return e[0] * t[0] + e[1] * t[1]
        }

        function ce(e, t, n) {
            return e[0] = t[0] * n, e[1] = t[1] * n, e
        }

        function pe(e, t) {
            var n = oe(t);
            return 0 === n ? (e[0] = 0, e[1] = 0) : (e[0] = t[0] / n, e[1] = t[1] / n), e
        }

        function he(e, t) {
            return Math.sqrt((e[0] - t[0]) * (e[0] - t[0]) + (e[1] - t[1]) * (e[1] - t[1]))
        }

        function de(e, t) {
            return (e[0] - t[0]) * (e[0] - t[0]) + (e[1] - t[1]) * (e[1] - t[1])
        }

        function fe(e, t) {
            return e[0] = -t[0], e[1] = -t[1], e
        }

        function ge(e, t, n, i) {
            return e[0] = t[0] + i * (n[0] - t[0]), e[1] = t[1] + i * (n[1] - t[1]), e
        }

        function me(e, t, n) {
            var i = t[0],
                r = t[1];
            return e[0] = n[0] * i + n[2] * r + n[4], e[1] = n[1] * i + n[3] * r + n[5], e
        }

        function ye(e, t, n) {
            return e[0] = Math.min(t[0], n[0]), e[1] = Math.min(t[1], n[1]), e
        }

        function ve(e, t, n) {
            return e[0] = Math.max(t[0], n[0]), e[1] = Math.max(t[1], n[1]), e
        }

        function xe(e, t, n, i, r, o) {
            var a = i + "-" + r,
                s = e.length;
            if (o.hasOwnProperty(a)) return o[a];
            if (1 === t) {
                var l = Math.round(Math.log((1 << s) - 1 & ~r) / v_);
                return e[n][l]
            }
            for (var u = i | 1 << n, c = n + 1; i & 1 << c;) c++;
            for (var p = 0, h = 0, d = 0; s > h; h++) {
                var f = 1 << h;
                f & r || (p += (d % 2 ? -1 : 1) * e[n][h] * xe(e, t - 1, c, u, r | f, o), d++)
            }
            return o[a] = p, p
        }

        function _e(e, t) {
            var n = [
                    [e[0], e[1], 1, 0, 0, 0, -t[0] * e[0], -t[0] * e[1]],
                    [0, 0, 0, e[0], e[1], 1, -t[1] * e[0], -t[1] * e[1]],
                    [e[2], e[3], 1, 0, 0, 0, -t[2] * e[2], -t[2] * e[3]],
                    [0, 0, 0, e[2], e[3], 1, -t[3] * e[2], -t[3] * e[3]],
                    [e[4], e[5], 1, 0, 0, 0, -t[4] * e[4], -t[4] * e[5]],
                    [0, 0, 0, e[4], e[5], 1, -t[5] * e[4], -t[5] * e[5]],
                    [e[6], e[7], 1, 0, 0, 0, -t[6] * e[6], -t[6] * e[7]],
                    [0, 0, 0, e[6], e[7], 1, -t[7] * e[6], -t[7] * e[7]]
                ],
                i = {},
                r = xe(n, 8, 0, 0, 0, i);
            if (0 !== r) {
                for (var o = [], a = 0; 8 > a; a++)
                    for (var s = 0; 8 > s; s++) null == o[s] && (o[s] = 0), o[s] += ((a + s) % 2 ? -1 : 1) * xe(n, 7, 0 === a ? 1 : 0, 1 << a, 1 << s, i) / r * t[a];
                return function (e, t, n) {
                    var i = t * o[6] + n * o[7] + 1;
                    e[0] = (t * o[0] + n * o[1] + o[2]) / i, e[1] = (t * o[3] + n * o[4] + o[5]) / i
                }
            }
        }

        function we(e, t, n, i, r) {
            return be(__, t, i, r, !0) && be(e, n, __[0], __[1])
        }

        function be(e, t, n, i, r) {
            if (t.getBoundingClientRect && zx.domSupported && !Ce(t)) {
                var o = t[x_] || (t[x_] = {}),
                    a = Se(t, o),
                    s = Te(a, o, r);
                if (s) return s(e, n, i), !0
            }
            return !1
        }

        function Se(e, t) {
            var n = t.markers;
            if (n) return n;
            n = t.markers = [];
            for (var i = ["left", "right"], r = ["top", "bottom"], o = 0; 4 > o; o++) {
                var a = document.createElement("div"),
                    s = a.style,
                    l = o % 2,
                    u = (o >> 1) % 2;
                s.cssText = ["position: absolute", "visibility: hidden", "padding: 0", "margin: 0", "border-width: 0", "user-select: none", "width:0", "height:0", i[l] + ":0", r[u] + ":0", i[1 - l] + ":auto", r[1 - u] + ":auto", ""].join("!important;"), e.appendChild(a), n.push(a)
            }
            return n
        }

        function Te(e, t, n) {
            for (var i = n ? "invTrans" : "trans", r = t[i], o = t.srcCoords, a = [], s = [], l = !0, u = 0; 4 > u; u++) {
                var c = e[u].getBoundingClientRect(),
                    p = 2 * u,
                    h = c.left,
                    d = c.top;
                a.push(h, d), l = l && o && h === o[p] && d === o[p + 1], s.push(e[u].offsetLeft, e[u].offsetTop)
            }
            return l && r ? r : (t.srcCoords = a, t[i] = n ? _e(s, a) : _e(a, s))
        }

        function Ce(e) {
            return "CANVAS" === e.nodeName.toUpperCase()
        }

        function Me(e) {
            return null == e ? "" : (e + "").replace(w_, function (e, t) {
                return b_[t]
            })
        }

        function Ie(e, t, n, i) {
            return n = n || {}, i ? ke(e, t, n) : C_ && null != t.layerX && t.layerX !== t.offsetX ? (n.zrX = t.layerX, n.zrY = t.layerY) : null != t.offsetX ? (n.zrX = t.offsetX, n.zrY = t.offsetY) : ke(e, t, n), n
        }

        function ke(e, t, n) {
            if (zx.domSupported && e.getBoundingClientRect) {
                var i = t.clientX,
                    r = t.clientY;
                if (Ce(e)) {
                    var o = e.getBoundingClientRect();
                    return n.zrX = i - o.left, void(n.zrY = r - o.top)
                }
                if (be(T_, e, i, r)) return n.zrX = T_[0], void(n.zrY = T_[1])
            }
            n.zrX = n.zrY = 0
        }

        function De(e) {
            return e || window.event
        }

        function Ae(e, t, n) {
            if (t = De(t), null != t.zrX) return t;
            var i = t.type,
                r = i && i.indexOf("touch") >= 0;
            if (r) {
                var o = "touchend" !== i ? t.targetTouches[0] : t.changedTouches[0];
                o && Ie(e, o, t, n)
            } else {
                Ie(e, t, t, n);
                var a = Pe(t);
                t.zrDelta = a ? a / 120 : -(t.detail || 0) / 3
            }
            var s = t.button;
            return null == t.which && void 0 !== s && S_.test(t.type) && (t.which = 1 & s ? 1 : 2 & s ? 3 : 4 & s ? 2 : 0), t
        }

        function Pe(e) {
            var t = e.wheelDelta;
            if (t) return t;
            var n = e.deltaX,
                i = e.deltaY;
            if (null == n || null == i) return t;
            var r = Math.abs(0 !== i ? i : n),
                o = i > 0 ? -1 : 0 > i ? 1 : n > 0 ? -1 : 1;
            return 3 * r * o
        }

        function Le(e, t, n, i) {
            e.addEventListener(t, n, i)
        }

        function Ne(e, t, n, i) {
            e.removeEventListener(t, n, i)
        }

        function Oe(e) {
            return 2 === e.which || 3 === e.which
        }

        function Ee(e) {
            var t = e[1][0] - e[0][0],
                n = e[1][1] - e[0][1];
            return Math.sqrt(t * t + n * n)
        }

        function Re(e) {
            return [(e[0][0] + e[1][0]) / 2, (e[0][1] + e[1][1]) / 2]
        }

        function ze() {
            return [1, 0, 0, 1, 0, 0]
        }

        function Be(e) {
            return e[0] = 1, e[1] = 0, e[2] = 0, e[3] = 1, e[4] = 0, e[5] = 0, e
        }

        function Fe(e, t) {
            return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e[4] = t[4], e[5] = t[5], e
        }

        function He(e, t, n) {
            var i = t[0] * n[0] + t[2] * n[1],
                r = t[1] * n[0] + t[3] * n[1],
                o = t[0] * n[2] + t[2] * n[3],
                a = t[1] * n[2] + t[3] * n[3],
                s = t[0] * n[4] + t[2] * n[5] + t[4],
                l = t[1] * n[4] + t[3] * n[5] + t[5];
            return e[0] = i, e[1] = r, e[2] = o, e[3] = a, e[4] = s, e[5] = l, e
        }

        function Ge(e, t, n) {
            return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e[4] = t[4] + n[0], e[5] = t[5] + n[1], e
        }

        function Ve(e, t, n) {
            var i = t[0],
                r = t[2],
                o = t[4],
                a = t[1],
                s = t[3],
                l = t[5],
                u = Math.sin(n),
                c = Math.cos(n);
            return e[0] = i * c + a * u, e[1] = -i * u + a * c, e[2] = r * c + s * u, e[3] = -r * u + c * s, e[4] = c * o + u * l, e[5] = c * l - u * o, e
        }

        function We(e, t, n) {
            var i = n[0],
                r = n[1];
            return e[0] = t[0] * i, e[1] = t[1] * r, e[2] = t[2] * i, e[3] = t[3] * r, e[4] = t[4] * i, e[5] = t[5] * r, e
        }

        function je(e, t) {
            var n = t[0],
                i = t[2],
                r = t[4],
                o = t[1],
                a = t[3],
                s = t[5],
                l = n * a - o * i;
            return l ? (l = 1 / l, e[0] = a * l, e[1] = -o * l, e[2] = -i * l, e[3] = n * l, e[4] = (i * s - a * r) * l, e[5] = (o * r - n * s) * l, e) : null
        }

        function Xe(e) {
            var t = ze();
            return Fe(t, e), t
        }

        function Ye(e, t, n) {
            return {
                type: e,
                event: n,
                target: t.target,
                topTarget: t.topTarget,
                cancelBubble: !1,
                offsetX: n.zrX,
                offsetY: n.zrY,
                gestureEvent: n.gestureEvent,
                pinchX: n.pinchX,
                pinchY: n.pinchY,
                pinchScale: n.pinchScale,
                wheelDelta: n.zrDelta,
                zrByTouch: n.zrByTouch,
                which: n.which,
                stop: Ue
            }
        }

        function Ue() {
            M_(this.event)
        }

        function qe(e, t, n) {
            if (e[e.rectHover ? "rectContain" : "contain"](t, n)) {
                for (var i = e, r = void 0, o = !1; i;) {
                    if (i.ignoreClip && (o = !0), !o) {
                        var a = i.getClipPath();
                        if (a && !a.contain(t, n)) return !1;
                        i.silent && (r = !0)
                    }
                    var s = i.__hostTarget;
                    i = s || i.parent
                }
                return !r || H_
            }
            return !1
        }

        function Ze(e, t, n, i, r) {
            for (var o = e.length - 1; o >= 0; o--) {
                var a = e[o],
                    s = void 0;
                if (a !== r && !a.ignore && (s = qe(a, n, i)) && (!t.topTarget && (t.topTarget = a), s !== H_)) {
                    t.target = a;
                    break
                }
            }
        }

        function $e(e, t, n) {
            var i = e.painter;
            return 0 > t || t > i.getWidth() || 0 > n || n > i.getHeight()
        }

        function Ke(e) {
            for (var t = 0; e >= U_;) t |= 1 & e, e >>= 1;
            return e + t
        }

        function Je(e, t, n, i) {
            var r = t + 1;
            if (r === n) return 1;
            if (i(e[r++], e[t]) < 0) {
                for (; n > r && i(e[r], e[r - 1]) < 0;) r++;
                Qe(e, t, r)
            } else
                for (; n > r && i(e[r], e[r - 1]) >= 0;) r++;
            return r - t
        }

        function Qe(e, t, n) {
            for (n--; n > t;) {
                var i = e[t];
                e[t++] = e[n], e[n--] = i
            }
        }

        function et(e, t, n, i, r) {
            for (i === t && i++; n > i; i++) {
                for (var o, a = e[i], s = t, l = i; l > s;) o = s + l >>> 1, r(a, e[o]) < 0 ? l = o : s = o + 1;
                var u = i - s;
                switch (u) {
                    case 3:
                        e[s + 3] = e[s + 2];
                    case 2:
                        e[s + 2] = e[s + 1];
                    case 1:
                        e[s + 1] = e[s];
                        break;
                    default:
                        for (; u > 0;) e[s + u] = e[s + u - 1], u--
                }
                e[s] = a
            }
        }

        function tt(e, t, n, i, r, o) {
            var a = 0,
                s = 0,
                l = 1;
            if (o(e, t[n + r]) > 0) {
                for (s = i - r; s > l && o(e, t[n + r + l]) > 0;) a = l, l = 1 + (l << 1), 0 >= l && (l = s);
                l > s && (l = s), a += r, l += r
            } else {
                for (s = r + 1; s > l && o(e, t[n + r - l]) <= 0;) a = l, l = 1 + (l << 1), 0 >= l && (l = s);
                l > s && (l = s);
                var u = a;
                a = r - l, l = r - u
            }
            for (a++; l > a;) {
                var c = a + (l - a >>> 1);
                o(e, t[n + c]) > 0 ? a = c + 1 : l = c
            }
            return l
        }

        function nt(e, t, n, i, r, o) {
            var a = 0,
                s = 0,
                l = 1;
            if (o(e, t[n + r]) < 0) {
                for (s = r + 1; s > l && o(e, t[n + r - l]) < 0;) a = l, l = 1 + (l << 1), 0 >= l && (l = s);
                l > s && (l = s);
                var u = a;
                a = r - l, l = r - u
            } else {
                for (s = i - r; s > l && o(e, t[n + r + l]) >= 0;) a = l, l = 1 + (l << 1), 0 >= l && (l = s);
                l > s && (l = s), a += r, l += r
            }
            for (a++; l > a;) {
                var c = a + (l - a >>> 1);
                o(e, t[n + c]) < 0 ? l = c : a = c + 1
            }
            return l
        }

        function it(e, t) {
            function n(e, t) {
                l[p] = e, u[p] = t, p += 1
            }

            function i() {
                for (; p > 1;) {
                    var e = p - 2;
                    if (e >= 1 && u[e - 1] <= u[e] + u[e + 1] || e >= 2 && u[e - 2] <= u[e] + u[e - 1]) u[e - 1] < u[e + 1] && e--;
                    else if (u[e] > u[e + 1]) break;
                    o(e)
                }
            }

            function r() {
                for (; p > 1;) {
                    var e = p - 2;
                    e > 0 && u[e - 1] < u[e + 1] && e--, o(e)
                }
            }

            function o(n) {
                var i = l[n],
                    r = u[n],
                    o = l[n + 1],
                    c = u[n + 1];
                u[n] = r + c, n === p - 3 && (l[n + 1] = l[n + 2], u[n + 1] = u[n + 2]), p--;
                var h = nt(e[o], e, i, r, 0, t);
                i += h, r -= h, 0 !== r && (c = tt(e[i + r - 1], e, o, c, c - 1, t), 0 !== c && (c >= r ? a(i, r, o, c) : s(i, r, o, c)))
            }

            function a(n, i, r, o) {
                var a = 0;
                for (a = 0; i > a; a++) h[a] = e[n + a];
                var s = 0,
                    l = r,
                    u = n;
                if (e[u++] = e[l++], 0 != --o) {
                    if (1 === i) {
                        for (a = 0; o > a; a++) e[u + a] = e[l + a];
                        return void(e[u + o] = h[s])
                    }
                    for (var p, d, f, g = c;;) {
                        p = 0, d = 0, f = !1;
                        do {
                            if (t(e[l], h[s]) < 0) {
                                if (e[u++] = e[l++], d++, p = 0, 0 == --o) {
                                    f = !0;
                                    break
                                }
                            } else if (e[u++] = h[s++], p++, d = 0, 1 == --i) {
                                f = !0;
                                break
                            }
                        } while (g > (p | d));
                        if (f) break;
                        do {
                            if (p = nt(e[l], h, s, i, 0, t), 0 !== p) {
                                for (a = 0; p > a; a++) e[u + a] = h[s + a];
                                if (u += p, s += p, i -= p, 1 >= i) {
                                    f = !0;
                                    break
                                }
                            }
                            if (e[u++] = e[l++], 0 == --o) {
                                f = !0;
                                break
                            }
                            if (d = tt(h[s], e, l, o, 0, t), 0 !== d) {
                                for (a = 0; d > a; a++) e[u + a] = e[l + a];
                                if (u += d, l += d, o -= d, 0 === o) {
                                    f = !0;
                                    break
                                }
                            }
                            if (e[u++] = h[s++], 1 == --i) {
                                f = !0;
                                break
                            }
                            g--
                        } while (p >= q_ || d >= q_);
                        if (f) break;
                        0 > g && (g = 0), g += 2
                    }
                    if (c = g, 1 > c && (c = 1), 1 === i) {
                        for (a = 0; o > a; a++) e[u + a] = e[l + a];
                        e[u + o] = h[s]
                    } else {
                        if (0 === i) throw new Error;
                        for (a = 0; i > a; a++) e[u + a] = h[s + a]
                    }
                } else
                    for (a = 0; i > a; a++) e[u + a] = h[s + a]
            }

            function s(n, i, r, o) {
                var a = 0;
                for (a = 0; o > a; a++) h[a] = e[r + a];
                var s = n + i - 1,
                    l = o - 1,
                    u = r + o - 1,
                    p = 0,
                    d = 0;
                if (e[u--] = e[s--], 0 != --i) {
                    if (1 === o) {
                        for (u -= i, s -= i, d = u + 1, p = s + 1, a = i - 1; a >= 0; a--) e[d + a] = e[p + a];
                        return void(e[u] = h[l])
                    }
                    for (var f = c;;) {
                        var g = 0,
                            m = 0,
                            y = !1;
                        do {
                            if (t(h[l], e[s]) < 0) {
                                if (e[u--] = e[s--], g++, m = 0, 0 == --i) {
                                    y = !0;
                                    break
                                }
                            } else if (e[u--] = h[l--], m++, g = 0, 1 == --o) {
                                y = !0;
                                break
                            }
                        } while (f > (g | m));
                        if (y) break;
                        do {
                            if (g = i - nt(h[l], e, n, i, i - 1, t), 0 !== g) {
                                for (u -= g, s -= g, i -= g, d = u + 1, p = s + 1, a = g - 1; a >= 0; a--) e[d + a] = e[p + a];
                                if (0 === i) {
                                    y = !0;
                                    break
                                }
                            }
                            if (e[u--] = h[l--], 1 == --o) {
                                y = !0;
                                break
                            }
                            if (m = o - tt(e[s], h, 0, o, o - 1, t), 0 !== m) {
                                for (u -= m, l -= m, o -= m, d = u + 1, p = l + 1, a = 0; m > a; a++) e[d + a] = h[p + a];
                                if (1 >= o) {
                                    y = !0;
                                    break
                                }
                            }
                            if (e[u--] = e[s--], 0 == --i) {
                                y = !0;
                                break
                            }
                            f--
                        } while (g >= q_ || m >= q_);
                        if (y) break;
                        0 > f && (f = 0), f += 2
                    }
                    if (c = f, 1 > c && (c = 1), 1 === o) {
                        for (u -= i, s -= i, d = u + 1, p = s + 1, a = i - 1; a >= 0; a--) e[d + a] = e[p + a];
                        e[u] = h[l]
                    } else {
                        if (0 === o) throw new Error;
                        for (p = u - (o - 1), a = 0; o > a; a++) e[p + a] = h[a]
                    }
                } else
                    for (p = u - (o - 1), a = 0; o > a; a++) e[p + a] = h[a]
            }
            var l, u, c = q_,
                p = 0,
                h = [];
            return l = [], u = [], {
                mergeRuns: i,
                forceMergeRuns: r,
                pushRun: n
            }
        }

        function rt(e, t, n, i) {
            n || (n = 0), i || (i = e.length);
            var r = i - n;
            if (!(2 > r)) {
                var o = 0;
                if (U_ > r) return o = Je(e, n, i, t), void et(e, n, i, n + o, t);
                var a = it(e, t),
                    s = Ke(r);
                do {
                    if (o = Je(e, n, i, t), s > o) {
                        var l = r;
                        l > s && (l = s), et(e, n, n + l, n + o, t), o = l
                    }
                    a.pushRun(n, o), a.mergeRuns(), r -= o, n += o
                } while (0 !== r);
                a.forceMergeRuns()
            }
        }

        function ot() {
            J_ || (J_ = !0, console.warn("z / z2 / zlevel of displayable is invalid, which may cause unexpected errors"))
        }

        function at(e, t) {
            return e.zlevel === t.zlevel ? e.z === t.z ? e.z2 - t.z2 : e.z - t.z : e.zlevel - t.zlevel
        }

        function st(e) {
            return e > -rw && rw > e
        }

        function lt(e) {
            return e > rw || -rw > e
        }

        function ut(e, t, n, i, r) {
            var o = 1 - r;
            return o * o * (o * e + 3 * r * t) + r * r * (r * i + 3 * o * n)
        }

        function ct(e, t, n, i, r) {
            var o = 1 - r;
            return 3 * (((t - e) * o + 2 * (n - t) * r) * o + (i - n) * r * r)
        }

        function pt(e, t, n, i, r, o) {
            var a = i + 3 * (t - n) - e,
                s = 3 * (n - 2 * t + e),
                l = 3 * (t - e),
                u = e - r,
                c = s * s - 3 * a * l,
                p = s * l - 9 * a * u,
                h = l * l - 3 * s * u,
                d = 0;
            if (st(c) && st(p))
                if (st(s)) o[0] = 0;
                else {
                    var f = -l / s;
                    f >= 0 && 1 >= f && (o[d++] = f)
                }
            else {
                var g = p * p - 4 * c * h;
                if (st(g)) {
                    var m = p / c,
                        y = (f = -s / a + m, -m / 2);
                    f >= 0 && 1 >= f && (o[d++] = f), y >= 0 && 1 >= y && (o[d++] = y)
                } else if (g > 0) {
                    var v = iw(g),
                        x = c * s + 1.5 * a * (-p + v),
                        _ = c * s + 1.5 * a * (-p - v);
                    x = 0 > x ? -nw(-x, sw) : nw(x, sw), _ = 0 > _ ? -nw(-_, sw) : nw(_, sw);
                    f = (-s - (x + _)) / (3 * a);
                    f >= 0 && 1 >= f && (o[d++] = f)
                } else {
                    var w = (2 * c * s - 3 * a * p) / (2 * iw(c * c * c)),
                        b = Math.acos(w) / 3,
                        S = iw(c),
                        T = Math.cos(b),
                        C = (f = (-s - 2 * S * T) / (3 * a), y = (-s + S * (T + aw * Math.sin(b))) / (3 * a), (-s + S * (T - aw * Math.sin(b))) / (3 * a));
                    f >= 0 && 1 >= f && (o[d++] = f), y >= 0 && 1 >= y && (o[d++] = y), C >= 0 && 1 >= C && (o[d++] = C)
                }
            }
            return d
        }

        function ht(e, t, n, i, r) {
            var o = 6 * n - 12 * t + 6 * e,
                a = 9 * t + 3 * i - 3 * e - 9 * n,
                s = 3 * t - 3 * e,
                l = 0;
            if (st(a)) {
                if (lt(o)) {
                    var u = -s / o;
                    u >= 0 && 1 >= u && (r[l++] = u)
                }
            } else {
                var c = o * o - 4 * a * s;
                if (st(c)) r[0] = -o / (2 * a);
                else if (c > 0) {
                    var p = iw(c),
                        h = (u = (-o + p) / (2 * a), (-o - p) / (2 * a));
                    u >= 0 && 1 >= u && (r[l++] = u), h >= 0 && 1 >= h && (r[l++] = h)
                }
            }
            return l
        }

        function dt(e, t, n, i, r, o) {
            var a = (t - e) * r + e,
                s = (n - t) * r + t,
                l = (i - n) * r + n,
                u = (s - a) * r + a,
                c = (l - s) * r + s,
                p = (c - u) * r + u;
            o[0] = e, o[1] = a, o[2] = u, o[3] = p, o[4] = p, o[5] = c, o[6] = l, o[7] = i
        }

        function ft(e, t, n, i, r, o, a, s, l, u, c) {
            var p, h, d, f, g, m = .005,
                y = 1 / 0;
            lw[0] = l, lw[1] = u;
            for (var v = 0; 1 > v; v += .05) uw[0] = ut(e, n, r, a, v), uw[1] = ut(t, i, o, s, v), f = d_(lw, uw), y > f && (p = v, y = f);
            y = 1 / 0;
            for (var x = 0; 32 > x && !(ow > m); x++) h = p - m, d = p + m, uw[0] = ut(e, n, r, a, h), uw[1] = ut(t, i, o, s, h), f = d_(uw, lw), h >= 0 && y > f ? (p = h, y = f) : (cw[0] = ut(e, n, r, a, d), cw[1] = ut(t, i, o, s, d), g = d_(cw, lw), 1 >= d && y > g ? (p = d, y = g) : m *= .5);
            return c && (c[0] = ut(e, n, r, a, p), c[1] = ut(t, i, o, s, p)), iw(y)
        }

        function gt(e, t, n, i, r, o, a, s, l) {
            for (var u = e, c = t, p = 0, h = 1 / l, d = 1; l >= d; d++) {
                var f = d * h,
                    g = ut(e, n, r, a, f),
                    m = ut(t, i, o, s, f),
                    y = g - u,
                    v = m - c;
                p += Math.sqrt(y * y + v * v), u = g, c = m
            }
            return p
        }

        function mt(e, t, n, i) {
            var r = 1 - i;
            return r * (r * e + 2 * i * t) + i * i * n
        }

        function yt(e, t, n, i) {
            return 2 * ((1 - i) * (t - e) + i * (n - t))
        }

        function vt(e, t, n, i, r) {
            var o = e - 2 * t + n,
                a = 2 * (t - e),
                s = e - i,
                l = 0;
            if (st(o)) {
                if (lt(a)) {
                    var u = -s / a;
                    u >= 0 && 1 >= u && (r[l++] = u)
                }
            } else {
                var c = a * a - 4 * o * s;
                if (st(c)) {
                    u = -a / (2 * o);
                    u >= 0 && 1 >= u && (r[l++] = u)
                } else if (c > 0) {
                    var p = iw(c),
                        h = (u = (-a + p) / (2 * o), (-a - p) / (2 * o));
                    u >= 0 && 1 >= u && (r[l++] = u), h >= 0 && 1 >= h && (r[l++] = h)
                }
            }
            return l
        }

        function xt(e, t, n) {
            var i = e + n - 2 * t;
            return 0 === i ? .5 : (e - t) / i
        }

        function _t(e, t, n, i, r) {
            var o = (t - e) * i + e,
                a = (n - t) * i + t,
                s = (a - o) * i + o;
            r[0] = e, r[1] = o, r[2] = s, r[3] = s, r[4] = a, r[5] = n
        }

        function wt(e, t, n, i, r, o, a, s, l) {
            var u, c = .005,
                p = 1 / 0;
            lw[0] = a, lw[1] = s;
            for (var h = 0; 1 > h; h += .05) {
                uw[0] = mt(e, n, r, h), uw[1] = mt(t, i, o, h);
                var d = d_(lw, uw);
                p > d && (u = h, p = d)
            }
            p = 1 / 0;
            for (var f = 0; 32 > f && !(ow > c); f++) {
                var g = u - c,
                    m = u + c;
                uw[0] = mt(e, n, r, g), uw[1] = mt(t, i, o, g);
                d = d_(uw, lw);
                if (g >= 0 && p > d) u = g, p = d;
                else {
                    cw[0] = mt(e, n, r, m), cw[1] = mt(t, i, o, m);
                    var y = d_(cw, lw);
                    1 >= m && p > y ? (u = m, p = y) : c *= .5
                }
            }
            return l && (l[0] = mt(e, n, r, u), l[1] = mt(t, i, o, u)), iw(p)
        }

        function bt(e, t, n, i, r, o, a) {
            for (var s = e, l = t, u = 0, c = 1 / a, p = 1; a >= p; p++) {
                var h = p * c,
                    d = mt(e, n, r, h),
                    f = mt(t, i, o, h),
                    g = d - s,
                    m = f - l;
                u += Math.sqrt(g * g + m * m), s = d, l = f
            }
            return u
        }

        function St(e) {
            var t = e && pw.exec(e);
            if (t) {
                var n = t[1].split(","),
                    i = +W(n[0]),
                    r = +W(n[1]),
                    o = +W(n[2]),
                    a = +W(n[3]);
                if (isNaN(i + r + o + a)) return;
                var s = [];
                return function (e) {
                    return 0 >= e ? 0 : e >= 1 ? 1 : pt(0, i, o, 1, e, s) && ut(0, r, a, 1, s[0])
                }
            }
        }

        function Tt(e) {
            return e = Math.round(e), 0 > e ? 0 : e > 255 ? 255 : e
        }

        function Ct(e) {
            return e = Math.round(e), 0 > e ? 0 : e > 360 ? 360 : e
        }

        function Mt(e) {
            return 0 > e ? 0 : e > 1 ? 1 : e
        }

        function It(e) {
            var t = e;
            return Tt(t.length && "%" === t.charAt(t.length - 1) ? parseFloat(t) / 100 * 255 : parseInt(t, 10))
        }

        function kt(e) {
            var t = e;
            return Mt(t.length && "%" === t.charAt(t.length - 1) ? parseFloat(t) / 100 : parseFloat(t))
        }

        function Dt(e, t, n) {
            return 0 > n ? n += 1 : n > 1 && (n -= 1), 1 > 6 * n ? e + (t - e) * n * 6 : 1 > 2 * n ? t : 2 > 3 * n ? e + (t - e) * (2 / 3 - n) * 6 : e
        }

        function At(e, t, n) {
            return e + (t - e) * n
        }

        function Pt(e, t, n, i, r) {
            return e[0] = t, e[1] = n, e[2] = i, e[3] = r, e
        }

        function Lt(e, t) {
            return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e
        }

        function Nt(e, t) {
            vw && Lt(vw, t), vw = yw.put(e, vw || t.slice())
        }

        function Ot(e, t) {
            if (e) {
                t = t || [];
                var n = yw.get(e);
                if (n) return Lt(t, n);
                e += "";
                var i = e.replace(/ /g, "").toLowerCase();
                if (i in mw) return Lt(t, mw[i]), Nt(e, t), t;
                var r = i.length;
                if ("#" !== i.charAt(0)) {
                    var o = i.indexOf("("),
                        a = i.indexOf(")");
                    if (-1 !== o && a + 1 === r) {
                        var s = i.substr(0, o),
                            l = i.substr(o + 1, a - (o + 1)).split(","),
                            u = 1;
                        switch (s) {
                            case "rgba":
                                if (4 !== l.length) return 3 === l.length ? Pt(t, +l[0], +l[1], +l[2], 1) : Pt(t, 0, 0, 0, 1);
                                u = kt(l.pop());
                            case "rgb":
                                return l.length >= 3 ? (Pt(t, It(l[0]), It(l[1]), It(l[2]), 3 === l.length ? u : kt(l[3])), Nt(e, t), t) : void Pt(t, 0, 0, 0, 1);
                            case "hsla":
                                return 4 !== l.length ? void Pt(t, 0, 0, 0, 1) : (l[3] = kt(l[3]), Et(l, t), Nt(e, t), t);
                            case "hsl":
                                return 3 !== l.length ? void Pt(t, 0, 0, 0, 1) : (Et(l, t), Nt(e, t), t);
                            default:
                                return
                        }
                    }
                    Pt(t, 0, 0, 0, 1)
                } else {
                    if (4 === r || 5 === r) {
                        var c = parseInt(i.slice(1, 4), 16);
                        return c >= 0 && 4095 >= c ? (Pt(t, (3840 & c) >> 4 | (3840 & c) >> 8, 240 & c | (240 & c) >> 4, 15 & c | (15 & c) << 4, 5 === r ? parseInt(i.slice(4), 16) / 15 : 1), Nt(e, t), t) : void Pt(t, 0, 0, 0, 1)
                    }
                    if (7 === r || 9 === r) {
                        c = parseInt(i.slice(1, 7), 16);
                        return c >= 0 && 16777215 >= c ? (Pt(t, (16711680 & c) >> 16, (65280 & c) >> 8, 255 & c, 9 === r ? parseInt(i.slice(7), 16) / 255 : 1), Nt(e, t), t) : void Pt(t, 0, 0, 0, 1)
                    }
                }
            }
        }

        function Et(e, t) {
            var n = (parseFloat(e[0]) % 360 + 360) % 360 / 360,
                i = kt(e[1]),
                r = kt(e[2]),
                o = .5 >= r ? r * (i + 1) : r + i - r * i,
                a = 2 * r - o;
            return t = t || [], Pt(t, Tt(255 * Dt(a, o, n + 1 / 3)), Tt(255 * Dt(a, o, n)), Tt(255 * Dt(a, o, n - 1 / 3)), 1), 4 === e.length && (t[3] = e[3]), t
        }

        function Rt(e) {
            if (e) {
                var t, n, i = e[0] / 255,
                    r = e[1] / 255,
                    o = e[2] / 255,
                    a = Math.min(i, r, o),
                    s = Math.max(i, r, o),
                    l = s - a,
                    u = (s + a) / 2;
                if (0 === l) t = 0, n = 0;
                else {
                    n = .5 > u ? l / (s + a) : l / (2 - s - a);
                    var c = ((s - i) / 6 + l / 2) / l,
                        p = ((s - r) / 6 + l / 2) / l,
                        h = ((s - o) / 6 + l / 2) / l;
                    i === s ? t = h - p : r === s ? t = 1 / 3 + c - h : o === s && (t = 2 / 3 + p - c), 0 > t && (t += 1), t > 1 && (t -= 1)
                }
                var d = [360 * t, n, u];
                return null != e[3] && d.push(e[3]), d
            }
        }

        function zt(e, t) {
            var n = Ot(e);
            if (n) {
                for (var i = 0; 3 > i; i++) n[i] = 0 > t ? n[i] * (1 - t) | 0 : (255 - n[i]) * t + n[i] | 0, n[i] > 255 ? n[i] = 255 : n[i] < 0 && (n[i] = 0);
                return Wt(n, 4 === n.length ? "rgba" : "rgb")
            }
        }

        function Bt(e) {
            var t = Ot(e);
            return t ? ((1 << 24) + (t[0] << 16) + (t[1] << 8) + +t[2]).toString(16).slice(1) : void 0
        }

        function Ft(e, t, n) {
            if (t && t.length && e >= 0 && 1 >= e) {
                n = n || [];
                var i = e * (t.length - 1),
                    r = Math.floor(i),
                    o = Math.ceil(i),
                    a = t[r],
                    s = t[o],
                    l = i - r;
                return n[0] = Tt(At(a[0], s[0], l)), n[1] = Tt(At(a[1], s[1], l)), n[2] = Tt(At(a[2], s[2], l)), n[3] = Mt(At(a[3], s[3], l)), n
            }
        }

        function Ht(e, t, n) {
            if (t && t.length && e >= 0 && 1 >= e) {
                var i = e * (t.length - 1),
                    r = Math.floor(i),
                    o = Math.ceil(i),
                    a = Ot(t[r]),
                    s = Ot(t[o]),
                    l = i - r,
                    u = Wt([Tt(At(a[0], s[0], l)), Tt(At(a[1], s[1], l)), Tt(At(a[2], s[2], l)), Mt(At(a[3], s[3], l))], "rgba");
                return n ? {
                    color: u,
                    leftIndex: r,
                    rightIndex: o,
                    value: i
                } : u
            }
        }

        function Gt(e, t, n, i) {
            var r = Ot(e);
            return e ? (r = Rt(r), null != t && (r[0] = Ct(t)), null != n && (r[1] = kt(n)), null != i && (r[2] = kt(i)), Wt(Et(r), "rgba")) : void 0
        }

        function Vt(e, t) {
            var n = Ot(e);
            return n && null != t ? (n[3] = Mt(t), Wt(n, "rgba")) : void 0
        }

        function Wt(e, t) {
            if (e && e.length) {
                var n = e[0] + "," + e[1] + "," + e[2];
                return ("rgba" === t || "hsva" === t || "hsla" === t) && (n += "," + e[3]), t + "(" + n + ")"
            }
        }

        function jt(e, t) {
            var n = Ot(e);
            return n ? (.299 * n[0] + .587 * n[1] + .114 * n[2]) * n[3] / 255 + (1 - n[3]) * t : 0
        }

        function Xt() {
            return Wt([Math.round(255 * Math.random()), Math.round(255 * Math.random()), Math.round(255 * Math.random())], "rgb")
        }

        function Yt(e) {
            var t;
            if (e && "transparent" !== e) {
                if ("string" == typeof e && e.indexOf("rgba") > -1) {
                    var n = Ot(e);
                    n && (e = "rgb(" + n[0] + "," + n[1] + "," + n[2] + ")", t = n[3])
                }
            } else e = "none";
            return {
                color: e,
                opacity: null == t ? 1 : t
            }
        }

        function Ut(e) {
            return Sw > e && e > -Sw
        }

        function qt(e) {
            return bw(1e3 * e) / 1e3
        }

        function Zt(e) {
            return bw(1e4 * e) / 1e4
        }

        function $t(e) {
            return "matrix(" + qt(e[0]) + "," + qt(e[1]) + "," + qt(e[2]) + "," + qt(e[3]) + "," + Zt(e[4]) + "," + Zt(e[5]) + ")"
        }

        function Kt(e, t, n) {
            return "top" === n ? e += t / 2 : "bottom" === n && (e -= t / 2), e
        }

        function Jt(e) {
            return e && (e.shadowBlur || e.shadowOffsetX || e.shadowOffsetY)
        }

        function Qt(e) {
            var t = e.style,
                n = e.getGlobalScale();
            return [t.shadowColor, (t.shadowBlur || 0).toFixed(2), (t.shadowOffsetX || 0).toFixed(2), (t.shadowOffsetY || 0).toFixed(2), n[0], n[1]].join(",")
        }

        function en(e) {
            return e && !!e.image
        }

        function tn(e) {
            return e && !!e.svgElement
        }

        function nn(e) {
            return en(e) || tn(e)
        }

        function rn(e) {
            return "linear" === e.type
        }

        function on(e) {
            return "radial" === e.type
        }

        function an(e) {
            return e && ("linear" === e.type || "radial" === e.type)
        }

        function sn(e) {
            return "url(#" + e + ")"
        }

        function ln(e) {
            var t = e.getGlobalScale(),
                n = Math.max(t[0], t[1]);
            return Math.max(Math.ceil(Math.log(n) / Math.log(10)), 1)
        }

        function un(e) {
            var t = e.x || 0,
                n = e.y || 0,
                i = (e.rotation || 0) * l_,
                r = B(e.scaleX, 1),
                o = B(e.scaleY, 1),
                a = e.skewX || 0,
                s = e.skewY || 0,
                l = [];
            return (t || n) && l.push("translate(" + t + "px," + n + "px)"), i && l.push("rotate(" + i + ")"), (1 !== r || 1 !== o) && l.push("scale(" + r + "," + o + ")"), (a || s) && l.push("skew(" + bw(a * l_) + "deg, " + bw(s * l_) + "deg)"), l.join(" ")
        }

        function cn(e, t, n) {
            return (t - e) * n + e
        }

        function pn(e, t, n, i) {
            for (var r = t.length, o = 0; r > o; o++) e[o] = cn(t[o], n[o], i);
            return e
        }

        function hn(e, t, n, i) {
            for (var r = t.length, o = r && t[0].length, a = 0; r > a; a++) {
                e[a] || (e[a] = []);
                for (var s = 0; o > s; s++) e[a][s] = cn(t[a][s], n[a][s], i)
            }
            return e
        }

        function dn(e, t, n, i) {
            for (var r = t.length, o = 0; r > o; o++) e[o] = t[o] + n[o] * i;
            return e
        }

        function fn(e, t, n, i) {
            for (var r = t.length, o = r && t[0].length, a = 0; r > a; a++) {
                e[a] || (e[a] = []);
                for (var s = 0; o > s; s++) e[a][s] = t[a][s] + n[a][s] * i
            }
            return e
        }

        function gn(e, t) {
            for (var n = e.length, i = t.length, r = n > i ? t : e, o = Math.min(n, i), a = r[o - 1] || {
                    color: [0, 0, 0, 0],
                    offset: 0
                }, s = o; s < Math.max(n, i); s++) r.push({
                offset: a.offset,
                color: a.color.slice()
            })
        }

        function mn(e, t, n) {
            var i = e,
                r = t;
            if (i.push && r.push) {
                var o = i.length,
                    a = r.length;
                if (o !== a) {
                    var s = o > a;
                    if (s) i.length = a;
                    else
                        for (var l = o; a > l; l++) i.push(1 === n ? r[l] : Mw.call(r[l]))
                }
                var u = i[0] && i[0].length;
                for (l = 0; l < i.length; l++)
                    if (1 === n) isNaN(i[l]) && (i[l] = r[l]);
                    else
                        for (var c = 0; u > c; c++) isNaN(i[l][c]) && (i[l][c] = r[l][c])
            }
        }

        function yn(e) {
            if (g(e)) {
                var t = e.length;
                if (g(e[0])) {
                    for (var n = [], i = 0; t > i; i++) n.push(Mw.call(e[i]));
                    return n
                }
                return Mw.call(e)
            }
            return e
        }

        function vn(e) {
            return e[0] = Math.floor(e[0]) || 0, e[1] = Math.floor(e[1]) || 0, e[2] = Math.floor(e[2]) || 0, e[3] = null == e[3] ? 1 : e[3], "rgba(" + e.join(",") + ")"
        }

        function xn(e) {
            return g(e && e[0]) ? 2 : 1
        }

        function _n(e) {
            return e === Pw || e === Lw
        }

        function wn(e) {
            return e === kw || e === Dw
        }

        function bn() {
            return (new Date).getTime()
        }

        function Sn(e) {
            var t = e.pointerType;
            return "pen" === t || "touch" === t
        }

        function Tn(e) {
            e.touching = !0, null != e.touchTimer && (clearTimeout(e.touchTimer), e.touchTimer = null), e.touchTimer = setTimeout(function () {
                e.touching = !1, e.touchTimer = null
            }, 700)
        }

        function Cn(e) {
            e && (e.zrByTouch = !0)
        }

        function Mn(e, t) {
            return Ae(e.dom, new Ww(e, t), !0)
        }

        function In(e, t) {
            for (var n = t, i = !1; n && 9 !== n.nodeType && !(i = n.domBelongToZr || n !== t && n === e.painterRoot);) n = n.parentNode;
            return i
        }

        function kn(e, t) {
            var n = t.domHandlers;
            zx.pointerEventsSupported ? m(Hw.pointer, function (i) {
                An(t, i, function (t) {
                    n[i].call(e, t)
                })
            }) : (zx.touchEventsSupported && m(Hw.touch, function (i) {
                An(t, i, function (r) {
                    n[i].call(e, r), Tn(t)
                })
            }), m(Hw.mouse, function (i) {
                An(t, i, function (r) {
                    r = De(r), t.touching || n[i].call(e, r)
                })
            }))
        }

        function Dn(e, t) {
            function n(n) {
                function i(i) {
                    i = De(i), In(e, i.target) || (i = Mn(e, i), t.domHandlers[n].call(e, i))
                }
                An(t, n, i, {
                    capture: !0
                })
            }
            zx.pointerEventsSupported ? m(Gw.pointer, n) : zx.touchEventsSupported || m(Gw.mouse, n)
        }

        function An(e, t, n, i) {
            e.mounted[t] = n, e.listenerOpts[t] = i, Le(e.domTarget, t, n, i)
        }

        function Pn(e) {
            var t = e.mounted;
            for (var n in t) t.hasOwnProperty(n) && Ne(e.domTarget, n, t[n], e.listenerOpts[n]);
            e.mounted = {}
        }

        function Ln(e) {
            return e > tb || -tb > e
        }

        function Nn(e, t) {
            for (var n = 0; n < sb.length; n++) {
                var i = sb[n];
                e[i] = t[i]
            }
        }

        function On(e, t) {
            t = t || Hx;
            var n = lb[t];
            n || (n = lb[t] = new gw(500));
            var i = n.get(e);
            return null == i && (i = Xx.measureText(e, t).width, n.put(e, i)), i
        }

        function En(e, t, n, i) {
            var r = On(e, t),
                o = Fn(t),
                a = zn(0, r, n),
                s = Bn(0, o, i),
                l = new F_(a, s, r, o);
            return l
        }

        function Rn(e, t, n, i) {
            var r = ((e || "") + "").split("\n"),
                o = r.length;
            if (1 === o) return En(r[0], t, n, i);
            for (var a = new F_(0, 0, 0, 0), s = 0; s < r.length; s++) {
                var l = En(r[s], t, n, i);
                0 === s ? a.copy(l) : a.union(l)
            }
            return a
        }

        function zn(e, t, n) {
            return "right" === n ? e -= t : "center" === n && (e -= t / 2), e
        }

        function Bn(e, t, n) {
            return "middle" === n ? e -= t / 2 : "bottom" === n && (e -= t), e
        }

        function Fn(e) {
            return On("国", e)
        }

        function Hn(e, t) {
            return "string" == typeof e ? e.lastIndexOf("%") >= 0 ? parseFloat(e) / 100 * t : parseFloat(e) : e
        }

        function Gn(e, t, n) {
            var i = t.position || "inside",
                r = null != t.distance ? t.distance : 5,
                o = n.height,
                a = n.width,
                s = o / 2,
                l = n.x,
                u = n.y,
                c = "left",
                p = "top";
            if (i instanceof Array) l += Hn(i[0], n.width), u += Hn(i[1], n.height), c = null, p = null;
            else switch (i) {
                case "left":
                    l -= r, u += s, c = "right", p = "middle";
                    break;
                case "right":
                    l += r + a, u += s, p = "middle";
                    break;
                case "top":
                    l += a / 2, u -= r, c = "center", p = "bottom";
                    break;
                case "bottom":
                    l += a / 2, u += o + r, c = "center";
                    break;
                case "inside":
                    l += a / 2, u += s, c = "center", p = "middle";
                    break;
                case "insideLeft":
                    l += r, u += s, p = "middle";
                    break;
                case "insideRight":
                    l += a - r, u += s, c = "right", p = "middle";
                    break;
                case "insideTop":
                    l += a / 2, u += r, c = "center";
                    break;
                case "insideBottom":
                    l += a / 2, u += o - r, c = "center", p = "bottom";
                    break;
                case "insideTopLeft":
                    l += r, u += r;
                    break;
                case "insideTopRight":
                    l += a - r, u += r, c = "right";
                    break;
                case "insideBottomLeft":
                    l += r, u += o - r, p = "bottom";
                    break;
                case "insideBottomRight":
                    l += a - r, u += o - r, c = "right", p = "bottom"
            }
            return e = e || {}, e.x = l, e.y = u, e.align = c, e.verticalAlign = p, e
        }

        function Vn(e, t, n, i, r) {
            n = n || {};
            var o = [];
            qn(e, "", e, t, n, i, o, r);
            var a = o.length,
                s = !1,
                l = n.done,
                u = n.aborted,
                c = function () {
                    s = !0, a--, 0 >= a && (s ? l && l() : u && u())
                },
                p = function () {
                    a--, 0 >= a && (s ? l && l() : u && u())
                };
            a || l && l(), o.length > 0 && n.during && o[0].during(function (e, t) {
                n.during(t)
            });
            for (var h = 0; h < o.length; h++) {
                var d = o[h];
                c && d.done(c), p && d.aborted(p), n.force && d.duration(n.duration), d.start(n.easing)
            }
            return o
        }

        function Wn(e, t, n) {
            for (var i = 0; n > i; i++) e[i] = t[i]
        }

        function jn(e) {
            return g(e[0])
        }

        function Xn(e, t, n) {
            if (g(t[n]))
                if (g(e[n]) || (e[n] = []), P(t[n])) {
                    var i = t[n].length;
                    e[n].length !== i && (e[n] = new t[n].constructor(i), Wn(e[n], t[n], i))
                } else {
                    var r = t[n],
                        o = e[n],
                        a = r.length;
                    if (jn(r))
                        for (var s = r[0].length, l = 0; a > l; l++) o[l] ? Wn(o[l], r[l], s) : o[l] = Array.prototype.slice.call(r[l]);
                    else Wn(o, r, a);
                    o.length = r.length
                }
            else e[n] = t[n]
        }

        function Yn(e, t) {
            return e === t || g(e) && g(t) && Un(e, t)
        }

        function Un(e, t) {
            var n = e.length;
            if (n !== t.length) return !1;
            for (var i = 0; n > i; i++)
                if (e[i] !== t[i]) return !1;
            return !0
        }

        function qn(e, t, n, i, r, o, a, s) {
            for (var l = w(i), u = r.duration, c = r.delay, p = r.additive, d = r.setToFinal, f = !D(o), m = e.animators, y = [], v = 0; v < l.length; v++) {
                var _ = l[v],
                    b = i[_];
                if (null != b && null != n[_] && (f || o[_]))
                    if (!D(b) || g(b) || N(b)) y.push(_);
                    else {
                        if (t) {
                            s || (n[_] = b, e.updateDuringAnimation(t));
                            continue
                        }
                        qn(e, _, n[_], b, r, o && o[_], a, s)
                    }
                else s || (n[_] = b, e.updateDuringAnimation(t), y.push(_))
            }
            var S = y.length;
            if (!p && S)
                for (var T = 0; T < m.length; T++) {
                    var C = m[T];
                    if (C.targetName === t) {
                        var M = C.stopTracks(y);
                        if (M) {
                            var I = h(m, C);
                            m.splice(I, 1)
                        }
                    }
                }
            if (r.force || (y = x(y, function (e) {
                    return !Yn(i[e], n[e])
                }), S = y.length), S > 0 || r.force && !a.length) {
                var k = void 0,
                    A = void 0,
                    P = void 0;
                if (s) {
                    A = {}, d && (k = {});
                    for (T = 0; S > T; T++) {
                        _ = y[T];
                        A[_] = n[_], d ? k[_] = i[_] : n[_] = i[_]
                    }
                } else if (d) {
                    P = {};
                    for (T = 0; S > T; T++) {
                        _ = y[T];
                        P[_] = yn(n[_]), Xn(n, i, _)
                    }
                }
                C = new Rw(n, !1, !1, p ? x(m, function (e) {
                    return e.targetName === t
                }) : null);
                C.targetName = t, r.scope && (C.scope = r.scope), d && k && C.whenWithKeys(0, k, y), P && C.whenWithKeys(0, P, y), C.whenWithKeys(null == u ? 500 : u, s ? A : i, y).delay(c || 0), e.addAnimator(C, t), a.push(C)
            }
        }

        function Zn(e) {
            delete yb[e]
        }

        function $n(e) {
            if (!e) return !1;
            if ("string" == typeof e) return jt(e, 1) < $w;
            if (e.colorStops) {
                for (var t = e.colorStops, n = 0, i = t.length, r = 0; i > r; r++) n += jt(t[r].color, 1);
                return n /= i, $w > n
            }
            return !1
        }

        function Kn(e, t) {
            var n = new vb(o(), e, t);
            return yb[n.id] = n, n
        }

        function Jn(e) {
            e.dispose()
        }

        function Qn() {
            for (var e in yb) yb.hasOwnProperty(e) && yb[e].dispose();
            yb = {}
        }

        function ei(e) {
            return yb[e]
        }

        function ti(e, t) {
            mb[e] = t
        }

        function ni(e) {
            return e.replace(/^\s+|\s+$/g, "")
        }

        function ii(e, t, n, i) {
            var r = t[0],
                o = t[1],
                a = n[0],
                s = n[1],
                l = o - r,
                u = s - a;
            if (0 === l) return 0 === u ? a : (a + s) / 2;
            if (i)
                if (l > 0) {
                    if (r >= e) return a;
                    if (e >= o) return s
                } else {
                    if (e >= r) return a;
                    if (o >= e) return s
                }
            else {
                if (e === r) return a;
                if (e === o) return s
            }
            return (e - r) / l * u + a
        }

        function ri(e, t) {
            switch (e) {
                case "center":
                case "middle":
                    e = "50%";
                    break;
                case "left":
                case "top":
                    e = "0%";
                    break;
                case "right":
                case "bottom":
                    e = "100%"
            }
            return M(e) ? ni(e).match(/%$/) ? parseFloat(e) / 100 * t : parseFloat(e) : null == e ? NaN : +e
        }

        function oi(e, t, n) {
            return null == t && (t = 10), t = Math.min(Math.max(0, t), bb), e = (+e).toFixed(t), n ? e : +e
        }

        function ai(e) {
            return e.sort(function (e, t) {
                return e - t
            }), e
        }

        function si(e) {
            if (e = +e, isNaN(e)) return 0;
            if (e > 1e-14)
                for (var t = 1, n = 0; 15 > n; n++, t *= 10)
                    if (Math.round(e * t) / t === e) return n;
            return li(e)
        }

        function li(e) {
            var t = e.toString().toLowerCase(),
                n = t.indexOf("e"),
                i = n > 0 ? +t.slice(n + 1) : 0,
                r = n > 0 ? n : t.length,
                o = t.indexOf("."),
                a = 0 > o ? 0 : r - 1 - o;
            return Math.max(0, a - i)
        }

        function ui(e, t) {
            var n = Math.log,
                i = Math.LN10,
                r = Math.floor(n(e[1] - e[0]) / i),
                o = Math.round(n(Math.abs(t[1] - t[0])) / i),
                a = Math.min(Math.max(-r + o, 0), 20);
            return isFinite(a) ? a : 20
        }

        function ci(e, t, n) {
            if (!e[t]) return 0;
            var i = pi(e, n);
            return i[t] || 0
        }

        function pi(e, t) {
            var n = v(e, function (e, t) {
                return e + (isNaN(t) ? 0 : t)
            }, 0);
            if (0 === n) return [];
            for (var i = Math.pow(10, t), r = y(e, function (e) {
                    return (isNaN(e) ? 0 : e) / n * i * 100
                }), o = 100 * i, a = y(r, function (e) {
                    return Math.floor(e)
                }), s = v(a, function (e, t) {
                    return e + t
                }, 0), l = y(r, function (e, t) {
                    return e - a[t]
                }); o > s;) {
                for (var u = Number.NEGATIVE_INFINITY, c = null, p = 0, h = l.length; h > p; ++p) l[p] > u && (u = l[p], c = p);
                ++a[c], l[c] = 0, ++s
            }
            return y(a, function (e) {
                return e / i
            })
        }

        function hi(e, t) {
            var n = Math.max(si(e), si(t)),
                i = e + t;
            return n > bb ? i : oi(i, n)
        }

        function di(e) {
            var t = 2 * Math.PI;
            return (e % t + t) % t
        }

        function fi(e) {
            return e > -wb && wb > e
        }

        function gi(e) {
            if (e instanceof Date) return e;
            if (M(e)) {
                var t = Tb.exec(e);
                if (!t) return new Date(NaN);
                if (t[8]) {
                    var n = +t[4] || 0;
                    return "Z" !== t[8].toUpperCase() && (n -= +t[8].slice(0, 3)), new Date(Date.UTC(+t[1], +(t[2] || 1) - 1, +t[3] || 1, n, +(t[5] || 0), +t[6] || 0, t[7] ? +t[7].substring(0, 3) : 0))
                }
                return new Date(+t[1], +(t[2] || 1) - 1, +t[3] || 1, +t[4] || 0, +(t[5] || 0), +t[6] || 0, t[7] ? +t[7].substring(0, 3) : 0)
            }
            return new Date(null == e ? NaN : Math.round(e))
        }

        function mi(e) {
            return Math.pow(10, yi(e))
        }

        function yi(e) {
            if (0 === e) return 0;
            var t = Math.floor(Math.log(e) / Math.LN10);
            return e / Math.pow(10, t) >= 10 && t++, t
        }

        function vi(e, t) {
            var n, i = yi(e),
                r = Math.pow(10, i),
                o = e / r;
            return n = t ? 1.5 > o ? 1 : 2.5 > o ? 2 : 4 > o ? 3 : 7 > o ? 5 : 10 : 1 > o ? 1 : 2 > o ? 2 : 3 > o ? 3 : 5 > o ? 5 : 10, e = n * r, i >= -20 ? +e.toFixed(0 > i ? -i : 0) : e
        }

        function xi(e, t) {
            var n = (e.length - 1) * t + 1,
                i = Math.floor(n),
                r = +e[i - 1],
                o = n - i;
            return o ? r + o * (e[i] - r) : r
        }

        function _i(e) {
            function t(e, n, i) {
                return e.interval[i] < n.interval[i] || e.interval[i] === n.interval[i] && (e.close[i] - n.close[i] == (i ? -1 : 1) || !i && t(e, n, 1))
            }
            e.sort(function (e, n) {
                return t(e, n, 0) ? -1 : 1
            });
            for (var n = -1 / 0, i = 1, r = 0; r < e.length;) {
                for (var o = e[r].interval, a = e[r].close, s = 0; 2 > s; s++) o[s] <= n && (o[s] = n, a[s] = s ? 1 : 1 - i), n = o[s], i = a[s];
                o[0] === o[1] && a[0] * a[1] != 1 ? e.splice(r, 1) : r++
            }
            return e
        }

        function wi(e) {
            var t = parseFloat(e);
            return t == e && (0 !== t || !M(e) || e.indexOf("x") <= 0) ? t : NaN
        }

        function bi(e) {
            return !isNaN(wi(e))
        }

        function Si() {
            return Math.round(9 * Math.random())
        }

        function Ti(e, t) {
            return 0 === t ? e : Ti(t, e % t)
        }

        function Ci(e, t) {
            return null == e ? t : null == t ? e : e * t / Ti(e, t)
        }

        function Mi(e) {
            throw new Error(e)
        }

        function Ii(e, t, n) {
            return (t - e) * n + e
        }

        function ki(e) {
            return e instanceof Array ? e : null == e ? [] : [e]
        }

        function Di(e, t, n) {
            if (e) {
                e[t] = e[t] || {}, e.emphasis = e.emphasis || {}, e.emphasis[t] = e.emphasis[t] || {};
                for (var i = 0, r = n.length; r > i; i++) {
                    var o = n[i];
                    !e.emphasis[t].hasOwnProperty(o) && e[t].hasOwnProperty(o) && (e.emphasis[t][o] = e[t][o])
                }
            }
        }

        function Ai(e) {
            return !D(e) || T(e) || e instanceof Date ? e : e.value
        }

        function Pi(e) {
            return D(e) && !(e instanceof Array)
        }

        function Li(e, t, n) {
            var i = "normalMerge" === n,
                r = "replaceMerge" === n,
                o = "replaceAll" === n;
            e = e || [], t = (t || []).slice();
            var a = Y();
            m(t, function (e, n) {
                return D(e) ? void 0 : void(t[n] = null)
            });
            var s = Ni(e, a, n);
            return (i || r) && Oi(s, e, a, t), i && Ei(s, t), i || r ? Ri(s, t, r) : o && zi(s, t), Bi(s), s
        }

        function Ni(e, t, n) {
            var i = [];
            if ("replaceAll" === n) return i;
            for (var r = 0; r < e.length; r++) {
                var o = e[r];
                o && null != o.id && t.set(o.id, r), i.push({
                    existing: "replaceMerge" === n || Wi(o) ? null : o,
                    newOption: null,
                    keyInfo: null,
                    brandNew: null
                })
            }
            return i
        }

        function Oi(e, t, n, i) {
            m(i, function (r, o) {
                if (r && null != r.id) {
                    var a = Hi(r.id),
                        s = n.get(a);
                    if (null != s) {
                        var l = e[s];
                        V(!l.newOption, 'Duplicated option on id "' + a + '".'), l.newOption = r, l.existing = t[s], i[o] = null
                    }
                }
            })
        }

        function Ei(e, t) {
            m(t, function (n, i) {
                if (n && null != n.name)
                    for (var r = 0; r < e.length; r++) {
                        var o = e[r].existing;
                        if (!e[r].newOption && o && (null == o.id || null == n.id) && !Wi(n) && !Wi(o) && Fi("name", o, n)) return e[r].newOption = n, void(t[i] = null)
                    }
            })
        }

        function Ri(e, t, n) {
            m(t, function (t) {
                if (t) {
                    for (var i, r = 0;
                        (i = e[r]) && (i.newOption || Wi(i.existing) || i.existing && null != t.id && !Fi("id", t, i.existing));) r++;
                    i ? (i.newOption = t, i.brandNew = n) : e.push({
                        newOption: t,
                        brandNew: n,
                        existing: null,
                        keyInfo: null
                    }), r++
                }
            })
        }

        function zi(e, t) {
            m(t, function (t) {
                e.push({
                    newOption: t,
                    brandNew: !0,
                    existing: null,
                    keyInfo: null
                })
            })
        }

        function Bi(e) {
            var t = Y();
            m(e, function (e) {
                var n = e.existing;
                n && t.set(n.id, e)
            }), m(e, function (e) {
                var n = e.newOption;
                V(!n || null == n.id || !t.get(n.id) || t.get(n.id) === e, "id duplicates: " + (n && n.id)), n && null != n.id && t.set(n.id, e), !e.keyInfo && (e.keyInfo = {})
            }), m(e, function (e, n) {
                var i = e.existing,
                    r = e.newOption,
                    o = e.keyInfo;
                if (D(r)) {
                    if (o.name = null != r.name ? Hi(r.name) : i ? i.name : Cb + n, i) o.id = Hi(i.id);
                    else if (null != r.id) o.id = Hi(r.id);
                    else {
                        var a = 0;
                        do {
                            o.id = "\0" + o.name + "\0" + a++
                        } while (t.get(o.id))
                    }
                    t.set(o.id, e)
                }
            })
        }

        function Fi(e, t, n) {
            var i = Gi(t[e], null),
                r = Gi(n[e], null);
            return null != i && null != r && i === r
        }

        function Hi(e) {
            return Gi(e, "")
        }

        function Gi(e, t) {
            return null == e ? t : M(e) ? e : k(e) || I(e) ? e + "" : t
        }

        function Vi(e) {
            var t = e.name;
            return !(!t || !t.indexOf(Cb))
        }

        function Wi(e) {
            return e && null != e.id && 0 === Hi(e.id).indexOf(Mb)
        }

        function ji(e, t, n) {
            m(e, function (e) {
                var i = e.newOption;
                D(i) && (e.keyInfo.mainType = t, e.keyInfo.subType = Xi(t, i, e.existing, n))
            })
        }

        function Xi(e, t, n, i) {
            var r = t.type ? t.type : n ? n.subType : i.determineSubType(e, t);
            return r
        }

        function Yi(e, t) {
            return null != t.dataIndexInside ? t.dataIndexInside : null != t.dataIndex ? T(t.dataIndex) ? y(t.dataIndex, function (t) {
                return e.indexOfRawIndex(t)
            }) : e.indexOfRawIndex(t.dataIndex) : null != t.name ? T(t.name) ? y(t.name, function (t) {
                return e.indexOfName(t)
            }) : e.indexOfName(t.name) : void 0
        }

        function Ui() {
            var e = "__ec_inner_" + kb++;
            return function (t) {
                return t[e] || (t[e] = {})
            }
        }

        function qi(e, t, n) {
            var i = Zi(t, n),
                r = i.mainTypeSpecified,
                o = i.queryOptionMap,
                a = i.others,
                s = a,
                l = n ? n.defaultMainType : null;
            return !r && l && o.set(l, {}), o.each(function (t, i) {
                var r = $i(e, i, t, {
                    useDefault: l === i,
                    enableAll: !n || null == n.enableAll || n.enableAll,
                    enableNone: !n || null == n.enableNone || n.enableNone
                });
                s[i + "Models"] = r.models, s[i + "Model"] = r.models[0]
            }), s
        }

        function Zi(e, t) {
            var n;
            if (M(e)) {
                var i = {};
                i[e + "Index"] = 0, n = i
            } else n = e;
            var r = Y(),
                o = {},
                a = !1;
            return m(n, function (e, n) {
                if ("dataIndex" !== n && "dataIndexInside" !== n) {
                    var i = n.match(/^(\w+)(Index|Id|Name)$/) || [],
                        s = i[1],
                        l = (i[2] || "").toLowerCase();
                    if (s && l && !(t && t.includeMainTypes && h(t.includeMainTypes, s) < 0)) {
                        a = a || !!s;
                        var u = r.get(s) || r.set(s, {});
                        u[l] = e
                    }
                } else o[n] = e
            }), {
                mainTypeSpecified: a,
                queryOptionMap: r,
                others: o
            }
        }

        function $i(e, t, n, i) {
            i = i || Db;
            var r = n.index,
                o = n.id,
                a = n.name,
                s = {
                    models: null,
                    specified: null != r || null != o || null != a
                };
            if (!s.specified) {
                var l = void 0;
                return s.models = i.useDefault && (l = e.getComponent(t)) ? [l] : [], s
            }
            return "none" === r || !1 === r ? (V(i.enableNone, '`"none"` or `false` is not a valid value on index option.'), s.models = [], s) : ("all" === r && (V(i.enableAll, '`"all"` is not a valid value on index option.'), r = o = a = null), s.models = e.queryComponents({
                mainType: t,
                index: r,
                id: o,
                name: a
            }), s)
        }

        function Ki(e, t, n) {
            e.setAttribute ? e.setAttribute(t, n) : e[t] = n
        }

        function Ji(e, t) {
            return e.getAttribute ? e.getAttribute(t) : e[t]
        }

        function Qi(e) {
            return "auto" === e ? zx.domSupported ? "html" : "richText" : e || "html"
        }

        function er(e, t, n, i, r) {
            var o = null == t || "auto" === t;
            if (null == i) return i;
            if (k(i)) {
                var a = Ii(n || 0, i, r);
                return oi(a, o ? Math.max(si(n || 0), si(i)) : t)
            }
            if (M(i)) return 1 > r ? n : i;
            for (var s = [], l = n, u = i, c = Math.max(l ? l.length : 0, u.length), p = 0; c > p; ++p) {
                var h = e.getDimensionInfo(p);
                if (h && "ordinal" === h.type) s[p] = (1 > r && l ? l : u)[p];
                else {
                    var d = l && l[p] ? l[p] : 0,
                        f = u[p];
                    a = Ii(d, f, r);
                    s[p] = oi(a, o ? Math.max(si(d), si(f)) : t)
                }
            }
            return s
        }

        function tr(e) {
            var t = {
                main: "",
                sub: ""
            };
            if (e) {
                var n = e.split(Ab);
                t.main = n[0] || "", t.sub = n[1] || ""
            }
            return t
        }

        function nr(e) {
            V(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(e), 'componentType "' + e + '" illegal')
        }

        function ir(e) {
            return !(!e || !e[Lb])
        }

        function rr(e) {
            e.$constructor = e, e.extend = function (e) {
                var n, i = this;
                return or(i) ? n = function (e) {
                    function n() {
                        return e.apply(this, arguments) || this
                    }
                    return t(n, e), n
                }(i) : (n = function () {
                    (e.$constructor || i).apply(this, arguments)
                }, d(n, this)), c(n.prototype, e), n[Lb] = !0, n.extend = this.extend, n.superCall = lr, n.superApply = ur, n.superClass = i, n
            }
        }

        function or(e) {
            return C(e) && /^class\s/.test(Function.prototype.toString.call(e))
        }

        function ar(e, t) {
            e.extend = t.extend
        }

        function sr(e) {
            var t = ["__\0is_clz", Nb++].join("_");
            e.prototype[t] = !0, e.isInstance = function (e) {
                return !(!e || !e[t])
            }
        }

        function lr(e, t) {
            for (var n = [], i = 2; i < arguments.length; i++) n[i - 2] = arguments[i];
            return this.superClass.prototype[t].apply(e, n)
        }

        function ur(e, t, n) {
            return this.superClass.prototype[t].apply(e, n)
        }

        function cr(e) {
            function t(e) {
                var t = n[e.main];
                return t && t[Pb] || (t = n[e.main] = {}, t[Pb] = !0), t
            }
            var n = {};
            e.registerClass = function (e) {
                var i = e.type || e.prototype.type;
                if (i) {
                    nr(i), e.prototype.type = i;
                    var r = tr(i);
                    if (r.sub) {
                        if (r.sub !== Pb) {
                            var o = t(r);
                            o[r.sub] = e
                        }
                    } else n[r.main] = e
                }
                return e
            }, e.getClass = function (e, t, i) {
                var r = n[e];
                if (r && r[Pb] && (r = t ? r[t] : null), i && !r) throw new Error(t ? "Component " + e + "." + (t || "") + " is used but not imported." : e + ".type should be specified.");
                return r
            }, e.getClassesByMainType = function (e) {
                var t = tr(e),
                    i = [],
                    r = n[t.main];
                return r && r[Pb] ? m(r, function (e, t) {
                    t !== Pb && i.push(e)
                }) : i.push(r), i
            }, e.hasClass = function (e) {
                var t = tr(e);
                return !!n[t.main]
            }, e.getAllClassMainTypes = function () {
                var e = [];
                return m(n, function (t, n) {
                    e.push(n)
                }), e
            }, e.hasSubTypes = function (e) {
                var t = tr(e),
                    i = n[t.main];
                return i && i[Pb]
            }
        }

        function pr(e, t) {
            for (var n = 0; n < e.length; n++) e[n][1] || (e[n][1] = e[n][0]);
            return t = t || !1,
                function (n, i, r) {
                    for (var o = {}, a = 0; a < e.length; a++) {
                        var s = e[a][1];
                        if (!(i && h(i, s) >= 0 || r && h(r, s) < 0)) {
                            var l = n.getShallow(s, t);
                            null != l && (o[e[a][0]] = l)
                        }
                    }
                    return o
                }
        }

        function hr(e) {
            if ("string" == typeof e) {
                var t = zb.get(e);
                return t && t.image
            }
            return e
        }

        function dr(e, t, n, i, r) {
            if (e) {
                if ("string" == typeof e) {
                    if (t && t.__zrImageSrc === e || !n) return t;
                    var o = zb.get(e),
                        a = {
                            hostEl: n,
                            cb: i,
                            cbPayload: r
                        };
                    return o ? (t = o.image, !gr(t) && o.pending.push(a)) : (t = Xx.loadImage(e, fr, fr), t.__zrImageSrc = e, zb.put(e, t.__cachedImgObj = {
                        image: t,
                        pending: [a]
                    })), t
                }
                return e
            }
            return t
        }

        function fr() {
            var e = this.__cachedImgObj;
            this.onload = this.onerror = this.__cachedImgObj = null;
            for (var t = 0; t < e.pending.length; t++) {
                var n = e.pending[t],
                    i = n.cb;
                i && i(this, n.cbPayload), n.hostEl.dirty()
            }
            e.pending.length = 0
        }

        function gr(e) {
            return e && e.width && e.height
        }

        function mr(e, t, n, i, r) {
            if (!t) return "";
            var o = (e + "").split("\n");
            r = yr(t, n, i, r);
            for (var a = 0, s = o.length; s > a; a++) o[a] = vr(o[a], r);
            return o.join("\n")
        }

        function yr(e, t, n, i) {
            i = i || {};
            var r = c({}, i);
            r.font = t, n = B(n, "..."), r.maxIterations = B(i.maxIterations, 2);
            var o = r.minChar = B(i.minChar, 0);
            r.cnCharWidth = On("国", t);
            var a = r.ascCharWidth = On("a", t);
            r.placeholder = B(i.placeholder, "");
            for (var s = e = Math.max(0, e - 1), l = 0; o > l && s >= a; l++) s -= a;
            var u = On(n, t);
            return u > s && (n = "", u = 0), s = e - u, r.ellipsis = n, r.ellipsisWidth = u, r.contentWidth = s, r.containerWidth = e, r
        }

        function vr(e, t) {
            var n = t.containerWidth,
                i = t.font,
                r = t.contentWidth;
            if (!n) return "";
            var o = On(e, i);
            if (n >= o) return e;
            for (var a = 0;; a++) {
                if (r >= o || a >= t.maxIterations) {
                    e += t.ellipsis;
                    break
                }
                var s = 0 === a ? xr(e, r, t.ascCharWidth, t.cnCharWidth) : o > 0 ? Math.floor(e.length * r / o) : 0;
                e = e.substr(0, s), o = On(e, i)
            }
            return "" === e && (e = t.placeholder), e
        }

        function xr(e, t, n, i) {
            for (var r = 0, o = 0, a = e.length; a > o && t > r; o++) {
                var s = e.charCodeAt(o);
                r += s >= 0 && 127 >= s ? n : i
            }
            return o
        }

        function _r(e, t) {
            null != e && (e += "");
            var n, i = t.overflow,
                r = t.padding,
                o = t.font,
                a = "truncate" === i,
                s = Fn(o),
                l = B(t.lineHeight, s),
                u = !!t.backgroundColor,
                c = "truncate" === t.lineOverflow,
                p = t.width;
            n = null == p || "break" !== i && "breakAll" !== i ? e ? e.split("\n") : [] : e ? Cr(e, t.font, p, "breakAll" === i, 0).lines : [];
            var h = n.length * l,
                d = B(t.height, h);
            if (h > d && c) {
                var f = Math.floor(d / l);
                n = n.slice(0, f)
            }
            if (e && a && null != p)
                for (var g = yr(p, o, t.ellipsis, {
                        minChar: t.truncateMinChar,
                        placeholder: t.placeholder
                    }), m = 0; m < n.length; m++) n[m] = vr(n[m], g);
            var y = d,
                v = 0;
            for (m = 0; m < n.length; m++) v = Math.max(On(n[m], o), v);
            null == p && (p = v);
            var x = v;
            return r && (y += r[0] + r[2], x += r[1] + r[3], p += r[1] + r[3]), u && (x = p), {
                lines: n,
                height: d,
                outerWidth: x,
                outerHeight: y,
                lineHeight: l,
                calculatedLineHeight: s,
                contentWidth: v,
                contentHeight: h,
                width: p
            }
        }

        function wr(e, t) {
            function n(e, t, n) {
                e.width = t, e.lineHeight = n, h += n, d = Math.max(d, t)
            }
            var i = new Gb;
            if (null != e && (e += ""), !e) return i;
            for (var r, o = t.width, a = t.height, s = t.overflow, l = "break" !== s && "breakAll" !== s || null == o ? null : {
                    width: o,
                    accumWidth: 0,
                    breakAll: "breakAll" === s
                }, u = Bb.lastIndex = 0; null != (r = Bb.exec(e));) {
                var c = r.index;
                c > u && br(i, e.substring(u, c), t, l), br(i, r[2], t, l, r[1]), u = Bb.lastIndex
            }
            u < e.length && br(i, e.substring(u, e.length), t, l);
            var p = [],
                h = 0,
                d = 0,
                f = t.padding,
                g = "truncate" === s,
                m = "truncate" === t.lineOverflow;
            e: for (var y = 0; y < i.lines.length; y++) {
                for (var v = i.lines[y], x = 0, _ = 0, w = 0; w < v.tokens.length; w++) {
                    var b = v.tokens[w],
                        S = b.styleName && t.rich[b.styleName] || {},
                        T = b.textPadding = S.padding,
                        C = T ? T[1] + T[3] : 0,
                        M = b.font = S.font || t.font;
                    b.contentHeight = Fn(M);
                    var I = B(S.height, b.contentHeight);
                    if (b.innerHeight = I, T && (I += T[0] + T[2]), b.height = I, b.lineHeight = F(S.lineHeight, t.lineHeight, I), b.align = S && S.align || t.align, b.verticalAlign = S && S.verticalAlign || "middle", m && null != a && h + b.lineHeight > a) {
                        w > 0 ? (v.tokens = v.tokens.slice(0, w), n(v, _, x), i.lines = i.lines.slice(0, y + 1)) : i.lines = i.lines.slice(0, y);
                        break e
                    }
                    var k = S.width,
                        D = null == k || "auto" === k;
                    if ("string" == typeof k && "%" === k.charAt(k.length - 1)) b.percentWidth = k, p.push(b), b.contentWidth = On(b.text, M);
                    else {
                        if (D) {
                            var A = S.backgroundColor,
                                P = A && A.image;
                            P && (P = hr(P), gr(P) && (b.width = Math.max(b.width, P.width * I / P.height)))
                        }
                        var L = g && null != o ? o - _ : null;
                        null != L && L < b.width ? !D || C > L ? (b.text = "", b.width = b.contentWidth = 0) : (b.text = mr(b.text, L - C, M, t.ellipsis, {
                            minChar: t.truncateMinChar
                        }), b.width = b.contentWidth = On(b.text, M)) : b.contentWidth = On(b.text, M)
                    }
                    b.width += C, _ += b.width, S && (x = Math.max(x, b.lineHeight))
                }
                n(v, _, x)
            }
            i.outerWidth = i.width = B(o, d), i.outerHeight = i.height = B(a, h), i.contentHeight = h, i.contentWidth = d, f && (i.outerWidth += f[1] + f[3], i.outerHeight += f[0] + f[2]);
            for (y = 0; y < p.length; y++) {
                b = p[y];
                var N = b.percentWidth;
                b.width = parseInt(N, 10) / 100 * i.width
            }
            return i
        }

        function br(e, t, n, i, r) {
            var o, a, s = "" === t,
                l = r && n.rich[r] || {},
                u = e.lines,
                c = l.font || n.font,
                p = !1;
            if (i) {
                var h = l.padding,
                    d = h ? h[1] + h[3] : 0;
                if (null != l.width && "auto" !== l.width) {
                    var f = Hn(l.width, i.width) + d;
                    u.length > 0 && f + i.accumWidth > i.width && (o = t.split("\n"), p = !0), i.accumWidth = f
                } else {
                    var g = Cr(t, c, i.width, i.breakAll, i.accumWidth);
                    i.accumWidth = g.accumWidth + d, a = g.linesWidths, o = g.lines
                }
            } else o = t.split("\n");
            for (var m = 0; m < o.length; m++) {
                var y = o[m],
                    v = new Fb;
                if (v.styleName = r, v.text = y, v.isLineHolder = !y && !s, v.width = "number" == typeof l.width ? l.width : a ? a[m] : On(y, c), m || p) u.push(new Hb([v]));
                else {
                    var x = (u[u.length - 1] || (u[0] = new Hb)).tokens,
                        _ = x.length;
                    1 === _ && x[0].isLineHolder ? x[0] = v : (y || !_ || s) && x.push(v)
                }
            }
        }

        function Sr(e) {
            var t = e.charCodeAt(0);
            return t >= 33 && 383 >= t
        }

        function Tr(e) {
            return !Sr(e) || !!Vb[e]
        }

        function Cr(e, t, n, i, r) {
            for (var o = [], a = [], s = "", l = "", u = 0, c = 0, p = 0; p < e.length; p++) {
                var h = e.charAt(p);
                if ("\n" !== h) {
                    var d = On(h, t),
                        f = !i && !Tr(h);
                    (o.length ? c + d > n : r + c + d > n) ? c ? (s || l) && (f ? (s || (s = l, l = "", u = 0, c = u), o.push(s), a.push(c - u), l += h, u += d, s = "", c = u) : (l && (s += l, l = "", u = 0), o.push(s), a.push(c), s = h, c = d)) : f ? (o.push(l), a.push(u), l = h, u = d) : (o.push(h), a.push(d)): (c += d, f ? (l += h, u += d) : (l && (s += l, l = "", u = 0), s += h))
                } else l && (s += l, c += u), o.push(s), a.push(c), s = "", l = "", u = 0, c = 0
            }
            return o.length || s || (s = e, l = "", u = 0), l && (s += l), s && (o.push(s), a.push(c)), 1 === o.length && (c += r), {
                accumWidth: c,
                lines: o,
                linesWidths: a
            }
        }

        function Mr(e, t, n) {
            return Zb.copy(e.getBoundingRect()), e.transform && Zb.applyTransform(e.transform), $b.width = t, $b.height = n, !Zb.intersect($b)
        }

        function Ir(e, t, n, i, r, o) {
            r[0] = Kb(e, n), r[1] = Kb(t, i), o[0] = Jb(e, n), o[1] = Jb(t, i)
        }

        function kr(e, t, n, i, r, o, a, s, l, u) {
            var c = ht,
                p = ut,
                h = c(e, n, r, a, oS);
            l[0] = 1 / 0, l[1] = 1 / 0, u[0] = -1 / 0, u[1] = -1 / 0;
            for (var d = 0; h > d; d++) {
                var f = p(e, n, r, a, oS[d]);
                l[0] = Kb(f, l[0]), u[0] = Jb(f, u[0])
            }
            h = c(t, i, o, s, aS);
            for (d = 0; h > d; d++) {
                var g = p(t, i, o, s, aS[d]);
                l[1] = Kb(g, l[1]), u[1] = Jb(g, u[1])
            }
            l[0] = Kb(e, l[0]), u[0] = Jb(e, u[0]), l[0] = Kb(a, l[0]), u[0] = Jb(a, u[0]), l[1] = Kb(t, l[1]), u[1] = Jb(t, u[1]), l[1] = Kb(s, l[1]), u[1] = Jb(s, u[1])
        }

        function Dr(e, t, n, i, r, o, a, s) {
            var l = xt,
                u = mt,
                c = Jb(Kb(l(e, n, r), 1), 0),
                p = Jb(Kb(l(t, i, o), 1), 0),
                h = u(e, n, r, c),
                d = u(t, i, o, p);
            a[0] = Kb(e, r, h), a[1] = Kb(t, o, d), s[0] = Jb(e, r, h), s[1] = Jb(t, o, d)
        }

        function Ar(e, t, n, i, r, o, a, s, l) {
            var u = ye,
                c = ve,
                p = Math.abs(r - o);
            if (1e-4 > p % tS && p > 1e-4) return s[0] = e - n, s[1] = t - i, l[0] = e + n, void(l[1] = t + i);
            if (nS[0] = eS(r) * n + e, nS[1] = Qb(r) * i + t, iS[0] = eS(o) * n + e, iS[1] = Qb(o) * i + t, u(s, nS, iS), c(l, nS, iS), r %= tS, 0 > r && (r += tS), o %= tS, 0 > o && (o += tS), r > o && !a ? o += tS : o > r && a && (r += tS), a) {
                var h = o;
                o = r, r = h
            }
            for (var d = 0; o > d; d += Math.PI / 2) d > r && (rS[0] = eS(d) * n + e, rS[1] = Qb(d) * i + t, u(s, rS, s), c(l, rS, l))
        }

        function Pr(e) {
            var t = Math.round(e / xS * 1e8) / 1e8;
            return t % 2 * xS
        }

        function Lr(e, t) {
            var n = Pr(e[0]);
            0 > n && (n += _S);
            var i = n - e[0],
                r = e[1];
            r += i, !t && r - n >= _S ? r = n + _S : t && n - r >= _S ? r = n - _S : !t && n > r ? r = n + (_S - Pr(n - r)) : t && r > n && (r = n - (_S - Pr(r - n))), e[0] = n, e[1] = r
        }

        function Nr(e, t, n, i, r, o, a) {
            if (0 === r) return !1;
            var s = r,
                l = 0,
                u = e;
            if (a > t + s && a > i + s || t - s > a && i - s > a || o > e + s && o > n + s || e - s > o && n - s > o) return !1;
            if (e === n) return Math.abs(o - e) <= s / 2;
            l = (t - i) / (e - n), u = (e * i - n * t) / (e - n);
            var c = l * o - a + u,
                p = c * c / (l * l + 1);
            return s / 2 * s / 2 >= p
        }

        function Or(e, t, n, i, r, o, a, s, l, u, c) {
            if (0 === l) return !1;
            var p = l;
            if (c > t + p && c > i + p && c > o + p && c > s + p || t - p > c && i - p > c && o - p > c && s - p > c || u > e + p && u > n + p && u > r + p && u > a + p || e - p > u && n - p > u && r - p > u && a - p > u) return !1;
            var h = ft(e, t, n, i, r, o, a, s, u, c, null);
            return p / 2 >= h
        }

        function Er(e, t, n, i, r, o, a, s, l) {
            if (0 === a) return !1;
            var u = a;
            if (l > t + u && l > i + u && l > o + u || t - u > l && i - u > l && o - u > l || s > e + u && s > n + u && s > r + u || e - u > s && n - u > s && r - u > s) return !1;
            var c = wt(e, t, n, i, r, o, s, l, null);
            return u / 2 >= c
        }

        function Rr(e) {
            return e %= TS, 0 > e && (e += TS), e
        }

        function zr(e, t, n, i, r, o, a, s, l) {
            if (0 === a) return !1;
            var u = a;
            s -= e, l -= t;
            var c = Math.sqrt(s * s + l * l);
            if (c - u > n || n > c + u) return !1;
            if (Math.abs(i - r) % CS < 1e-4) return !0;
            if (o) {
                var p = i;
                i = Rr(r), r = Rr(p)
            } else i = Rr(i), r = Rr(r);
            i > r && (r += CS);
            var h = Math.atan2(l, s);
            return 0 > h && (h += CS), h >= i && r >= h || h + CS >= i && r >= h + CS
        }

        function Br(e, t, n, i, r, o) {
            if (o > t && o > i || t > o && i > o) return 0;
            if (i === t) return 0;
            var a = (o - t) / (i - t),
                s = t > i ? 1 : -1;
            (1 === a || 0 === a) && (s = t > i ? .5 : -.5);
            var l = a * (n - e) + e;
            return l === r ? 1 / 0 : l > r ? s : 0
        }

        function Fr(e, t) {
            return Math.abs(e - t) < kS
        }

        function Hr() {
            var e = AS[0];
            AS[0] = AS[1], AS[1] = e
        }

        function Gr(e, t, n, i, r, o, a, s, l, u) {
            if (u > t && u > i && u > o && u > s || t > u && i > u && o > u && s > u) return 0;
            var c = pt(t, i, o, s, u, DS);
            if (0 === c) return 0;
            for (var p = 0, h = -1, d = void 0, f = void 0, g = 0; c > g; g++) {
                var m = DS[g],
                    y = 0 === m || 1 === m ? .5 : 1,
                    v = ut(e, n, r, a, m);
                l > v || (0 > h && (h = ht(t, i, o, s, AS), AS[1] < AS[0] && h > 1 && Hr(), d = ut(t, i, o, s, AS[0]), h > 1 && (f = ut(t, i, o, s, AS[1]))), p += 2 === h ? m < AS[0] ? t > d ? y : -y : m < AS[1] ? d > f ? y : -y : f > s ? y : -y : m < AS[0] ? t > d ? y : -y : d > s ? y : -y)
            }
            return p
        }

        function Vr(e, t, n, i, r, o, a, s) {
            if (s > t && s > i && s > o || t > s && i > s && o > s) return 0;
            var l = vt(t, i, o, s, DS);
            if (0 === l) return 0;
            var u = xt(t, i, o);
            if (u >= 0 && 1 >= u) {
                for (var c = 0, p = mt(t, i, o, u), h = 0; l > h; h++) {
                    var d = 0 === DS[h] || 1 === DS[h] ? .5 : 1,
                        f = mt(e, n, r, DS[h]);
                    a > f || (c += DS[h] < u ? t > p ? d : -d : p > o ? d : -d)
                }
                return c
            }
            d = 0 === DS[0] || 1 === DS[0] ? .5 : 1, f = mt(e, n, r, DS[0]);
            return a > f ? 0 : t > o ? d : -d
        }

        function Wr(e, t, n, i, r, o, a, s) {
            if (s -= t, s > n || -n > s) return 0;
            var l = Math.sqrt(n * n - s * s);
            DS[0] = -l, DS[1] = l;
            var u = Math.abs(i - r);
            if (1e-4 > u) return 0;
            if (u >= IS - 1e-4) {
                i = 0, r = IS;
                var c = o ? 1 : -1;
                return a >= DS[0] + e && a <= DS[1] + e ? c : 0
            }
            if (i > r) {
                var p = i;
                i = r, r = p
            }
            0 > i && (i += IS, r += IS);
            for (var h = 0, d = 0; 2 > d; d++) {
                var f = DS[d];
                if (f + e > a) {
                    var g = Math.atan2(s, f);
                    c = o ? 1 : -1;
                    0 > g && (g = IS + g), (g >= i && r >= g || g + IS >= i && r >= g + IS) && (g > Math.PI / 2 && g < 1.5 * Math.PI && (c = -c), h += c)
                }
            }
            return h
        }

        function jr(e, t, n, i, r) {
            for (var o, a, s = e.data, l = e.len(), u = 0, c = 0, p = 0, h = 0, d = 0, f = 0; l > f;) {
                var g = s[f++],
                    m = 1 === f;
                switch (g === MS.M && f > 1 && (n || (u += Br(c, p, h, d, i, r))), m && (c = s[f], p = s[f + 1], h = c, d = p), g) {
                    case MS.M:
                        h = s[f++], d = s[f++], c = h, p = d;
                        break;
                    case MS.L:
                        if (n) {
                            if (Nr(c, p, s[f], s[f + 1], t, i, r)) return !0
                        } else u += Br(c, p, s[f], s[f + 1], i, r) || 0;
                        c = s[f++], p = s[f++];
                        break;
                    case MS.C:
                        if (n) {
                            if (Or(c, p, s[f++], s[f++], s[f++], s[f++], s[f], s[f + 1], t, i, r)) return !0
                        } else u += Gr(c, p, s[f++], s[f++], s[f++], s[f++], s[f], s[f + 1], i, r) || 0;
                        c = s[f++], p = s[f++];
                        break;
                    case MS.Q:
                        if (n) {
                            if (Er(c, p, s[f++], s[f++], s[f], s[f + 1], t, i, r)) return !0
                        } else u += Vr(c, p, s[f++], s[f++], s[f], s[f + 1], i, r) || 0;
                        c = s[f++], p = s[f++];
                        break;
                    case MS.A:
                        var y = s[f++],
                            v = s[f++],
                            x = s[f++],
                            _ = s[f++],
                            w = s[f++],
                            b = s[f++];
                        f += 1;
                        var S = !!(1 - s[f++]);
                        o = Math.cos(w) * x + y, a = Math.sin(w) * _ + v, m ? (h = o, d = a) : u += Br(c, p, o, a, i, r);
                        var T = (i - y) * _ / x + y;
                        if (n) {
                            if (zr(y, v, _, w, w + b, S, t, T, r)) return !0
                        } else u += Wr(y, v, _, w, w + b, S, T, r);
                        c = Math.cos(w + b) * x + y, p = Math.sin(w + b) * _ + v;
                        break;
                    case MS.R:
                        h = c = s[f++], d = p = s[f++];
                        var C = s[f++],
                            M = s[f++];
                        if (o = h + C, a = d + M, n) {
                            if (Nr(h, d, o, d, t, i, r) || Nr(o, d, o, a, t, i, r) || Nr(o, a, h, a, t, i, r) || Nr(h, a, h, d, t, i, r)) return !0
                        } else u += Br(o, d, o, a, i, r), u += Br(h, a, h, d, i, r);
                        break;
                    case MS.Z:
                        if (n) {
                            if (Nr(c, p, h, d, t, i, r)) return !0
                        } else u += Br(c, p, h, d, i, r);
                        c = h, p = d
                }
            }
            return n || Fr(p, d) || (u += Br(c, p, h, d, i, r) || 0), 0 !== u
        }

        function Xr(e, t, n) {
            return jr(e, 0, !1, t, n)
        }

        function Yr(e, t, n, i) {
            return jr(e, t, !0, n, i)
        }

        function Ur(e) {
            return !!(e && "string" != typeof e && e.width && e.height)
        }

        function qr(e, t) {
            var n, i, r, o, a, s = t.x,
                l = t.y,
                u = t.width,
                c = t.height,
                p = t.r;
            0 > u && (s += u, u = -u), 0 > c && (l += c, c = -c), "number" == typeof p ? n = i = r = o = p : p instanceof Array ? 1 === p.length ? n = i = r = o = p[0] : 2 === p.length ? (n = r = p[0], i = o = p[1]) : 3 === p.length ? (n = p[0], i = o = p[1], r = p[2]) : (n = p[0], i = p[1], r = p[2], o = p[3]) : n = i = r = o = 0, n + i > u && (a = n + i, n *= u / a, i *= u / a), r + o > u && (a = r + o, r *= u / a, o *= u / a), i + r > c && (a = i + r, i *= c / a, r *= c / a), n + o > c && (a = n + o, n *= c / a, o *= c / a), e.moveTo(s + n, l), e.lineTo(s + u - i, l), 0 !== i && e.arc(s + u - i, l + i, i, -Math.PI / 2, 0), e.lineTo(s + u, l + c - r), 0 !== r && e.arc(s + u - r, l + c - r, r, 0, Math.PI / 2), e.lineTo(s + o, l + c), 0 !== o && e.arc(s + o, l + c - o, o, Math.PI / 2, Math.PI), e.lineTo(s, l + n), 0 !== n && e.arc(s + n, l + n, n, Math.PI, 1.5 * Math.PI)
        }

        function Zr(e, t, n) {
            if (t) {
                var i = t.x1,
                    r = t.x2,
                    o = t.y1,
                    a = t.y2;
                e.x1 = i, e.x2 = r, e.y1 = o, e.y2 = a;
                var s = n && n.lineWidth;
                return s ? (HS(2 * i) === HS(2 * r) && (e.x1 = e.x2 = Kr(i, s, !0)), HS(2 * o) === HS(2 * a) && (e.y1 = e.y2 = Kr(o, s, !0)), e) : e
            }
        }

        function $r(e, t, n) {
            if (t) {
                var i = t.x,
                    r = t.y,
                    o = t.width,
                    a = t.height;
                e.x = i, e.y = r, e.width = o, e.height = a;
                var s = n && n.lineWidth;
                return s ? (e.x = Kr(i, s, !0), e.y = Kr(r, s, !0), e.width = Math.max(Kr(i + o, s, !1) - e.x, 0 === o ? 0 : 1), e.height = Math.max(Kr(r + a, s, !1) - e.y, 0 === a ? 0 : 1), e) : e
            }
        }

        function Kr(e, t, n) {
            if (!t) return e;
            var i = HS(2 * e);
            return (i + HS(t)) % 2 == 0 ? i / 2 : (i + (n ? 1 : -1)) / 2
        }

        function Jr(e) {
            return "string" != typeof e || -1 === e.indexOf("px") && -1 === e.indexOf("rem") && -1 === e.indexOf("em") ? isNaN(+e) ? Bx + "px" : e + "px" : e
        }

        function Qr(e, t) {
            for (var n = 0; n < $S.length; n++) {
                var i = $S[n],
                    r = t[i];
                null != r && (e[i] = r)
            }
        }

        function eo(e) {
            return null != e.fontSize || e.fontFamily || e.fontWeight
        }

        function to(e) {
            return no(e), m(e.rich, no), e
        }

        function no(e) {
            if (e) {
                e.font = US.makeFont(e);
                var t = e.align;
                "middle" === t && (t = "center"), e.align = null == t || qS[t] ? t : "left";
                var n = e.verticalAlign;
                "center" === n && (n = "middle"), e.verticalAlign = null == n || ZS[n] ? n : "top";
                var i = e.padding;
                i && (e.padding = G(e.padding))
            }
        }

        function io(e, t) {
            return null == e || 0 >= t || "transparent" === e || "none" === e ? null : e.image || e.colorStops ? "#000" : e
        }

        function ro(e) {
            return null == e || "none" === e ? null : e.image || e.colorStops ? "#000" : e
        }

        function oo(e, t, n) {
            return "right" === t ? e - n[1] : "center" === t ? e + n[3] / 2 - n[1] / 2 : e + n[3]
        }

        function ao(e) {
            var t = e.text;
            return null != t && (t += ""), t
        }

        function so(e) {
            return !!(e.backgroundColor || e.lineHeight || e.borderWidth && e.borderColor)
        }

        function lo(e) {
            return null != e && "none" !== e
        }

        function uo(e) {
            if (M(e)) {
                var t = gT.get(e);
                return t || (t = zt(e, -.1), gT.put(e, t)), t
            }
            if (N(e)) {
                var n = c({}, e);
                return n.colorStops = y(e.colorStops, function (e) {
                    return {
                        offset: e.offset,
                        color: zt(e.color, -.1)
                    }
                }), n
            }
            return e
        }

        function co(e, t, n) {
            e.onHoverStateChange && (e.hoverState || 0) !== n && e.onHoverStateChange(t), e.hoverState = n
        }

        function po(e) {
            co(e, "emphasis", oT)
        }

        function ho(e) {
            e.hoverState === oT && co(e, "normal", iT)
        }

        function fo(e) {
            co(e, "blur", rT)
        }

        function go(e) {
            e.hoverState === rT && co(e, "normal", iT)
        }

        function mo(e) {
            e.selected = !0
        }

        function yo(e) {
            e.selected = !1
        }

        function vo(e, t, n) {
            t(e, n)
        }

        function xo(e, t, n) {
            vo(e, t, n), e.isGroup && e.traverse(function (e) {
                vo(e, t, n)
            })
        }

        function _o(e, t) {
            switch (t) {
                case "emphasis":
                    e.hoverState = oT;
                    break;
                case "normal":
                    e.hoverState = iT;
                    break;
                case "blur":
                    e.hoverState = rT;
                    break;
                case "select":
                    e.selected = !0
            }
        }

        function wo(e, t, n, i) {
            for (var r = e.style, o = {}, a = 0; a < t.length; a++) {
                var s = t[a],
                    l = r[s];
                o[s] = null == l ? i && i[s] : l
            }
            for (a = 0; a < e.animators.length; a++) {
                var u = e.animators[a];
                u.__fromStateTransition && u.__fromStateTransition.indexOf(n) < 0 && "style" === u.targetName && u.saveTo(o, t)
            }
            return o
        }

        function bo(e, t, n, i) {
            var r = n && h(n, "select") >= 0,
                o = !1;
            if (e instanceof OS) {
                var a = tT(e),
                    s = r && a.selectFill || a.normalFill,
                    l = r && a.selectStroke || a.normalStroke;
                if (lo(s) || lo(l)) {
                    i = i || {};
                    var u = i.style || {};
                    "inherit" === u.fill ? (o = !0, i = c({}, i), u = c({}, u), u.fill = s) : !lo(u.fill) && lo(s) ? (o = !0, i = c({}, i), u = c({}, u), u.fill = uo(s)) : !lo(u.stroke) && lo(l) && (o || (i = c({}, i), u = c({}, u)), u.stroke = uo(l)), i.style = u
                }
            }
            if (i && null == i.z2) {
                o || (i = c({}, i));
                var p = e.z2EmphasisLift;
                i.z2 = e.z2 + (null != p ? p : lT)
            }
            return i
        }

        function So(e, t, n) {
            if (n && null == n.z2) {
                n = c({}, n);
                var i = e.z2SelectLift;
                n.z2 = e.z2 + (null != i ? i : uT)
            }
            return n
        }

        function To(e, t, n) {
            var i = h(e.currentStates, t) >= 0,
                r = e.style.opacity,
                o = i ? null : wo(e, ["opacity"], t, {
                    opacity: 1
                });
            n = n || {};
            var a = n.style || {};
            return null == a.opacity && (n = c({}, n), a = c({
                opacity: i ? r : .1 * o.opacity
            }, a), n.style = a), n
        }

        function Co(e, t) {
            var n = this.states[e];
            if (this.style) {
                if ("emphasis" === e) return bo(this, e, t, n);
                if ("blur" === e) return To(this, e, n);
                if ("select" === e) return So(this, e, n)
            }
            return n
        }

        function Mo(e) {
            e.stateProxy = Co;
            var t = e.getTextContent(),
                n = e.getTextGuideLine();
            t && (t.stateProxy = Co), n && (n.stateProxy = Co)
        }

        function Io(e, t) {
            !Eo(e, t) && !e.__highByOuter && xo(e, po)
        }

        function ko(e, t) {
            !Eo(e, t) && !e.__highByOuter && xo(e, ho)
        }

        function Do(e, t) {
            e.__highByOuter |= 1 << (t || 0), xo(e, po)
        }

        function Ao(e, t) {
            !(e.__highByOuter &= ~(1 << (t || 0))) && xo(e, ho)
        }

        function Po(e) {
            xo(e, fo)
        }

        function Lo(e) {
            xo(e, go)
        }

        function No(e) {
            xo(e, mo)
        }

        function Oo(e) {
            xo(e, yo)
        }

        function Eo(e, t) {
            return e.__highDownSilentOnTouch && t.zrByTouch
        }

        function Ro(e) {
            var t = e.getModel(),
                n = [],
                i = [];
            t.eachComponent(function (t, r) {
                var o = nT(r),
                    a = "series" === t,
                    s = a ? e.getViewOfSeriesModel(r) : e.getViewOfComponentModel(r);
                !a && i.push(s), o.isBlured && (s.group.traverse(function (e) {
                    go(e)
                }), a && n.push(r)), o.isBlured = !1
            }), m(i, function (e) {
                e && e.toggleBlurSeries && e.toggleBlurSeries(n, !1, t)
            })
        }

        function zo(e, t, n, i) {
            function r(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var i = e.getItemGraphicEl(t[n]);
                    i && Lo(i)
                }
            }
            var o = i.getModel();
            if (n = n || "coordinateSystem", null != e && t && "none" !== t) {
                var a = o.getSeriesByIndex(e),
                    s = a.coordinateSystem;
                s && s.master && (s = s.master);
                var l = [];
                o.eachSeries(function (e) {
                    var o = a === e,
                        u = e.coordinateSystem;
                    u && u.master && (u = u.master);
                    var c = u && s ? u === s : o;
                    if (!("series" === n && !o || "coordinateSystem" === n && !c || "series" === t && o)) {
                        var p = i.getViewOfSeriesModel(e);
                        if (p.group.traverse(function (e) {
                                fo(e)
                            }), g(t)) r(e.getData(), t);
                        else if (D(t))
                            for (var h = w(t), d = 0; d < h.length; d++) r(e.getData(h[d]), t[h[d]]);
                        l.push(e), nT(e).isBlured = !0
                    }
                }), o.eachComponent(function (e, t) {
                    if ("series" !== e) {
                        var n = i.getViewOfComponentModel(t);
                        n && n.toggleBlurSeries && n.toggleBlurSeries(l, !0, o)
                    }
                })
            }
        }

        function Bo(e, t, n) {
            if (null != e && null != t) {
                var i = n.getModel().getComponent(e, t);
                if (i) {
                    nT(i).isBlured = !0;
                    var r = n.getViewOfComponentModel(i);
                    r && r.focusBlurEnabled && r.group.traverse(function (e) {
                        fo(e)
                    })
                }
            }
        }

        function Fo(e, t, n) {
            var i = e.seriesIndex,
                r = e.getData(t.dataType);
            if (r) {
                var o = Yi(r, t);
                o = (T(o) ? o[0] : o) || 0;
                var a = r.getItemGraphicEl(o);
                if (!a)
                    for (var s = r.count(), l = 0; !a && s > l;) a = r.getItemGraphicEl(l++);
                if (a) {
                    var u = KS(a);
                    zo(i, u.focus, u.blurScope, n)
                } else {
                    var c = e.get(["emphasis", "focus"]),
                        p = e.get(["emphasis", "blurScope"]);
                    null != c && zo(i, c, p, n)
                }
            }
        }

        function Ho(e, t, n, i) {
            var r = {
                focusSelf: !1,
                dispatchers: null
            };
            if (null == e || "series" === e || null == t || null == n) return r;
            var o = i.getModel().getComponent(e, t);
            if (!o) return r;
            var a = i.getViewOfComponentModel(o);
            if (!a || !a.findHighDownDispatchers) return r;
            for (var s, l = a.findHighDownDispatchers(n), u = 0; u < l.length; u++)
                if ("self" === KS(l[u]).focus) {
                    s = !0;
                    break
                } return {
                focusSelf: s,
                dispatchers: l
            }
        }

        function Go(e, t, n) {
            var i = KS(e),
                r = Ho(i.componentMainType, i.componentIndex, i.componentHighDownName, n),
                o = r.dispatchers,
                a = r.focusSelf;
            o ? (a && Bo(i.componentMainType, i.componentIndex, n), m(o, function (e) {
                return Io(e, t)
            })) : (zo(i.seriesIndex, i.focus, i.blurScope, n), "self" === i.focus && Bo(i.componentMainType, i.componentIndex, n), Io(e, t))
        }

        function Vo(e, t, n) {
            Ro(n);
            var i = KS(e),
                r = Ho(i.componentMainType, i.componentIndex, i.componentHighDownName, n).dispatchers;
            r ? m(r, function (e) {
                return ko(e, t)
            }) : ko(e, t)
        }

        function Wo(e, t) {
            if (ta(t)) {
                var n = t.dataType,
                    i = e.getData(n),
                    r = Yi(i, t);
                T(r) || (r = [r]), e[t.type === fT ? "toggleSelect" : t.type === hT ? "select" : "unselect"](r, n)
            }
        }

        function jo(e) {
            var t = e.getAllData();
            m(t, function (t) {
                var n = t.data,
                    i = t.type;
                n.eachItemGraphicEl(function (t, n) {
                    e.isSelected(n, i) ? No(t) : Oo(t)
                })
            })
        }

        function Xo(e) {
            var t = [];
            return e.eachSeries(function (e) {
                var n = e.getAllData();
                m(n, function (n) {
                    var i = (n.data, n.type),
                        r = e.getSelectedDataIndices();
                    if (r.length > 0) {
                        var o = {
                            dataIndex: r,
                            seriesIndex: e.seriesIndex
                        };
                        null != i && (o.dataType = i), t.push(o)
                    }
                })
            }), t
        }

        function Yo(e, t, n) {
            Ko(e, !0), xo(e, Mo), Zo(e, t, n)
        }

        function Uo(e) {
            Ko(e, !1)
        }

        function qo(e, t, n, i) {
            i ? Uo(e) : Yo(e, t, n)
        }

        function Zo(e, t, n) {
            var i = KS(e);
            null != t ? (i.focus = t, i.blurScope = n) : i.focus && (i.focus = null)
        }

        function $o(e, t, n, i) {
            n = n || "itemStyle";
            for (var r = 0; r < mT.length; r++) {
                var o = mT[r],
                    a = t.getModel([o, n]),
                    s = e.ensureState(o);
                s.style = i ? i(a) : a[yT[n]]()
            }
        }

        function Ko(e, t) {
            var n = !1 === t,
                i = e;
            e.highDownSilentOnTouch && (i.__highDownSilentOnTouch = e.highDownSilentOnTouch), (!n || i.__highDownDispatcher) && (i.__highByOuter = i.__highByOuter || 0, i.__highDownDispatcher = !n)
        }

        function Jo(e) {
            return !(!e || !e.__highDownDispatcher)
        }

        function Qo(e, t, n) {
            var i = KS(e);
            i.componentMainType = t.mainType, i.componentIndex = t.componentIndex, i.componentHighDownName = n
        }

        function ea(e) {
            var t = eT[e];
            return null == t && 32 >= QS && (t = eT[e] = QS++), t
        }

        function ta(e) {
            var t = e.type;
            return t === hT || t === dT || t === fT
        }

        function na(e) {
            var t = e.type;
            return t === cT || t === pT
        }

        function ia(e) {
            var t = tT(e);
            t.normalFill = e.style.fill, t.normalStroke = e.style.stroke;
            var n = e.states.select || {};
            t.selectFill = n.style && n.style.fill || null, t.selectStroke = n.style && n.style.stroke || null
        }

        function ra(e, t) {
            if (t) {
                var n, i, r, o, a, s, l = e.data,
                    u = e.len(),
                    c = vT.M,
                    p = vT.C,
                    h = vT.L,
                    d = vT.R,
                    f = vT.A,
                    g = vT.Q;
                for (r = 0, o = 0; u > r;) {
                    switch (n = l[r++], o = r, i = 0, n) {
                        case c:
                        case h:
                            i = 1;
                            break;
                        case p:
                            i = 3;
                            break;
                        case g:
                            i = 2;
                            break;
                        case f:
                            var m = t[4],
                                y = t[5],
                                v = _T(t[0] * t[0] + t[1] * t[1]),
                                x = _T(t[2] * t[2] + t[3] * t[3]),
                                _ = wT(-t[1] / x, t[0] / v);
                            l[r] *= v, l[r++] += m, l[r] *= x, l[r++] += y, l[r++] *= v, l[r++] *= x, l[r++] += _, l[r++] += _, r += 2, o = r;
                            break;
                        case d:
                            s[0] = l[r++], s[1] = l[r++], me(s, s, t), l[o++] = s[0], l[o++] = s[1], s[0] += l[r++], s[1] += l[r++], me(s, s, t), l[o++] = s[0], l[o++] = s[1]
                    }
                    for (a = 0; i > a; a++) {
                        var w = xT[a];
                        w[0] = l[r++], w[1] = l[r++], me(w, w, t), l[o++] = w[0], l[o++] = w[1]
                    }
                }
                e.increaseVersion()
            }
        }

        function oa(e) {
            return Math.sqrt(e[0] * e[0] + e[1] * e[1])
        }

        function aa(e, t) {
            return (e[0] * t[0] + e[1] * t[1]) / (oa(e) * oa(t))
        }

        function sa(e, t) {
            return (e[0] * t[1] < e[1] * t[0] ? -1 : 1) * Math.acos(aa(e, t))
        }

        function la(e, t, n, i, r, o, a, s, l, u, c) {
            var p = l * (CT / 180),
                h = TT(p) * (e - n) / 2 + ST(p) * (t - i) / 2,
                d = -1 * ST(p) * (e - n) / 2 + TT(p) * (t - i) / 2,
                f = h * h / (a * a) + d * d / (s * s);
            f > 1 && (a *= bT(f), s *= bT(f));
            var g = (r === o ? -1 : 1) * bT((a * a * s * s - a * a * d * d - s * s * h * h) / (a * a * d * d + s * s * h * h)) || 0,
                m = g * a * d / s,
                y = g * -s * h / a,
                v = (e + n) / 2 + TT(p) * m - ST(p) * y,
                x = (t + i) / 2 + ST(p) * m + TT(p) * y,
                _ = sa([1, 0], [(h - m) / a, (d - y) / s]),
                w = [(h - m) / a, (d - y) / s],
                b = [(-1 * h - m) / a, (-1 * d - y) / s],
                S = sa(w, b);
            if (aa(w, b) <= -1 && (S = CT), aa(w, b) >= 1 && (S = 0), 0 > S) {
                var T = Math.round(S / CT * 1e6) / 1e6;
                S = 2 * CT + T % 2 * CT
            }
            c.addData(u, v, x, a, s, _, S, p, o)
        }

        function ua(e) {
            var t = new SS;
            if (!e) return t;
            var n, i = 0,
                r = 0,
                o = i,
                a = r,
                s = SS.CMD,
                l = e.match(MT);
            if (!l) return t;
            for (var u = 0; u < l.length; u++) {
                for (var c = l[u], p = c.charAt(0), h = void 0, d = c.match(IT) || [], f = d.length, g = 0; f > g; g++) d[g] = parseFloat(d[g]);
                for (var m = 0; f > m;) {
                    var y = void 0,
                        v = void 0,
                        x = void 0,
                        _ = void 0,
                        w = void 0,
                        b = void 0,
                        S = void 0,
                        T = i,
                        C = r,
                        M = void 0,
                        I = void 0;
                    switch (p) {
                        case "l":
                            i += d[m++], r += d[m++], h = s.L, t.addData(h, i, r);
                            break;
                        case "L":
                            i = d[m++], r = d[m++], h = s.L, t.addData(h, i, r);
                            break;
                        case "m":
                            i += d[m++], r += d[m++], h = s.M, t.addData(h, i, r), o = i, a = r, p = "l";
                            break;
                        case "M":
                            i = d[m++], r = d[m++], h = s.M, t.addData(h, i, r), o = i, a = r, p = "L";
                            break;
                        case "h":
                            i += d[m++], h = s.L, t.addData(h, i, r);
                            break;
                        case "H":
                            i = d[m++], h = s.L, t.addData(h, i, r);
                            break;
                        case "v":
                            r += d[m++], h = s.L, t.addData(h, i, r);
                            break;
                        case "V":
                            r = d[m++], h = s.L, t.addData(h, i, r);
                            break;
                        case "C":
                            h = s.C, t.addData(h, d[m++], d[m++], d[m++], d[m++], d[m++], d[m++]), i = d[m - 2], r = d[m - 1];
                            break;
                        case "c":
                            h = s.C, t.addData(h, d[m++] + i, d[m++] + r, d[m++] + i, d[m++] + r, d[m++] + i, d[m++] + r), i += d[m - 2], r += d[m - 1];
                            break;
                        case "S":
                            y = i, v = r, M = t.len(), I = t.data, n === s.C && (y += i - I[M - 4], v += r - I[M - 3]), h = s.C, T = d[m++], C = d[m++], i = d[m++], r = d[m++], t.addData(h, y, v, T, C, i, r);
                            break;
                        case "s":
                            y = i, v = r, M = t.len(), I = t.data, n === s.C && (y += i - I[M - 4], v += r - I[M - 3]), h = s.C, T = i + d[m++], C = r + d[m++], i += d[m++], r += d[m++], t.addData(h, y, v, T, C, i, r);
                            break;
                        case "Q":
                            T = d[m++], C = d[m++], i = d[m++], r = d[m++], h = s.Q, t.addData(h, T, C, i, r);
                            break;
                        case "q":
                            T = d[m++] + i, C = d[m++] + r, i += d[m++], r += d[m++], h = s.Q, t.addData(h, T, C, i, r);
                            break;
                        case "T":
                            y = i, v = r, M = t.len(), I = t.data, n === s.Q && (y += i - I[M - 4], v += r - I[M - 3]), i = d[m++], r = d[m++], h = s.Q, t.addData(h, y, v, i, r);
                            break;
                        case "t":
                            y = i, v = r, M = t.len(), I = t.data, n === s.Q && (y += i - I[M - 4], v += r - I[M - 3]), i += d[m++], r += d[m++], h = s.Q, t.addData(h, y, v, i, r);
                            break;
                        case "A":
                            x = d[m++], _ = d[m++], w = d[m++], b = d[m++], S = d[m++], T = i, C = r, i = d[m++], r = d[m++], h = s.A, la(T, C, i, r, b, S, x, _, w, h, t);
                            break;
                        case "a":
                            x = d[m++], _ = d[m++], w = d[m++], b = d[m++], S = d[m++], T = i, C = r, i += d[m++], r += d[m++], h = s.A, la(T, C, i, r, b, S, x, _, w, h, t)
                    }
                }("z" === p || "Z" === p) && (h = s.Z, t.addData(h), i = o, r = a), n = h
            }
            return t.toStatic(), t
        }

        function ca(e) {
            return null != e.setData
        }

        function pa(e, t) {
            var n = ua(e),
                i = c({}, t);
            return i.buildPath = function (e) {
                if (ca(e)) {
                    e.setData(n.data);
                    var t = e.getContext();
                    t && e.rebuildPath(t, 1)
                } else {
                    t = e;
                    n.rebuildPath(t, 1)
                }
            }, i.applyTransform = function (e) {
                ra(n, e), this.dirtyShape()
            }, i
        }

        function ha(e, t) {
            return new kT(pa(e, t))
        }

        function da(e, n) {
            var i = pa(e, n),
                r = function (e) {
                    function n(t) {
                        var n = e.call(this, t) || this;
                        return n.applyTransform = i.applyTransform, n.buildPath = i.buildPath, n
                    }
                    return t(n, e), n
                }(kT);
            return r
        }

        function fa(e, t) {
            for (var n = [], i = e.length, r = 0; i > r; r++) {
                var o = e[r];
                n.push(o.getUpdatedPathProxy(!0))
            }
            var a = new OS(t);
            return a.createPathProxy(), a.buildPath = function (e) {
                if (ca(e)) {
                    e.appendPath(n);
                    var t = e.getContext();
                    t && e.rebuildPath(t, 1)
                }
            }, a
        }

        function ga(e, t, n, i, r, o, a, s) {
            var l = n - e,
                u = i - t,
                c = a - r,
                p = s - o,
                h = p * l - c * u;
            return WT > h * h ? void 0 : (h = (c * (t - o) - p * (e - r)) / h, [e + h * l, t + h * u])
        }

        function ma(e, t, n, i, r, o, a) {
            var s = e - n,
                l = t - i,
                u = (a ? o : -o) / HT(s * s + l * l),
                c = u * l,
                p = -u * s,
                h = e + c,
                d = t + p,
                f = n + c,
                g = i + p,
                m = (h + f) / 2,
                y = (d + g) / 2,
                v = f - h,
                x = g - d,
                _ = v * v + x * x,
                w = r - o,
                b = h * g - f * d,
                S = (0 > x ? -1 : 1) * HT(GT(0, w * w * _ - b * b)),
                T = (b * x - v * S) / _,
                C = (-b * v - x * S) / _,
                M = (b * x + v * S) / _,
                I = (-b * v + x * S) / _,
                k = T - m,
                D = C - y,
                A = M - m,
                P = I - y;
            return k * k + D * D > A * A + P * P && (T = M, C = I), {
                cx: T,
                cy: C,
                x0: -c,
                y0: -p,
                x1: T * (r / w - 1),
                y1: C * (r / w - 1)
            }
        }

        function ya(e) {
            var t;
            if (T(e)) {
                var n = e.length;
                if (!n) return e;
                t = 1 === n ? [e[0], e[0], 0, 0] : 2 === n ? [e[0], e[0], e[1], e[1]] : 3 === n ? e.concat(e[2]) : e
            } else t = [e, e, e, e];
            return t
        }

        function va(e, t) {
            var n, i = GT(t.r, 0),
                r = GT(t.r0 || 0, 0),
                o = i > 0,
                a = r > 0;
            if (o || a) {
                if (o || (i = r, r = 0), r > i) {
                    var s = i;
                    i = r, r = s
                }
                var l = t.startAngle,
                    u = t.endAngle;
                if (!isNaN(l) && !isNaN(u)) {
                    var c = t.cx,
                        p = t.cy,
                        h = !!t.clockwise,
                        d = FT(u - l),
                        f = d > OT && d % OT;
                    if (f > WT && (d = f), i > WT)
                        if (d > OT - WT) e.moveTo(c + i * RT(l), p + i * ET(l)), e.arc(c, p, i, l, u, !h), r > WT && (e.moveTo(c + r * RT(u), p + r * ET(u)), e.arc(c, p, r, u, l, h));
                        else {
                            var g = void 0,
                                m = void 0,
                                y = void 0,
                                v = void 0,
                                x = void 0,
                                _ = void 0,
                                w = void 0,
                                b = void 0,
                                S = void 0,
                                T = void 0,
                                C = void 0,
                                M = void 0,
                                I = void 0,
                                k = void 0,
                                D = void 0,
                                A = void 0,
                                P = i * RT(l),
                                L = i * ET(l),
                                N = r * RT(u),
                                O = r * ET(u),
                                E = d > WT;
                            if (E) {
                                var R = t.cornerRadius;
                                R && (n = ya(R), g = n[0], m = n[1], y = n[2], v = n[3]);
                                var z = FT(i - r) / 2;
                                if (x = VT(z, y), _ = VT(z, v), w = VT(z, g), b = VT(z, m), C = S = GT(x, _), M = T = GT(w, b), (S > WT || T > WT) && (I = i * RT(u), k = i * ET(u), D = r * RT(l), A = r * ET(l), NT > d)) {
                                    var B = ga(P, L, D, A, I, k, N, O);
                                    if (B) {
                                        var F = P - B[0],
                                            H = L - B[1],
                                            G = I - B[0],
                                            V = k - B[1],
                                            W = 1 / ET(zT((F * G + H * V) / (HT(F * F + H * H) * HT(G * G + V * V))) / 2),
                                            j = HT(B[0] * B[0] + B[1] * B[1]);
                                        C = VT(S, (i - j) / (W + 1)), M = VT(T, (r - j) / (W - 1))
                                    }
                                }
                            }
                            if (E)
                                if (C > WT) {
                                    var X = VT(y, C),
                                        Y = VT(v, C),
                                        U = ma(D, A, P, L, i, X, h),
                                        q = ma(I, k, N, O, i, Y, h);
                                    e.moveTo(c + U.cx + U.x0, p + U.cy + U.y0), S > C && X === Y ? e.arc(c + U.cx, p + U.cy, C, BT(U.y0, U.x0), BT(q.y0, q.x0), !h) : (X > 0 && e.arc(c + U.cx, p + U.cy, X, BT(U.y0, U.x0), BT(U.y1, U.x1), !h), e.arc(c, p, i, BT(U.cy + U.y1, U.cx + U.x1), BT(q.cy + q.y1, q.cx + q.x1), !h), Y > 0 && e.arc(c + q.cx, p + q.cy, Y, BT(q.y1, q.x1), BT(q.y0, q.x0), !h))
                                } else e.moveTo(c + P, p + L), e.arc(c, p, i, l, u, !h);
                            else e.moveTo(c + P, p + L);
                            if (r > WT && E)
                                if (M > WT) {
                                    X = VT(g, M), Y = VT(m, M), U = ma(N, O, I, k, r, -Y, h), q = ma(P, L, D, A, r, -X, h);
                                    e.lineTo(c + U.cx + U.x0, p + U.cy + U.y0), T > M && X === Y ? e.arc(c + U.cx, p + U.cy, M, BT(U.y0, U.x0), BT(q.y0, q.x0), !h) : (Y > 0 && e.arc(c + U.cx, p + U.cy, Y, BT(U.y0, U.x0), BT(U.y1, U.x1), !h), e.arc(c, p, r, BT(U.cy + U.y1, U.cx + U.x1), BT(q.cy + q.y1, q.cx + q.x1), h), X > 0 && e.arc(c + q.cx, p + q.cy, X, BT(q.y1, q.x1), BT(q.y0, q.x0), !h))
                                } else e.lineTo(c + N, p + O), e.arc(c, p, r, u, l, h);
                            else e.lineTo(c + N, p + O)
                        }
                    else e.moveTo(c, p);
                    e.closePath()
                }
            }
        }

        function xa(e, t, n, i) {
            var r, o, a, s, l = [],
                u = [],
                c = [],
                p = [];
            if (i) {
                a = [1 / 0, 1 / 0], s = [-1 / 0, -1 / 0];
                for (var h = 0, d = e.length; d > h; h++) ye(a, a, e[h]), ve(s, s, e[h]);
                ye(a, a, i[0]), ve(s, s, i[1])
            }
            for (h = 0, d = e.length; d > h; h++) {
                var f = e[h];
                if (n) r = e[h ? h - 1 : d - 1], o = e[(h + 1) % d];
                else {
                    if (0 === h || h === d - 1) {
                        l.push(ee(e[h]));
                        continue
                    }
                    r = e[h - 1], o = e[h + 1]
                }
                re(u, o, r), ce(u, u, t);
                var g = he(f, r),
                    m = he(f, o),
                    y = g + m;
                0 !== y && (g /= y, m /= y), ce(c, u, -g), ce(p, u, m);
                var v = ne([], f, c),
                    x = ne([], f, p);
                i && (ve(v, v, a), ye(v, v, s), ve(x, x, a), ye(x, x, s)), l.push(v), l.push(x)
            }
            return n && l.push(l.shift()), l
        }

        function _a(e, t, n) {
            var i = t.smooth,
                r = t.points;
            if (r && r.length >= 2) {
                if (i) {
                    var o = xa(r, i, n, t.smoothConstraint);
                    e.moveTo(r[0][0], r[0][1]);
                    for (var a = r.length, s = 0;
                        (n ? a : a - 1) > s; s++) {
                        var l = o[2 * s],
                            u = o[2 * s + 1],
                            c = r[(s + 1) % a];
                        e.bezierCurveTo(l[0], l[1], u[0], u[1], c[0], c[1])
                    }
                } else {
                    e.moveTo(r[0][0], r[0][1]);
                    s = 1;
                    for (var p = r.length; p > s; s++) e.lineTo(r[s][0], r[s][1])
                }
                n && e.closePath()
            }
        }

        function wa(e, t, n) {
            var i = e.cpx2,
                r = e.cpy2;
            return null != i || null != r ? [(n ? ct : ut)(e.x1, e.cpx1, e.cpx2, e.x2, t), (n ? ct : ut)(e.y1, e.cpy1, e.cpy2, e.y2, t)] : [(n ? yt : mt)(e.x1, e.cpx1, e.x2, t), (n ? yt : mt)(e.y1, e.cpy1, e.y2, t)]
        }

        function ba(e, t, n, i, r) {
            var o;
            if (t && t.ecModel) {
                var a = t.ecModel.getUpdatePayload();
                o = a && a.animation
            }
            var s = t && t.isAnimationEnabled(),
                l = "update" === e;
            if (s) {
                var u = void 0,
                    c = void 0,
                    p = void 0;
                i ? (u = B(i.duration, 200), c = B(i.easing, "cubicOut"), p = 0) : (u = t.getShallow(l ? "animationDurationUpdate" : "animationDuration"), c = t.getShallow(l ? "animationEasingUpdate" : "animationEasing"), p = t.getShallow(l ? "animationDelayUpdate" : "animationDelay")), o && (null != o.duration && (u = o.duration), null != o.easing && (c = o.easing), null != o.delay && (p = o.delay)), C(p) && (p = p(n, r)), C(u) && (u = u(n));
                var h = {
                    duration: u || 0,
                    delay: p,
                    easing: c
                };
                return h
            }
            return null
        }

        function Sa(e, t, n, i, r, o, a) {
            var s, l = !1;
            C(r) ? (a = o, o = r, r = null) : D(r) && (o = r.cb, a = r.during, l = r.isFrom, s = r.removeOpt, r = r.dataIndex);
            var u = "leave" === e;
            u || t.stopAnimation("leave");
            var c = ba(e, i, r, u ? s || {} : null, i && i.getAnimationDelayParams ? i.getAnimationDelayParams(t, r) : null);
            if (c && c.duration > 0) {
                var p = c.duration,
                    h = c.delay,
                    d = c.easing,
                    f = {
                        duration: p,
                        delay: h || 0,
                        easing: d,
                        done: o,
                        force: !!o || !!a,
                        setToFinal: !u,
                        scope: e,
                        during: a
                    };
                l ? t.animateFrom(n, f) : t.animateTo(n, f)
            } else t.stopAnimation(), !l && t.attr(n), a && a(1), o && o()
        }

        function Ta(e, t, n, i, r, o) {
            Sa("update", e, t, n, i, r, o)
        }

        function Ca(e, t, n, i, r, o) {
            Sa("enter", e, t, n, i, r, o)
        }

        function Ma(e) {
            if (!e.__zr) return !0;
            for (var t = 0; t < e.animators.length; t++) {
                var n = e.animators[t];
                if ("leave" === n.scope) return !0
            }
            return !1
        }

        function Ia(e, t, n, i, r, o) {
            Ma(e) || Sa("leave", e, t, n, i, r, o)
        }

        function ka(e, t, n, i) {
            e.removeTextContent(), e.removeTextGuideLine(), Ia(e, {
                style: {
                    opacity: 0
                }
            }, t, n, i)
        }

        function Da(e, t, n) {
            function i() {
                e.parent && e.parent.remove(e)
            }
            e.isGroup ? e.traverse(function (e) {
                e.isGroup || ka(e, t, n, i)
            }) : ka(e, t, n, i)
        }

        function Aa(e) {
            yC(e).oldStyle = e.style
        }

        function Pa(e) {
            return OS.extend(e)
        }

        function La(e, t) {
            return wC(e, t)
        }

        function Na(e, t) {
            _C[e] = t
        }

        function Oa(e) {
            return _C.hasOwnProperty(e) ? _C[e] : void 0
        }

        function Ea(e, t, n, i) {
            var r = ha(e, t);
            return n && ("center" === i && (n = za(n, r.getBoundingRect())), Ba(r, n)), r
        }

        function Ra(e, t, n) {
            var i = new FS({
                style: {
                    image: e,
                    x: t.x,
                    y: t.y,
                    width: t.width,
                    height: t.height
                },
                onload: function (e) {
                    if ("center" === n) {
                        var r = {
                            width: e.width,
                            height: e.height
                        };
                        i.setStyle(za(t, r))
                    }
                }
            });
            return i
        }

        function za(e, t) {
            var n, i = t.width / t.height,
                r = e.height * i;
            r <= e.width ? n = e.height : (r = e.width, n = r / i);
            var o = e.x + e.width / 2,
                a = e.y + e.height / 2;
            return {
                x: o - r / 2,
                y: a - n / 2,
                width: r,
                height: n
            }
        }

        function Ba(e, t) {
            if (e.applyTransform) {
                var n = e.getBoundingRect(),
                    i = n.calculateTransform(t);
                e.applyTransform(i)
            }
        }

        function Fa(e, t) {
            return Zr(e, e, {
                lineWidth: t
            }), e
        }

        function Ha(e) {
            return $r(e.shape, e.shape, e.style), e
        }

        function Ga(e, t) {
            for (var n = Be([]); e && e !== t;) He(n, e.getLocalTransform(), n), e = e.parent;
            return n
        }

        function Va(e, t, n) {
            return t && !g(t) && (t = ab.getLocalTransform(t)), n && (t = je([], t)), me([], e, t)
        }

        function Wa(e, t, n) {
            var i = 0 === t[4] || 0 === t[5] || 0 === t[0] ? 1 : Math.abs(2 * t[4] / t[0]),
                r = 0 === t[4] || 0 === t[5] || 0 === t[2] ? 1 : Math.abs(2 * t[4] / t[2]),
                o = ["left" === e ? -i : "right" === e ? i : 0, "top" === e ? -r : "bottom" === e ? r : 0];
            return o = Va(o, t, n), Math.abs(o[0]) > Math.abs(o[1]) ? o[0] > 0 ? "right" : "left" : o[1] > 0 ? "bottom" : "top"
        }

        function ja(e) {
            return !e.isGroup
        }

        function Xa(e) {
            return null != e.shape
        }

        function Ya(e, t, n) {
            function i(e) {
                var t = {};
                return e.traverse(function (e) {
                    ja(e) && e.anid && (t[e.anid] = e)
                }), t
            }

            function r(e) {
                var t = {
                    x: e.x,
                    y: e.y,
                    rotation: e.rotation
                };
                return Xa(e) && (t.shape = c({}, e.shape)), t
            }
            if (e && t) {
                var o = i(e);
                t.traverse(function (e) {
                    if (ja(e) && e.anid) {
                        var t = o[e.anid];
                        if (t) {
                            var i = r(e);
                            e.attr(r(t)), Ta(e, i, n, KS(e).dataIndex)
                        }
                    }
                })
            }
        }

        function Ua(e, t) {
            return y(e, function (e) {
                var n = e[0];
                n = vC(n, t.x), n = xC(n, t.x + t.width);
                var i = e[1];
                return i = vC(i, t.y), i = xC(i, t.y + t.height), [n, i]
            })
        }

        function qa(e, t) {
            var n = vC(e.x, t.x),
                i = xC(e.x + e.width, t.x + t.width),
                r = vC(e.y, t.y),
                o = xC(e.y + e.height, t.y + t.height);
            return i >= n && o >= r ? {
                x: n,
                y: r,
                width: i - n,
                height: o - r
            } : void 0
        }

        function Za(e, t, n) {
            var i = c({
                    rectHover: !0
                }, t),
                r = i.style = {
                    strokeNoScale: !0
                };
            return n = n || {
                x: -1,
                y: -1,
                width: 2,
                height: 2
            }, e ? 0 === e.indexOf("image://") ? (r.image = e.slice(8), p(r, n), new FS(i)) : Ea(e.replace("path://", ""), i, n, "center") : void 0
        }

        function $a(e, t, n, i, r) {
            for (var o = 0, a = r[r.length - 1]; o < r.length; o++) {
                var s = r[o];
                if (Ka(e, t, n, i, s[0], s[1], a[0], a[1])) return !0;
                a = s
            }
        }

        function Ka(e, t, n, i, r, o, a, s) {
            var l = n - e,
                u = i - t,
                c = a - r,
                p = s - o,
                h = Ja(c, p, l, u);
            if (Qa(h)) return !1;
            var d = e - r,
                f = t - o,
                g = Ja(d, f, l, u) / h;
            if (0 > g || g > 1) return !1;
            var m = Ja(d, f, c, p) / h;
            return !(0 > m || m > 1)
        }

        function Ja(e, t, n, i) {
            return e * i - n * t
        }

        function Qa(e) {
            return 1e-6 >= e && e >= -1e-6
        }

        function es(e) {
            var t = e.itemTooltipOption,
                n = e.componentModel,
                i = e.itemName,
                r = M(t) ? {
                    formatter: t
                } : t,
                o = n.mainType,
                a = n.componentIndex,
                s = {
                    componentType: o,
                    name: i,
                    $vars: ["name"]
                };
            s[o + "Index"] = a;
            var l = e.formatterParamsExtra;
            l && m(w(l), function (e) {
                $(s, e) || (s[e] = l[e], s.$vars.push(e))
            });
            var u = KS(e.el);
            u.componentMainType = o, u.componentIndex = a, u.tooltipConfig = {
                name: i,
                option: p({
                    content: i,
                    formatterParams: s
                }, r)
            }
        }

        function ts(e, t) {
            var n;
            e.isGroup && (n = t(e)), n || e.traverse(t)
        }

        function ns(e, t) {
            if (e)
                if (T(e))
                    for (var n = 0; n < e.length; n++) ts(e[n], t);
                else ts(e, t)
        }

        function is(e, t) {
            for (var n = 0; n < aT.length; n++) {
                var i = aT[n],
                    r = t[i],
                    o = e.ensureState(i);
                o.style = o.style || {}, o.style.text = r
            }
            var a = e.currentStates.slice();
            e.clearStates(!0), e.setStyle({
                text: t.normal
            }), e.useStates(a, !0)
        }

        function rs(e, t, n) {
            var i, r = e.labelFetcher,
                o = e.labelDataIndex,
                a = e.labelDimIndex,
                s = t.normal;
            r && (i = r.getFormattedLabel(o, "normal", null, a, s && s.get("formatter"), null != n ? {
                interpolatedValue: n
            } : null)), null == i && (i = C(e.defaultText) ? e.defaultText(o, e, n) : e.defaultText);
            for (var l = {
                    normal: i
                }, u = 0; u < aT.length; u++) {
                var c = aT[u],
                    p = t[c];
                l[c] = B(r ? r.getFormattedLabel(o, c, null, a, p && p.get("formatter")) : null, i)
            }
            return l
        }

        function os(e, t, n, i) {
            n = n || CC;
            for (var r = e instanceof US, o = !1, a = 0; a < sT.length; a++) {
                var s = t[sT[a]];
                if (s && s.getShallow("show")) {
                    o = !0;
                    break
                }
            }
            var l = r ? e : e.getTextContent();
            if (o) {
                r || (l || (l = new US, e.setTextContent(l)), e.stateProxy && (l.stateProxy = e.stateProxy));
                var u = rs(n, t),
                    c = t.normal,
                    p = !!c.getShallow("show"),
                    h = ss(c, i && i.normal, n, !1, !r);
                h.text = u.normal, r || e.setTextConfig(ls(c, n, !1));
                for (a = 0; a < aT.length; a++) {
                    var d = aT[a];
                    s = t[d];
                    if (s) {
                        var f = l.ensureState(d),
                            g = !!B(s.getShallow("show"), p);
                        if (g !== p && (f.ignore = !g), f.style = ss(s, i && i[d], n, !0, !r), f.style.text = u[d], !r) {
                            var m = e.ensureState(d);
                            m.textConfig = ls(s, n, !0)
                        }
                    }
                }
                l.silent = !!c.getShallow("silent"), null != l.style.x && (h.x = l.style.x), null != l.style.y && (h.y = l.style.y), l.ignore = !p, l.useStyle(h), l.dirty(), n.enableTextSetter && (DC(l).setLabelText = function (e) {
                    var i = rs(n, t, e);
                    is(l, i)
                })
            } else l && (l.ignore = !0);
            e.dirty()
        }

        function as(e, t) {
            t = t || "label";
            for (var n = {
                    normal: e.getModel(t)
                }, i = 0; i < aT.length; i++) {
                var r = aT[i];
                n[r] = e.getModel([r, t])
            }
            return n
        }

        function ss(e, t, n, i, r) {
            var o = {};
            return us(o, e, n, i, r), t && c(o, t), o
        }

        function ls(e, t, n) {
            t = t || {};
            var i, r = {},
                o = e.getShallow("rotate"),
                a = B(e.getShallow("distance"), n ? null : 5),
                s = e.getShallow("offset");
            return i = e.getShallow("position") || (n ? null : "inside"), "outside" === i && (i = t.defaultOutsidePosition || "top"), null != i && (r.position = i), null != s && (r.offset = s), null != o && (o *= Math.PI / 180, r.rotation = o), null != a && (r.distance = a), r.outsideFill = "inherit" === e.get("color") ? t.inheritColor || null : "auto", r
        }

        function us(e, t, n, i, r) {
            n = n || CC;
            var o, a = t.ecModel,
                s = a && a.option.textStyle,
                l = cs(t);
            if (l)
                for (var u in o = {}, l)
                    if (l.hasOwnProperty(u)) {
                        var c = t.getModel(["rich", u]);
                        ps(o[u] = {}, c, s, n, i, r, !1, !0)
                    } o && (e.rich = o);
            var p = t.get("overflow");
            p && (e.overflow = p);
            var h = t.get("minMargin");
            null != h && (e.margin = h), ps(e, t, s, n, i, r, !0, !1)
        }

        function cs(e) {
            for (var t; e && e !== e.ecModel;) {
                var n = (e.option || CC).rich;
                if (n) {
                    t = t || {};
                    for (var i = w(n), r = 0; r < i.length; r++) {
                        var o = i[r];
                        t[o] = 1
                    }
                }
                e = e.parentModel
            }
            return t
        }

        function ps(e, t, n, i, r, o, a, s) {
            n = !r && n || CC;
            var l = i && i.inheritColor,
                u = t.getShallow("color"),
                c = t.getShallow("textBorderColor"),
                p = B(t.getShallow("opacity"), n.opacity);
            ("inherit" === u || "auto" === u) && (u = l || null), ("inherit" === c || "auto" === c) && (c = l || null), o || (u = u || n.color, c = c || n.textBorderColor), null != u && (e.fill = u), null != c && (e.stroke = c);
            var h = B(t.getShallow("textBorderWidth"), n.textBorderWidth);
            null != h && (e.lineWidth = h);
            var d = B(t.getShallow("textBorderType"), n.textBorderType);
            null != d && (e.lineDash = d);
            var f = B(t.getShallow("textBorderDashOffset"), n.textBorderDashOffset);
            null != f && (e.lineDashOffset = f), r || null != p || s || (p = i && i.defaultOpacity), null != p && (e.opacity = p), r || o || null == e.fill && i.inheritColor && (e.fill = i.inheritColor);
            for (var g = 0; g < MC.length; g++) {
                var m = MC[g],
                    y = B(t.getShallow(m), n[m]);
                null != y && (e[m] = y)
            }
            for (g = 0; g < IC.length; g++) {
                m = IC[g], y = t.getShallow(m);
                null != y && (e[m] = y)
            }
            if (null == e.verticalAlign) {
                var v = t.getShallow("baseline");
                null != v && (e.verticalAlign = v)
            }
            if (!a || !i.disableBox) {
                for (g = 0; g < kC.length; g++) {
                    m = kC[g], y = t.getShallow(m);
                    null != y && (e[m] = y)
                }
                var x = t.getShallow("borderType");
                null != x && (e.borderDash = x), "auto" !== e.backgroundColor && "inherit" !== e.backgroundColor || !l || (e.backgroundColor = l), "auto" !== e.borderColor && "inherit" !== e.borderColor || !l || (e.borderColor = l)
            }
        }

        function hs(e, t) {
            var n = t && t.getModel("textStyle");
            return W([e.fontStyle || n && n.getShallow("fontStyle") || "", e.fontWeight || n && n.getShallow("fontWeight") || "", (e.fontSize || n && n.getShallow("fontSize") || 12) + "px", e.fontFamily || n && n.getShallow("fontFamily") || "sans-serif"].join(" "))
        }

        function ds(e, t, n, i) {
            if (e) {
                var r = DC(e);
                r.prevValue = r.value, r.value = n;
                var o = t.normal;
                r.valueAnimation = o.get("valueAnimation"), r.valueAnimation && (r.precision = o.get("precision"), r.defaultInterpolatedText = i, r.statesModels = t)
            }
        }

        function fs(e, t, n, i, r) {
            function o(i) {
                var o = er(n, a.precision, l, u, i);
                a.interpolatedValue = 1 === i ? null : o;
                var c = rs({
                    labelDataIndex: t,
                    labelFetcher: r,
                    defaultText: s ? s(o) : o + ""
                }, a.statesModels, o);
                is(e, c)
            }
            var a = DC(e);
            if (a.valueAnimation && a.prevValue !== a.value) {
                var s = a.defaultInterpolatedText,
                    l = B(a.interpolatedValue, a.prevValue),
                    u = a.value;
                e.percent = 0, (null == a.prevValue ? Ca : Ta)(e, {
                    percent: 1
                }, i, t, null, o)
            }
        }

        function gs(e) {
            return [e || "", GC++].join("_")
        }

        function ms(e) {
            var t = {};
            e.registerSubTypeDefaulter = function (e, n) {
                var i = tr(e);
                t[i.main] = n
            }, e.determineSubType = function (n, i) {
                var r = i.type;
                if (!r) {
                    var o = tr(n).main;
                    e.hasSubTypes(n) && t[o] && (r = t[o](i))
                }
                return r
            }
        }

        function ys(e, t) {
            function n(e) {
                var n = {},
                    o = [];
                return m(e, function (a) {
                    var s = i(n, a),
                        l = s.originalDeps = t(a),
                        u = r(l, e);
                    s.entryCount = u.length, 0 === s.entryCount && o.push(a), m(u, function (e) {
                        h(s.predecessor, e) < 0 && s.predecessor.push(e);
                        var t = i(n, e);
                        h(t.successor, e) < 0 && t.successor.push(a)
                    })
                }), {
                    graph: n,
                    noEntryList: o
                }
            }

            function i(e, t) {
                return e[t] || (e[t] = {
                    predecessor: [],
                    successor: []
                }), e[t]
            }

            function r(e, t) {
                var n = [];
                return m(e, function (e) {
                    h(t, e) >= 0 && n.push(e)
                }), n
            }
            e.topologicalTravel = function (e, t, i, r) {
                function o(e) {
                    l[e].entryCount--, 0 === l[e].entryCount && u.push(e)
                }

                function a(e) {
                    c[e] = !0, o(e)
                }
                if (e.length) {
                    var s = n(t),
                        l = s.graph,
                        u = s.noEntryList,
                        c = {};
                    for (m(e, function (e) {
                            c[e] = !0
                        }); u.length;) {
                        var p = u.pop(),
                            h = l[p],
                            d = !!c[p];
                        d && (i.call(r, p, h.originalDeps.slice()), delete c[p]), m(h.successor, d ? a : o)
                    }
                    m(c, function () {
                        var e = "";
                        throw new Error(e)
                    })
                }
            }
        }

        function vs(e, t) {
            return l(l({}, e, !0), t, !0)
        }

        function xs(e, t) {
            e = e.toUpperCase(), qC[e] = new HC(t), UC[e] = t
        }

        function _s(e) {
            if (M(e)) {
                var t = UC[e.toUpperCase()] || {};
                return e === jC || e === XC ? s(t) : l(s(t), s(UC[YC]), !1)
            }
            return l(s(e), s(UC[YC]), !1)
        }

        function ws(e) {
            return qC[e]
        }

        function bs() {
            return qC[YC]
        }

        function Ss(e, t) {
            return e += "", "0000".substr(0, t - e.length) + e
        }

        function Ts(e) {
            switch (e) {
                case "half-year":
                case "quarter":
                    return "month";
                case "week":
                case "half-week":
                    return "day";
                case "half-day":
                case "quarter-day":
                    return "hour";
                default:
                    return e
            }
        }

        function Cs(e) {
            return e === Ts(e)
        }

        function Ms(e) {
            switch (e) {
                case "year":
                case "month":
                    return "day";
                case "millisecond":
                    return "millisecond";
                default:
                    return "second"
            }
        }

        function Is(e, t, n, i) {
            var r = gi(e),
                o = r[Ps(n)](),
                a = r[Ls(n)]() + 1,
                s = Math.floor((a - 1) / 3) + 1,
                l = r[Ns(n)](),
                u = r["get" + (n ? "UTC" : "") + "Day"](),
                c = r[Os(n)](),
                p = (c - 1) % 12 + 1,
                h = r[Es(n)](),
                d = r[Rs(n)](),
                f = r[zs(n)](),
                g = i instanceof HC ? i : ws(i || ZC) || bs(),
                m = g.getModel("time"),
                y = m.get("month"),
                v = m.get("monthAbbr"),
                x = m.get("dayOfWeek"),
                _ = m.get("dayOfWeekAbbr");
            return (t || "").replace(/{yyyy}/g, o + "").replace(/{yy}/g, o % 100 + "").replace(/{Q}/g, s + "").replace(/{MMMM}/g, y[a - 1]).replace(/{MMM}/g, v[a - 1]).replace(/{MM}/g, Ss(a, 2)).replace(/{M}/g, a + "").replace(/{dd}/g, Ss(l, 2)).replace(/{d}/g, l + "").replace(/{eeee}/g, x[u]).replace(/{ee}/g, _[u]).replace(/{e}/g, u + "").replace(/{HH}/g, Ss(c, 2)).replace(/{H}/g, c + "").replace(/{hh}/g, Ss(p + "", 2)).replace(/{h}/g, p + "").replace(/{mm}/g, Ss(h, 2)).replace(/{m}/g, h + "").replace(/{ss}/g, Ss(d, 2)).replace(/{s}/g, d + "").replace(/{SSS}/g, Ss(f, 3)).replace(/{S}/g, f + "")
        }

        function ks(e, t, n, i, r) {
            var o = null;
            if (M(n)) o = n;
            else if (C(n)) o = n(e.value, t, {
                level: e.level
            });
            else {
                var a = c({}, tM);
                if (e.level > 0)
                    for (var s = 0; s < rM.length; ++s) a[rM[s]] = "{primary|" + a[rM[s]] + "}";
                var l = n ? !1 === n.inherit ? n : p(n, a) : a,
                    u = Ds(e.value, r);
                if (l[u]) o = l[u];
                else if (l.inherit) {
                    var h = oM.indexOf(u);
                    for (s = h - 1; s >= 0; --s)
                        if (l[u]) {
                            o = l[u];
                            break
                        } o = o || a.none
                }
                if (T(o)) {
                    var d = null == e.level ? 0 : e.level >= 0 ? e.level : o.length + e.level;
                    d = Math.min(d, o.length - 1), o = o[d]
                }
            }
            return Is(new Date(e.value), o, r, i)
        }

        function Ds(e, t) {
            var n = gi(e),
                i = n[Ls(t)]() + 1,
                r = n[Ns(t)](),
                o = n[Os(t)](),
                a = n[Es(t)](),
                s = n[Rs(t)](),
                l = n[zs(t)](),
                u = 0 === l,
                c = u && 0 === s,
                p = c && 0 === a,
                h = p && 0 === o,
                d = h && 1 === r,
                f = d && 1 === i;
            return f ? "year" : d ? "month" : h ? "day" : p ? "hour" : c ? "minute" : u ? "second" : "millisecond"
        }

        function As(e, t, n) {
            var i = k(e) ? gi(e) : e;
            switch (t = t || Ds(e, n)) {
                case "year":
                    return i[Ps(n)]();
                case "half-year":
                    return i[Ls(n)]() >= 6 ? 1 : 0;
                case "quarter":
                    return Math.floor((i[Ls(n)]() + 1) / 4);
                case "month":
                    return i[Ls(n)]();
                case "day":
                    return i[Ns(n)]();
                case "half-day":
                    return i[Os(n)]() / 24;
                case "hour":
                    return i[Os(n)]();
                case "minute":
                    return i[Es(n)]();
                case "second":
                    return i[Rs(n)]();
                case "millisecond":
                    return i[zs(n)]()
            }
        }

        function Ps(e) {
            return e ? "getUTCFullYear" : "getFullYear"
        }

        function Ls(e) {
            return e ? "getUTCMonth" : "getMonth"
        }

        function Ns(e) {
            return e ? "getUTCDate" : "getDate"
        }

        function Os(e) {
            return e ? "getUTCHours" : "getHours"
        }

        function Es(e) {
            return e ? "getUTCMinutes" : "getMinutes"
        }

        function Rs(e) {
            return e ? "getUTCSeconds" : "getSeconds"
        }

        function zs(e) {
            return e ? "getUTCMilliseconds" : "getMilliseconds"
        }

        function Bs(e) {
            return e ? "setUTCFullYear" : "setFullYear"
        }

        function Fs(e) {
            return e ? "setUTCMonth" : "setMonth"
        }

        function Hs(e) {
            return e ? "setUTCDate" : "setDate"
        }

        function Gs(e) {
            return e ? "setUTCHours" : "setHours"
        }

        function Vs(e) {
            return e ? "setUTCMinutes" : "setMinutes"
        }

        function Ws(e) {
            return e ? "setUTCSeconds" : "setSeconds"
        }

        function js(e) {
            return e ? "setUTCMilliseconds" : "setMilliseconds"
        }

        function Xs(e, t, n, i, r, o, a, s) {
            var l = new US({
                style: {
                    text: e,
                    font: t,
                    align: n,
                    verticalAlign: i,
                    padding: r,
                    rich: o,
                    overflow: a ? "truncate" : null,
                    lineHeight: s
                }
            });
            return l.getBoundingRect()
        }

        function Ys(e) {
            if (!bi(e)) return M(e) ? e : "-";
            var t = (e + "").split(".");
            return t[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, "$1,") + (t.length > 1 ? "." + t[1] : "")
        }

        function Us(e, t) {
            return e = (e || "").toLowerCase().replace(/-(.)/g, function (e, t) {
                return t.toUpperCase()
            }), t && e && (e = e.charAt(0).toUpperCase() + e.slice(1)), e
        }

        function qs(e, t, n) {
            function i(e) {
                return e && W(e) ? e : "-"
            }

            function r(e) {
                return !(null == e || isNaN(e) || !isFinite(e))
            }
            var o = "{yyyy}-{MM}-{dd} {HH}:{mm}:{ss}",
                a = "time" === t,
                s = e instanceof Date;
            if (a || s) {
                var l = a ? gi(e) : e;
                if (!isNaN(+l)) return Is(l, o, n);
                if (s) return "-"
            }
            if ("ordinal" === t) return I(e) ? i(e) : k(e) && r(e) ? e + "" : "-";
            var u = wi(e);
            return r(u) ? Ys(u) : I(e) ? i(e) : "boolean" == typeof e ? e + "" : "-"
        }

        function Zs(e, t, n) {
            T(t) || (t = [t]);
            var i = t.length;
            if (!i) return "";
            for (var r = t[0].$vars || [], o = 0; o < r.length; o++) {
                var a = sM[o];
                e = e.replace(lM(a), lM(a, 0))
            }
            for (var s = 0; i > s; s++)
                for (var l = 0; l < r.length; l++) {
                    var u = t[s][r[l]];
                    e = e.replace(lM(sM[l], s), n ? Me(u) : u)
                }
            return e
        }

        function $s(e, t) {
            var n = M(e) ? {
                    color: e,
                    extraCssText: t
                } : e || {},
                i = n.color,
                r = n.type;
            t = n.extraCssText;
            var o = n.renderMode || "html";
            if (!i) return "";
            if ("html" === o) return "subItem" === r ? '<span style="display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;border-radius:4px;width:4px;height:4px;background-color:' + Me(i) + ";" + (t || "") + '"></span>' : '<span style="display:inline-block;margin-right:4px;border-radius:10px;width:10px;height:10px;background-color:' + Me(i) + ";" + (t || "") + '"></span>';
            var a = n.markerId || "markerX";
            return {
                renderMode: o,
                content: "{" + a + "|}  ",
                style: "subItem" === r ? {
                    width: 4,
                    height: 4,
                    borderRadius: 2,
                    backgroundColor: i
                } : {
                    width: 10,
                    height: 10,
                    borderRadius: 5,
                    backgroundColor: i
                }
            }
        }

        function Ks(e, t, n) {
            ("week" === e || "month" === e || "quarter" === e || "half-year" === e || "year" === e) && (e = "MM-dd\nyyyy");
            var i = gi(t),
                r = n ? "getUTC" : "get",
                o = i[r + "FullYear"](),
                a = i[r + "Month"]() + 1,
                s = i[r + "Date"](),
                l = i[r + "Hours"](),
                u = i[r + "Minutes"](),
                c = i[r + "Seconds"](),
                p = i[r + "Milliseconds"]();
            return e.replace("MM", Ss(a, 2)).replace("M", a).replace("yyyy", o).replace("yy", Ss(o % 100 + "", 2)).replace("dd", Ss(s, 2)).replace("d", s).replace("hh", Ss(l, 2)).replace("h", l).replace("mm", Ss(u, 2)).replace("m", u).replace("ss", Ss(c, 2)).replace("s", c).replace("SSS", Ss(p, 3))
        }

        function Js(e) {
            return e ? e.charAt(0).toUpperCase() + e.substr(1) : e
        }

        function Qs(e, t) {
            return t = t || "transparent", M(e) ? e : D(e) && e.colorStops && (e.colorStops[0] || {}).color || t
        }

        function el(e, t) {
            if ("_blank" === t || "blank" === t) {
                var n = window.open();
                n.opener = null, n.location.href = e
            } else window.open(e, t)
        }

        function tl(e, t, n, i, r) {
            var o = 0,
                a = 0;
            null == i && (i = 1 / 0), null == r && (r = 1 / 0);
            var s = 0;
            t.eachChild(function (l, u) {
                var c, p, h = l.getBoundingRect(),
                    d = t.childAt(u + 1),
                    f = d && d.getBoundingRect();
                if ("horizontal" === e) {
                    var g = h.width + (f ? -f.x + h.x : 0);
                    c = o + g, c > i || l.newline ? (o = 0, c = g, a += s + n, s = h.height) : s = Math.max(s, h.height)
                } else {
                    var m = h.height + (f ? -f.y + h.y : 0);
                    p = a + m, p > r || l.newline ? (o += s + n, a = 0, p = m, s = h.width) : s = Math.max(s, h.width)
                }
                l.newline || (l.x = o, l.y = a, l.markRedraw(), "horizontal" === e ? o = c + n : a = p + n)
            })
        }

        function nl(e, t, n) {
            n = aM(n || 0);
            var i = t.width,
                r = t.height,
                o = ri(e.left, i),
                a = ri(e.top, r),
                s = ri(e.right, i),
                l = ri(e.bottom, r),
                u = ri(e.width, i),
                c = ri(e.height, r),
                p = n[2] + n[0],
                h = n[1] + n[3],
                d = e.aspect;
            switch (isNaN(u) && (u = i - s - h - o), isNaN(c) && (c = r - l - p - a), null != d && (isNaN(u) && isNaN(c) && (d > i / r ? u = .8 * i : c = .8 * r), isNaN(u) && (u = d * c), isNaN(c) && (c = u / d)), isNaN(o) && (o = i - s - u - h), isNaN(a) && (a = r - l - c - p), e.left || e.right) {
                case "center":
                    o = i / 2 - u / 2 - n[3];
                    break;
                case "right":
                    o = i - u - h
            }
            switch (e.top || e.bottom) {
                case "middle":
                case "center":
                    a = r / 2 - c / 2 - n[0];
                    break;
                case "bottom":
                    a = r - c - p
            }
            o = o || 0, a = a || 0, isNaN(u) && (u = i - h - o - (s || 0)), isNaN(c) && (c = r - p - a - (l || 0));
            var f = new F_(o + n[3], a + n[0], u, c);
            return f.margin = n, f
        }

        function il(e) {
            var t = e.layoutMode || e.constructor.layoutMode;
            return D(t) ? t : t ? {
                type: t
            } : null
        }

        function rl(e, t, n) {
            function i(n, i) {
                var a = {},
                    l = 0,
                    u = {},
                    c = 0,
                    p = 2;
                if (uM(n, function (t) {
                        u[t] = e[t]
                    }), uM(n, function (e) {
                        r(t, e) && (a[e] = u[e] = t[e]), o(a, e) && l++, o(u, e) && c++
                    }), s[i]) return o(t, n[1]) ? u[n[2]] = null : o(t, n[2]) && (u[n[1]] = null), u;
                if (c !== p && l) {
                    if (l >= p) return a;
                    for (var h = 0; h < n.length; h++) {
                        var d = n[h];
                        if (!r(a, d) && r(e, d)) {
                            a[d] = e[d];
                            break
                        }
                    }
                    return a
                }
                return u
            }

            function r(e, t) {
                return e.hasOwnProperty(t)
            }

            function o(e, t) {
                return null != e[t] && "auto" !== e[t]
            }

            function a(e, t, n) {
                uM(e, function (e) {
                    t[e] = n[e]
                })
            }
            var s = n && n.ignoreSize;
            !T(s) && (s = [s, s]);
            var l = i(pM[0], 0),
                u = i(pM[1], 1);
            a(pM[0], e, l), a(pM[1], e, u)
        }

        function ol(e) {
            return al({}, e)
        }

        function al(e, t) {
            return t && e && uM(cM, function (n) {
                t.hasOwnProperty(n) && (e[n] = t[n])
            }), e
        }

        function sl(e) {
            var t = [];
            return m(fM.getClassesByMainType(e), function (e) {
                t = t.concat(e.dependencies || e.prototype.dependencies || [])
            }), t = y(t, function (e) {
                return tr(e).main
            }), "dataset" !== e && h(t, "dataset") <= 0 && t.unshift("dataset"), t
        }

        function ll(e) {
            AM(e).datasetMap = Y()
        }

        function ul(e, t, n) {
            function i(e, t, n) {
                for (var i = 0; n > i; i++) e.push(t + i)
            }

            function r(e) {
                var t = e.dimsDef;
                return t ? t.length : 1
            }
            var o = {},
                a = pl(t);
            if (!a || !e) return o;
            var s, l, u = [],
                c = [],
                p = t.ecModel,
                h = AM(p).datasetMap,
                d = a.uid + "_" + n.seriesLayoutBy;
            e = e.slice(), m(e, function (t, n) {
                var i = D(t) ? t : e[n] = {
                    name: t
                };
                "ordinal" === i.type && null == s && (s = n, l = r(i)), o[i.name] = []
            });
            var f = h.get(d) || h.set(d, {
                categoryWayDim: l,
                valueWayDim: 0
            });
            return m(e, function (e, t) {
                var n = e.name,
                    a = r(e);
                if (null == s) {
                    var l = f.valueWayDim;
                    i(o[n], l, a), i(c, l, a), f.valueWayDim += a
                } else if (s === t) i(o[n], 0, a), i(u, 0, a);
                else {
                    l = f.categoryWayDim;
                    i(o[n], l, a), i(c, l, a), f.categoryWayDim += a
                }
            }), u.length && (o.itemName = u), c.length && (o.seriesName = c), o
        }

        function cl(e, t, n) {
            var i = {},
                r = pl(e);
            if (!r) return i;
            var o, a = t.sourceFormat,
                s = t.dimensionsDefine;
            (a === SM || a === TM) && m(s, function (e, t) {
                "name" === (D(e) ? e.name : e) && (o = t)
            });
            var l = function () {
                function e(e) {
                    return null != e.v && null != e.n
                }
                for (var i = {}, r = {}, l = [], u = 0, c = Math.min(5, n); c > u; u++) {
                    var p = fl(t.data, a, t.seriesLayoutBy, s, t.startIndex, u);
                    l.push(p);
                    var h = p === DM.Not;
                    if (h && null == i.v && u !== o && (i.v = u), (null == i.n || i.n === i.v || !h && l[i.n] === DM.Not) && (i.n = u), e(i) && l[i.n] !== DM.Not) return i;
                    h || (p === DM.Might && null == r.v && u !== o && (r.v = u), (null == r.n || r.n === r.v) && (r.n = u))
                }
                return e(i) ? i : e(r) ? r : null
            }();
            if (l) {
                i.value = [l.v];
                var u = null != o ? o : l.n;
                i.itemName = [u], i.seriesName = [u]
            }
            return i
        }

        function pl(e) {
            var t = e.get("data", !0);
            return t ? void 0 : $i(e.ecModel, "dataset", {
                index: e.get("datasetIndex", !0),
                id: e.get("datasetId", !0)
            }, Db).models[0]
        }

        function hl(e) {
            return e.get("transform", !0) || e.get("fromTransformResult", !0) ? $i(e.ecModel, "dataset", {
                index: e.get("fromDatasetIndex", !0),
                id: e.get("fromDatasetId", !0)
            }, Db).models : []
        }

        function dl(e, t) {
            return fl(e.data, e.sourceFormat, e.seriesLayoutBy, e.dimensionsDefine, e.startIndex, t)
        }

        function fl(e, t, n, i, r, o) {
            function a(e) {
                var t = M(e);
                return null != e && isFinite(e) && "" !== e ? t ? DM.Might : DM.Not : t && "-" !== e ? DM.Must : void 0
            }
            var s, l, u, c = 5;
            if (P(e)) return DM.Not;
            if (i) {
                var p = i[o];
                D(p) ? (l = p.name, u = p.type) : M(p) && (l = p)
            }
            if (null != u) return "ordinal" === u ? DM.Must : DM.Not;
            if (t === bM) {
                var h = e;
                if (n === kM) {
                    for (var d = h[o], f = 0; f < (d || []).length && c > f; f++)
                        if (null != (s = a(d[r + f]))) return s
                } else
                    for (f = 0; f < h.length && c > f; f++) {
                        var g = h[r + f];
                        if (g && null != (s = a(g[o]))) return s
                    }
            } else if (t === SM) {
                var m = e;
                if (!l) return DM.Not;
                for (f = 0; f < m.length && c > f; f++) {
                    var y = m[f];
                    if (y && null != (s = a(y[l]))) return s
                }
            } else if (t === TM) {
                var v = e;
                if (!l) return DM.Not;
                d = v[l];
                if (!d || P(d)) return DM.Not;
                for (f = 0; f < d.length && c > f; f++)
                    if (null != (s = a(d[f]))) return s
            } else if (t === wM) {
                var x = e;
                for (f = 0; f < x.length && c > f; f++) {
                    y = x[f];
                    var _ = Ai(y);
                    if (!T(_)) return DM.Not;
                    if (null != (s = a(_[o]))) return s
                }
            }
            return DM.Not
        }

        function gl(e, t, n) {
            var i = PM.get(t);
            if (!i) return n;
            var r = i(e);
            return r ? n.concat(r) : n
        }

        function ml(e, t) {
            for (var n = e.length, i = 0; n > i; i++)
                if (e[i].length > t) return e[i];
            return e[n - 1]
        }

        function yl(e, t, n, i, r, o, a) {
            o = o || e;
            var s = t(o),
                l = s.paletteIdx || 0,
                u = s.paletteNameMap = s.paletteNameMap || {};
            if (u.hasOwnProperty(r)) return u[r];
            var c = null != a && i ? ml(i, a) : n;
            if (c = c || n, c && c.length) {
                var p = c[l];
                return r && (u[r] = p), s.paletteIdx = (l + 1) % c.length, p
            }
        }

        function vl(e, t) {
            t(e).paletteIdx = 0, t(e).paletteNameMap = {}
        }

        function xl(e, t) {
            if (t) {
                var n = t.seriesIndex,
                    i = t.seriesId,
                    r = t.seriesName;
                return null != n && e.componentIndex !== n || null != i && e.id !== i || null != r && e.name !== r
            }
        }

        function _l(e, t) {
            var n = e.color && !e.colorLayer;
            m(t, function (t, i) {
                "colorLayer" === i && n || fM.hasClass(i) || ("object" == typeof t ? e[i] = e[i] ? l(e[i], t, !1) : s(t) : null == e[i] && (e[i] = t))
            })
        }

        function wl(e, t, n) {
            if (T(t)) {
                var i = Y();
                return m(t, function (e) {
                    if (null != e) {
                        var t = Gi(e, null);
                        null != t && i.set(e, !0)
                    }
                }), x(n, function (t) {
                    return t && i.get(t[e])
                })
            }
            var r = Gi(t, null);
            return x(n, function (t) {
                return t && null != r && t[e] === r
            })
        }

        function bl(e, t) {
            return t.hasOwnProperty("subType") ? x(e, function (e) {
                return e && e.subType === t.subType
            }) : e
        }

        function Sl(e) {
            var t = Y();
            return e && m(ki(e.replaceMerge), function (e) {
                t.set(e, !0)
            }), {
                replaceMergeMainTypeMap: t
            }
        }

        function Tl(e, t, n) {
            function i(e) {
                m(t, function (t) {
                    t(e, n)
                })
            }
            var r, o, a = [],
                s = e.baseOption,
                l = e.timeline,
                u = e.options,
                c = e.media,
                p = !!e.media,
                h = !!(u || l || s && s.timeline);
            return s ? (o = s, o.timeline || (o.timeline = l)) : ((h || p) && (e.options = e.media = null), o = e), p && T(c) && m(c, function (e) {
                e && e.option && (e.query ? a.push(e) : r || (r = e))
            }), i(o), m(u, function (e) {
                return i(e)
            }), m(a, function (e) {
                return i(e.option)
            }), {
                baseOption: o,
                timelineOptions: u || [],
                mediaDefault: r,
                mediaList: a
            }
        }

        function Cl(e, t, n) {
            var i = {
                    width: t,
                    height: n,
                    aspectratio: t / n
                },
                r = !0;
            return m(e, function (e, t) {
                var n = t.match(UM);
                if (n && n[1] && n[2]) {
                    var o = n[1],
                        a = n[2].toLowerCase();
                    Ml(i[a], e, o) || (r = !1)
                }
            }), r
        }

        function Ml(e, t, n) {
            return "min" === n ? e >= t : "max" === n ? t >= e : e === t
        }

        function Il(e, t) {
            return e.join(",") === t.join(",")
        }

        function kl(e) {
            var t = e && e.itemStyle;
            if (t)
                for (var n = 0, i = KM.length; i > n; n++) {
                    var r = KM[n],
                        o = t.normal,
                        a = t.emphasis;
                    o && o[r] && (e[r] = e[r] || {}, e[r].normal ? l(e[r].normal, o[r]) : e[r].normal = o[r], o[r] = null), a && a[r] && (e[r] = e[r] || {}, e[r].emphasis ? l(e[r].emphasis, a[r]) : e[r].emphasis = a[r], a[r] = null)
                }
        }

        function Dl(e, t, n) {
            if (e && e[t] && (e[t].normal || e[t].emphasis)) {
                var i = e[t].normal,
                    r = e[t].emphasis;
                i && (n ? (e[t].normal = e[t].emphasis = null, p(e[t], i)) : e[t] = i), r && (e.emphasis = e.emphasis || {}, e.emphasis[t] = r, r.focus && (e.emphasis.focus = r.focus), r.blurScope && (e.emphasis.blurScope = r.blurScope))
            }
        }

        function Al(e) {
            Dl(e, "itemStyle"), Dl(e, "lineStyle"), Dl(e, "areaStyle"), Dl(e, "label"), Dl(e, "labelLine"), Dl(e, "upperLabel"), Dl(e, "edgeLabel")
        }

        function Pl(e, t) {
            var n = $M(e) && e[t],
                i = $M(n) && n.textStyle;
            if (i)
                for (var r = 0, o = Ib.length; o > r; r++) {
                    var a = Ib[r];
                    i.hasOwnProperty(a) && (n[a] = i[a])
                }
        }

        function Ll(e) {
            e && (Al(e), Pl(e, "label"), e.emphasis && Pl(e.emphasis, "label"))
        }

        function Nl(e) {
            if ($M(e)) {
                kl(e), Al(e), Pl(e, "label"), Pl(e, "upperLabel"), Pl(e, "edgeLabel"), e.emphasis && (Pl(e.emphasis, "label"), Pl(e.emphasis, "upperLabel"), Pl(e.emphasis, "edgeLabel"));
                var t = e.markPoint;
                t && (kl(t), Ll(t));
                var n = e.markLine;
                n && (kl(n), Ll(n));
                var i = e.markArea;
                i && Ll(i);
                var r = e.data;
                if ("graph" === e.type) {
                    r = r || e.nodes;
                    var o = e.links || e.edges;
                    if (o && !P(o))
                        for (var a = 0; a < o.length; a++) Ll(o[a]);
                    m(e.categories, function (e) {
                        Al(e)
                    })
                }
                if (r && !P(r))
                    for (a = 0; a < r.length; a++) Ll(r[a]);
                if (t = e.markPoint, t && t.data) {
                    var s = t.data;
                    for (a = 0; a < s.length; a++) Ll(s[a])
                }
                if (n = e.markLine, n && n.data) {
                    var l = n.data;
                    for (a = 0; a < l.length; a++) T(l[a]) ? (Ll(l[a][0]), Ll(l[a][1])) : Ll(l[a])
                }
                "gauge" === e.type ? (Pl(e, "axisLabel"), Pl(e, "title"), Pl(e, "detail")) : "treemap" === e.type ? (Dl(e.breadcrumb, "itemStyle"), m(e.levels, function (e) {
                    Al(e)
                })) : "tree" === e.type && Al(e.leaves)
            }
        }

        function Ol(e) {
            return T(e) ? e : e ? [e] : []
        }

        function El(e) {
            return (T(e) ? e[0] : e) || {}
        }

        function Rl(e, t) {
            ZM(Ol(e.series), function (e) {
                $M(e) && Nl(e)
            });
            var n = ["xAxis", "yAxis", "radiusAxis", "angleAxis", "singleAxis", "parallelAxis", "radar"];
            t && n.push("valueAxis", "categoryAxis", "logAxis", "timeAxis"), ZM(n, function (t) {
                ZM(Ol(e[t]), function (e) {
                    e && (Pl(e, "axisLabel"), Pl(e.axisPointer, "label"))
                })
            }), ZM(Ol(e.parallel), function (e) {
                var t = e && e.parallelAxisDefault;
                Pl(t, "axisLabel"), Pl(t && t.axisPointer, "label")
            }), ZM(Ol(e.calendar), function (e) {
                Dl(e, "itemStyle"), Pl(e, "dayLabel"), Pl(e, "monthLabel"), Pl(e, "yearLabel")
            }), ZM(Ol(e.radar), function (e) {
                Pl(e, "name"), e.name && null == e.axisName && (e.axisName = e.name, delete e.name), null != e.nameGap && null == e.axisNameGap && (e.axisNameGap = e.nameGap, delete e.nameGap)
            }), ZM(Ol(e.geo), function (e) {
                $M(e) && (Ll(e), ZM(Ol(e.regions), function (e) {
                    Ll(e)
                }))
            }), ZM(Ol(e.timeline), function (e) {
                Ll(e), Dl(e, "label"), Dl(e, "itemStyle"), Dl(e, "controlStyle", !0);
                var t = e.data;
                T(t) && m(t, function (e) {
                    D(e) && (Dl(e, "label"), Dl(e, "itemStyle"))
                })
            }), ZM(Ol(e.toolbox), function (e) {
                Dl(e, "iconStyle"), ZM(e.feature, function (e) {
                    Dl(e, "iconStyle")
                })
            }), Pl(El(e.axisPointer), "label"), Pl(El(e.tooltip).axisPointer, "label")
        }

        function zl(e, t) {
            for (var n = t.split(","), i = e, r = 0; r < n.length && (i = i && i[n[r]], null != i); r++);
            return i
        }

        function Bl(e, t, n, i) {
            for (var r, o = t.split(","), a = e, s = 0; s < o.length - 1; s++) r = o[s], null == a[r] && (a[r] = {}), a = a[r];
            (i || null == a[o[s]]) && (a[o[s]] = n)
        }

        function Fl(e) {
            e && m(JM, function (t) {
                t[0] in e && !(t[1] in e) && (e[t[1]] = e[t[0]])
            })
        }

        function Hl(e) {
            var t = e && e.itemStyle;
            if (t)
                for (var n = 0; n < eI.length; n++) {
                    var i = eI[n][1],
                        r = eI[n][0];
                    null != t[i] && (t[r] = t[i])
                }
        }

        function Gl(e) {
            e && "edge" === e.alignTo && null != e.margin && null == e.edgeDistance && (e.edgeDistance = e.margin)
        }

        function Vl(e) {
            e && e.downplay && !e.blur && (e.blur = e.downplay)
        }

        function Wl(e) {
            e && null != e.focusNodeAdjacency && (e.emphasis = e.emphasis || {}, null == e.emphasis.focus && (e.emphasis.focus = "adjacency"))
        }

        function jl(e, t) {
            if (e)
                for (var n = 0; n < e.length; n++) t(e[n]), e[n] && jl(e[n].children, t)
        }

        function Xl(e, t) {
            Rl(e, t), e.series = ki(e.series), m(e.series, function (e) {
                if (D(e)) {
                    var t = e.type;
                    if ("line" === t) null != e.clipOverflow && (e.clip = e.clipOverflow);
                    else if ("pie" === t || "gauge" === t) {
                        null != e.clockWise && (e.clockwise = e.clockWise), Gl(e.label);
                        var n = e.data;
                        if (n && !P(n))
                            for (var i = 0; i < n.length; i++) Gl(n[i]);
                        null != e.hoverOffset && (e.emphasis = e.emphasis || {}, (e.emphasis.scaleSize = null) && (e.emphasis.scaleSize = e.hoverOffset))
                    } else if ("gauge" === t) {
                        var r = zl(e, "pointer.color");
                        null != r && Bl(e, "itemStyle.color", r)
                    } else if ("bar" === t) {
                        Hl(e), Hl(e.backgroundStyle), Hl(e.emphasis);
                        n = e.data;
                        if (n && !P(n))
                            for (i = 0; i < n.length; i++) "object" == typeof n[i] && (Hl(n[i]), Hl(n[i] && n[i].emphasis))
                    } else if ("sunburst" === t) {
                        var o = e.highlightPolicy;
                        o && (e.emphasis = e.emphasis || {}, e.emphasis.focus || (e.emphasis.focus = o)), Vl(e), jl(e.data, Vl)
                    } else "graph" === t || "sankey" === t ? Wl(e) : "map" === t && (e.mapType && !e.map && (e.map = e.mapType), e.mapLocation && p(e, e.mapLocation));
                    null != e.hoverAnimation && (e.emphasis = e.emphasis || {}, e.emphasis && null == e.emphasis.scale && (e.emphasis.scale = e.hoverAnimation)), Fl(e)
                }
            }), e.dataRange && (e.visualMap = e.dataRange), m(QM, function (t) {
                var n = e[t];
                n && (T(n) || (n = [n]), m(n, function (e) {
                    Fl(e)
                }))
            })
        }

        function Yl(e) {
            var t = Y();
            e.eachSeries(function (e) {
                var n = e.get("stack");
                if (n) {
                    var i = t.get(n) || t.set(n, []),
                        r = e.getData(),
                        o = {
                            stackResultDimension: r.getCalculationInfo("stackResultDimension"),
                            stackedOverDimension: r.getCalculationInfo("stackedOverDimension"),
                            stackedDimension: r.getCalculationInfo("stackedDimension"),
                            stackedByDimension: r.getCalculationInfo("stackedByDimension"),
                            isStackedByIndex: r.getCalculationInfo("isStackedByIndex"),
                            data: r,
                            seriesModel: e
                        };
                    if (!o.stackedDimension || !o.isStackedByIndex && !o.stackedByDimension) return;
                    i.length && r.setCalculationInfo("stackedOnSeries", i[i.length - 1].seriesModel), i.push(o)
                }
            }), t.each(Ul)
        }

        function Ul(e) {
            m(e, function (t, n) {
                var i = [],
                    r = [NaN, NaN],
                    o = [t.stackResultDimension, t.stackedOverDimension],
                    a = t.data,
                    s = t.isStackedByIndex,
                    l = t.seriesModel.get("stackStrategy") || "samesign";
                a.modify(o, function (o, u, c) {
                    var p, h, d = a.get(t.stackedDimension, c);
                    if (isNaN(d)) return r;
                    s ? h = a.getRawIndex(c) : p = a.get(t.stackedByDimension, c);
                    for (var f = NaN, g = n - 1; g >= 0; g--) {
                        var m = e[g];
                        if (s || (h = m.data.rawIndexOf(m.stackedByDimension, p)), h >= 0) {
                            var y = m.data.getByRawIndex(m.stackResultDimension, h);
                            if ("all" === l || "positive" === l && y > 0 || "negative" === l && 0 > y || "samesign" === l && d >= 0 && y > 0 || "samesign" === l && 0 >= d && 0 > y) {
                                d = hi(d, y), f = y;
                                break
                            }
                        }
                    }
                    return i[0] = d, i[1] = f, i
                })
            })
        }

        function ql(e) {
            return e instanceof tI
        }

        function Zl(e, t, n) {
            n = n || Jl(e);
            var i = t.seriesLayoutBy,
                r = Ql(e, n, i, t.sourceHeader, t.dimensions),
                o = new tI({
                    data: e,
                    sourceFormat: n,
                    seriesLayoutBy: i,
                    dimensionsDefine: r.dimensionsDefine,
                    startIndex: r.startIndex,
                    dimensionsDetectedCount: r.dimensionsDetectedCount,
                    metaRawOption: s(t)
                });
            return o
        }

        function $l(e) {
            return new tI({
                data: e,
                sourceFormat: P(e) ? CM : wM
            })
        }

        function Kl(e) {
            return new tI({
                data: e.data,
                sourceFormat: e.sourceFormat,
                seriesLayoutBy: e.seriesLayoutBy,
                dimensionsDefine: s(e.dimensionsDefine),
                startIndex: e.startIndex,
                dimensionsDetectedCount: e.dimensionsDetectedCount
            })
        }

        function Jl(e) {
            var t = MM;
            if (P(e)) t = CM;
            else if (T(e)) {
                0 === e.length && (t = bM);
                for (var n = 0, i = e.length; i > n; n++) {
                    var r = e[n];
                    if (null != r) {
                        if (T(r)) {
                            t = bM;
                            break
                        }
                        if (D(r)) {
                            t = SM;
                            break
                        }
                    }
                }
            } else if (D(e))
                for (var o in e)
                    if ($(e, o) && g(e[o])) {
                        t = TM;
                        break
                    } return t
        }

        function Ql(e, t, n, i, r) {
            var o, a;
            if (!e) return {
                dimensionsDefine: tu(r),
                startIndex: a,
                dimensionsDetectedCount: o
            };
            if (t === bM) {
                var s = e;
                "auto" === i || null == i ? nu(function (e) {
                    null != e && "-" !== e && (M(e) ? null == a && (a = 1) : a = 0)
                }, n, s, 10) : a = k(i) ? i : i ? 1 : 0, r || 1 !== a || (r = [], nu(function (e, t) {
                    r[t] = null != e ? e + "" : ""
                }, n, s, 1 / 0)), o = r ? r.length : n === kM ? s.length : s[0] ? s[0].length : null
            } else if (t === SM) r || (r = eu(e));
            else if (t === TM) r || (r = [], m(e, function (e, t) {
                r.push(t)
            }));
            else if (t === wM) {
                var l = Ai(e[0]);
                o = T(l) && l.length || 1
            }
            return {
                startIndex: a,
                dimensionsDefine: tu(r),
                dimensionsDetectedCount: o
            }
        }

        function eu(e) {
            for (var t, n = 0; n < e.length && !(t = e[n++]););
            if (t) {
                var i = [];
                return m(t, function (e, t) {
                    i.push(t)
                }), i
            }
        }

        function tu(e) {
            if (e) {
                var t = Y();
                return y(e, function (e) {
                    e = D(e) ? e : {
                        name: e
                    };
                    var n = {
                        name: e.name,
                        displayName: e.displayName,
                        type: e.type
                    };
                    if (null == n.name) return n;
                    n.name += "", null == n.displayName && (n.displayName = n.name);
                    var i = t.get(n.name);
                    return i ? n.name += "-" + i.count++ : t.set(n.name, {
                        count: 1
                    }), n
                })
            }
        }

        function nu(e, t, n, i) {
            if (t === kM)
                for (var r = 0; r < n.length && i > r; r++) e(n[r] ? n[r][0] : null, r);
            else {
                var o = n[0] || [];
                for (r = 0; r < o.length && i > r; r++) e(o[r], r)
            }
        }

        function iu(e) {
            var t = e.sourceFormat;
            return t === SM || t === TM
        }

        function ru(e, t) {
            var n = rI[su(e, t)];
            return n
        }

        function ou(e, t) {
            var n = aI[su(e, t)];
            return n
        }

        function au(e) {
            var t = lI[e];
            return t
        }

        function su(e, t) {
            return e === bM ? e + "_" + t : e
        }

        function lu(e, t, n) {
            if (e) {
                var i = e.getRawDataItem(t);
                if (null != i) {
                    var r = e.getStore(),
                        o = r.getSource().sourceFormat;
                    if (null != n) {
                        var a = e.getDimensionIndex(n),
                            s = r.getDimensionProperty(a);
                        return au(o)(i, a, s)
                    }
                    var l = i;
                    return o === wM && (l = Ai(i)), l
                }
            }
        }

        function uu(e) {
            var t, n;
            return D(e) ? e.type && (n = e) : t = e, {
                text: t,
                frag: n
            }
        }

        function cu(e) {
            return new pI(e)
        }

        function pu(e, t) {
            var n = t && t.type;
            return "ordinal" === n ? e : ("time" !== n || k(e) || null == e || "-" === e || (e = +gi(e)), null == e || "" === e ? NaN : +e)
        }

        function hu(e, t) {
            var n = new gI,
                i = e.data,
                r = n.sourceFormat = e.sourceFormat,
                o = e.startIndex,
                a = "";
            e.seriesLayoutBy !== IM && Mi(a);
            var s = [],
                l = {},
                u = e.dimensionsDefine;
            if (u) m(u, function (e, t) {
                var n = e.name,
                    i = {
                        index: t,
                        name: n,
                        displayName: e.displayName
                    };
                if (s.push(i), null != n) {
                    var r = "";
                    $(l, n) && Mi(r), l[n] = i
                }
            });
            else
                for (var c = 0; c < e.dimensionsDetectedCount; c++) s.push({
                    index: c
                });
            var p = ru(r, IM);
            t.__isBuiltIn && (n.getRawDataItem = function (e) {
                return p(i, o, s, e)
            }, n.getRawData = o_(du, null, e)), n.cloneRawData = o_(fu, null, e);
            var h = ou(r, IM);
            n.count = o_(h, null, i, o, s);
            var d = au(r);
            n.retrieveValue = function (e, t) {
                var n = p(i, o, s, e);
                return f(n, t)
            };
            var f = n.retrieveValueFromItem = function (e, t) {
                if (null != e) {
                    var n = s[t];
                    return n ? d(e, t, n.name) : void 0
                }
            };
            return n.getDimensionInfo = o_(gu, null, s, l), n.cloneAllDimensionInfo = o_(mu, null, s), n
        }

        function du(e) {
            var t = e.sourceFormat;
            if (!_u(t)) {
                var n = "";
                Mi(n)
            }
            return e.data
        }

        function fu(e) {
            var t = e.sourceFormat,
                n = e.data;
            if (!_u(t)) {
                var i = "";
                Mi(i)
            }
            if (t === bM) {
                for (var r = [], o = 0, a = n.length; a > o; o++) r.push(n[o].slice());
                return r
            }
            if (t === SM) {
                for (r = [], o = 0, a = n.length; a > o; o++) r.push(c({}, n[o]));
                return r
            }
        }

        function gu(e, t, n) {
            return null != n ? k(n) || !isNaN(n) && !$(t, n) ? e[n] : $(t, n) ? t[n] : void 0 : void 0
        }

        function mu(e) {
            return s(e)
        }

        function yu(e) {
            e = s(e);
            var t = e.type,
                n = "";
            t || Mi(n);
            var i = t.split(":");
            2 !== i.length && Mi(n);
            var r = !1;
            "echarts" === i[0] && (t = i[1], r = !0), e.__isBuiltIn = r, mI.set(t, e)
        }

        function vu(e, t, n) {
            var i = ki(e),
                r = i.length,
                o = "";
            r || Mi(o);
            for (var a = 0, s = r; s > a; a++) {
                var l = i[a];
                t = xu(l, t, n, 1 === r ? null : a), a !== s - 1 && (t.length = Math.max(t.length, 1))
            }
            return t
        }

        function xu(e, t) {
            var n = "";
            t.length || Mi(n), D(e) || Mi(n);
            var i = e.type,
                r = mI.get(i);
            r || Mi(n);
            var o = y(t, function (e) {
                    return hu(e, r)
                }),
                a = ki(r.transform({
                    upstream: o[0],
                    upstreamList: o,
                    config: s(e.config)
                }));
            return y(a, function (e, n) {
                var i = "";
                D(e) || Mi(i), e.data || Mi(i);
                var r = Jl(e.data);
                _u(r) || Mi(i);
                var o, a = t[0];
                if (a && 0 === n && !e.dimensions) {
                    var s = a.startIndex;
                    s && (e.data = a.data.slice(0, s).concat(e.data)), o = {
                        seriesLayoutBy: IM,
                        sourceHeader: s,
                        dimensions: a.metaRawOption.dimensions
                    }
                } else o = {
                    seriesLayoutBy: IM,
                    sourceHeader: 0,
                    dimensions: e.dimensions
                };
                return Zl(e.data, o, null)
            })
        }

        function _u(e) {
            return e === bM || e === SM
        }

        function wu(e) {
            return e > 65535 ? vI : xI
        }

        function bu() {
            return [1 / 0, -1 / 0]
        }

        function Su(e) {
            var t = e.constructor;
            return t === Array ? e.slice() : new t(e)
        }

        function Tu(e, t, n, i, r) {
            var o = bI[n || "float"];
            if (r) {
                var a = e[t],
                    s = a && a.length;
                if (s !== i) {
                    for (var l = new o(i), u = 0; s > u; u++) l[u] = a[u];
                    e[t] = l
                }
            } else e[t] = new o(i)
        }

        function Cu(e) {
            var t = e.option.transform;
            t && j(e.option.transform)
        }

        function Mu(e) {
            return "series" === e.mainType
        }

        function Iu(e) {
            throw new Error(e)
        }

        function ku(e, t) {
            var n = e.color || "#6e7079",
                i = e.fontSize || 12,
                r = e.fontWeight || "400",
                o = e.color || "#464646",
                a = e.fontSize || 14,
                s = e.fontWeight || "900";
            return "html" === t ? {
                nameStyle: "font-size:" + Me(i + "") + "px;color:" + Me(n) + ";font-weight:" + Me(r + ""),
                valueStyle: "font-size:" + Me(a + "") + "px;color:" + Me(o) + ";font-weight:" + Me(s + "")
            } : {
                nameStyle: {
                    fontSize: i,
                    fill: n,
                    fontWeight: r
                },
                valueStyle: {
                    fontSize: a,
                    fill: o,
                    fontWeight: s
                }
            }
        }

        function Du(e, t) {
            return t.type = e, t
        }

        function Au(e) {
            return "section" === e.type
        }

        function Pu(e) {
            return Au(e) ? Nu : Ou
        }

        function Lu(e) {
            if (Au(e)) {
                var t = 0,
                    n = e.blocks.length,
                    i = n > 1 || n > 0 && !e.noHeader;
                return m(e.blocks, function (e) {
                    var n = Lu(e);
                    n >= t && (t = n + +(i && (!n || Au(e) && !e.noHeader)))
                }), t
            }
            return 0
        }

        function Nu(e, t, n, i) {
            var r = t.noHeader,
                o = Ru(Lu(t)),
                a = [],
                s = t.blocks || [];
            V(!s || T(s)), s = s || [];
            var l = e.orderMode;
            if (t.sortBlocks && l) {
                s = s.slice();
                var u = {
                    valueAsc: "asc",
                    valueDesc: "desc"
                };
                if ($(u, l)) {
                    var p = new fI(u[l], null);
                    s.sort(function (e, t) {
                        return p.evaluate(e.sortParam, t.sortParam)
                    })
                } else "seriesDesc" === l && s.reverse()
            }
            m(s, function (n, r) {
                var s = t.valueFormatter,
                    l = Pu(n)(s ? c(c({}, e), {
                        valueFormatter: s
                    }) : e, n, r > 0 ? o.html : 0, i);
                null != l && a.push(l)
            });
            var h = "richText" === e.renderMode ? a.join(o.richText) : zu(a.join(""), r ? n : o.html);
            if (r) return h;
            var d = qs(t.header, "ordinal", e.useUTC),
                f = ku(i, e.renderMode).nameStyle;
            return "richText" === e.renderMode ? Hu(e, d, f) + o.richText + h : zu('<div style="' + f + ";" + CI + ';">' + Me(d) + "</div>" + h, n)
        }

        function Ou(e, t, n, i) {
            var r = e.renderMode,
                o = t.noName,
                a = t.noValue,
                s = !t.markerType,
                l = t.name,
                u = e.useUTC,
                c = t.valueFormatter || e.valueFormatter || function (e) {
                    return e = T(e) ? e : [e], y(e, function (e, t) {
                        return qs(e, T(d) ? d[t] : d, u)
                    })
                };
            if (!o || !a) {
                var p = s ? "" : e.markupStyleCreator.makeTooltipMarker(t.markerType, t.markerColor || "#333", r),
                    h = o ? "" : qs(l, "ordinal", u),
                    d = t.valueType,
                    f = a ? [] : c(t.value),
                    g = !s || !o,
                    m = !s && o,
                    v = ku(i, r),
                    x = v.nameStyle,
                    _ = v.valueStyle;
                return "richText" === r ? (s ? "" : p) + (o ? "" : Hu(e, h, x)) + (a ? "" : Gu(e, f, g, m, _)) : zu((s ? "" : p) + (o ? "" : Bu(h, !s, x)) + (a ? "" : Fu(f, g, m, _)), n)
            }
        }

        function Eu(e, t, n, i, r, o) {
            if (e) {
                var a = Pu(e),
                    s = {
                        useUTC: r,
                        renderMode: n,
                        orderMode: i,
                        markupStyleCreator: t,
                        valueFormatter: e.valueFormatter
                    };
                return a(s, e, 0, o)
            }
        }

        function Ru(e) {
            return {
                html: MI[e],
                richText: II[e]
            }
        }

        function zu(e, t) {
            var n = '<div style="clear:both"></div>',
                i = "margin: " + t + "px 0 0";
            return '<div style="' + i + ";" + CI + ';">' + e + n + "</div>"
        }

        function Bu(e, t, n) {
            var i = t ? "margin-left:2px" : "";
            return '<span style="' + n + ";" + i + '">' + Me(e) + "</span>"
        }

        function Fu(e, t, n, i) {
            var r = n ? "10px" : "20px",
                o = t ? "float:right;margin-left:" + r : "";
            return e = T(e) ? e : [e], '<span style="' + o + ";" + i + '">' + y(e, function (e) {
                return Me(e)
            }).join("&nbsp;&nbsp;") + "</span>"
        }

        function Hu(e, t, n) {
            return e.markupStyleCreator.wrapRichTextStyle(t, n)
        }

        function Gu(e, t, n, i, r) {
            var o = [r],
                a = i ? 10 : 20;
            return n && o.push({
                padding: [0, 0, 0, a],
                align: "right"
            }), e.markupStyleCreator.wrapRichTextStyle(T(t) ? t.join("  ") : t, o)
        }

        function Vu(e, t) {
            var n = e.getData().getItemVisual(t, "style"),
                i = n[e.visualDrawType];
            return Qs(i)
        }

        function Wu(e, t) {
            var n = e.get("padding");
            return null != n ? n : "richText" === t ? [8, 10] : 10
        }

        function ju(e) {
            var t, n, i, r, o = e.series,
                a = e.dataIndex,
                s = e.multipleSeries,
                l = o.getData(),
                u = l.mapDimensionsAll("defaultedTooltip"),
                c = u.length,
                p = o.getRawValue(a),
                h = T(p),
                d = Vu(o, a);
            if (c > 1 || h && !c) {
                var f = Xu(p, o, a, u, d);
                t = f.inlineValues, n = f.inlineValueTypes, i = f.blocks, r = f.inlineValues[0]
            } else if (c) {
                var g = l.getDimensionInfo(u[0]);
                r = t = lu(l, a, u[0]), n = g.type
            } else r = t = h ? p[0] : p;
            var m = Vi(o),
                y = m && o.name || "",
                v = l.getName(a),
                x = s ? y : v;
            return Du("section", {
                header: y,
                noHeader: s || !m,
                sortParam: r,
                blocks: [Du("nameValue", {
                    markerType: "item",
                    markerColor: d,
                    name: x,
                    noName: !W(x),
                    value: t,
                    valueType: n
                })].concat(i || [])
            })
        }

        function Xu(e, t, n, i, r) {
            function o(e, t) {
                var n = a.getDimensionInfo(t);
                n && !1 !== n.otherDims.tooltip && (s ? c.push(Du("nameValue", {
                    markerType: "subItem",
                    markerColor: r,
                    name: n.displayName,
                    value: e,
                    valueType: n.type
                })) : (l.push(e),
                    u.push(n.type)))
            }
            var a = t.getData(),
                s = v(e, function (e, t, n) {
                    var i = a.getDimensionInfo(n);
                    return e || i && !1 !== i.tooltip && null != i.displayName
                }, !1),
                l = [],
                u = [],
                c = [];
            return i.length ? m(i, function (e) {
                o(lu(a, n, e), e)
            }) : m(e, o), {
                inlineValues: l,
                inlineValueTypes: u,
                blocks: c
            }
        }

        function Yu(e, t) {
            return e.getName(t) || e.getId(t)
        }

        function Uu(e) {
            var t = e.name;
            Vi(e) || (e.name = qu(e) || t)
        }

        function qu(e) {
            var t = e.getRawData(),
                n = t.mapDimensionsAll("seriesName"),
                i = [];
            return m(n, function (e) {
                var n = t.getDimensionInfo(e);
                n.displayName && i.push(n.displayName)
            }), i.join(" ")
        }

        function Zu(e) {
            return e.model.getRawData().count()
        }

        function $u(e) {
            var t = e.model;
            return t.setData(t.getRawData().cloneShallow()), Ku
        }

        function Ku(e, t) {
            t.outputData && e.end > t.outputData.count() && t.model.getRawData().cloneShallow(t.outputData)
        }

        function Ju(e, t) {
            m(U(e.CHANGABLE_METHODS, e.DOWNSAMPLE_METHODS), function (n) {
                e.wrapMethod(n, S(Qu, t))
            })
        }

        function Qu(e, t) {
            var n = ec(e);
            return n && n.setOutputEnd((t || this).count()), t
        }

        function ec(e) {
            var t = (e.ecModel || {}).scheduler,
                n = t && t.getPipeline(e.uid);
            if (n) {
                var i = n.currentTask;
                if (i) {
                    var r = i.agentStubMap;
                    r && (i = r.get(e.uid))
                }
                return i
            }
        }

        function tc() {
            var e = Ui();
            return function (t) {
                var n = e(t),
                    i = t.pipelineContext,
                    r = !!n.large,
                    o = !!n.progressiveRender,
                    a = n.large = !(!i || !i.large),
                    s = n.progressiveRender = !(!i || !i.progressiveRender);
                return !(r === a && o === s) && "reset"
            }
        }

        function nc(e, t, n) {
            e && Jo(e) && ("emphasis" === t ? Do : Ao)(e, n)
        }

        function ic(e, t, n) {
            var i = Yi(e, t),
                r = t && null != t.highlightKey ? ea(t.highlightKey) : null;
            null != i ? m(ki(i), function (t) {
                nc(e.getItemGraphicEl(t), n, r)
            }) : e.eachItemGraphicEl(function (e) {
                nc(e, n, r)
            })
        }

        function rc(e) {
            return OI(e.model)
        }

        function oc(e) {
            var t = e.model,
                n = e.ecModel,
                i = e.api,
                r = e.payload,
                o = t.pipelineContext.progressiveRender,
                a = e.view,
                s = r && NI(r).updateMethod,
                l = o ? "incrementalPrepareRender" : s && a[s] ? s : "render";
            return "render" !== l && a[l](t, n, i, r), zI[l]
        }

        function ac(e, t, n) {
            function i() {
                c = (new Date).getTime(), p = null, e.apply(a, s || [])
            }
            var r, o, a, s, l, u = 0,
                c = 0,
                p = null;
            t = t || 0;
            var h = function () {
                for (var e = [], h = 0; h < arguments.length; h++) e[h] = arguments[h];
                r = (new Date).getTime(), a = this, s = e;
                var d = l || t,
                    f = l || n;
                l = null, o = r - (f ? u : c) - d, clearTimeout(p), f ? p = setTimeout(i, d) : o >= 0 ? i() : p = setTimeout(i, -o), u = r
            };
            return h.clear = function () {
                p && (clearTimeout(p), p = null)
            }, h.debounceNextCall = function (e) {
                l = e
            }, h
        }

        function sc(e, t, n, i) {
            var r = e[t];
            if (r) {
                var o = r[BI] || r,
                    a = r[HI],
                    s = r[FI];
                if (s !== n || a !== i) {
                    if (null == n || !i) return e[t] = o;
                    r = e[t] = ac(o, n, "debounce" === i), r[BI] = o, r[HI] = i, r[FI] = n
                }
                return r
            }
        }

        function lc(e, t) {
            var n = e[t];
            n && n[BI] && (n.clear && n.clear(), e[t] = n[BI])
        }

        function uc(e, t) {
            var n = e.visualStyleMapper || VI[t];
            return n || (console.warn("Unkown style type '" + t + "'."), VI.itemStyle)
        }

        function cc(e, t) {
            var n = e.visualDrawType || WI[t];
            return n || (console.warn("Unkown style type '" + t + "'."), "fill")
        }

        function pc(e, t) {
            t = t || {}, p(t, {
                text: "loading",
                textColor: "#000",
                fontSize: 12,
                fontWeight: "normal",
                fontStyle: "normal",
                fontFamily: "sans-serif",
                maskColor: "rgba(255, 255, 255, 0.8)",
                showSpinner: !0,
                color: "#5470c6",
                spinnerRadius: 10,
                lineWidth: 5,
                zlevel: 0
            });
            var n = new gb,
                i = new WS({
                    style: {
                        fill: t.maskColor
                    },
                    zlevel: t.zlevel,
                    z: 1e4
                });
            n.add(i);
            var r, o = new US({
                    style: {
                        text: t.text,
                        fill: t.textColor,
                        fontSize: t.fontSize,
                        fontWeight: t.fontWeight,
                        fontStyle: t.fontStyle,
                        fontFamily: t.fontFamily
                    },
                    zlevel: t.zlevel,
                    z: 10001
                }),
                a = new WS({
                    style: {
                        fill: "none"
                    },
                    textContent: o,
                    textConfig: {
                        position: "right",
                        distance: 10
                    },
                    zlevel: t.zlevel,
                    z: 10001
                });
            return n.add(a), t.showSpinner && (r = new oC({
                shape: {
                    startAngle: -qI / 2,
                    endAngle: -qI / 2 + .1,
                    r: t.spinnerRadius
                },
                style: {
                    stroke: t.color,
                    lineCap: "round",
                    lineWidth: t.lineWidth
                },
                zlevel: t.zlevel,
                z: 10001
            }), r.animateShape(!0).when(1e3, {
                endAngle: 3 * qI / 2
            }).start("circularInOut"), r.animateShape(!0).when(1e3, {
                startAngle: 3 * qI / 2
            }).delay(300).start("circularInOut"), n.add(r)), n.resize = function () {
                var n = o.getBoundingRect().width,
                    s = t.showSpinner ? t.spinnerRadius : 0,
                    l = (e.getWidth() - 2 * s - (t.showSpinner && n ? 10 : 0) - n) / 2 - (t.showSpinner && n ? 0 : 5 + n / 2) + (t.showSpinner ? 0 : n / 2) + (n ? 0 : s),
                    u = e.getHeight() / 2;
                t.showSpinner && r.setShape({
                    cx: l,
                    cy: u
                }), a.setShape({
                    x: l - s,
                    y: u - s,
                    width: 2 * s,
                    height: 2 * s
                }), i.setShape({
                    x: 0,
                    y: 0,
                    width: e.getWidth(),
                    height: e.getHeight()
                })
            }, n.resize(), n
        }

        function hc(e) {
            e.overallReset(e.ecModel, e.api, e.payload)
        }

        function dc(e) {
            return e.overallProgress && fc
        }

        function fc() {
            this.agent.dirty(), this.getDownstream().dirty()
        }

        function gc() {
            this.agent && this.agent.dirty()
        }

        function mc(e) {
            return e.plan ? e.plan(e.model, e.ecModel, e.api, e.payload) : null
        }

        function yc(e) {
            e.useClearVisual && e.data.clearAllVisual();
            var t = e.resetDefines = ki(e.reset(e.model, e.ecModel, e.api, e.payload));
            return t.length > 1 ? y(t, function (e, t) {
                return vc(t)
            }) : $I
        }

        function vc(e) {
            return function (t, n) {
                var i = n.data,
                    r = n.resetDefines[e];
                if (r && r.dataEach)
                    for (var o = t.start; o < t.end; o++) r.dataEach(i, o);
                else r && r.progress && r.progress(t, i)
            }
        }

        function xc(e) {
            return e.data.count()
        }

        function _c(e) {
            RI = null;
            try {
                e(KI, JI)
            } catch (e) {}
            return RI
        }

        function wc(e, t) {
            for (var n in t.prototype) e[n] = K
        }

        function bc(e, t, n) {
            switch (n) {
                case "color":
                    var i = e.getItemVisual(t, "style");
                    return i[e.getVisual("drawType")];
                case "opacity":
                    return e.getItemVisual(t, "style").opacity;
                case "symbol":
                case "symbolSize":
                case "liftZ":
                    return e.getItemVisual(t, n)
            }
        }

        function Sc(e, t) {
            switch (t) {
                case "color":
                    var n = e.getVisual("style");
                    return n[e.getVisual("drawType")];
                case "opacity":
                    return e.getVisual("style").opacity;
                case "symbol":
                case "symbolSize":
                case "liftZ":
                    return e.getVisual(t)
            }
        }

        function Tc(e, t) {
            function n(t, n) {
                var i = [];
                return t.eachComponent({
                    mainType: "series",
                    subType: e,
                    query: n
                }, function (e) {
                    i.push(e.seriesIndex)
                }), i
            }
            m([
                [e + "ToggleSelect", "toggleSelect"],
                [e + "Select", "select"],
                [e + "UnSelect", "unselect"]
            ], function (e) {
                t(e[0], function (t, i, r) {
                    t = c({}, t), r.dispatchAction(c(t, {
                        type: e[1],
                        seriesIndex: n(i, t)
                    }))
                })
            })
        }

        function Cc(e, t, n, i, r) {
            var o = e + t;
            n.isSilent(o) || i.eachComponent({
                mainType: "series",
                subType: "pie"
            }, function (e) {
                for (var t = e.seriesIndex, i = e.option.selectedMap, a = r.selected, s = 0; s < a.length; s++)
                    if (a[s].seriesIndex === t) {
                        var l = e.getData(),
                            u = Yi(l, r.fromActionPayload);
                        n.trigger(o, {
                            type: o,
                            seriesId: e.id,
                            name: l.getName(T(u) ? u[0] : u),
                            selected: M(i) ? i : c({}, i)
                        })
                    }
            })
        }

        function Mc(e, t, n) {
            e.on("selectchanged", function (e) {
                var i = n.getModel();
                e.isFromClick ? (Cc("map", "selectchanged", t, i, e), Cc("pie", "selectchanged", t, i, e)) : "select" === e.fromAction ? (Cc("map", "selected", t, i, e), Cc("pie", "selected", t, i, e)) : "unselect" === e.fromAction && (Cc("map", "unselected", t, i, e), Cc("pie", "unselected", t, i, e))
            })
        }

        function Ic(e, t, n) {
            for (var i; e && (!t(e) || (i = e, !n));) e = e.__hostTarget || e.parent;
            return i
        }

        function kc(e, t) {
            if ("image" !== this.type) {
                var n = this.style;
                this.__isEmptyBrush ? (n.stroke = e, n.fill = t || "#fff", n.lineWidth = 2) : "line" === this.shape.symbolType ? n.stroke = e : n.fill = e, this.markRedraw()
            }
        }

        function Dc(e, t, n, i, r, o, a) {
            var s, l = 0 === e.indexOf("empty");
            return l && (e = e.substr(5, 1).toLowerCase() + e.substr(6)), s = 0 === e.indexOf("image://") ? Ra(e.slice(8), new F_(t, n, i, r), a ? "center" : "cover") : 0 === e.indexOf("path://") ? Ea(e.slice(7), {}, new F_(t, n, i, r), a ? "center" : "cover") : new wk({
                shape: {
                    symbolType: e,
                    x: t,
                    y: n,
                    width: i,
                    height: r
                }
            }), s.__isEmptyBrush = l, s.setColor = kc, o && s.setColor(o), s
        }

        function Ac(e) {
            return T(e) || (e = [+e, +e]), [e[0] || 0, e[1] || 0]
        }

        function Pc(e, t) {
            return null != e ? (T(e) || (e = [e, e]), [ri(e[0], t[0]) || 0, ri(B(e[1], e[0]), t[1]) || 0]) : void 0
        }

        function Lc(e) {
            return isFinite(e)
        }

        function Nc(e, t, n) {
            var i = null == t.x ? 0 : t.x,
                r = null == t.x2 ? 1 : t.x2,
                o = null == t.y ? 0 : t.y,
                a = null == t.y2 ? 0 : t.y2;
            t.global || (i = i * n.width + n.x, r = r * n.width + n.x, o = o * n.height + n.y, a = a * n.height + n.y), i = Lc(i) ? i : 0, r = Lc(r) ? r : 1, o = Lc(o) ? o : 0, a = Lc(a) ? a : 0;
            var s = e.createLinearGradient(i, o, r, a);
            return s
        }

        function Oc(e, t, n) {
            var i = n.width,
                r = n.height,
                o = Math.min(i, r),
                a = null == t.x ? .5 : t.x,
                s = null == t.y ? .5 : t.y,
                l = null == t.r ? .5 : t.r;
            t.global || (a = a * i + n.x, s = s * r + n.y, l *= o), a = Lc(a) ? a : .5, s = Lc(s) ? s : .5, l = l >= 0 && Lc(l) ? l : .5;
            var u = e.createRadialGradient(a, s, 0, a, s, l);
            return u
        }

        function Ec(e, t, n) {
            for (var i = "radial" === t.type ? Oc(e, t, n) : Nc(e, t, n), r = t.colorStops, o = 0; o < r.length; o++) i.addColorStop(r[o].offset, r[o].color);
            return i
        }

        function Rc(e, t) {
            if (e === t || !e && !t) return !1;
            if (!e || !t || e.length !== t.length) return !0;
            for (var n = 0; n < e.length; n++)
                if (e[n] !== t[n]) return !0;
            return !1
        }

        function zc(e) {
            return parseInt(e, 10)
        }

        function Bc(e, t, n) {
            var i = ["width", "height"][t],
                r = ["clientWidth", "clientHeight"][t],
                o = ["paddingLeft", "paddingTop"][t],
                a = ["paddingRight", "paddingBottom"][t];
            if (null != n[i] && "auto" !== n[i]) return parseFloat(n[i]);
            var s = document.defaultView.getComputedStyle(e);
            return (e[r] || zc(s[i]) || zc(e.style[i])) - (zc(s[o]) || 0) - (zc(s[a]) || 0) | 0
        }

        function Fc(e, t) {
            return e && "solid" !== e && t > 0 ? "dashed" === e ? [4 * t, 2 * t] : "dotted" === e ? [t] : k(e) ? [e] : T(e) ? e : null : null
        }

        function Hc(e) {
            var t = e.style,
                n = t.lineDash && t.lineWidth > 0 && Fc(t.lineDash, t.lineWidth),
                i = t.lineDashOffset;
            if (n) {
                var r = t.strokeNoScale && e.getLineScale ? e.getLineScale() : 1;
                r && 1 !== r && (n = y(n, function (e) {
                    return e / r
                }), i /= r)
            }
            return [n, i]
        }

        function Gc(e) {
            var t = e.stroke;
            return !(null == t || "none" === t || !(e.lineWidth > 0))
        }

        function Vc(e) {
            return "string" == typeof e && "none" !== e
        }

        function Wc(e) {
            var t = e.fill;
            return null != t && "none" !== t
        }

        function jc(e, t) {
            if (null != t.fillOpacity && 1 !== t.fillOpacity) {
                var n = e.globalAlpha;
                e.globalAlpha = t.fillOpacity * t.opacity, e.fill(), e.globalAlpha = n
            } else e.fill()
        }

        function Xc(e, t) {
            if (null != t.strokeOpacity && 1 !== t.strokeOpacity) {
                var n = e.globalAlpha;
                e.globalAlpha = t.strokeOpacity * t.opacity, e.stroke(), e.globalAlpha = n
            } else e.stroke()
        }

        function Yc(e, t, n) {
            var i = dr(t.image, t.__image, n);
            if (gr(i)) {
                var r = e.createPattern(i, t.repeat || "repeat");
                if ("function" == typeof DOMMatrix && r && r.setTransform) {
                    var o = new DOMMatrix;
                    o.translateSelf(t.x || 0, t.y || 0), o.rotateSelf(0, 0, (t.rotation || 0) * l_), o.scaleSelf(t.scaleX || 1, t.scaleY || 1), r.setTransform(o)
                }
                return r
            }
        }

        function Uc(e, t, n, i) {
            var r, o = Gc(n),
                a = Wc(n),
                s = n.strokePercent,
                l = 1 > s,
                u = !t.path;
            t.silent && !l || !u || t.createPathProxy();
            var c = t.path || bk,
                p = t.__dirty;
            if (!i) {
                var h = n.fill,
                    d = n.stroke,
                    f = a && !!h.colorStops,
                    g = o && !!d.colorStops,
                    m = a && !!h.image,
                    y = o && !!d.image,
                    v = void 0,
                    x = void 0,
                    _ = void 0,
                    w = void 0,
                    b = void 0;
                (f || g) && (b = t.getBoundingRect()), f && (v = p ? Ec(e, h, b) : t.__canvasFillGradient, t.__canvasFillGradient = v), g && (x = p ? Ec(e, d, b) : t.__canvasStrokeGradient, t.__canvasStrokeGradient = x), m && (_ = p || !t.__canvasFillPattern ? Yc(e, h, t) : t.__canvasFillPattern, t.__canvasFillPattern = _), y && (w = p || !t.__canvasStrokePattern ? Yc(e, d, t) : t.__canvasStrokePattern, t.__canvasStrokePattern = _), f ? e.fillStyle = v : m && (_ ? e.fillStyle = _ : a = !1), g ? e.strokeStyle = x : y && (w ? e.strokeStyle = w : o = !1)
            }
            var S, T, C = t.getGlobalScale();
            c.setScale(C[0], C[1], t.segmentIgnoreThreshold), e.setLineDash && n.lineDash && (r = Hc(t), S = r[0], T = r[1]);
            var M = !0;
            (u || p & K_) && (c.setDPR(e.dpr), l ? c.setContext(null) : (c.setContext(e), M = !1), c.reset(), t.buildPath(c, t.shape, i), c.toStatic(), t.pathUpdated()), M && c.rebuildPath(e, l ? s : 1), S && (e.setLineDash(S), e.lineDashOffset = T), i || (n.strokeFirst ? (o && Xc(e, n), a && jc(e, n)) : (a && jc(e, n), o && Xc(e, n))), S && e.setLineDash([])
        }

        function qc(e, t, n) {
            var i = t.__image = dr(n.image, t.__image, t, t.onload);
            if (i && gr(i)) {
                var r = n.x || 0,
                    o = n.y || 0,
                    a = t.getWidth(),
                    s = t.getHeight(),
                    l = i.width / i.height;
                if (null == a && null != s ? a = s * l : null == s && null != a ? s = a / l : null == a && null == s && (a = i.width, s = i.height), n.sWidth && n.sHeight) {
                    var u = n.sx || 0,
                        c = n.sy || 0;
                    e.drawImage(i, u, c, n.sWidth, n.sHeight, r, o, a, s)
                } else if (n.sx && n.sy) {
                    u = n.sx, c = n.sy;
                    var p = a - u,
                        h = s - c;
                    e.drawImage(i, u, c, p, h, r, o, a, s)
                } else e.drawImage(i, r, o, a, s)
            }
        }

        function Zc(e, t, n) {
            var i, r = n.text;
            if (null != r && (r += ""), r) {
                e.font = n.font || Hx, e.textAlign = n.textAlign, e.textBaseline = n.textBaseline;
                var o = void 0,
                    a = void 0;
                e.setLineDash && n.lineDash && (i = Hc(t), o = i[0], a = i[1]), o && (e.setLineDash(o), e.lineDashOffset = a), n.strokeFirst ? (Gc(n) && e.strokeText(r, n.x, n.y), Wc(n) && e.fillText(r, n.x, n.y)) : (Wc(n) && e.fillText(r, n.x, n.y), Gc(n) && e.strokeText(r, n.x, n.y)), o && e.setLineDash([])
            }
        }

        function $c(e, t, n, i, r) {
            var o = !1;
            if (!i && (n = n || {}, t === n)) return !1;
            if (i || t.opacity !== n.opacity) {
                ip(e, r), o = !0;
                var a = Math.max(Math.min(t.opacity, 1), 0);
                e.globalAlpha = isNaN(a) ? jb.opacity : a
            }(i || t.blend !== n.blend) && (o || (ip(e, r), o = !0), e.globalCompositeOperation = t.blend || jb.blend);
            for (var s = 0; s < Sk.length; s++) {
                var l = Sk[s];
                (i || t[l] !== n[l]) && (o || (ip(e, r), o = !0), e[l] = e.dpr * (t[l] || 0))
            }
            return (i || t.shadowColor !== n.shadowColor) && (o || (ip(e, r), o = !0), e.shadowColor = t.shadowColor || jb.shadowColor), o
        }

        function Kc(e, t, n, i, r) {
            var o = rp(t, r.inHover),
                a = i ? null : n && rp(n, r.inHover) || {};
            if (o === a) return !1;
            var s = $c(e, o, a, i, r);
            if ((i || o.fill !== a.fill) && (s || (ip(e, r), s = !0), Vc(o.fill) && (e.fillStyle = o.fill)), (i || o.stroke !== a.stroke) && (s || (ip(e, r), s = !0), Vc(o.stroke) && (e.strokeStyle = o.stroke)), (i || o.opacity !== a.opacity) && (s || (ip(e, r), s = !0), e.globalAlpha = null == o.opacity ? 1 : o.opacity), t.hasStroke()) {
                var l = o.lineWidth,
                    u = l / (o.strokeNoScale && t.getLineScale ? t.getLineScale() : 1);
                e.lineWidth !== u && (s || (ip(e, r), s = !0), e.lineWidth = u)
            }
            for (var c = 0; c < Tk.length; c++) {
                var p = Tk[c],
                    h = p[0];
                (i || o[h] !== a[h]) && (s || (ip(e, r), s = !0), e[h] = o[h] || p[1])
            }
            return s
        }

        function Jc(e, t, n, i, r) {
            return $c(e, rp(t, r.inHover), n && rp(n, r.inHover), i, r)
        }

        function Qc(e, t) {
            var n = t.transform,
                i = e.dpr || 1;
            n ? e.setTransform(i * n[0], i * n[1], i * n[2], i * n[3], i * n[4], i * n[5]) : e.setTransform(i, 0, 0, i, 0, 0)
        }

        function ep(e, t, n) {
            for (var i = !1, r = 0; r < e.length; r++) {
                var o = e[r];
                i = i || o.isZeroArea(), Qc(t, o), t.beginPath(), o.buildPath(t, o.shape), t.clip()
            }
            n.allClipped = i
        }

        function tp(e, t) {
            return e && t ? e[0] !== t[0] || e[1] !== t[1] || e[2] !== t[2] || e[3] !== t[3] || e[4] !== t[4] || e[5] !== t[5] : !(!e && !t)
        }

        function np(e) {
            var t = Wc(e),
                n = Gc(e);
            return !(e.lineDash || !(+t ^ +n) || t && "string" != typeof e.fill || n && "string" != typeof e.stroke || e.strokePercent < 1 || e.strokeOpacity < 1 || e.fillOpacity < 1)
        }

        function ip(e, t) {
            t.batchFill && e.fill(), t.batchStroke && e.stroke(), t.batchFill = "", t.batchStroke = ""
        }

        function rp(e, t) {
            return t && e.__hoverStyle || e.style
        }

        function op(e, t) {
            ap(e, t, {
                inHover: !1,
                viewWidth: 0,
                viewHeight: 0
            }, !0)
        }

        function ap(e, t, n, i) {
            var r = t.transform;
            if (!t.shouldBePainted(n.viewWidth, n.viewHeight, !1, !1)) return t.__dirty &= ~Z_, void(t.__isRendered = !1);
            var o = t.__clipPaths,
                a = n.prevElClipPaths,
                s = !1,
                l = !1;
            if ((!a || Rc(o, a)) && (a && a.length && (ip(e, n), e.restore(), l = s = !0, n.prevElClipPaths = null, n.allClipped = !1, n.prevEl = null), o && o.length && (ip(e, n), e.save(), ep(o, e, n), s = !0), n.prevElClipPaths = o), n.allClipped) t.__isRendered = !1;
            else {
                t.beforeBrush && t.beforeBrush(), t.innerBeforeBrush();
                var u = n.prevEl;
                u || (l = s = !0);
                var c = t instanceof OS && t.autoBatch && np(t.style);
                s || tp(r, u.transform) ? (ip(e, n), Qc(e, t)) : c || ip(e, n);
                var p = rp(t, n.inHover);
                t instanceof OS ? (n.lastDrawType !== Ck && (l = !0, n.lastDrawType = Ck), Kc(e, t, u, l, n), c && (n.batchFill || n.batchStroke) || e.beginPath(), Uc(e, t, p, c), c && (n.batchFill = p.fill || "", n.batchStroke = p.stroke || "")) : t instanceof RS ? (n.lastDrawType !== Ik && (l = !0, n.lastDrawType = Ik), Kc(e, t, u, l, n), Zc(e, t, p)) : t instanceof FS ? (n.lastDrawType !== Mk && (l = !0, n.lastDrawType = Mk), Jc(e, t, u, l, n), qc(e, t, p)) : t.getTemporalDisplayables && (n.lastDrawType !== kk && (l = !0, n.lastDrawType = kk), sp(e, t, n)), c && i && ip(e, n), t.innerAfterBrush(), t.afterBrush && t.afterBrush(), n.prevEl = t, t.__dirty = 0, t.__isRendered = !0
            }
        }

        function sp(e, t, n) {
            var i = t.getDisplayables(),
                r = t.getTemporalDisplayables();
            e.save();
            var o, a, s = {
                prevElClipPaths: null,
                prevEl: null,
                allClipped: !1,
                viewWidth: n.viewWidth,
                viewHeight: n.viewHeight,
                inHover: n.inHover
            };
            for (o = t.getCursor(), a = i.length; a > o; o++) {
                var l = i[o];
                l.beforeBrush && l.beforeBrush(), l.innerBeforeBrush(), ap(e, l, s, o === a - 1), l.innerAfterBrush(), l.afterBrush && l.afterBrush(), s.prevEl = l
            }
            for (var u = 0, c = r.length; c > u; u++) {
                l = r[u];
                l.beforeBrush && l.beforeBrush(), l.innerBeforeBrush(), ap(e, l, s, u === c - 1), l.innerAfterBrush(), l.afterBrush && l.afterBrush(), s.prevEl = l
            }
            t.clearTemporalDisplayables(), t.notClear = !0, e.restore()
        }

        function lp(e, t) {
            function n(e) {
                function t() {
                    for (var e = 1, t = 0, n = y.length; n > t; ++t) e = Ci(e, y[t]);
                    var i = 1;
                    for (t = 0, n = m.length; n > t; ++t) i = Ci(i, m[t].length);
                    e *= i;
                    var r = v * y.length * m.length;
                    return {
                        width: Math.max(1, Math.min(e, s.maxTileWidth)),
                        height: Math.max(1, Math.min(r, s.maxTileHeight))
                    }
                }

                function n() {
                    function e(e, t, n, a, l) {
                        var u = o ? 1 : i,
                            c = Dc(l, e * u, t * u, n * u, a * u, s.color, s.symbolKeepAspect);
                        if (o) {
                            var p = r.painter.renderOneToVNode(c);
                            p && _.children.push(p)
                        } else op(d, c)
                    }
                    d && (d.clearRect(0, 0, x.width, x.height), s.backgroundColor && (d.fillStyle = s.backgroundColor, d.fillRect(0, 0, x.width, x.height)));
                    for (var t = 0, n = 0; n < g.length; ++n) t += g[n];
                    if (!(0 >= t))
                        for (var a = -v, l = 0, u = 0, c = 0; a < w.height;) {
                            if (l % 2 == 0) {
                                for (var p = u / 2 % m.length, h = 0, y = 0, b = 0; h < 2 * w.width;) {
                                    var S = 0;
                                    for (n = 0; n < f[c].length; ++n) S += f[c][n];
                                    if (0 >= S) break;
                                    if (y % 2 == 0) {
                                        var T = .5 * (1 - s.symbolSize),
                                            C = h + f[c][y] * T,
                                            M = a + g[l] * T,
                                            I = f[c][y] * s.symbolSize,
                                            k = g[l] * s.symbolSize,
                                            D = b / 2 % m[p].length;
                                        e(C, M, I, k, m[p][D])
                                    }
                                    h += f[c][y], ++b, ++y, y === f[c].length && (y = 0)
                                }++c, c === f.length && (c = 0)
                            }
                            a += g[l], ++u, ++l, l === g.length && (l = 0)
                        }
                }
                for (var a = [i], l = !0, u = 0; u < Pk.length; ++u) {
                    var c = s[Pk[u]];
                    if (null != c && !T(c) && !M(c) && !k(c) && "boolean" != typeof c) {
                        l = !1;
                        break
                    }
                    a.push(c)
                }
                var p;
                if (l) {
                    p = a.join(",") + (o ? "-svg" : "");
                    var h = Ak.get(p);
                    h && (o ? e.svgElement = h : e.image = h)
                }
                var d, f = cp(s.dashArrayX),
                    g = pp(s.dashArrayY),
                    m = up(s.symbol),
                    y = hp(f),
                    v = dp(g),
                    x = !o && Xx.createCanvas(),
                    _ = o && {
                        tag: "g",
                        attrs: {},
                        key: "dcl",
                        children: []
                    },
                    w = t();
                x && (x.width = w.width * i, x.height = w.height * i, d = x.getContext("2d")), n(), l && Ak.put(p, x || _), e.image = x, e.svgElement = _, e.svgWidth = w.width, e.svgHeight = w.height
            }
            if ("none" === e) return null;
            var i = t.getDevicePixelRatio(),
                r = t.getZr(),
                o = "svg" === r.painter.type;
            e.dirty && Dk.delete(e);
            var a = Dk.get(e);
            if (a) return a;
            var s = p(e, {
                symbol: "rect",
                symbolSize: 1,
                symbolKeepAspect: !0,
                color: "rgba(0, 0, 0, 0.2)",
                backgroundColor: null,
                dashArrayX: 5,
                dashArrayY: 5,
                rotation: 0,
                maxTileWidth: 512,
                maxTileHeight: 512
            });
            "none" === s.backgroundColor && (s.backgroundColor = null);
            var l = {
                repeat: "repeat"
            };
            return n(l), l.rotation = s.rotation, l.scaleX = l.scaleY = o ? 1 : 1 / i, Dk.set(e, l), e.dirty = !1, l
        }

        function up(e) {
            if (!e || 0 === e.length) return [
                ["rect"]
            ];
            if (M(e)) return [
                [e]
            ];
            for (var t = !0, n = 0; n < e.length; ++n)
                if (!M(e[n])) {
                    t = !1;
                    break
                } if (t) return up([e]);
            var i = [];
            for (n = 0; n < e.length; ++n) i.push(M(e[n]) ? [e[n]] : e[n]);
            return i
        }

        function cp(e) {
            if (!e || 0 === e.length) return [
                [0, 0]
            ];
            if (k(e)) {
                var t = Math.ceil(e);
                return [
                    [t, t]
                ]
            }
            for (var n = !0, i = 0; i < e.length; ++i)
                if (!k(e[i])) {
                    n = !1;
                    break
                } if (n) return cp([e]);
            var r = [];
            for (i = 0; i < e.length; ++i)
                if (k(e[i])) {
                    t = Math.ceil(e[i]);
                    r.push([t, t])
                } else {
                    t = y(e[i], function (e) {
                        return Math.ceil(e)
                    });
                    r.push(t.length % 2 == 1 ? t.concat(t) : t)
                } return r
        }

        function pp(e) {
            if (!e || "object" == typeof e && 0 === e.length) return [0, 0];
            if (k(e)) {
                var t = Math.ceil(e);
                return [t, t]
            }
            var n = y(e, function (e) {
                return Math.ceil(e)
            });
            return e.length % 2 ? n.concat(n) : n
        }

        function hp(e) {
            return y(e, function (e) {
                return dp(e)
            })
        }

        function dp(e) {
            for (var t = 0, n = 0; n < e.length; ++n) t += e[n];
            return e.length % 2 == 1 ? 2 * t : t
        }

        function fp(e, t) {
            e.eachRawSeries(function (n) {
                if (!e.isSeriesFiltered(n)) {
                    var i = n.getData();
                    i.hasItemVisual() && i.each(function (e) {
                        var n = i.getItemVisual(e, "decal");
                        if (n) {
                            var r = i.ensureUniqueItemVisual(e, "style");
                            r.decal = lp(n, t)
                        }
                    });
                    var r = i.getVisual("decal");
                    if (r) {
                        var o = i.getVisual("style");
                        o.decal = lp(r, t)
                    }
                }
            })
        }

        function gp(e, t) {
            Nk[e] = t
        }

        function mp(e) {
            return Nk[e]
        }

        function yp(e) {
            return function () {
                for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                return this.isDisposed() ? void 0 : xp(this, e, t)
            }
        }

        function vp(e) {
            return function () {
                for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                return xp(this, e, t)
            }
        }

        function xp(e, t, n) {
            return n[0] = n[0] && n[0].toLowerCase(), y_.prototype[t].apply(e, n)
        }

        function _p(e, t, n) {
            var i = !(n && n.ssr);
            if (i) {
                var r = Tp(e);
                if (r) return r
            }
            var o = new kD(e, t, n);
            return o.id = "ec_" + HD++, BD[o.id] = o, i && Ki(e, VD, o.id), CD(o), Lk.trigger("afterinit", o), o
        }

        function wp(e) {
            if (T(e)) {
                var t = e;
                e = null, m(t, function (t) {
                    null != t.group && (e = t.group)
                }), e = e || "g_" + GD++, m(t, function (t) {
                    t.group = e
                })
            }
            return FD[e] = !0, e
        }

        function bp(e) {
            FD[e] = !1
        }

        function Sp(e) {
            M(e) ? e = BD[e] : e instanceof kD || (e = Tp(e)), e instanceof kD && !e.isDisposed() && e.dispose()
        }

        function Tp(e) {
            return BD[Ji(e, VD)]
        }

        function Cp(e) {
            return BD[e]
        }

        function Mp(e, t) {
            RD[e] = t
        }

        function Ip(e) {
            h(OD, e) < 0 && OD.push(e)
        }

        function kp(e, t) {
            zp(ND, e, t, Gk)
        }

        function Dp(e) {
            Pp("afterinit", e)
        }

        function Ap(e) {
            Pp("afterupdate", e)
        }

        function Pp(e, t) {
            Lk.on(e, t)
        }

        function Lp(e, t, n) {
            C(t) && (n = t, t = "");
            var i = D(e) ? e.type : [e, e = {
                event: t
            }][0];
            e.event = (e.event || i).toLowerCase(), t = e.event, LD[t] || (V(iD.test(i) && iD.test(t)), PD[i] || (PD[i] = {
                action: n,
                actionInfo: e
            }), LD[t] = i)
        }

        function Np(e, t) {
            YM.register(e, t)
        }

        function Op(e) {
            var t = YM.get(e);
            return t ? t.getDimensionsInfo ? t.getDimensionsInfo() : t.dimensions.slice() : void 0
        }

        function Ep(e, t) {
            zp(ED, e, t, Wk, "layout")
        }

        function Rp(e, t) {
            zp(ED, e, t, Yk, "visual")
        }

        function zp(e, t, n, i, r) {
            if ((C(t) || D(t)) && (n = t, t = i), !(h(jD, n) >= 0)) {
                jD.push(n);
                var o = ZI.wrapStageHandler(n, r);
                o.__prio = t, o.__raw = n, e.push(o)
            }
        }

        function Bp(e, t) {
            zD[e] = t
        }

        function Fp(e) {
            r({
                createCanvas: e
            })
        }

        function Hp(e, t, n) {
            var i = mp("registerMap");
            i && i(e, t, n)
        }

        function Gp(e) {
            var t = mp("getMap");
            return t && t(e)
        }

        function Vp(e) {
            return null == e ? 0 : e.length || 1
        }

        function Wp(e) {
            return e
        }

        function jp(e, t) {
            var n = {},
                i = n.encode = {},
                r = Y(),
                o = [],
                a = [],
                s = {};
            m(e.dimensions, function (t) {
                var n = e.getDimensionInfo(t),
                    l = n.coordDim;
                if (l) {
                    var u = n.coordDimIndex;
                    Xp(i, l)[u] = t, n.isExtraCoord || (r.set(l, 1), Up(n.type) && (o[0] = t), Xp(s, l)[u] = e.getDimensionIndex(n.name)), n.defaultTooltip && a.push(t)
                }
                _M.each(function (e, t) {
                    var r = Xp(i, t),
                        o = n.otherDims[t];
                    null != o && !1 !== o && (r[o] = n.name)
                })
            });
            var l = [],
                u = {};
            r.each(function (e, t) {
                var n = i[t];
                u[t] = n[0], l = l.concat(n)
            }), n.dataDimsOnCoord = l, n.dataDimIndicesOnCoord = y(l, function (t) {
                return e.getDimensionInfo(t).storeDimIndex
            }), n.encodeFirstDimNotExtra = u;
            var c = i.label;
            c && c.length && (o = c.slice());
            var p = i.tooltip;
            return p && p.length ? a = p.slice() : a.length || (a = o.slice()), i.defaultedLabel = o, i.defaultedTooltip = a, n.userOutput = new tA(s, t), n
        }

        function Xp(e, t) {
            return e.hasOwnProperty(t) || (e[t] = []), e[t]
        }

        function Yp(e) {
            return "category" === e ? "ordinal" : "time" === e ? "time" : "float"
        }

        function Up(e) {
            return !("ordinal" === e || "time" === e)
        }

        function qp(e) {
            return e instanceof oA
        }

        function Zp(e) {
            for (var t = Y(), n = 0; n < (e || []).length; n++) {
                var i = e[n],
                    r = D(i) ? i.name : i;
                null != r && null == t.get(r) && t.set(r, n)
            }
            return t
        }

        function $p(e) {
            var t = iA(e);
            return t.dimNameMap || (t.dimNameMap = Zp(e.dimensionsDefine))
        }

        function Kp(e) {
            return e > 30
        }

        function Jp(e, t) {
            return Qp(e, t).dimensions
        }

        function Qp(e, t) {
            function n(e) {
                var t = v[e];
                if (0 > t) {
                    var n = a[e],
                        i = D(n) ? n : {
                            name: n
                        },
                        r = new nA,
                        o = i.name;
                    null != o && null != f.get(o) && (r.name = r.displayName = o), null != i.type && (r.type = i.type), null != i.displayName && (r.displayName = i.displayName);
                    var s = l.length;
                    return v[e] = s, r.storeDimIndex = e, l.push(r), r
                }
                return l[t]
            }

            function i(e, t, n) {
                null != _M.get(t) ? e.otherDims[t] = n : (e.coordDim = t, e.coordDimIndex = n, s.set(t, !0))
            }

            function r(e) {
                null == e.name && (e.name = e.coordDim)
            }
            ql(e) || (e = $l(e)), t = t || {};
            var o = t.coordDimensions || [],
                a = t.dimensionsDefine || e.dimensionsDefine || [],
                s = Y(),
                l = [],
                u = th(e, o, a, t.dimensionsCount),
                h = t.canOmitUnusedDimensions && Kp(u),
                d = a === e.dimensionsDefine,
                f = d ? $p(e) : Zp(a),
                g = t.encodeDefine;
            !g && t.encodeDefaulter && (g = t.encodeDefaulter(e, u));
            for (var y = Y(g), v = new _I(u), x = 0; x < v.length; x++) v[x] = -1;
            if (!h)
                for (x = 0; u > x; x++) n(x);
            y.each(function (e, t) {
                var r = ki(e).slice();
                if (1 === r.length && !M(r[0]) && r[0] < 0) y.set(t, !1);
                else {
                    var o = y.set(t, []);
                    m(r, function (e, r) {
                        var a = M(e) ? f.get(e) : e;
                        null != a && u > a && (o[r] = a, i(n(a), t, r))
                    })
                }
            });
            var _ = 0;
            m(o, function (e) {
                var t, r, o, a;
                if (M(e)) t = e, a = {};
                else {
                    a = e, t = a.name;
                    var s = a.ordinalMeta;
                    a.ordinalMeta = null, a = c({}, a), a.ordinalMeta = s, r = a.dimsDef, o = a.otherDims, a.name = a.coordDim = a.coordDimIndex = a.dimsDef = a.otherDims = null
                }
                var l = y.get(t);
                if (!1 !== l) {
                    if (l = ki(l), !l.length)
                        for (var h = 0; h < (r && r.length || 1); h++) {
                            for (; u > _ && null != n(_).coordDim;) _++;
                            u > _ && l.push(_++)
                        }
                    m(l, function (e, s) {
                        var l = n(e);
                        if (d && null != a.type && (l.type = a.type), i(p(l, a), t, s), null == l.name && r) {
                            var u = r[s];
                            !D(u) && (u = {
                                name: u
                            }), l.name = l.displayName = u.name, l.defaultTooltip = u.defaultTooltip
                        }
                        o && p(l.otherDims, o)
                    })
                }
            });
            var w = t.generateCoord,
                b = t.generateCoordCount,
                S = null != b;
            b = w ? b || 1 : 0;
            var T = w || "value";
            if (h) m(l, function (e) {
                r(e)
            }), l.sort(function (e, t) {
                return e.storeDimIndex - t.storeDimIndex
            });
            else
                for (var C = 0; u > C; C++) {
                    var I = n(C),
                        k = I.coordDim;
                    null == k && (I.coordDim = nh(T, s, S), I.coordDimIndex = 0, (!w || 0 >= b) && (I.isExtraCoord = !0), b--), r(I), null != I.type || dl(e, C) !== DM.Must && (!I.isExtraCoord || null == I.otherDims.itemName && null == I.otherDims.seriesName) || (I.type = "ordinal")
                }
            return eh(l), new oA({
                source: e,
                dimensions: l,
                fullDimensionCount: u,
                dimensionOmitted: h
            })
        }

        function eh(e) {
            for (var t = Y(), n = 0; n < e.length; n++) {
                var i = e[n],
                    r = i.name,
                    o = t.get(r) || 0;
                o > 0 && (i.name = r + (o - 1)), o++, t.set(r, o)
            }
        }

        function th(e, t, n, i) {
            var r = Math.max(e.dimensionsDetectedCount || 1, t.length, n.length, i || 0);
            return m(t, function (e) {
                var t;
                D(e) && (t = e.dimsDef) && (r = Math.max(r, t.length))
            }), r
        }

        function nh(e, t, n) {
            var i = t.data;
            if (n || i.hasOwnProperty(e)) {
                for (var r = 0; i.hasOwnProperty(e + r);) r++;
                e += r
            }
            return t.set(e, !0), e
        }

        function ih(e) {
            var t = e.get("coordinateSystem"),
                n = new fA(t),
                i = gA[t];
            return i ? (i(e, n, n.axisMap, n.categoryAxisMap), n) : void 0
        }

        function rh(e) {
            return "category" === e.get("type")
        }

        function oh(e, t, n) {
            n = n || {};
            var i, r, o, a = n.byIndex,
                s = n.stackedCoordDimension;
            ah(t) ? i = t : (r = t.schema, i = r.dimensions, o = t.store);
            var l, u, c, p, h = !(!e || !e.get("stack"));
            if (m(i, function (e, t) {
                    M(e) && (i[t] = e = {
                        name: e
                    }), h && !e.isExtraCoord && (a || l || !e.ordinalMeta || (l = e), u || "ordinal" === e.type || "time" === e.type || s && s !== e.coordDim || (u = e))
                }), !u || a || l || (a = !0), u) {
                c = "__\0ecstackresult_" + e.id, p = "__\0ecstackedover_" + e.id, l && (l.createInvertedIndices = !0);
                var d = u.coordDim,
                    f = u.type,
                    g = 0;
                m(i, function (e) {
                    e.coordDim === d && g++
                });
                var y = {
                        name: c,
                        coordDim: d,
                        coordDimIndex: g,
                        type: f,
                        isExtraCoord: !0,
                        isCalculationCoord: !0,
                        storeDimIndex: i.length
                    },
                    v = {
                        name: p,
                        coordDim: p,
                        coordDimIndex: g + 1,
                        type: f,
                        isExtraCoord: !0,
                        isCalculationCoord: !0,
                        storeDimIndex: i.length + 1
                    };
                r ? (o && (y.storeDimIndex = o.ensureCalculationDimension(p, f), v.storeDimIndex = o.ensureCalculationDimension(c, f)), r.appendCalculationDimension(y), r.appendCalculationDimension(v)) : (i.push(y), i.push(v))
            }
            return {
                stackedDimension: u && u.name,
                stackedByDimension: l && l.name,
                isStackedByIndex: a,
                stackedOverDimension: p,
                stackResultDimension: c
            }
        }

        function ah(e) {
            return !qp(e.schema)
        }

        function sh(e, t) {
            return !!t && t === e.getCalculationInfo("stackedDimension")
        }

        function lh(e, t) {
            return sh(e, t) ? e.getCalculationInfo("stackResultDimension") : t
        }

        function uh(e, t) {
            var n, i = e.get("coordinateSystem"),
                r = YM.get(i);
            return t && t.coordSysDims && (n = y(t.coordSysDims, function (e) {
                var n = {
                        name: e
                    },
                    i = t.axisMap.get(e);
                if (i) {
                    var r = i.get("type");
                    n.type = Yp(r)
                }
                return n
            })), n || (n = r && (r.getDimensionsInfo ? r.getDimensionsInfo() : r.dimensions.slice()) || ["x", "y"]), n
        }

        function ch(e, t, n) {
            var i, r;
            return n && m(e, function (e, o) {
                var a = e.coordDim,
                    s = n.categoryAxisMap.get(a);
                s && (null == i && (i = o), e.ordinalMeta = s.getOrdinalMeta(), t && (e.createInvertedIndices = !0)), null != e.otherDims.itemName && (r = !0)
            }), r || null == i || (e[i].otherDims.itemName = 0), i
        }

        function ph(e, t, n) {
            n = n || {};
            var i, r = t.getSourceManager(),
                o = !1;
            e ? (o = !0, i = $l(e)) : (i = r.getSource(), o = i.sourceFormat === wM);
            var a = ih(t),
                s = uh(t, a),
                l = n.useEncodeDefaulter,
                u = C(l) ? l : l ? S(ul, s, t) : null,
                c = {
                    coordDimensions: s,
                    generateCoord: n.generateCoord,
                    encodeDefine: t.getEncode(),
                    encodeDefaulter: u,
                    canOmitUnusedDimensions: !o
                },
                p = Qp(i, c),
                h = ch(p.dimensions, n.createInvertedIndices, a),
                d = o ? null : r.getSharedDataStore(p),
                f = oh(t, {
                    schema: p,
                    store: d
                }),
                g = new dA(p, t);
            g.setCalculationInfo(f);
            var m = null != h && hh(i) ? function (e, t, n, i) {
                return i === h ? n : this.defaultDimValueGetter(e, t, n, i)
            } : null;
            return g.hasItemOption = !1, g.initData(o ? i : d, null, m), g
        }

        function hh(e) {
            if (e.sourceFormat === wM) {
                var t = dh(e.data || []);
                return !T(Ai(t))
            }
        }

        function dh(e) {
            for (var t = 0; t < e.length && null == e[t];) t++;
            return e[t]
        }

        function fh(e) {
            return D(e) && null != e.value ? e.value : e + ""
        }

        function gh(e) {
            return "interval" === e.type || "log" === e.type
        }

        function mh(e, t, n, i) {
            var r = {},
                o = e[1] - e[0],
                a = r.interval = vi(o / t, !0);
            null != n && n > a && (a = r.interval = n), null != i && a > i && (a = r.interval = i);
            var s = r.intervalPrecision = vh(a),
                l = r.niceTickExtent = [oi(Math.ceil(e[0] / a) * a, s), oi(Math.floor(e[1] / a) * a, s)];
            return _h(l, e), r
        }

        function yh(e) {
            var t = Math.pow(10, yi(e)),
                n = e / t;
            return n ? 2 === n ? n = 3 : 3 === n ? n = 5 : n *= 2 : n = 1, oi(n * t)
        }

        function vh(e) {
            return si(e) + 2
        }

        function xh(e, t, n) {
            e[t] = Math.max(Math.min(e[t], n[1]), n[0])
        }

        function _h(e, t) {
            !isFinite(e[0]) && (e[0] = t[0]), !isFinite(e[1]) && (e[1] = t[1]), xh(e, 0, t), xh(e, 1, t), e[0] > e[1] && (e[0] = e[1])
        }

        function wh(e, t) {
            return e >= t[0] && e <= t[1]
        }

        function bh(e, t) {
            return t[1] === t[0] ? .5 : (e - t[0]) / (t[1] - t[0])
        }

        function Sh(e, t) {
            return e * (t[1] - t[0]) + t[0]
        }

        function Th(e) {
            return T(e) ? bA ? new Float32Array(e) : e : new SA(e)
        }

        function Ch(e) {
            return e.get("stack") || TA + e.seriesIndex
        }

        function Mh(e) {
            return e.dim + e.index
        }

        function Ih(e, t) {
            var n = [];
            return t.eachSeriesByType(e, function (e) {
                Oh(e) && n.push(e)
            }), n
        }

        function kh(e) {
            var t = {};
            m(e, function (e) {
                var n = e.coordinateSystem,
                    i = n.getBaseAxis();
                if ("time" === i.type || "value" === i.type)
                    for (var r = e.getData(), o = i.dim + "_" + i.index, a = r.getDimensionIndex(r.mapDimension(i.dim)), s = r.getStore(), l = 0, u = s.count(); u > l; ++l) {
                        var c = s.get(a, l);
                        t[o] ? t[o].push(c) : t[o] = [c]
                    }
            });
            var n = {};
            for (var i in t)
                if (t.hasOwnProperty(i)) {
                    var r = t[i];
                    if (r) {
                        r.sort(function (e, t) {
                            return e - t
                        });
                        for (var o = null, a = 1; a < r.length; ++a) {
                            var s = r[a] - r[a - 1];
                            s > 0 && (o = null === o ? s : Math.min(o, s))
                        }
                        n[i] = o
                    }
                } return n
        }

        function Dh(e) {
            var t = kh(e),
                n = [];
            return m(e, function (e) {
                var i, r = e.coordinateSystem,
                    o = r.getBaseAxis(),
                    a = o.getExtent();
                if ("category" === o.type) i = o.getBandWidth();
                else if ("value" === o.type || "time" === o.type) {
                    var s = o.dim + "_" + o.index,
                        l = t[s],
                        u = Math.abs(a[1] - a[0]),
                        c = o.scale.getExtent(),
                        p = Math.abs(c[1] - c[0]);
                    i = l ? u / p * l : u
                } else {
                    var h = e.getData();
                    i = Math.abs(a[1] - a[0]) / h.count()
                }
                var d = ri(e.get("barWidth"), i),
                    f = ri(e.get("barMaxWidth"), i),
                    g = ri(e.get("barMinWidth") || (Eh(e) ? .5 : 1), i),
                    m = e.get("barGap"),
                    y = e.get("barCategoryGap");
                n.push({
                    bandWidth: i,
                    barWidth: d,
                    barMaxWidth: f,
                    barMinWidth: g,
                    barGap: m,
                    barCategoryGap: y,
                    axisKey: Mh(o),
                    stackId: Ch(e)
                })
            }), Ah(n)
        }

        function Ah(e) {
            var t = {};
            m(e, function (e) {
                var n = e.axisKey,
                    i = e.bandWidth,
                    r = t[n] || {
                        bandWidth: i,
                        remainedWidth: i,
                        autoWidthCount: 0,
                        categoryGap: null,
                        gap: "20%",
                        stacks: {}
                    },
                    o = r.stacks;
                t[n] = r;
                var a = e.stackId;
                o[a] || r.autoWidthCount++, o[a] = o[a] || {
                    width: 0,
                    maxWidth: 0
                };
                var s = e.barWidth;
                s && !o[a].width && (o[a].width = s, s = Math.min(r.remainedWidth, s), r.remainedWidth -= s);
                var l = e.barMaxWidth;
                l && (o[a].maxWidth = l);
                var u = e.barMinWidth;
                u && (o[a].minWidth = u);
                var c = e.barGap;
                null != c && (r.gap = c);
                var p = e.barCategoryGap;
                null != p && (r.categoryGap = p)
            });
            var n = {};
            return m(t, function (e, t) {
                n[t] = {};
                var i = e.stacks,
                    r = e.bandWidth,
                    o = e.categoryGap;
                if (null == o) {
                    var a = w(i).length;
                    o = Math.max(35 - 4 * a, 15) + "%"
                }
                var s = ri(o, r),
                    l = ri(e.gap, 1),
                    u = e.remainedWidth,
                    c = e.autoWidthCount,
                    p = (u - s) / (c + (c - 1) * l);
                p = Math.max(p, 0), m(i, function (e) {
                    var t = e.maxWidth,
                        n = e.minWidth;
                    if (e.width) {
                        var i = e.width;
                        t && (i = Math.min(i, t)), n && (i = Math.max(i, n)), e.width = i, u -= i + l * i, c--
                    } else {
                        i = p;
                        t && i > t && (i = Math.min(t, u)), n && n > i && (i = n), i !== p && (e.width = i, u -= i + l * i, c--)
                    }
                }), p = (u - s) / (c + (c - 1) * l), p = Math.max(p, 0);
                var h, d = 0;
                m(i, function (e) {
                    e.width || (e.width = p), h = e, d += e.width * (1 + l)
                }), h && (d -= h.width * l);
                var f = -d / 2;
                m(i, function (e, i) {
                    n[t][i] = n[t][i] || {
                        bandWidth: r,
                        offset: f,
                        width: e.width
                    }, f += e.width * (1 + l)
                })
            }), n
        }

        function Ph(e, t, n) {
            if (e && t) {
                var i = e[Mh(t)];
                return null != i && null != n ? i[Ch(n)] : i
            }
        }

        function Lh(e, t) {
            var n = Ih(e, t),
                i = Dh(n);
            m(n, function (e) {
                var t = e.getData(),
                    n = e.coordinateSystem,
                    r = n.getBaseAxis(),
                    o = Ch(e),
                    a = i[Mh(r)][o],
                    s = a.offset,
                    l = a.width;
                t.setLayout({
                    bandWidth: a.bandWidth,
                    offset: s,
                    size: l
                })
            })
        }

        function Nh(e) {
            return {
                seriesType: e,
                plan: tc(),
                reset: function (e) {
                    if (Oh(e)) {
                        var t = e.getData(),
                            n = e.coordinateSystem,
                            i = n.getBaseAxis(),
                            r = n.getOtherAxis(i),
                            o = t.getDimensionIndex(t.mapDimension(r.dim)),
                            a = t.getDimensionIndex(t.mapDimension(i.dim)),
                            s = e.get("showBackground", !0),
                            l = t.mapDimension(r.dim),
                            u = t.getCalculationInfo("stackResultDimension"),
                            c = sh(t, l) && !!t.getCalculationInfo("stackedOnSeries"),
                            p = r.isHorizontal(),
                            h = Rh(i, r),
                            d = Eh(e),
                            f = e.get("barMinHeight") || 0,
                            g = u && t.getDimensionIndex(u),
                            m = t.getLayout("size"),
                            y = t.getLayout("offset");
                        return {
                            progress: function (e, t) {
                                for (var i, r = e.count, l = d && Th(3 * r), u = d && s && Th(3 * r), v = d && Th(r), x = n.master.getRect(), _ = p ? x.width : x.height, w = t.getStore(), b = 0; null != (i = e.next());) {
                                    var S = w.get(c ? g : o, i),
                                        T = w.get(a, i),
                                        C = h,
                                        M = void 0;
                                    c && (M = +S - w.get(o, i));
                                    var I = void 0,
                                        k = void 0,
                                        D = void 0,
                                        A = void 0;
                                    if (p) {
                                        var P = n.dataToPoint([S, T]);
                                        if (c) {
                                            var L = n.dataToPoint([M, T]);
                                            C = L[0]
                                        }
                                        I = C, k = P[1] + y, D = P[0] - C, A = m, Math.abs(D) < f && (D = (0 > D ? -1 : 1) * f)
                                    } else {
                                        P = n.dataToPoint([T, S]);
                                        if (c) {
                                            L = n.dataToPoint([T, M]);
                                            C = L[1]
                                        }
                                        I = P[0] + y, k = C, D = m, A = P[1] - C, Math.abs(A) < f && (A = (0 >= A ? -1 : 1) * f)
                                    }
                                    d ? (l[b] = I, l[b + 1] = k, l[b + 2] = p ? D : A, u && (u[b] = p ? x.x : I, u[b + 1] = p ? k : x.y, u[b + 2] = _), v[i] = i) : t.setItemLayout(i, {
                                        x: I,
                                        y: k,
                                        width: D,
                                        height: A
                                    }), b += 3
                                }
                                d && t.setLayout({
                                    largePoints: l,
                                    largeDataIndices: v,
                                    largeBackgroundPoints: u,
                                    valueAxisHorizontal: p
                                })
                            }
                        }
                    }
                }
            }
        }

        function Oh(e) {
            return e.coordinateSystem && "cartesian2d" === e.coordinateSystem.type
        }

        function Eh(e) {
            return e.pipelineContext && e.pipelineContext.large
        }

        function Rh(e, t) {
            return t.toGlobalCoord(t.dataToCoord("log" === t.type ? 1 : 0))
        }

        function zh(e, t, n, i) {
            var r = gi(t),
                o = gi(n),
                a = function (e) {
                    return As(r, e, i) === As(o, e, i)
                },
                s = function () {
                    return a("year")
                },
                l = function () {
                    return s() && a("month")
                },
                u = function () {
                    return l() && a("day")
                },
                c = function () {
                    return u() && a("hour")
                },
                p = function () {
                    return c() && a("minute")
                },
                h = function () {
                    return p() && a("second")
                },
                d = function () {
                    return h() && a("millisecond")
                };
            switch (e) {
                case "year":
                    return s();
                case "month":
                    return l();
                case "day":
                    return u();
                case "hour":
                    return c();
                case "minute":
                    return p();
                case "second":
                    return h();
                case "millisecond":
                    return d()
            }
        }

        function Bh(e) {
            return e /= QC, e > 16 ? 16 : e > 7.5 ? 7 : e > 3.5 ? 4 : e > 1.5 ? 2 : 1
        }

        function Fh(e) {
            var t = 30 * QC;
            return e /= t, e > 6 ? 6 : e > 3 ? 3 : e > 2 ? 2 : 1
        }

        function Hh(e) {
            return e /= JC, e > 12 ? 12 : e > 6 ? 6 : e > 3.5 ? 4 : e > 2 ? 2 : 1
        }

        function Gh(e, t) {
            return e /= t ? KC : $C, e > 30 ? 30 : e > 20 ? 20 : e > 15 ? 15 : e > 10 ? 10 : e > 5 ? 5 : e > 2 ? 2 : 1
        }

        function Vh(e) {
            return vi(e, !0)
        }

        function Wh(e, t, n) {
            var i = new Date(e);
            switch (Ts(t)) {
                case "year":
                case "month":
                    i[Fs(n)](0);
                case "day":
                    i[Hs(n)](1);
                case "hour":
                    i[Gs(n)](0);
                case "minute":
                    i[Vs(n)](0);
                case "second":
                    i[Ws(n)](0), i[js(n)](0)
            }
            return i.getTime()
        }

        function jh(e, t, n, i) {
            function r(e, t, n, r, o, a, s) {
                for (var l = new Date(t), u = t, c = l[r](); n > u && u <= i[1];) s.push({
                    value: u
                }), c += e, l[o](c), u = l.getTime();
                s.push({
                    value: u,
                    notAdd: !0
                })
            }

            function o(e, o, a) {
                var s = [],
                    l = !o.length;
                if (!zh(Ts(e), i[0], i[1], n)) {
                    l && (o = [{
                        value: Wh(new Date(i[0]), e, n)
                    }, {
                        value: i[1]
                    }]);
                    for (var u = 0; u < o.length - 1; u++) {
                        var c = o[u].value,
                            p = o[u + 1].value;
                        if (c !== p) {
                            var h = void 0,
                                d = void 0,
                                f = void 0,
                                g = !1;
                            switch (e) {
                                case "year":
                                    h = Math.max(1, Math.round(t / QC / 365)), d = Ps(n), f = Bs(n);
                                    break;
                                case "half-year":
                                case "quarter":
                                case "month":
                                    h = Fh(t), d = Ls(n), f = Fs(n);
                                    break;
                                case "week":
                                case "half-week":
                                case "day":
                                    h = Bh(t, 31), d = Ns(n), f = Hs(n), g = !0;
                                    break;
                                case "half-day":
                                case "quarter-day":
                                case "hour":
                                    h = Hh(t), d = Os(n), f = Gs(n);
                                    break;
                                case "minute":
                                    h = Gh(t, !0), d = Es(n), f = Vs(n);
                                    break;
                                case "second":
                                    h = Gh(t, !1), d = Rs(n), f = Ws(n);
                                    break;
                                case "millisecond":
                                    h = Vh(t), d = zs(n), f = js(n)
                            }
                            r(h, c, p, d, f, g, s), "year" === e && a.length > 1 && 0 === u && a.unshift({
                                value: a[0].value - h
                            })
                        }
                    }
                    for (u = 0; u < s.length; u++) a.push(s[u]);
                    return s
                }
            }
            for (var a = 1e4, s = oM, l = 0, u = [], c = [], p = 0, h = 0, d = 0; d < s.length && l++ < a; ++d) {
                var f = Ts(s[d]);
                if (Cs(s[d])) {
                    o(s[d], u[u.length - 1] || [], c);
                    var g = s[d + 1] ? Ts(s[d + 1]) : null;
                    if (f !== g) {
                        if (c.length) {
                            h = p, c.sort(function (e, t) {
                                return e.value - t.value
                            });
                            for (var m = [], v = 0; v < c.length; ++v) {
                                var _ = c[v].value;
                                (0 === v || c[v - 1].value !== _) && (m.push(c[v]), _ >= i[0] && _ <= i[1] && p++)
                            }
                            var w = (i[1] - i[0]) / t;
                            if (p > 1.5 * w && h > w / 1.5) break;
                            if (u.push(m), p > w || e === s[d]) break
                        }
                        c = []
                    }
                }
            }
            var b = x(y(u, function (e) {
                    return x(e, function (e) {
                        return e.value >= i[0] && e.value <= i[1] && !e.notAdd
                    })
                }), function (e) {
                    return e.length > 0
                }),
                S = [],
                T = b.length - 1;
            for (d = 0; d < b.length; ++d)
                for (var C = b[d], M = 0; M < C.length; ++M) S.push({
                    value: C[M].value,
                    level: T - d
                });
            S.sort(function (e, t) {
                return e.value - t.value
            });
            var I = [];
            for (d = 0; d < S.length; ++d)(0 === d || S[d].value !== S[d - 1].value) && I.push(S[d]);
            return I
        }

        function Xh(e, t) {
            return AA(e, si(t))
        }

        function Yh(e, t, n) {
            var i = e.rawExtentInfo;
            return i || (i = new zA(e, t, n), e.rawExtentInfo = i, i)
        }

        function Uh(e, t) {
            return null == t ? null : R(t) ? NaN : e.parse(t)
        }

        function qh(e, t) {
            var n = e.type,
                i = Yh(e, t, e.getExtent()).calculate();
            e.setBlank(i.isBlank);
            var r = i.min,
                o = i.max,
                a = t.ecModel;
            if (a && "time" === n) {
                var s = Ih("bar", a),
                    l = !1;
                if (m(s, function (e) {
                        l = l || e.getBaseAxis() === t.axis
                    }), l) {
                    var u = Dh(s),
                        c = Zh(r, o, t, u);
                    r = c.min, o = c.max
                }
            }
            return {
                extent: [r, o],
                fixMin: i.minFixed,
                fixMax: i.maxFixed
            }
        }

        function Zh(e, t, n, i) {
            var r = n.axis.getExtent(),
                o = r[1] - r[0],
                a = Ph(i, n.axis);
            if (void 0 === a) return {
                min: e,
                max: t
            };
            var s = 1 / 0;
            m(a, function (e) {
                s = Math.min(e.offset, s)
            });
            var l = -1 / 0;
            m(a, function (e) {
                l = Math.max(e.offset + e.width, l)
            }), s = Math.abs(s), l = Math.abs(l);
            var u = s + l,
                c = t - e,
                p = 1 - (s + l) / o,
                h = c / p - c;
            return t += h * (l / u), e -= h * (s / u), {
                min: e,
                max: t
            }
        }

        function $h(e, t) {
            var n = t,
                i = qh(e, n),
                r = i.extent,
                o = n.get("splitNumber");
            e instanceof EA && (e.base = n.get("logBase"));
            var a = e.type,
                s = n.get("interval"),
                l = "interval" === a || "time" === a;
            e.setExtent(r[0], r[1]), e.calcNiceExtent({
                splitNumber: o,
                fixMin: i.fixMin,
                fixMax: i.fixMax,
                minInterval: l ? n.get("minInterval") : null,
                maxInterval: l ? n.get("maxInterval") : null
            }), null != s && e.setInterval && e.setInterval(s)
        }

        function Kh(e, t) {
            if (t = t || e.get("type")) switch (t) {
                case "category":
                    return new xA({
                        ordinalMeta: e.getOrdinalMeta ? e.getOrdinalMeta() : e.getCategories(),
                        extent: [1 / 0, -1 / 0]
                    });
                case "time":
                    return new MA({
                        locale: e.ecModel.getLocaleModel(),
                        useUTC: e.ecModel.get("useUTC")
                    });
                default:
                    return new(mA.getClass(t) || wA)
            }
        }

        function Jh(e) {
            var t = e.scale.getExtent(),
                n = t[0],
                i = t[1];
            return !(n > 0 && i > 0 || 0 > n && 0 > i)
        }

        function Qh(e) {
            var t = e.getLabelModel().get("formatter"),
                n = "category" === e.type ? e.scale.getExtent()[0] : null;
            return "time" === e.scale.type ? function (t) {
                return function (n, i) {
                    return e.scale.getFormattedLabel(n, i, t)
                }
            }(t) : M(t) ? function (t) {
                return function (n) {
                    var i = e.scale.getLabel(n),
                        r = t.replace("{value}", null != i ? i : "");
                    return r
                }
            }(t) : C(t) ? function (t) {
                return function (i, r) {
                    return null != n && (r = i.value - n), t(ed(e, i), r, null != i.level ? {
                        level: i.level
                    } : null)
                }
            }(t) : function (t) {
                return e.scale.getLabel(t)
            }
        }

        function ed(e, t) {
            return "category" === e.type ? e.scale.getLabel(t) : t.value
        }

        function td(e) {
            var t = e.model,
                n = e.scale;
            if (t.get(["axisLabel", "show"]) && !n.isBlank()) {
                var i, r, o = n.getExtent();
                n instanceof xA ? r = n.count() : (i = n.getTicks(), r = i.length);
                var a, s = e.getLabelModel(),
                    l = Qh(e),
                    u = 1;
                r > 40 && (u = Math.ceil(r / 40));
                for (var c = 0; r > c; c += u) {
                    var p = i ? i[c] : {
                            value: o[0] + c
                        },
                        h = l(p, c),
                        d = s.getTextRect(h),
                        f = nd(d, s.get("rotate") || 0);
                    a ? a.union(f) : a = f
                }
                return a
            }
        }

        function nd(e, t) {
            var n = t * Math.PI / 180,
                i = e.width,
                r = e.height,
                o = i * Math.abs(Math.cos(n)) + Math.abs(r * Math.sin(n)),
                a = i * Math.abs(Math.sin(n)) + Math.abs(r * Math.cos(n)),
                s = new F_(e.x, e.y, o, a);
            return s
        }

        function id(e) {
            var t = e.get("interval");
            return null == t ? "auto" : t
        }

        function rd(e) {
            return "category" === e.type && 0 === id(e.getLabelModel())
        }

        function od(e, t) {
            var n = {};
            return m(e.mapDimensionsAll(t), function (t) {
                n[lh(e, t)] = !0
            }), w(n)
        }

        function ad(e) {
            return ph(null, e)
        }

        function sd(e, t) {
            var n = t;
            t instanceof HC || (n = new HC(t));
            var i = Kh(n);
            return i.setExtent(e[0], e[1]), $h(i, n), i
        }

        function ld(e) {
            f(e, HA)
        }

        function ud(e, t) {
            return t = t || {}, ss(e, null, null, "normal" !== t.state)
        }

        function cd(e) {
            return T(e) ? void m(e, function (e) {
                cd(e)
            }) : void(h(WA, e) >= 0 || (WA.push(e), C(e) && (e = {
                install: e
            }), e.install(jA)))
        }

        function pd(e, t) {
            return Math.abs(e - t) < XA
        }

        function hd(e, t, n) {
            var i = 0,
                r = e[0];
            if (!r) return !1;
            for (var o = 1; o < e.length; o++) {
                var a = e[o];
                i += Br(r[0], r[1], a[0], a[1], t, n), r = a
            }
            var s = e[0];
            return pd(r[0], s[0]) && pd(r[1], s[1]) || (i += Br(r[0], r[1], s[0], s[1], t, n)), 0 !== i
        }

        function dd(e, t) {
            for (var n = 0; n < e.length; n++) me(e[n], e[n], t)
        }

        function fd(e, t, n, i) {
            for (var r = 0; r < e.length; r++) {
                var o = e[r];
                i && (o = i.project(o)), o && isFinite(o[0]) && isFinite(o[1]) && (ye(t, t, o), ve(n, n, o))
            }
        }

        function gd(e) {
            for (var t = 0, n = 0, i = 0, r = e.length, o = e[r - 1][0], a = e[r - 1][1], s = 0; r > s; s++) {
                var l = e[s][0],
                    u = e[s][1],
                    c = o * u - l * a;
                t += c, n += (o + l) * c, i += (a + u) * c, o = l, a = u
            }
            return t ? [n / t / 3, i / t / 3, t] : [e[0][0] || 0, e[0][1] || 0]
        }

        function md(e) {
            if (!e.UTF8Encoding) return e;
            var t = e,
                n = t.UTF8Scale;
            null == n && (n = 1024);
            var i = t.features;
            return m(i, function (e) {
                var t = e.geometry,
                    i = t.encodeOffsets,
                    r = t.coordinates;
                if (i) switch (t.type) {
                    case "LineString":
                        t.coordinates = vd(r, i, n);
                        break;
                    case "Polygon":
                    case "MultiLineString":
                        yd(r, i, n);
                        break;
                    case "MultiPolygon":
                        m(r, function (e, t) {
                            return yd(e, i[t], n)
                        })
                }
            }), t.UTF8Encoding = !1, t
        }

        function yd(e, t, n) {
            for (var i = 0; i < e.length; i++) e[i] = vd(e[i], t[i], n)
        }

        function vd(e, t, n) {
            for (var i = [], r = t[0], o = t[1], a = 0; a < e.length; a += 2) {
                var s = e.charCodeAt(a) - 64,
                    l = e.charCodeAt(a + 1) - 64;
                s = s >> 1 ^ -(1 & s), l = l >> 1 ^ -(1 & l), s += r, l += o, r = s, o = l, i.push([s / n, l / n])
            }
            return i
        }

        function xd(e, t) {
            return e = md(e), y(x(e.features, function (e) {
                return e.geometry && e.properties && e.geometry.coordinates.length > 0
            }), function (e) {
                var n = e.properties,
                    i = e.geometry,
                    r = [];
                switch (i.type) {
                    case "Polygon":
                        var o = i.coordinates;
                        r.push(new qA(o[0], o.slice(1)));
                        break;
                    case "MultiPolygon":
                        m(i.coordinates, function (e) {
                            e[0] && r.push(new qA(e[0], e.slice(1)))
                        });
                        break;
                    case "LineString":
                        r.push(new ZA([i.coordinates]));
                        break;
                    case "MultiLineString":
                        r.push(new ZA(i.coordinates))
                }
                var a = new $A(n[t || "name"], r, n.cp);
                return a.properties = n, a
            })
        }

        function _d(e) {
            return "category" === e.type ? bd(e) : Cd(e)
        }

        function wd(e, t) {
            return "category" === e.type ? Td(e, t) : {
                ticks: y(e.scale.getTicks(), function (e) {
                    return e.value
                })
            }
        }

        function bd(e) {
            var t = e.getLabelModel(),
                n = Sd(e, t);
            return !t.get("show") || e.scale.isBlank() ? {
                labels: [],
                labelCategoryInterval: n.labelCategoryInterval
            } : n
        }

        function Sd(e, t) {
            var n, i, r = Md(e, "labels"),
                o = id(t),
                a = Id(r, o);
            return a || (C(o) ? n = Nd(e, o) : (i = "auto" === o ? Dd(e) : o, n = Ld(e, i)), kd(r, o, {
                labels: n,
                labelCategoryInterval: i
            }))
        }

        function Td(e, t) {
            var n, i, r = Md(e, "ticks"),
                o = id(t),
                a = Id(r, o);
            if (a) return a;
            if ((!t.get("show") || e.scale.isBlank()) && (n = []), C(o)) n = Nd(e, o, !0);
            else if ("auto" === o) {
                var s = Sd(e, e.getLabelModel());
                i = s.labelCategoryInterval, n = y(s.labels, function (e) {
                    return e.tickValue
                })
            } else i = o, n = Ld(e, i, !0);
            return kd(r, o, {
                ticks: n,
                tickCategoryInterval: i
            })
        }

        function Cd(e) {
            var t = e.scale.getTicks(),
                n = Qh(e);
            return {
                labels: y(t, function (t, i) {
                    return {
                        level: t.level,
                        formattedLabel: n(t, i),
                        rawLabel: e.scale.getLabel(t),
                        tickValue: t.value
                    }
                })
            }
        }

        function Md(e, t) {
            return iP(e)[t] || (iP(e)[t] = [])
        }

        function Id(e, t) {
            for (var n = 0; n < e.length; n++)
                if (e[n].key === t) return e[n].value
        }

        function kd(e, t, n) {
            return e.push({
                key: t,
                value: n
            }), n
        }

        function Dd(e) {
            var t = iP(e).autoInterval;
            return null != t ? t : iP(e).autoInterval = e.calculateCategoryInterval()
        }

        function Ad(e) {
            var t = Pd(e),
                n = Qh(e),
                i = (t.axisRotate - t.labelRotate) / 180 * Math.PI,
                r = e.scale,
                o = r.getExtent(),
                a = r.count();
            if (o[1] - o[0] < 1) return 0;
            var s = 1;
            a > 40 && (s = Math.max(1, Math.floor(a / 40)));
            for (var l = o[0], u = e.dataToCoord(l + 1) - e.dataToCoord(l), c = Math.abs(u * Math.cos(i)), p = Math.abs(u * Math.sin(i)), h = 0, d = 0; l <= o[1]; l += s) {
                var f = 0,
                    g = 0,
                    m = Rn(n({
                        value: l
                    }), t.font, "center", "top");
                f = 1.3 * m.width, g = 1.3 * m.height, h = Math.max(h, f, 7), d = Math.max(d, g, 7)
            }
            var y = h / c,
                v = d / p;
            isNaN(y) && (y = 1 / 0), isNaN(v) && (v = 1 / 0);
            var x = Math.max(0, Math.floor(Math.min(y, v))),
                _ = iP(e.model),
                w = e.getExtent(),
                b = _.lastAutoInterval,
                S = _.lastTickCount;
            return null != b && null != S && Math.abs(b - x) <= 1 && Math.abs(S - a) <= 1 && b > x && _.axisExtent0 === w[0] && _.axisExtent1 === w[1] ? x = b : (_.lastTickCount = a, _.lastAutoInterval = x, _.axisExtent0 = w[0], _.axisExtent1 = w[1]), x
        }

        function Pd(e) {
            var t = e.getLabelModel();
            return {
                axisRotate: e.getRotate ? e.getRotate() : e.isHorizontal && !e.isHorizontal() ? 90 : 0,
                labelRotate: t.get("rotate") || 0,
                font: t.getFont()
            }
        }

        function Ld(e, t, n) {
            function i(e) {
                var t = {
                    value: e
                };
                l.push(n ? e : {
                    formattedLabel: r(t),
                    rawLabel: o.getLabel(t),
                    tickValue: e
                })
            }
            var r = Qh(e),
                o = e.scale,
                a = o.getExtent(),
                s = e.getLabelModel(),
                l = [],
                u = Math.max((t || 0) + 1, 1),
                c = a[0],
                p = o.count();
            0 !== c && u > 1 && p / u > 2 && (c = Math.round(Math.ceil(c / u) * u));
            var h = rd(e),
                d = s.get("showMinLabel") || h,
                f = s.get("showMaxLabel") || h;
            d && c !== a[0] && i(a[0]);
            for (var g = c; g <= a[1]; g += u) i(g);
            return f && g - u !== a[1] && i(a[1]), l
        }

        function Nd(e, t, n) {
            var i = e.scale,
                r = Qh(e),
                o = [];
            return m(i.getTicks(), function (e) {
                var a = i.getLabel(e),
                    s = e.value;
                t(e.value, a) && o.push(n ? s : {
                    formattedLabel: r(e),
                    rawLabel: a,
                    tickValue: s
                })
            }), o
        }

        function Od(e, t) {
            var n = e[1] - e[0],
                i = t,
                r = n / i / 2;
            e[0] += r, e[1] -= r
        }

        function Ed(e, t, n, i) {
            function r(e, t) {
                return e = oi(e), t = oi(t), h ? e > t : t > e
            }
            var o = t.length;
            if (e.onBand && !n && o) {
                var a, s, l = e.getExtent();
                if (1 === o) t[0].coord = l[0], a = t[1] = {
                    coord: l[0]
                };
                else {
                    var u = t[o - 1].tickValue - t[0].tickValue,
                        c = (t[o - 1].coord - t[0].coord) / u;
                    m(t, function (e) {
                        e.coord -= c / 2
                    });
                    var p = e.scale.getExtent();
                    s = 1 + p[1] - t[o - 1].tickValue, a = {
                        coord: t[o - 1].coord + c * s
                    }, t.push(a)
                }
                var h = l[0] > l[1];
                r(t[0].coord, l[0]) && (i ? t[0].coord = l[0] : t.shift()), i && r(l[0], t[0].coord) && t.unshift({
                    coord: l[0]
                }), r(l[1], a.coord) && (i ? a.coord = l[1] : t.pop()), i && r(a.coord, l[1]) && t.push({
                    coord: l[1]
                })
            }
        }

        function Rd(e) {
            var t = fM.extend(e);
            return fM.registerClass(t), t
        }

        function zd(e) {
            var t = LI.extend(e);
            return LI.registerClass(t), t
        }

        function Bd(e) {
            var t = PI.extend(e);
            return PI.registerClass(t), t
        }

        function Fd(e) {
            var t = EI.extend(e);
            return EI.registerClass(t), t
        }

        function Hd(e, t, n, i, r) {
            var o = n.width,
                a = n.height;
            switch (e) {
                case "top":
                    i.set(n.x + o / 2, n.y - t), r.set(0, -1);
                    break;
                case "bottom":
                    i.set(n.x + o / 2, n.y + a + t), r.set(0, 1);
                    break;
                case "left":
                    i.set(n.x - t, n.y + a / 2), r.set(-1, 0);
                    break;
                case "right":
                    i.set(n.x + o + t, n.y + a / 2), r.set(1, 0)
            }
        }

        function Gd(e, t, n, i, r, o, a, s, l) {
            a -= e, s -= t;
            var u = Math.sqrt(a * a + s * s);
            a /= u, s /= u;
            var c = a * n + e,
                p = s * n + t;
            if (Math.abs(i - r) % aP < 1e-4) return l[0] = c, l[1] = p, u - n;
            if (o) {
                var h = i;
                i = Rr(r), r = Rr(h)
            } else i = Rr(i), r = Rr(r);
            i > r && (r += aP);
            var d = Math.atan2(s, a);
            if (0 > d && (d += aP), d >= i && r >= d || d + aP >= i && r >= d + aP) return l[0] = c, l[1] = p, u - n;
            var f = n * Math.cos(i) + e,
                g = n * Math.sin(i) + t,
                m = n * Math.cos(r) + e,
                y = n * Math.sin(r) + t,
                v = (f - a) * (f - a) + (g - s) * (g - s),
                x = (m - a) * (m - a) + (y - s) * (y - s);
            return x > v ? (l[0] = f, l[1] = g, Math.sqrt(v)) : (l[0] = m, l[1] = y, Math.sqrt(x))
        }

        function Vd(e, t, n, i, r, o, a, s) {
            var l = r - e,
                u = o - t,
                c = n - e,
                p = i - t,
                h = Math.sqrt(c * c + p * p);
            c /= h, p /= h;
            var d = l * c + u * p,
                f = d / h;
            s && (f = Math.min(Math.max(f, 0), 1)), f *= h;
            var g = a[0] = e + f * c,
                m = a[1] = t + f * p;
            return Math.sqrt((g - r) * (g - r) + (m - o) * (m - o))
        }

        function Wd(e, t, n, i, r, o, a) {
            0 > n && (e += n, n = -n), 0 > i && (t += i, i = -i);
            var s = e + n,
                l = t + i,
                u = a[0] = Math.min(Math.max(r, e), s),
                c = a[1] = Math.min(Math.max(o, t), l);
            return Math.sqrt((u - r) * (u - r) + (c - o) * (c - o))
        }

        function jd(e, t, n) {
            var i = Wd(t.x, t.y, t.width, t.height, e.x, e.y, uP);
            return n.set(uP[0], uP[1]), i
        }

        function Xd(e, t, n) {
            for (var i, r, o = 0, a = 0, s = 0, l = 0, u = 1 / 0, c = t.data, p = e.x, h = e.y, d = 0; d < c.length;) {
                var f = c[d++];
                1 === d && (o = c[d], a = c[d + 1], s = o, l = a);
                var g = u;
                switch (f) {
                    case sP.M:
                        s = c[d++], l = c[d++], o = s, a = l;
                        break;
                    case sP.L:
                        g = Vd(o, a, c[d], c[d + 1], p, h, uP, !0), o = c[d++], a = c[d++];
                        break;
                    case sP.C:
                        g = ft(o, a, c[d++], c[d++], c[d++], c[d++], c[d], c[d + 1], p, h, uP), o = c[d++], a = c[d++];
                        break;
                    case sP.Q:
                        g = wt(o, a, c[d++], c[d++], c[d], c[d + 1], p, h, uP), o = c[d++], a = c[d++];
                        break;
                    case sP.A:
                        var m = c[d++],
                            y = c[d++],
                            v = c[d++],
                            x = c[d++],
                            _ = c[d++],
                            w = c[d++];
                        d += 1;
                        var b = !!(1 - c[d++]);
                        i = Math.cos(_) * v + m, r = Math.sin(_) * x + y, 1 >= d && (s = i, l = r);
                        var S = (p - m) * x / v + m;
                        g = Gd(m, y, x, _, _ + w, b, S, h, uP), o = Math.cos(_ + w) * v + m, a = Math.sin(_ + w) * x + y;
                        break;
                    case sP.R:
                        s = o = c[d++], l = a = c[d++];
                        var T = c[d++],
                            C = c[d++];
                        g = Wd(s, l, T, C, p, h, uP);
                        break;
                    case sP.Z:
                        g = Vd(o, a, s, l, p, h, uP, !0), o = s, a = l
                }
                u > g && (u = g, n.set(uP[0], uP[1]))
            }
            return u
        }

        function Yd(e, t) {
            if (e) {
                var n = e.getTextGuideLine(),
                    i = e.getTextContent();
                if (i && n) {
                    var r = e.textGuideLineConfig || {},
                        o = [
                            [0, 0],
                            [0, 0],
                            [0, 0]
                        ],
                        a = r.candidates || lP,
                        s = i.getBoundingRect().clone();
                    s.applyTransform(i.getComputedTransform());
                    var l = 1 / 0,
                        u = r.anchor,
                        c = e.getComputedTransform(),
                        p = c && je([], c),
                        h = t.get("length2") || 0;
                    u && hP.copy(u);
                    for (var d = 0; d < a.length; d++) {
                        var f = a[d];
                        Hd(f, 0, s, cP, dP), A_.scaleAndAdd(pP, cP, dP, h), pP.transform(p);
                        var g = e.getBoundingRect(),
                            m = u ? u.distance(pP) : e instanceof OS ? Xd(pP, e.path, hP) : jd(pP, g, hP);
                        l > m && (l = m, pP.transform(c), hP.transform(c), hP.toArray(o[0]), pP.toArray(o[1]), cP.toArray(o[2]))
                    }
                    Ud(o, t.get("minTurnAngle")), n.setShape({
                        points: o
                    })
                }
            }
        }

        function Ud(e, t) {
            if (180 >= t && t > 0) {
                t = t / 180 * Math.PI, cP.fromArray(e[0]), pP.fromArray(e[1]), hP.fromArray(e[2]), A_.sub(dP, cP, pP), A_.sub(fP, hP, pP);
                var n = dP.len(),
                    i = fP.len();
                if (!(.001 > n || .001 > i)) {
                    dP.scale(1 / n), fP.scale(1 / i);
                    var r = dP.dot(fP),
                        o = Math.cos(t);
                    if (r > o) {
                        var a = Vd(pP.x, pP.y, hP.x, hP.y, cP.x, cP.y, gP, !1);
                        mP.fromArray(gP), mP.scaleAndAdd(fP, a / Math.tan(Math.PI - t));
                        var s = hP.x !== pP.x ? (mP.x - pP.x) / (hP.x - pP.x) : (mP.y - pP.y) / (hP.y - pP.y);
                        if (isNaN(s)) return;
                        0 > s ? A_.copy(mP, pP) : s > 1 && A_.copy(mP, hP), mP.toArray(e[1])
                    }
                }
            }
        }

        function qd(e, t, n) {
            if (180 >= n && n > 0) {
                n = n / 180 * Math.PI, cP.fromArray(e[0]), pP.fromArray(e[1]), hP.fromArray(e[2]), A_.sub(dP, pP, cP), A_.sub(fP, hP, pP);
                var i = dP.len(),
                    r = fP.len();
                if (!(.001 > i || .001 > r)) {
                    dP.scale(1 / i), fP.scale(1 / r);
                    var o = dP.dot(t),
                        a = Math.cos(n);
                    if (a > o) {
                        var s = Vd(pP.x, pP.y, hP.x, hP.y, cP.x, cP.y, gP, !1);
                        mP.fromArray(gP);
                        var l = Math.PI / 2,
                            u = Math.acos(fP.dot(t)),
                            c = l + u - n;
                        if (c >= l) A_.copy(mP, hP);
                        else {
                            mP.scaleAndAdd(fP, s / Math.tan(Math.PI / 2 - c));
                            var p = hP.x !== pP.x ? (mP.x - pP.x) / (hP.x - pP.x) : (mP.y - pP.y) / (hP.y - pP.y);
                            if (isNaN(p)) return;
                            0 > p ? A_.copy(mP, pP) : p > 1 && A_.copy(mP, hP)
                        }
                        mP.toArray(e[1])
                    }
                }
            }
        }

        function Zd(e, t, n, i) {
            var r = "normal" === n,
                o = r ? e : e.ensureState(n);
            o.ignore = t;
            var a = i.get("smooth");
            a && !0 === a && (a = .3), o.shape = o.shape || {}, a > 0 && (o.shape.smooth = a);
            var s = i.getModel("lineStyle").getLineStyle();
            r ? e.useStyle(s) : o.style = s
        }

        function $d(e, t) {
            var n = t.smooth,
                i = t.points;
            if (i)
                if (e.moveTo(i[0][0], i[0][1]), n > 0 && i.length >= 3) {
                    var r = h_(i[0], i[1]),
                        o = h_(i[1], i[2]);
                    if (!r || !o) return e.lineTo(i[1][0], i[1][1]), void e.lineTo(i[2][0], i[2][1]);
                    var a = Math.min(r, o) * n,
                        s = ge([], i[1], i[0], a / r),
                        l = ge([], i[1], i[2], a / o),
                        u = ge([], s, l, .5);
                    e.bezierCurveTo(s[0], s[1], s[0], s[1], u[0], u[1]), e.bezierCurveTo(l[0], l[1], l[0], l[1], i[2][0], i[2][1])
                } else
                    for (var c = 1; c < i.length; c++) e.lineTo(i[c][0], i[c][1])
        }

        function Kd(e, t, n) {
            var i = e.getTextGuideLine(),
                r = e.getTextContent();
            if (r) {
                for (var o = t.normal, a = o.get("show"), s = r.ignore, l = 0; l < sT.length; l++) {
                    var u = sT[l],
                        c = t[u],
                        h = "normal" === u;
                    if (c) {
                        var d = c.get("show"),
                            f = h ? s : B(r.states[u] && r.states[u].ignore, s);
                        if (f || !B(d, a)) {
                            var g = h ? i : i && i.states[u];
                            g && (g.ignore = !0);
                            continue
                        }
                        i || (i = new KT, e.setTextGuideLine(i), h || !s && a || Zd(i, !0, "normal", t.normal), e.stateProxy && (i.stateProxy = e.stateProxy)), Zd(i, !1, u, c)
                    }
                }
                if (i) {
                    p(i.style, n), i.style.fill = null;
                    var m = o.get("showAbove"),
                        y = e.textGuideLineConfig = e.textGuideLineConfig || {};
                    y.showAbove = m || !1, i.buildPath = $d
                }
            } else i && e.removeTextGuideLine()
        }

        function Jd(e, t) {
            t = t || "labelLine";
            for (var n = {
                    normal: e.getModel(t)
                }, i = 0; i < aT.length; i++) {
                var r = aT[i];
                n[r] = e.getModel([r, t])
            }
            return n
        }

        function Qd(e) {
            for (var t = [], n = 0; n < e.length; n++) {
                var i = e[n];
                if (!i.defaultAttr.ignore) {
                    var r = i.label,
                        o = r.getComputedTransform(),
                        a = r.getBoundingRect(),
                        s = !o || o[1] < 1e-5 && o[2] < 1e-5,
                        l = r.style.margin || 0,
                        u = a.clone();
                    u.applyTransform(o), u.x -= l / 2, u.y -= l / 2, u.width += l, u.height += l;
                    var c = s ? new fC(a, o) : null;
                    t.push({
                        label: r,
                        labelLine: i.labelLine,
                        rect: u,
                        localRect: a,
                        obb: c,
                        priority: i.priority,
                        defaultAttr: i.defaultAttr,
                        layoutOption: i.computedLayoutOption,
                        axisAligned: s,
                        transform: o
                    })
                }
            }
            return t
        }

        function ef(e, t, n, i, r, o) {
            function a() {
                w = S.rect[t] - i, b = r - T.rect[t] - T.rect[n]
            }

            function s(e, t, n) {
                if (0 > e) {
                    var i = Math.min(t, -e);
                    if (i > 0) {
                        l(i * n, 0, p);
                        var r = i + e;
                        0 > r && u(-r * n, 1)
                    } else u(-e * n, 1)
                }
            }

            function l(n, i, r) {
                0 !== n && (f = !0);
                for (var o = i; r > o; o++) {
                    var a = e[o],
                        s = a.rect;
                    s[t] += n, a.label[t] += n
                }
            }

            function u(i, r) {
                for (var o = [], a = 0, s = 1; p > s; s++) {
                    var u = e[s - 1].rect,
                        c = Math.max(e[s].rect[t] - u[t] - u[n], 0);
                    o.push(c), a += c
                }
                if (a) {
                    var h = Math.min(Math.abs(i) / a, r);
                    if (i > 0)
                        for (s = 0; p - 1 > s; s++) {
                            var d = o[s] * h;
                            l(d, 0, s + 1)
                        } else
                            for (s = p - 1; s > 0; s--) {
                                d = o[s - 1] * h;
                                l(-d, s, p)
                            }
                }
            }

            function c(e) {
                var t = 0 > e ? -1 : 1;
                e = Math.abs(e);
                for (var n = Math.ceil(e / (p - 1)), i = 0; p - 1 > i; i++)
                    if (t > 0 ? l(n, 0, i + 1) : l(-n, p - i - 1, p), e -= n, 0 >= e) return
            }
            var p = e.length;
            if (!(2 > p)) {
                e.sort(function (e, n) {
                    return e.rect[t] - n.rect[t]
                });
                for (var h, d = 0, f = !1, g = [], m = 0, y = 0; p > y; y++) {
                    var v = e[y],
                        x = v.rect;
                    h = x[t] - d, 0 > h && (x[t] -= h, v.label[t] -= h, f = !0);
                    var _ = Math.max(-h, 0);
                    g.push(_), m += _, d = x[t] + x[n]
                }
                m > 0 && o && l(-m / p, 0, p);
                var w, b, S = e[0],
                    T = e[p - 1];
                return a(), 0 > w && u(-w, .8), 0 > b && u(b, .8), a(), s(w, b, 1), s(b, w, -1), a(), 0 > w && c(-w), 0 > b && c(b), f
            }
        }

        function tf(e, t, n, i) {
            return ef(e, "x", "width", t, n, i)
        }

        function nf(e, t, n, i) {
            return ef(e, "y", "height", t, n, i)
        }

        function rf(e) {
            function t(e) {
                if (!e.ignore) {
                    var t = e.ensureState("emphasis");
                    null == t.ignore && (t.ignore = !1)
                }
                e.ignore = !0
            }
            var n = [];
            e.sort(function (e, t) {
                return t.priority - e.priority
            });
            for (var i = new F_(0, 0, 0, 0), r = 0; r < e.length; r++) {
                var o = e[r],
                    a = o.axisAligned,
                    s = o.localRect,
                    l = o.transform,
                    u = o.label,
                    c = o.labelLine;
                i.copy(o.rect), i.width -= .1, i.height -= .1, i.x += .05, i.y += .05;
                for (var p = o.obb, h = !1, d = 0; d < n.length; d++) {
                    var f = n[d];
                    if (i.intersect(f.rect)) {
                        if (a && f.axisAligned) {
                            h = !0;
                            break
                        }
                        if (f.obb || (f.obb = new fC(f.localRect, f.transform)), p || (p = new fC(s, l)), p.intersect(f.obb)) {
                            h = !0;
                            break
                        }
                    }
                }
                h ? (t(u), c && t(c)) : (u.attr("ignore", o.defaultAttr.ignore), c && c.attr("ignore", o.defaultAttr.labelGuideIgnore), n.push(o))
            }
        }

        function of (e) {
            if (e) {
                for (var t = [], n = 0; n < e.length; n++) t.push(e[n].slice());
                return t
            }
        }

        function af(e, t) {
            var n = e.label,
                i = t && t.getTextGuideLine();
            return {
                dataIndex: e.dataIndex,
                dataType: e.dataType,
                seriesIndex: e.seriesModel.seriesIndex,
                text: e.label.style.text,
                rect: e.hostRect,
                labelRect: e.rect,
                align: n.style.align,
                verticalAlign: n.style.verticalAlign,
                labelLinePoints: of (i && i.shape.points)
            }
        }

        function sf(e, t, n) {
            for (var i = 0; i < n.length; i++) {
                var r = n[i];
                null != t[r] && (e[r] = t[r])
            }
        }

        function lf(e) {
            e.registerUpdateLifecycle("series:beforeupdate", function (e, t) {
                var n = SP(t).labelManager;
                n || (n = SP(t).labelManager = new bP), n.clearLabels()
            }), e.registerUpdateLifecycle("series:layoutlabels", function (e, t, n) {
                var i = SP(t).labelManager;
                n.updatedSeries.forEach(function (e) {
                    i.addLabelsOfSeries(t.getViewOfSeriesModel(e))
                }), i.updateLayoutConfig(t), i.layout(t), i.processLabelsOverall()
            })
        }

        function uf(e, t, n) {
            var i = Xx.createCanvas(),
                r = t.getWidth(),
                o = t.getHeight(),
                a = i.style;
            return a && (a.position = "absolute", a.left = "0", a.top = "0", a.width = r + "px", a.height = o + "px", i.setAttribute("data-zr-dom-id", e)), i.width = r * n, i.height = o * n, i
        }

        function cf(e) {
            return !!e && (!!e.__builtin__ || "function" == typeof e.resize && "function" == typeof e.refresh)
        }

        function pf(e, t) {
            var n = document.createElement("div");
            return n.style.cssText = ["position:relative", "width:" + e + "px", "height:" + t + "px", "padding:0", "margin:0", "border-width:0"].join(";") + ";", n
        }

        function hf(e) {
            e.registerPainter("canvas", DP)
        }

        function df(e) {
            e.registerComponentModel(AP), e.registerComponentView(PP)
        }

        function ff(e) {
            return {
                seriesType: e,
                reset: function (e, t, n) {
                    var i = e.getData(),
                        r = e.get("sampling"),
                        o = e.coordinateSystem,
                        a = i.count();
                    if (a > 10 && "cartesian2d" === o.type && r) {
                        var s = o.getBaseAxis(),
                            l = o.getOtherAxis(s),
                            u = s.getExtent(),
                            c = n.getDevicePixelRatio(),
                            p = Math.abs(u[1] - u[0]) * (c || 1),
                            h = Math.round(a / p);
                        if (isFinite(h) && h > 1) {
                            "lttb" === r && e.setData(i.lttbDownSample(i.mapDimension(l.dim), 1 / h));
                            var d = void 0;
                            M(r) ? d = LP[r] : C(r) && (d = r), d && e.setData(i.downSample(i.mapDimension(l.dim), 1 / h, d, NP))
                        }
                    }
                }
            }
        }

        function gf(e, t, n, i, r) {
            var o = e.getArea(),
                a = o.x,
                s = o.y,
                l = o.width,
                u = o.height,
                c = n.get(["lineStyle", "width"]) || 2;
            a -= c / 2, s -= c / 2, l += c, u += c, a = Math.floor(a), l = Math.round(l);
            var p = new WS({
                shape: {
                    x: a,
                    y: s,
                    width: l,
                    height: u
                }
            });
            if (t) {
                var h = e.getBaseAxis(),
                    d = h.isHorizontal(),
                    f = h.inverse;
                d ? (f && (p.shape.x += l), p.shape.width = 0) : (f || (p.shape.y += u), p.shape.height = 0);
                var g = C(r) ? function (e) {
                    r(e, p)
                } : null;
                Ca(p, {
                    shape: {
                        width: l,
                        height: u,
                        x: a,
                        y: s
                    }
                }, n, null, i, g)
            }
            return p
        }

        function mf(e, t, n) {
            var i = e.getArea(),
                r = oi(i.r0, 1),
                o = oi(i.r, 1),
                a = new XT({
                    shape: {
                        cx: oi(e.cx, 1),
                        cy: oi(e.cy, 1),
                        r0: r,
                        r: o,
                        startAngle: i.startAngle,
                        endAngle: i.endAngle,
                        clockwise: i.clockwise
                    }
                });
            if (t) {
                var s = "angle" === e.getBaseAxis().dim;
                s ? a.shape.endAngle = i.startAngle : a.shape.r = r, Ca(a, {
                    shape: {
                        endAngle: i.endAngle,
                        r: o
                    }
                }, n)
            }
            return a
        }

        function yf(e, t, n, i, r) {
            return e ? "polar" === e.type ? mf(e, t, n) : "cartesian2d" === e.type ? gf(e, t, n, i, r) : null : null
        }

        function vf(e, t) {
            return e.type === t
        }

        function xf(e, t) {
            var n = e.mapDimensionsAll("defaultedLabel"),
                i = n.length;
            if (1 === i) {
                var r = lu(e, t, n[0]);
                return null != r ? r + "" : null
            }
            if (i) {
                for (var o = [], a = 0; a < n.length; a++) o.push(lu(e, t, n[a]));
                return o.join(" ")
            }
        }

        function _f(e, t) {
            var n = e.mapDimensionsAll("defaultedLabel");
            if (!T(t)) return t + "";
            for (var i = [], r = 0; r < n.length; r++) {
                var o = e.getDimensionIndex(n[r]);
                o >= 0 && i.push(t[o])
            }
            return i.join(" ")
        }

        function wf(e, t) {
            t = t || {};
            var n = t.isRoundCap;
            return function (t, i, r) {
                var o = i.position;
                if (!o || o instanceof Array) return Gn(t, i, r);
                var a = e(o),
                    s = null != i.distance ? i.distance : 5,
                    l = this.shape,
                    u = l.cx,
                    c = l.cy,
                    p = l.r,
                    h = l.r0,
                    d = (p + h) / 2,
                    f = l.startAngle,
                    g = l.endAngle,
                    m = (f + g) / 2,
                    y = n ? Math.abs(p - h) / 2 : 0,
                    v = Math.cos,
                    x = Math.sin,
                    _ = u + p * v(f),
                    w = c + p * x(f),
                    b = "left",
                    S = "top";
                switch (a) {
                    case "startArc":
                        _ = u + (h - s) * v(m), w = c + (h - s) * x(m), b = "center", S = "top";
                        break;
                    case "insideStartArc":
                        _ = u + (h + s) * v(m), w = c + (h + s) * x(m), b = "center", S = "bottom";
                        break;
                    case "startAngle":
                        _ = u + d * v(f) + Sf(f, s + y, !1), w = c + d * x(f) + Tf(f, s + y, !1), b = "right", S = "middle";
                        break;
                    case "insideStartAngle":
                        _ = u + d * v(f) + Sf(f, -s + y, !1), w = c + d * x(f) + Tf(f, -s + y, !1), b = "left", S = "middle";
                        break;
                    case "middle":
                        _ = u + d * v(m), w = c + d * x(m), b = "center", S = "middle";
                        break;
                    case "endArc":
                        _ = u + (p + s) * v(m), w = c + (p + s) * x(m), b = "center", S = "bottom";
                        break;
                    case "insideEndArc":
                        _ = u + (p - s) * v(m), w = c + (p - s) * x(m), b = "center", S = "top";
                        break;
                    case "endAngle":
                        _ = u + d * v(g) + Sf(g, s + y, !0), w = c + d * x(g) + Tf(g, s + y, !0), b = "left", S = "middle";
                        break;
                    case "insideEndAngle":
                        _ = u + d * v(g) + Sf(g, -s + y, !0), w = c + d * x(g) + Tf(g, -s + y, !0), b = "right", S = "middle";
                        break;
                    default:
                        return Gn(t, i, r)
                }
                return t = t || {}, t.x = _, t.y = w, t.align = b, t.verticalAlign = S, t
            }
        }

        function bf(e, t, n, i) {
            if (k(i)) e.setTextConfig({
                rotation: i
            });
            else if (T(t)) e.setTextConfig({
                rotation: 0
            });
            else {
                var r, o = e.shape,
                    a = o.clockwise ? o.startAngle : o.endAngle,
                    s = o.clockwise ? o.endAngle : o.startAngle,
                    l = (a + s) / 2,
                    u = n(t);
                switch (u) {
                    case "startArc":
                    case "insideStartArc":
                    case "middle":
                    case "insideEndArc":
                    case "endArc":
                        r = l;
                        break;
                    case "startAngle":
                    case "insideStartAngle":
                        r = a;
                        break;
                    case "endAngle":
                    case "insideEndAngle":
                        r = s;
                        break;
                    default:
                        return void e.setTextConfig({
                            rotation: 0
                        })
                }
                var c = 1.5 * Math.PI - r;
                "middle" === u && c > Math.PI / 2 && c < 1.5 * Math.PI && (c -= Math.PI), e.setTextConfig({
                    rotation: c
                })
            }
        }

        function Sf(e, t, n) {
            return t * Math.sin(e) * (n ? -1 : 1)
        }

        function Tf(e, t, n) {
            return t * Math.cos(e) * (n ? 1 : -1)
        }

        function Cf(e, t) {
            var n = e.getArea && e.getArea();
            if (vf(e, "cartesian2d")) {
                var i = e.getBaseAxis();
                if ("category" !== i.type || !i.onBand) {
                    var r = t.getLayout("bandWidth");
                    i.isHorizontal() ? (n.x -= r, n.width += 2 * r) : (n.y -= r, n.height += 2 * r)
                }
            }
            return n
        }

        function Mf(e, t) {
            var n = e.get("realtimeSort", !0),
                i = t.getBaseAxis();
            return n && "category" === i.type && "cartesian2d" === t.type ? {
                baseAxis: i,
                otherAxis: t.getOtherAxis(i)
            } : void 0
        }

        function If(e, t, n, i, r, o, a, s) {
            var l, u;
            o ? (u = {
                x: i.x,
                width: i.width
            }, l = {
                y: i.y,
                height: i.height
            }) : (u = {
                y: i.y,
                height: i.height
            }, l = {
                x: i.x,
                width: i.width
            }), s || (a ? Ta : Ca)(n, {
                shape: l
            }, t, r, null);
            var c = t ? e.baseAxis.model : null;
            (a ? Ta : Ca)(n, {
                shape: u
            }, c, r)
        }

        function kf(e, t) {
            for (var n = 0; n < t.length; n++)
                if (!isFinite(e[t[n]])) return !0;
            return !1
        }

        function Df(e) {
            return null != e.startAngle && null != e.endAngle && e.startAngle === e.endAngle
        }

        function Af(e) {
            return function (e) {
                var t = e ? "Arc" : "Angle";
                return function (e) {
                    switch (e) {
                        case "start":
                        case "insideStart":
                        case "end":
                        case "insideEnd":
                            return e + t;
                        default:
                            return e
                    }
                }
            }(e)
        }

        function Pf(e, t, n, i, r, o, a, s) {
            var l = t.getItemVisual(n, "style");
            s || e.setShape("r", i.get(["itemStyle", "borderRadius"]) || 0), e.useStyle(l);
            var u = i.getShallow("cursor");
            u && e.attr("cursor", u);
            var c = s ? a ? r.r >= r.r0 ? "endArc" : "startArc" : r.endAngle >= r.startAngle ? "endAngle" : "startAngle" : a ? r.height >= 0 ? "bottom" : "top" : r.width >= 0 ? "right" : "left",
                p = as(i);
            os(e, p, {
                labelFetcher: o,
                labelDataIndex: n,
                defaultText: xf(o.getData(), n),
                inheritColor: l.fill,
                defaultOpacity: l.opacity,
                defaultOutsidePosition: c
            });
            var h = e.getTextContent();
            if (s && h) {
                var d = i.get(["label", "position"]);
                e.textConfig.inside = "middle" === d || null, bf(e, "outside" === d ? c : d, Af(a), i.get(["label", "rotate"]))
            }
            ds(h, p, o.getRawValue(n), function (e) {
                return _f(t, e)
            });
            var f = i.getModel(["emphasis"]);
            qo(e, f.get("focus"), f.get("blurScope"), f.get("disabled")), $o(e, i), Df(r) && (e.style.fill = "none", e.style.stroke = "none", m(e.states, function (e) {
                e.style && (e.style.fill = e.style.stroke = "none")
            }))
        }

        function Lf(e, t) {
            var n = e.get(["itemStyle", "borderColor"]);
            if (!n || "none" === n) return 0;
            var i = e.get(["itemStyle", "borderWidth"]) || 0,
                r = isNaN(t.width) ? Number.MAX_VALUE : Math.abs(t.width),
                o = isNaN(t.height) ? Number.MAX_VALUE : Math.abs(t.height);
            return Math.min(i, r, o)
        }

        function Nf(e, t, n, i) {
            var r = e.getData(),
                o = r.getLayout("valueAxisHorizontal") ? 1 : 0,
                a = r.getLayout("largeDataIndices"),
                s = r.getLayout("size"),
                l = e.getModel("backgroundStyle"),
                u = r.getLayout("largeBackgroundPoints");
            if (u) {
                var c = new qP({
                    shape: {
                        points: u
                    },
                    incremental: !!i,
                    silent: !0,
                    z2: 0
                });
                c.baseDimIdx = o, c.largeDataIndices = a, c.barWidth = s, c.useStyle(l.getItemStyle()), t.add(c), n && n.push(c)
            }
            var p = new qP({
                shape: {
                    points: r.getLayout("largePoints")
                },
                incremental: !!i,
                ignoreCoarsePointer: !0,
                z2: 1
            });
            p.baseDimIdx = o, p.largeDataIndices = a, p.barWidth = s, t.add(p), p.useStyle(r.getVisual("style")), KS(p).seriesIndex = e.seriesIndex, e.get("silent") || (p.on("mousedown", ZP), p.on("mousemove", ZP)), n && n.push(p)
        }

        function Of(e, t, n) {
            for (var i = e.baseDimIdx, r = 1 - i, o = e.shape.points, a = e.largeDataIndices, s = [], l = [], u = e.barWidth, c = 0, p = o.length / 3; p > c; c++) {
                var h = 3 * c;
                if (l[i] = u, l[r] = o[h + 2], s[i] = o[h + i], s[r] = o[h + r], l[r] < 0 && (s[r] += l[r], l[r] = -l[r]), t >= s[0] && t <= s[0] + l[0] && n >= s[1] && n <= s[1] + l[1]) return a[c]
            }
            return -1
        }

        function Ef(e, t, n) {
            if (vf(n, "cartesian2d")) {
                var i = t,
                    r = n.getArea();
                return {
                    x: e ? i.x : r.x,
                    y: e ? r.y : i.y,
                    width: e ? i.width : r.width,
                    height: e ? r.height : i.height
                }
            }
            r = n.getArea();
            var o = t;
            return {
                cx: r.cx,
                cy: r.cy,
                r0: e ? r.r0 : o.r0,
                r: e ? r.r : o.r,
                startAngle: e ? o.startAngle : 0,
                endAngle: e ? o.endAngle : 2 * Math.PI
            }
        }

        function Rf(e, t, n) {
            var i = "polar" === e.type ? XT : WS;
            return new i({
                shape: Ef(t, n, e),
                silent: !0,
                z2: 0
            })
        }

        function zf(e) {
            e.registerChartView(HP), e.registerSeriesModel(EP), e.registerLayout(e.PRIORITY.VISUAL.LAYOUT, S(Lh, "bar")), e.registerLayout(e.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, Nh("bar")), e.registerProcessor(e.PRIORITY.PROCESSOR.STATISTIC, ff("bar")), e.registerAction({
                type: "changeAxisOrder",
                event: "changeAxisOrder",
                update: "update"
            }, function (e, t) {
                var n = e.componentType || "series";
                t.eachComponent({
                    mainType: n,
                    query: e
                }, function (t) {
                    e.sortInfo && t.axis.setCategorySortInfo(e.sortInfo)
                })
            })
        }

        function Bf(e, t) {
            this.parent.drift(e, t)
        }

        function Ff(e, t, n, i) {
            return !(!t || isNaN(t[0]) || isNaN(t[1]) || i.isIgnore && i.isIgnore(n) || i.clipShape && !i.clipShape.contain(t[0], t[1]) || "none" === e.getItemVisual(n, "symbol"))
        }

        function Hf(e) {
            return null == e || D(e) || (e = {
                isIgnore: e
            }), e || {}
        }

        function Gf(e) {
            var t = e.hostModel,
                n = t.getModel("emphasis");
            return {
                emphasisItemStyle: n.getModel("itemStyle").getItemStyle(),
                blurItemStyle: t.getModel(["blur", "itemStyle"]).getItemStyle(),
                selectItemStyle: t.getModel(["select", "itemStyle"]).getItemStyle(),
                focus: n.get("focus"),
                blurScope: n.get("blurScope"),
                emphasisDisabled: n.get("disabled"),
                hoverScale: n.get("scale"),
                labelStatesModels: as(t),
                cursorStyle: t.get("cursor")
            }
        }

        function Vf(e, t, n) {
            var i = e.getBaseAxis(),
                r = e.getOtherAxis(i),
                o = Wf(r, n),
                a = i.dim,
                s = r.dim,
                l = t.mapDimension(s),
                u = t.mapDimension(a),
                c = "x" === s || "radius" === s ? 1 : 0,
                p = y(e.dimensions, function (e) {
                    return t.mapDimension(e)
                }),
                h = !1,
                d = t.getCalculationInfo("stackResultDimension");
            return sh(t, p[0]) && (h = !0, p[0] = d), sh(t, p[1]) && (h = !0, p[1] = d), {
                dataDimsForPoint: p,
                valueStart: o,
                valueAxisDim: s,
                baseAxisDim: a,
                stacked: !!h,
                valueDim: l,
                baseDim: u,
                baseDataOffset: c,
                stackedOverDimension: t.getCalculationInfo("stackedOverDimension")
            }
        }

        function Wf(e, t) {
            var n = 0,
                i = e.scale.getExtent();
            return "start" === t ? n = i[0] : "end" === t ? n = i[1] : k(t) && !isNaN(t) ? n = t : i[0] > 0 ? n = i[0] : i[1] < 0 && (n = i[1]), n
        }

        function jf(e, t, n, i) {
            var r = NaN;
            e.stacked && (r = n.get(n.getCalculationInfo("stackedOverDimension"), i)), isNaN(r) && (r = e.valueStart);
            var o = e.baseDataOffset,
                a = [];
            return a[o] = n.get(e.baseDim, i), a[1 - o] = r, t.dataToPoint(a)
        }

        function Xf(e, t) {
            var n = [];
            return t.diff(e).add(function (e) {
                n.push({
                    cmd: "+",
                    idx: e
                })
            }).update(function (e, t) {
                n.push({
                    cmd: "=",
                    idx: t,
                    idx1: e
                })
            }).remove(function (e) {
                n.push({
                    cmd: "-",
                    idx: e
                })
            }).execute(), n
        }

        function Yf(e, t, n, i, r, o, a) {
            for (var s = Xf(e, t), l = [], u = [], c = [], p = [], h = [], d = [], f = [], g = Vf(r, t, a), m = e.getLayout("points") || [], y = t.getLayout("points") || [], v = 0; v < s.length; v++) {
                var x = s[v],
                    _ = !0,
                    w = void 0,
                    b = void 0;
                switch (x.cmd) {
                    case "=":
                        w = 2 * x.idx, b = 2 * x.idx1;
                        var S = m[w],
                            T = m[w + 1],
                            C = y[b],
                            M = y[b + 1];
                        (isNaN(S) || isNaN(T)) && (S = C, T = M), l.push(S, T), u.push(C, M), c.push(n[w], n[w + 1]), p.push(i[b], i[b + 1]), f.push(t.getRawIndex(x.idx1));
                        break;
                    case "+":
                        var I = x.idx,
                            k = g.dataDimsForPoint,
                            D = r.dataToPoint([t.get(k[0], I), t.get(k[1], I)]);
                        b = 2 * I, l.push(D[0], D[1]), u.push(y[b], y[b + 1]);
                        var A = jf(g, r, t, I);
                        c.push(A[0], A[1]), p.push(i[b], i[b + 1]), f.push(t.getRawIndex(I));
                        break;
                    case "-":
                        _ = !1
                }
                _ && (h.push(x), d.push(d.length))
            }
            d.sort(function (e, t) {
                return f[e] - f[t]
            });
            var P = l.length,
                L = Th(P),
                N = Th(P),
                O = Th(P),
                E = Th(P),
                R = [];
            for (v = 0; v < d.length; v++) {
                var z = d[v],
                    B = 2 * v,
                    F = 2 * z;
                L[B] = l[F], L[B + 1] = l[F + 1], N[B] = u[F], N[B + 1] = u[F + 1], O[B] = c[F], O[B + 1] = c[F + 1], E[B] = p[F], E[B + 1] = p[F + 1], R[v] = h[z]
            }
            return {
                current: L,
                next: N,
                stackedOnCurrent: O,
                stackedOnNext: E,
                status: R
            }
        }

        function Uf(e, t) {
            return isNaN(e) || isNaN(t)
        }

        function qf(e, t, n, i, r, o, a, s, l) {
            for (var u, c, p, h, d, f, g = n, m = 0; i > m; m++) {
                var y = t[2 * g],
                    v = t[2 * g + 1];
                if (g >= r || 0 > g) break;
                if (Uf(y, v)) {
                    if (l) {
                        g += o;
                        continue
                    }
                    break
                }
                if (g === n) e[o > 0 ? "moveTo" : "lineTo"](y, v), p = y, h = v;
                else {
                    var x = y - u,
                        _ = v - c;
                    if (.5 > x * x + _ * _) {
                        g += o;
                        continue
                    }
                    if (a > 0) {
                        for (var w = g + o, b = t[2 * w], S = t[2 * w + 1]; b === y && S === v && i > m;) m++, w += o, g += o, b = t[2 * w], S = t[2 * w + 1], y = t[2 * g], v = t[2 * g + 1], x = y - u, _ = v - c;
                        var T = m + 1;
                        if (l)
                            for (; Uf(b, S) && i > T;) T++, w += o, b = t[2 * w], S = t[2 * w + 1];
                        var C = .5,
                            M = 0,
                            I = 0,
                            k = void 0,
                            D = void 0;
                        if (T >= i || Uf(b, S)) d = y, f = v;
                        else {
                            M = b - u, I = S - c;
                            var A = y - u,
                                P = b - y,
                                L = v - c,
                                N = S - v,
                                O = void 0,
                                E = void 0;
                            if ("x" === s) {
                                O = Math.abs(A), E = Math.abs(P);
                                var R = M > 0 ? 1 : -1;
                                d = y - R * O * a, f = v, k = y + R * E * a, D = v
                            } else if ("y" === s) {
                                O = Math.abs(L), E = Math.abs(N);
                                var z = I > 0 ? 1 : -1;
                                d = y, f = v - z * O * a, k = y, D = v + z * E * a
                            } else O = Math.sqrt(A * A + L * L), E = Math.sqrt(P * P + N * N), C = E / (E + O), d = y - M * a * (1 - C), f = v - I * a * (1 - C), k = y + M * a * C, D = v + I * a * C, k = QP(k, eL(b, y)), D = QP(D, eL(S, v)), k = eL(k, QP(b, y)), D = eL(D, QP(S, v)), M = k - y, I = D - v, d = y - M * O / E, f = v - I * O / E, d = QP(d, eL(u, y)), f = QP(f, eL(c, v)), d = eL(d, QP(u, y)), f = eL(f, QP(c, v)), M = y - d, I = v - f, k = y + M * E / O, D = v + I * E / O
                        }
                        e.bezierCurveTo(p, h, d, f, y, v), p = k, h = D
                    } else e.lineTo(y, v)
                }
                u = y, c = v, g += o
            }
            return m
        }

        function Zf(e, t) {
            if (e.length === t.length) {
                for (var n = 0; n < e.length; n++)
                    if (e[n] !== t[n]) return;
                return !0
            }
        }

        function $f(e) {
            for (var t = 1 / 0, n = 1 / 0, i = -1 / 0, r = -1 / 0, o = 0; o < e.length;) {
                var a = e[o++],
                    s = e[o++];
                isNaN(a) || (t = Math.min(a, t), i = Math.max(a, i)), isNaN(s) || (n = Math.min(s, n), r = Math.max(s, r))
            }
            return [
                [t, n],
                [i, r]
            ]
        }

        function Kf(e, t) {
            var n = $f(e),
                i = n[0],
                r = n[1],
                o = $f(t),
                a = o[0],
                s = o[1];
            return Math.max(Math.abs(i[0] - a[0]), Math.abs(i[1] - a[1]), Math.abs(r[0] - s[0]), Math.abs(r[1] - s[1]))
        }

        function Jf(e) {
            return k(e) ? e : e ? .5 : 0
        }

        function Qf(e, t, n) {
            if (!n.valueDim) return [];
            for (var i = t.count(), r = Th(2 * i), o = 0; i > o; o++) {
                var a = jf(n, e, t, o);
                r[2 * o] = a[0], r[2 * o + 1] = a[1]
            }
            return r
        }

        function eg(e, t, n, i) {
            var r = t.getBaseAxis(),
                o = "x" === r.dim || "radius" === r.dim ? 0 : 1,
                a = [],
                s = 0,
                l = [],
                u = [],
                c = [],
                p = [];
            if (i) {
                for (s = 0; s < e.length; s += 2) isNaN(e[s]) || isNaN(e[s + 1]) || p.push(e[s], e[s + 1]);
                e = p
            }
            for (s = 0; s < e.length - 2; s += 2) switch (c[0] = e[s + 2], c[1] = e[s + 3], u[0] = e[s], u[1] = e[s + 1], a.push(u[0], u[1]), n) {
                case "end":
                    l[o] = c[o], l[1 - o] = u[1 - o], a.push(l[0], l[1]);
                    break;
                case "middle":
                    var h = (u[o] + c[o]) / 2,
                        d = [];
                    l[o] = d[o] = h, l[1 - o] = u[1 - o], d[1 - o] = c[1 - o], a.push(l[0], l[1]), a.push(d[0], d[1]);
                    break;
                default:
                    l[o] = u[o], l[1 - o] = c[1 - o], a.push(l[0], l[1])
            }
            return a.push(e[s++], e[s++]), a
        }

        function tg(e, t) {
            function n(e, t, n) {
                var i = e.coord,
                    r = (n - i) / (t.coord - i),
                    o = Ht(r, [e.color, t.color]);
                return {
                    coord: n,
                    color: o
                }
            }
            for (var i, r, o = [], a = e.length, s = 0; a > s; s++) {
                var l = e[s],
                    u = l.coord;
                if (0 > u) i = l;
                else {
                    if (u > t) {
                        r ? o.push(n(r, l, t)) : i && o.push(n(i, l, 0), n(i, l, t));
                        break
                    }
                    i && (o.push(n(i, l, 0)), i = null), o.push(l), r = l
                }
            }
            return o
        }

        function ng(e, t, n) {
            var i = e.getVisual("visualMeta");
            if (i && i.length && e.count() && "cartesian2d" === t.type) {
                for (var r, o, a = i.length - 1; a >= 0; a--) {
                    var s = e.getDimensionInfo(i[a].dimension);
                    if (r = s && s.coordDim, "x" === r || "y" === r) {
                        o = i[a];
                        break
                    }
                }
                if (o) {
                    var l = t.getAxis(r),
                        u = y(o.stops, function (e) {
                            return {
                                coord: l.toGlobalCoord(l.dataToCoord(e.value)),
                                color: e.color
                            }
                        }),
                        c = u.length,
                        p = o.outerColors.slice();
                    c && u[0].coord > u[c - 1].coord && (u.reverse(), p.reverse());
                    var h = tg(u, "x" === r ? n.getWidth() : n.getHeight()),
                        d = h.length;
                    if (!d && c) return u[0].coord < 0 ? p[1] ? p[1] : u[c - 1].color : p[0] ? p[0] : u[0].color;
                    var f = 10,
                        g = h[0].coord - f,
                        v = h[d - 1].coord + f,
                        x = v - g;
                    if (.001 > x) return "transparent";
                    m(h, function (e) {
                        e.offset = (e.coord - g) / x
                    }), h.push({
                        offset: d ? h[d - 1].offset : .5,
                        color: p[1] || "transparent"
                    }), h.unshift({
                        offset: d ? h[0].offset : .5,
                        color: p[0] || "transparent"
                    });
                    var _ = new lC(0, 0, 0, 0, h, !0);
                    return _[r] = g, _[r + "2"] = v, _
                }
            }
        }

        function ig(e, t, n) {
            var i = e.get("showAllSymbol"),
                r = "auto" === i;
            if (!i || r) {
                var o = n.getAxesByScale("ordinal")[0];
                if (o && (!r || !rg(o, t))) {
                    var a = t.mapDimension(o.dim),
                        s = {};
                    return m(o.getViewLabels(), function (e) {
                            var t = o.scale.getRawOrdinalNumber(e.tickValue);
                            s[t] = 1
                        }),
                        function (e) {
                            return !s.hasOwnProperty(t.get(a, e))
                        }
                }
            }
        }

        function rg(e, t) {
            var n = e.getExtent(),
                i = Math.abs(n[1] - n[0]) / e.scale.count();
            isNaN(i) && (i = 0);
            for (var r = t.count(), o = Math.max(1, Math.round(r / 5)), a = 0; r > a; a += o)
                if (1.5 * KP.getSymbolSize(t, a)[e.isHorizontal() ? 1 : 0] > i) return !1;
            return !0
        }

        function og(e, t) {
            return isNaN(e) || isNaN(t)
        }

        function ag(e) {
            for (var t = e.length / 2; t > 0 && og(e[2 * t - 2], e[2 * t - 1]); t--);
            return t - 1
        }

        function sg(e, t) {
            return [e[2 * t], e[2 * t + 1]]
        }

        function lg(e, t, n) {
            for (var i, r, o = e.length / 2, a = "x" === n ? 0 : 1, s = 0, l = -1, u = 0; o > u; u++)
                if (r = e[2 * u + a], !isNaN(r) && !isNaN(e[2 * u + 1 - a]))
                    if (0 !== u) {
                        if (t >= i && r >= t || i >= t && t >= r) {
                            l = u;
                            break
                        }
                        s = u, i = r
                    } else i = r;
            return {
                range: [s, l],
                t: (t - i) / (r - i)
            }
        }

        function ug(e) {
            if (e.get(["endLabel", "show"])) return !0;
            for (var t = 0; t < aT.length; t++)
                if (e.get([aT[t], "endLabel", "show"])) return !0;
            return !1
        }

        function cg(e, t, n, i) {
            if (vf(t, "cartesian2d")) {
                var r = i.getModel("endLabel"),
                    o = r.get("valueAnimation"),
                    a = i.getData(),
                    s = {
                        lastFrameIndex: 0
                    },
                    l = ug(i) ? function (n, i) {
                        e._endLabelOnDuring(n, i, a, s, o, r, t)
                    } : null,
                    u = t.getBaseAxis().isHorizontal(),
                    c = gf(t, n, i, function () {
                        var t = e._endLabel;
                        t && n && null != s.originalX && t.attr({
                            x: s.originalX,
                            y: s.originalY
                        })
                    }, l);
                if (!i.get("clip", !0)) {
                    var p = c.shape,
                        h = Math.max(p.width, p.height);
                    u ? (p.y -= h, p.height += 2 * h) : (p.x -= h, p.width += 2 * h)
                }
                return l && l(1, c), c
            }
            return mf(t, n, i)
        }

        function pg(e, t) {
            var n = t.getBaseAxis(),
                i = n.isHorizontal(),
                r = n.inverse,
                o = i ? r ? "right" : "left" : "center",
                a = i ? "middle" : r ? "top" : "bottom";
            return {
                normal: {
                    align: e.get("align") || o,
                    verticalAlign: e.get("verticalAlign") || a
                }
            }
        }

        function hg(e, t) {
            return {
                seriesType: e,
                plan: tc(),
                reset: function (e) {
                    var n = e.getData(),
                        i = e.coordinateSystem,
                        r = e.pipelineContext,
                        o = t || r.large;
                    if (i) {
                        var a = y(i.dimensions, function (e) {
                                return n.mapDimension(e)
                            }).slice(0, 2),
                            s = a.length,
                            l = n.getCalculationInfo("stackResultDimension");
                        sh(n, a[0]) && (a[0] = l), sh(n, a[1]) && (a[1] = l);
                        var u = n.getStore(),
                            c = n.getDimensionIndex(a[0]),
                            p = n.getDimensionIndex(a[1]);
                        return s && {
                            progress: function (e, t) {
                                for (var n = e.end - e.start, r = o && Th(n * s), a = [], l = [], h = e.start, d = 0; h < e.end; h++) {
                                    var f = void 0;
                                    if (1 === s) {
                                        var g = u.get(c, h);
                                        f = i.dataToPoint(g, null, l)
                                    } else a[0] = u.get(c, h), a[1] = u.get(p, h), f = i.dataToPoint(a, null, l);
                                    o ? (r[d++] = f[0], r[d++] = f[1]) : t.setItemLayout(h, f.slice())
                                }
                                o && t.setLayout("points", r)
                            }
                        }
                    }
                }
            }
        }

        function dg(e) {
            e.registerChartView(oL), e.registerSeriesModel($P), e.registerLayout(hg("line", !0)), e.registerVisual({
                seriesType: "line",
                reset: function (e) {
                    var t = e.getData(),
                        n = e.getModel("lineStyle").getLineStyle();
                    n && !n.stroke && (n.stroke = t.getVisual("style").fill), t.setVisual("legendLineStyle", n)
                }
            }), e.registerProcessor(e.PRIORITY.PROCESSOR.STATISTIC, ff("line"))
        }

        function fg(e, t) {
            return nl(e.getBoxLayoutParams(), {
                width: t.getWidth(),
                height: t.getHeight()
            })
        }

        function gg(e, t) {
            var n = fg(e, t),
                i = e.get("center"),
                r = e.get("radius");
            T(r) || (r = [0, r]), T(i) || (i = [i, i]);
            var o, a, s = ri(n.width, t.getWidth()),
                l = ri(n.height, t.getHeight()),
                u = Math.min(s, l),
                c = ri(r[0], u / 2),
                p = ri(r[1], u / 2),
                h = e.coordinateSystem;
            if (h) {
                var d = h.dataToPoint(i);
                o = d[0] || 0, a = d[1] || 0
            } else o = ri(i[0], s) + n.x, a = ri(i[1], l) + n.y;
            return {
                cx: o,
                cy: a,
                r0: c,
                r: p
            }
        }

        function mg(e, t, n) {
            t.eachSeriesByType(e, function (e) {
                var t = e.getData(),
                    i = t.mapDimension("value"),
                    r = fg(e, n),
                    o = gg(e, n),
                    a = o.cx,
                    s = o.cy,
                    l = o.r,
                    u = o.r0,
                    c = -e.get("startAngle") * sL,
                    p = e.get("minAngle") * sL,
                    h = 0;
                t.each(i, function (e) {
                    !isNaN(e) && h++
                });
                var d = t.getSum(i),
                    f = Math.PI / (d || h) * 2,
                    g = e.get("clockwise"),
                    m = e.get("roseType"),
                    y = e.get("stillShowZeroSum"),
                    v = t.getDataExtent(i);
                v[0] = 0;
                var x = aL,
                    _ = 0,
                    w = c,
                    b = g ? 1 : -1;
                if (t.setLayout({
                        viewRect: r,
                        r: l
                    }), t.each(i, function (e, n) {
                        var i;
                        if (isNaN(e)) t.setItemLayout(n, {
                            angle: NaN,
                            startAngle: NaN,
                            endAngle: NaN,
                            clockwise: g,
                            cx: a,
                            cy: s,
                            r0: u,
                            r: m ? NaN : l
                        });
                        else {
                            i = "area" !== m ? 0 === d && y ? f : e * f : aL / h, p > i ? (i = p, x -= p) : _ += e;
                            var r = w + b * i;
                            t.setItemLayout(n, {
                                angle: i,
                                startAngle: w,
                                endAngle: r,
                                clockwise: g,
                                cx: a,
                                cy: s,
                                r0: u,
                                r: m ? ii(e, v, [u, l]) : l
                            }), w = r
                        }
                    }), aL > x && h)
                    if (.001 >= x) {
                        var S = aL / h;
                        t.each(i, function (e, n) {
                            if (!isNaN(e)) {
                                var i = t.getItemLayout(n);
                                i.angle = S, i.startAngle = c + b * n * S, i.endAngle = c + b * (n + 1) * S
                            }
                        })
                    } else f = x / _, w = c, t.each(i, function (e, n) {
                        if (!isNaN(e)) {
                            var i = t.getItemLayout(n),
                                r = i.angle === p ? p : e * f;
                            i.startAngle = w, i.endAngle = w + b * r, w += b * r
                        }
                    })
            })
        }

        function yg(e) {
            return {
                seriesType: e,
                reset: function (e, t) {
                    var n = t.findComponents({
                        mainType: "legend"
                    });
                    if (n && n.length) {
                        var i = e.getData();
                        i.filterSelf(function (e) {
                            for (var t = i.getName(e), r = 0; r < n.length; r++)
                                if (!n[r].isSelected(t)) return !1;
                            return !0
                        })
                    }
                }
            }
        }

        function vg(e, t, n, i, r, o, a, s, l, u) {
            function c(e) {
                for (var o = e.rB, a = o * o, s = 0; s < e.list.length; s++) {
                    var l = e.list[s],
                        u = Math.abs(l.label.y - n),
                        c = i + l.len,
                        p = c * c,
                        h = Math.sqrt((1 - Math.abs(u * u / a)) * p),
                        d = t + (h + l.len2) * r,
                        f = d - l.label.x,
                        g = l.targetTextWidth - f * r;
                    _g(l, g, !0), l.label.x = d
                }
            }

            function p(e) {
                for (var o = {
                        list: [],
                        maxY: 0
                    }, a = {
                        list: [],
                        maxY: 0
                    }, s = 0; s < e.length; s++)
                    if ("none" === e[s].labelAlignTo) {
                        var l = e[s],
                            u = l.label.y > n ? a : o,
                            p = Math.abs(l.label.y - n);
                        if (p >= u.maxY) {
                            var h = l.label.x - t - l.len2 * r,
                                d = i + l.len,
                                f = Math.abs(h) < d ? Math.sqrt(p * p / (1 - h * h / d / d)) : d;
                            u.rB = f, u.maxY = p
                        }
                        u.list.push(l)
                    } c(o), c(a)
            }
            if (!(e.length < 2)) {
                for (var h = e.length, d = 0; h > d; d++)
                    if ("outer" === e[d].position && "labelLine" === e[d].labelAlignTo) {
                        var f = e[d].label.x - u;
                        e[d].linePoints[1][0] += f, e[d].label.x = u
                    } nf(e, l, l + a) && p(e)
            }
        }

        function xg(e, t, n, i, r, o, a, s) {
            for (var l = [], u = [], c = Number.MAX_VALUE, p = -Number.MAX_VALUE, h = 0; h < e.length; h++) {
                var d = e[h].label;
                wg(e[h]) || (d.x < t ? (c = Math.min(c, d.x), l.push(e[h])) : (p = Math.max(p, d.x), u.push(e[h])))
            }
            for (h = 0; h < e.length; h++) {
                var f = e[h];
                if (!wg(f) && f.linePoints) {
                    if (null != f.labelStyleWidth) continue;
                    d = f.label;
                    var g = f.linePoints,
                        m = void 0;
                    m = "edge" === f.labelAlignTo ? d.x < t ? g[2][0] - f.labelDistance - a - f.edgeDistance : a + r - f.edgeDistance - g[2][0] - f.labelDistance : "labelLine" === f.labelAlignTo ? d.x < t ? c - a - f.bleedMargin : a + r - p - f.bleedMargin : d.x < t ? d.x - a - f.bleedMargin : a + r - d.x - f.bleedMargin, f.targetTextWidth = m, _g(f, m)
                }
            }
            vg(u, t, n, i, 1, r, o, a, s, p), vg(l, t, n, i, -1, r, o, a, s, c);
            for (h = 0; h < e.length; h++) {
                f = e[h];
                if (!wg(f) && f.linePoints) {
                    d = f.label, g = f.linePoints;
                    var y = "edge" === f.labelAlignTo,
                        v = d.style.padding,
                        x = v ? v[1] + v[3] : 0,
                        _ = d.style.backgroundColor ? 0 : x,
                        w = f.rect.width + _,
                        b = g[1][0] - g[2][0];
                    y ? g[2][0] = d.x < t ? a + f.edgeDistance + w + f.labelDistance : a + r - f.edgeDistance - w - f.labelDistance : (g[2][0] = d.x < t ? d.x + f.labelDistance : d.x - f.labelDistance, g[1][0] = g[2][0] + b), g[1][1] = g[2][1] = d.y
                }
            }
        }

        function _g(e, t, n) {
            if (void 0 === n && (n = !1), null == e.labelStyleWidth) {
                var i = e.label,
                    r = i.style,
                    o = e.rect,
                    a = r.backgroundColor,
                    s = r.padding,
                    l = s ? s[1] + s[3] : 0,
                    u = r.overflow,
                    c = o.width + (a ? 0 : l);
                if (c > t || n) {
                    var p = o.height;
                    if (u && u.match("break")) {
                        i.setStyle("backgroundColor", null), i.setStyle("width", t - l);
                        var h = i.getBoundingRect();
                        i.setStyle("width", Math.ceil(h.width)), i.setStyle("backgroundColor", a)
                    } else {
                        var d = t - l,
                            f = c > t ? d : n ? d > e.unconstrainedWidth ? null : d : null;
                        i.setStyle("width", f)
                    }
                    var g = i.getBoundingRect();
                    o.width = g.width;
                    var m = (i.style.margin || 0) + 2.1;
                    o.height = g.height + m, o.y -= (o.height - p) / 2
                }
            }
        }

        function wg(e) {
            return "center" === e.position
        }

        function bg(e) {
            function t(e) {
                e.ignore = !0
            }

            function n(e) {
                if (!e.ignore) return !0;
                for (var t in e.states)
                    if (!1 === e.states[t].ignore) return !0;
                return !1
            }
            var i, r, o = e.getData(),
                a = [],
                s = !1,
                l = (e.get("minShowLabelAngle") || 0) * lL,
                u = o.getLayout("viewRect"),
                c = o.getLayout("r"),
                p = u.width,
                h = u.x,
                d = u.y,
                f = u.height;
            o.each(function (e) {
                var u = o.getItemGraphicEl(e),
                    d = u.shape,
                    f = u.getTextContent(),
                    g = u.getTextGuideLine(),
                    y = o.getItemModel(e),
                    v = y.getModel("label"),
                    x = v.get("position") || y.get(["emphasis", "label", "position"]),
                    _ = v.get("distanceToLabelLine"),
                    w = v.get("alignTo"),
                    b = ri(v.get("edgeDistance"), p),
                    S = v.get("bleedMargin"),
                    T = y.getModel("labelLine"),
                    C = T.get("length");
                C = ri(C, p);
                var M = T.get("length2");
                if (M = ri(M, p), Math.abs(d.endAngle - d.startAngle) < l) return m(f.states, t), m(g.states, t), void(f.ignore = g.ignore = !0);
                if (n(f)) {
                    var I, D, A, P, L = (d.startAngle + d.endAngle) / 2,
                        N = Math.cos(L),
                        O = Math.sin(L);
                    i = d.cx, r = d.cy;
                    var E = "inside" === x || "inner" === x;
                    if ("center" === x) I = d.cx, D = d.cy, P = "center";
                    else {
                        var R = (E ? (d.r + d.r0) / 2 * N : d.r * N) + i,
                            z = (E ? (d.r + d.r0) / 2 * O : d.r * O) + r;
                        if (I = R + 3 * N, D = z + 3 * O, !E) {
                            var B = R + N * (C + c - d.r),
                                F = z + O * (C + c - d.r),
                                H = B + (0 > N ? -1 : 1) * M,
                                G = F;
                            I = "edge" === w ? 0 > N ? h + b : h + p - b : H + (0 > N ? -_ : _), D = G, A = [
                                [R, z],
                                [B, F],
                                [H, G]
                            ]
                        }
                        P = E ? "center" : "edge" === w ? N > 0 ? "right" : "left" : N > 0 ? "left" : "right"
                    }
                    var V = Math.PI,
                        W = 0,
                        j = v.get("rotate");
                    if (k(j)) W = j * (V / 180);
                    else if ("center" === x) W = 0;
                    else if ("radial" === j || !0 === j) {
                        var X = 0 > N ? -L + V : -L;
                        W = X
                    } else if ("tangential" === j && "outside" !== x && "outer" !== x) {
                        var Y = Math.atan2(N, O);
                        0 > Y && (Y = 2 * V + Y);
                        var U = O > 0;
                        U && (Y = V + Y), W = Y - V
                    }
                    if (s = !!W, f.x = I, f.y = D, f.rotation = W, f.setStyle({
                            verticalAlign: "middle"
                        }), E) {
                        f.setStyle({
                            align: P
                        });
                        var q = f.states.select;
                        q && (q.x += f.x, q.y += f.y)
                    } else {
                        var Z = f.getBoundingRect().clone();
                        Z.applyTransform(f.getComputedTransform());
                        var $ = (f.style.margin || 0) + 2.1;
                        Z.y -= $ / 2, Z.height += $, a.push({
                            label: f,
                            labelLine: g,
                            position: x,
                            len: C,
                            len2: M,
                            minTurnAngle: T.get("minTurnAngle"),
                            maxSurfaceAngle: T.get("maxSurfaceAngle"),
                            surfaceNormal: new A_(N, O),
                            linePoints: A,
                            textAlign: P,
                            labelDistance: _,
                            labelAlignTo: w,
                            edgeDistance: b,
                            bleedMargin: S,
                            rect: Z,
                            unconstrainedWidth: Z.width,
                            labelStyleWidth: f.style.width
                        })
                    }
                    u.setTextConfig({
                        inside: E
                    })
                }
            }), !s && e.get("avoidLabelOverlap") && xg(a, i, r, c, p, f, h, d);
            for (var g = 0; g < a.length; g++) {
                var y = a[g],
                    v = y.label,
                    x = y.labelLine,
                    _ = isNaN(v.x) || isNaN(v.y);
                if (v) {
                    v.setStyle({
                        align: y.textAlign
                    }), _ && (m(v.states, t), v.ignore = !0);
                    var w = v.states.select;
                    w && (w.x += v.x, w.y += v.y)
                }
                if (x) {
                    var b = y.linePoints;
                    _ || !b ? (m(x.states, t), x.ignore = !0) : (Ud(b, y.minTurnAngle), qd(b, y.surfaceNormal, y.maxSurfaceAngle), x.setShape({
                        points: b
                    }), v.__hostTarget.textGuideLineConfig = {
                        anchor: new A_(b[0][0], b[0][1])
                    })
                }
            }
        }

        function Sg(e, t, n) {
            var i = e.get("borderRadius");
            if (null == i) return n ? {
                cornerRadius: 0
            } : null;
            T(i) || (i = [i, i, i, i]);
            var r = Math.abs(t.r || 0 - t.r0 || 0);
            return {
                cornerRadius: y(i, function (e) {
                    return Hn(e, r)
                })
            }
        }

        function Tg(e, t, n) {
            t = T(t) && {
                coordDimensions: t
            } || c({
                encodeDefine: e.getEncode()
            }, t);
            var i = e.getSource(),
                r = Qp(i, t).dimensions,
                o = new dA(r, e);
            return o.initData(i, n), o
        }

        function Cg(e) {
            return {
                seriesType: e,
                reset: function (e) {
                    var t = e.getData();
                    t.filterSelf(function (e) {
                        var n = t.mapDimension("value"),
                            i = t.get(n, e);
                        return !(k(i) && !isNaN(i) && 0 > i)
                    })
                }
            }
        }

        function Mg(e) {
            e.registerChartView(cL), e.registerSeriesModel(hL), Tc("pie", e.registerAction), e.registerLayout(S(mg, "pie")), e.registerProcessor(yg("pie")), e.registerProcessor(Cg("pie"))
        }

        function Ig(e, t) {
            return !!kg(e)[t]
        }

        function kg(e) {
            return e[dL] || (e[dL] = {})
        }

        function Dg(e, t, n, i, r) {
            e.pointerChecker && e.pointerChecker(i, r.originX, r.originY) && (M_(i.event), Ag(e, t, n, i, r))
        }

        function Ag(e, t, n, i, r) {
            r.isAvailableBehavior = o_(Pg, null, n, i), e.trigger(t, r)
        }

        function Pg(e, t, n) {
            var i = n[e];
            return !e || i && (!M(i) || t.event[i + "Key"])
        }

        function Lg(e, t, n) {
            var i = e.target;
            i.x += t, i.y += n, i.dirty()
        }

        function Ng(e, t, n, i) {
            var r = e.target,
                o = e.zoomLimit,
                a = e.zoom = e.zoom || 1;
            if (a *= t, o) {
                var s = o.min || 0,
                    l = o.max || 1 / 0;
                a = Math.max(Math.min(l, a), s)
            }
            var u = a / e.zoom;
            e.zoom = a, r.x -= (n - r.x) * (u - 1), r.y -= (i - r.y) * (u - 1), r.scaleX *= u, r.scaleY *= u, r.dirty()
        }

        function Og(e, t, n) {
            var i = t.getComponentByElement(e.topTarget),
                r = i && i.coordinateSystem;
            return i && i !== n && !mL.hasOwnProperty(i.mainType) && r && r.model !== n
        }

        function Eg(e) {
            if (M(e)) {
                var t = new DOMParser;
                e = t.parseFromString(e, "text/xml")
            }
            var n = e;
            for (9 === n.nodeType && (n = n.firstChild);
                "svg" !== n.nodeName.toLowerCase() || 1 !== n.nodeType;) n = n.nextSibling;
            return n
        }

        function Rg(e, t) {
            var n = e.getAttribute("gradientUnits");
            "userSpaceOnUse" === n && (t.global = !0)
        }

        function zg(e, t) {
            for (var n = e.firstChild; n;) {
                if (1 === n.nodeType && "stop" === n.nodeName.toLocaleLowerCase()) {
                    var i = n.getAttribute("offset"),
                        r = void 0;
                    r = i && i.indexOf("%") > 0 ? parseInt(i, 10) / 100 : i ? parseFloat(i) : 0;
                    var o = {};
                    Yg(n, o, o);
                    var a = o.stopColor || n.getAttribute("stop-color") || "#000000";
                    t.colorStops.push({
                        offset: r,
                        color: a
                    })
                }
                n = n.nextSibling
            }
        }

        function Bg(e, t) {
            e && e.__inheritedStyle && (t.__inheritedStyle || (t.__inheritedStyle = {}), p(t.__inheritedStyle, e.__inheritedStyle))
        }

        function Fg(e) {
            for (var t = jg(e), n = [], i = 0; i < t.length; i += 2) {
                var r = parseFloat(t[i]),
                    o = parseFloat(t[i + 1]);
                n.push([r, o])
            }
            return n
        }

        function Hg(e, t, n, i, r) {
            var o = t,
                a = o.__inheritedStyle = o.__inheritedStyle || {},
                s = {};
            1 === e.nodeType && (Xg(e, t), Yg(e, a, s), i || Ug(e, a, s)), o.style = o.style || {}, null != a.fill && (o.style.fill = Vg(o, "fill", a.fill, n)), null != a.stroke && (o.style.stroke = Vg(o, "stroke", a.stroke, n)), m(["lineWidth", "opacity", "fillOpacity", "strokeOpacity", "miterLimit", "fontSize"], function (e) {
                null != a[e] && (o.style[e] = parseFloat(a[e]))
            }), m(["lineDashOffset", "lineCap", "lineJoin", "fontWeight", "fontFamily", "fontStyle", "textAlign"], function (e) {
                null != a[e] && (o.style[e] = a[e])
            }), r && (o.__selfStyle = s), a.lineDash && (o.style.lineDash = y(jg(a.lineDash), function (e) {
                return parseFloat(e)
            })), ("hidden" === a.visibility || "collapse" === a.visibility) && (o.invisible = !0), "none" === a.display && (o.ignore = !0)
        }

        function Gg(e, t) {
            var n = t.__selfStyle;
            if (n) {
                var i = n.textBaseline,
                    r = i;
                i && "auto" !== i ? "baseline" === i ? r = "alphabetic" : "before-edge" === i || "text-before-edge" === i ? r = "top" : "after-edge" === i || "text-after-edge" === i ? r = "bottom" : ("central" === i || "mathematical" === i) && (r = "middle") : r = "alphabetic", e.style.textBaseline = r
            }
            var o = t.__inheritedStyle;
            if (o) {
                var a = o.textAlign,
                    s = a;
                a && ("middle" === a && (s = "center"), e.style.textAlign = s)
            }
        }

        function Vg(e, t, n, i) {
            var r = n && n.match(SL);
            if (!r) return "none" === n && (n = null), n;
            var o = W(r[1]);
            i.push([e, t, o])
        }

        function Wg(e, t) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                i[0].style[i[1]] = e[i[2]]
            }
        }

        function jg(e) {
            return e.match(TL) || []
        }

        function Xg(e, t) {
            var n = e.getAttribute("transform");
            if (n) {
                n = n.replace(/,/g, " ");
                var i = [],
                    r = null;
                n.replace(CL, function (e, t, n) {
                    return i.push(t, n), ""
                });
                for (var o = i.length - 1; o > 0; o -= 2) {
                    var a = i[o],
                        s = i[o - 1],
                        l = jg(a);
                    switch (r = r || ze(), s) {
                        case "translate":
                            Ge(r, r, [parseFloat(l[0]), parseFloat(l[1] || "0")]);
                            break;
                        case "scale":
                            We(r, r, [parseFloat(l[0]), parseFloat(l[1] || l[0])]);
                            break;
                        case "rotate":
                            Ve(r, r, -parseFloat(l[0]) * ML);
                            break;
                        case "skewX":
                            var u = Math.tan(parseFloat(l[0]) * ML);
                            He(r, [1, 0, u, 1, 0, 0], r);
                            break;
                        case "skewY":
                            var c = Math.tan(parseFloat(l[0]) * ML);
                            He(r, [1, c, 0, 1, 0, 0], r);
                            break;
                        case "matrix":
                            r[0] = parseFloat(l[0]), r[1] = parseFloat(l[1]), r[2] = parseFloat(l[2]), r[3] = parseFloat(l[3]), r[4] = parseFloat(l[4]), r[5] = parseFloat(l[5])
                    }
                }
                t.setLocalTransform(r)
            }
        }

        function Yg(e, t, n) {
            var i = e.getAttribute("style");
            if (i) {
                IL.lastIndex = 0;
                for (var r; null != (r = IL.exec(i));) {
                    var o = r[1],
                        a = $(yL, o) ? yL[o] : null;
                    a && (t[a] = r[2]);
                    var s = $(xL, o) ? xL[o] : null;
                    s && (n[s] = r[2])
                }
            }
        }

        function Ug(e, t, n) {
            for (var i = 0; i < vL.length; i++) {
                var r = vL[i],
                    o = e.getAttribute(r);
                null != o && (t[yL[r]] = o)
            }
            for (i = 0; i < _L.length; i++) {
                r = _L[i], o = e.getAttribute(r);
                null != o && (n[xL[r]] = o)
            }
        }

        function qg(e, t) {
            var n = t.width / e.width,
                i = t.height / e.height,
                r = Math.min(n, i);
            return {
                scale: r,
                x: -(e.x + e.width / 2) * r + (t.x + t.width / 2),
                y: -(e.y + e.height / 2) * r + (t.y + t.height / 2)
            }
        }

        function Zg(e, t) {
            var n = new wL;
            return n.parse(e, t)
        }

        function $g(e) {
            e.silent = !1, e.isGroup && e.traverse(function (e) {
                e.silent = !1
            })
        }

        function Kg(e) {
            var t = [],
                n = Y();
            return m(e, function (e) {
                if (null == e.namedFrom) {
                    var i = new KA(e.name, e.el);
                    t.push(i), n.set(e.name, i)
                }
            }), {
                regions: t,
                regionsMap: n
            }
        }

        function Jg(e, t) {
            if ("china" === e) {
                for (var n = 0; n < t.length; n++)
                    if (t[n].name === PL) return;
                t.push(new $A(PL, y(LL, function (e) {
                    return {
                        type: "polygon",
                        exterior: e
                    }
                }), AL))
            }
        }

        function Qg(e, t) {
            if ("china" === e) {
                var n = EL[t.name];
                if (n) {
                    var i = t.getCenter();
                    i[0] += n[0] / 10.5, i[1] += -n[1] / 14, t.setCenter(i)
                }
            }
        }

        function em(e, t) {
            "china" === e && "台湾" === t.name && t.geometries.push({
                type: "polygon",
                exterior: RL[0]
            })
        }

        function tm(e) {
            for (var t, n = 0; n < e.length; n++) {
                var i = e[n].getBoundingRect();
                t = t || i.clone(), t.union(i)
            }
            return t
        }

        function nm(e) {
            return M(e) ? "undefined" != typeof JSON && JSON.parse ? JSON.parse(e) : new Function("return (" + e + ");")() : e
        }

        function im(e) {
            var t = e.getItemStyle(),
                n = e.get("areaColor");
            return null != n && (t.fill = n), t
        }

        function rm(e) {
            var t = e.style;
            t && (t.stroke = t.stroke || t.fill, t.fill = null)
        }

        function om(e, t, n, i) {
            var r = i.getModel("itemStyle"),
                o = i.getModel(["emphasis", "itemStyle"]),
                a = i.getModel(["blur", "itemStyle"]),
                s = i.getModel(["select", "itemStyle"]),
                l = im(r),
                u = im(o),
                c = im(s),
                p = im(a),
                h = e.data;
            if (h) {
                var d = h.getItemVisual(n, "style"),
                    f = h.getItemVisual(n, "decal");
                e.isVisualEncodedByVisualMap && d.fill && (l.fill = d.fill), f && (l.decal = lp(f, e.api))
            }
            t.setStyle(l), t.style.strokeNoScale = !0, t.ensureState("emphasis").style = u, t.ensureState("select").style = c, t.ensureState("blur").style = p, Mo(t)
        }

        function am(e, t, n, i, r, o, a) {
            var s = e.data,
                l = e.isGeo,
                u = s && isNaN(s.get(s.mapDimension("value"), o)),
                c = s && s.getItemLayout(o);
            if (l || u || c && c.showLabel) {
                var p = l ? n : o,
                    h = void 0;
                (!s || o >= 0) && (h = r);
                var d = a ? {
                    normal: {
                        align: "center",
                        verticalAlign: "middle"
                    }
                } : null;
                os(t, as(i), {
                    labelFetcher: h,
                    labelDataIndex: p,
                    defaultText: n
                }, d);
                var f = t.getTextContent();
                if (f && (XL(f).ignore = f.ignore, t.textConfig && a)) {
                    var g = t.getBoundingRect().clone();
                    t.textConfig.layoutRect = g, t.textConfig.position = [(a[0] - g.x) / g.width * 100 + "%", (a[1] - g.y) / g.height * 100 + "%"]
                }
                t.disableLabelAnimation = !0
            } else t.removeTextContent(), t.removeTextConfig(), t.disableLabelAnimation = null
        }

        function sm(e, t, n, i, r, o) {
            e.data ? e.data.setItemGraphicEl(o, t) : KS(t).eventData = {
                componentType: "geo",
                componentIndex: r.componentIndex,
                geoIndex: r.componentIndex,
                name: n,
                region: i && i.option || {}
            }
        }

        function lm(e, t, n, i, r) {
            e.data || es({
                el: t,
                componentModel: r,
                itemName: n,
                itemTooltipOption: i.get("tooltip")
            })
        }

        function um(e, t, n, i, r) {
            t.highDownSilentOnTouch = !!r.get("selectedMode");
            var o = i.getModel("emphasis"),
                a = o.get("focus");
            return qo(t, a, o.get("blurScope"), o.get("disabled")), e.isGeo && Qo(t, r, n), a
        }

        function cm(e, t, n) {
            function i() {
                o = []
            }

            function r() {
                o.length && (a.push(o), o = [])
            }
            var o, a = [],
                s = t({
                    polygonStart: i,
                    polygonEnd: r,
                    lineStart: i,
                    lineEnd: r,
                    point: function (e, t) {
                        isFinite(e) && isFinite(t) && o.push([e, t])
                    },
                    sphere: function () {}
                });
            return !n && s.polygonStart(), m(e, function (e) {
                s.lineStart();
                for (var t = 0; t < e.length; t++) s.point(e[t][0], e[t][1]);
                s.lineEnd()
            }), !n && s.polygonEnd(), a
        }

        function pm(e, t) {
            var n = {};
            return m(e, function (e) {
                e.each(e.mapDimension("value"), function (t, i) {
                    var r = "ec-" + e.getName(i);
                    n[r] = n[r] || [], isNaN(t) || n[r].push(t)
                })
            }), e[0].map(e[0].mapDimension("value"), function (i, r) {
                for (var o = "ec-" + e[0].getName(r), a = 0, s = 1 / 0, l = -1 / 0, u = n[o].length, c = 0; u > c; c++) s = Math.min(s, n[o][c]), l = Math.max(l, n[o][c]), a += n[o][c];
                var p;
                return p = "min" === t ? s : "max" === t ? l : "average" === t ? a / u : a, 0 === u ? NaN : p
            })
        }

        function hm(e) {
            var t = {};
            e.eachSeriesByType("map", function (e) {
                var n = e.getHostGeoModel(),
                    i = n ? "o" + n.id : "i" + e.getMapType();
                (t[i] = t[i] || []).push(e)
            }), m(t, function (e) {
                for (var t = pm(y(e, function (e) {
                        return e.getData()
                    }), e[0].get("mapValueCalculation")), n = 0; n < e.length; n++) e[n].originalData = e[n].getData();
                for (n = 0; n < e.length; n++) e[n].seriesGroup = e, e[n].needsDrawMap = 0 === n && !e[n].getHostGeoModel(), e[n].setData(t.cloneShallow()), e[n].mainSeries = e[0]
            })
        }

        function dm(e) {
            var t = {};
            e.eachSeriesByType("map", function (n) {
                var i = n.getMapType();
                if (!n.getHostGeoModel() && !t[i]) {
                    var r = {};
                    m(n.seriesGroup, function (t) {
                        var n = t.coordinateSystem,
                            i = t.originalData;
                        t.get("showLegendSymbol") && e.getComponent("legend") && i.each(i.mapDimension("value"), function (e, t) {
                            var o = i.getName(t),
                                a = n.getRegion(o);
                            if (a && !isNaN(e)) {
                                var s = r[o] || 0,
                                    l = n.dataToPoint(a.getCenter());
                                r[o] = s + 1, i.setItemLayout(t, {
                                    point: l,
                                    offset: s
                                })
                            }
                        })
                    });
                    var o = n.getData();
                    o.each(function (e) {
                        var t = o.getName(e),
                            n = o.getItemLayout(e) || {};
                        n.showLabel = !r[t], o.setItemLayout(e, n)
                    }), t[i] = !0
                }
            })
        }

        function fm(e) {
            var t = e.seriesModel;
            return t ? t.coordinateSystem : null
        }

        function gm(e) {
            var t = e.geoModel,
                n = e.seriesModel;
            return t ? t.coordinateSystem : n ? n.coordinateSystem || (n.getReferringComponents("geo", Db).models[0] || {}).coordinateSystem : null
        }

        function mm(e, t) {
            var n = e.get("boundingCoords");
            if (null != n) {
                var i = n[0],
                    r = n[1];
                if (isFinite(i[0]) && isFinite(i[1]) && isFinite(r[0]) && isFinite(r[1])) {
                    var o = this.projection;
                    if (o) {
                        var a = i[0],
                            s = i[1],
                            l = r[0],
                            u = r[1];
                        i = [1 / 0, 1 / 0], r = [-1 / 0, -1 / 0];
                        var c = function (e, t, n, a) {
                            for (var s = n - e, l = a - t, u = 0; 100 >= u; u++) {
                                var c = u / 100,
                                    p = o.project([e + s * c, t + l * c]);
                                ye(i, i, p), ve(r, r, p)
                            }
                        };
                        c(a, s, l, s), c(l, s, l, u), c(l, u, a, u), c(a, u, l, s)
                    }
                    this.setBoundingRect(i[0], i[1], r[0] - i[0], r[1] - i[1])
                }
            }
            var p, h, d, f = this.getBoundingRect(),
                g = e.get("layoutCenter"),
                m = e.get("layoutSize"),
                y = t.getWidth(),
                v = t.getHeight(),
                x = f.width / f.height * this.aspectScale,
                _ = !1;
            if (g && m && (p = [ri(g[0], y), ri(g[1], v)], h = ri(m, Math.min(y, v)), isNaN(p[0]) || isNaN(p[1]) || isNaN(h) || (_ = !0)), _) d = {}, x > 1 ? (d.width = h, d.height = h / x) : (d.height = h, d.width = h * x), d.y = p[1] - d.height / 2, d.x = p[0] - d.width / 2;
            else {
                var w = e.getBoxLayoutParams();
                w.aspect = x, d = nl(w, {
                    width: y,
                    height: v
                })
            }
            this.setViewRect(d.x, d.y, d.width, d.height), this.setCenter(e.get("center"), t), this.setZoom(e.get("zoom"))
        }

        function ym(e, t) {
            m(t.get("geoCoord"), function (t, n) {
                e.addGeoCoord(n, t)
            })
        }

        function vm(e, t) {
            return e.pointToProjected ? e.pointToProjected(t) : e.pointToData(t)
        }

        function xm(e, t, n, i) {
            var r = e.getZoom(),
                o = e.getCenter(),
                a = t.zoom,
                s = e.projectedToPoint ? e.projectedToPoint(o) : e.dataToPoint(o);
            if (null != t.dx && null != t.dy && (s[0] -= t.dx, s[1] -= t.dy, e.setCenter(vm(e, s), i)), null != a) {
                if (n) {
                    var l = n.min || 0,
                        u = n.max || 1 / 0;
                    a = Math.max(Math.min(r * a, u), l) / r
                }
                e.scaleX *= a, e.scaleY *= a;
                var c = (t.originX - e.x) * (a - 1),
                    p = (t.originY - e.y) * (a - 1);
                e.x -= c, e.y -= p, e.updateTransform(), e.setCenter(vm(e, s), i), e.setZoom(a * r)
            }
            return {
                center: e.getCenter(),
                zoom: e.getZoom()
            }
        }

        function _m(e, t, n) {
            HL.registerMap(e, t, n)
        }

        function wm(e) {
            function t(t, n) {
                n.update = "geo:updateSelectStatus", e.registerAction(n, function (e, n) {
                    var i = {},
                        r = [];
                    return n.eachComponent({
                        mainType: "geo",
                        query: e
                    }, function (n) {
                        n[t](e.name);
                        var o = n.coordinateSystem;
                        m(o.regions, function (e) {
                            i[e.name] = n.isSelected(e.name) || !1
                        });
                        var a = [];
                        m(i, function (e, t) {
                            i[t] && a.push(t)
                        }), r.push({
                            geoIndex: n.componentIndex,
                            name: a
                        })
                    }), {
                        selected: i,
                        allSelected: r,
                        name: e.name
                    }
                })
            }
            e.registerCoordinateSystem("geo", tN), e.registerComponentModel(nN), e.registerComponentView(iN), e.registerImpl("registerMap", _m), e.registerImpl("getMap", function (e) {
                return HL.getMapForUser(e)
            }), t("toggleSelected", {
                type: "geoToggleSelect",
                event: "geoselectchanged"
            }), t("select", {
                type: "geoSelect",
                event: "geoselected"
            }), t("unSelect", {
                type: "geoUnSelect",
                event: "geounselected"
            }), e.registerAction({
                type: "geoRoam",
                event: "geoRoam",
                update: "updateTransform"
            }, function (e, t, n) {
                var i = e.componentType || "series";
                t.eachComponent({
                    mainType: i,
                    query: e
                }, function (t) {
                    var r = t.coordinateSystem;
                    if ("geo" === r.type) {
                        var o = xm(r, e, t.get("scaleLimit"), n);
                        t.setCenter && t.setCenter(o.center), t.setZoom && t.setZoom(o.zoom), "series" === i && m(t.seriesGroup, function (e) {
                            e.setCenter(o.center), e.setZoom(o.zoom)
                        })
                    }
                })
            })
        }

        function bm(e) {
            cd(wm), e.registerChartView(UL), e.registerSeriesModel(qL), e.registerLayout(dm), e.registerProcessor(e.PRIORITY.PROCESSOR.STATISTIC, hm), Tc("map", e.registerAction)
        }

        function Sm(e) {
            return isNaN(+e.cpx1) || isNaN(+e.cpy1)
        }

        function Tm(e) {
            return "_" + e + "Type"
        }

        function Cm(e, t, n) {
            var i = t.getItemVisual(n, e);
            if (i && "none" !== i) {
                var r = t.getItemVisual(n, e + "Size"),
                    o = t.getItemVisual(n, e + "Rotate"),
                    a = t.getItemVisual(n, e + "Offset"),
                    s = t.getItemVisual(n, e + "KeepAspect"),
                    l = Ac(r),
                    u = Pc(a || 0, l),
                    c = Dc(i, -l[0] / 2 + u[0], -l[1] / 2 + u[1], l[0], l[1], null, s);
                return c.__specifiedRotation = null == o || isNaN(o) ? void 0 : +o * Math.PI / 180 || 0, c.name = e, c
            }
        }

        function Mm(e) {
            var t = new sN({
                name: "line",
                subPixelOptimize: !0
            });
            return Im(t.shape, e), t
        }

        function Im(e, t) {
            e.x1 = t[0][0], e.y1 = t[0][1], e.x2 = t[1][0], e.y2 = t[1][1], e.percent = 1;
            var n = t[2];
            n ? (e.cpx1 = n[0], e.cpy1 = n[1]) : (e.cpx1 = NaN, e.cpy1 = NaN)
        }

        function km(e) {
            return e.animators && e.animators.length > 0
        }

        function Dm(e) {
            var t = e.hostModel,
                n = t.getModel("emphasis");
            return {
                lineStyle: t.getModel("lineStyle").getLineStyle(),
                emphasisLineStyle: n.getModel(["lineStyle"]).getLineStyle(),
                blurLineStyle: t.getModel(["blur", "lineStyle"]).getLineStyle(),
                selectLineStyle: t.getModel(["select", "lineStyle"]).getLineStyle(),
                emphasisDisabled: n.get("disabled"),
                blurScope: n.get("blurScope"),
                focus: n.get("focus"),
                labelStatesModels: as(t)
            }
        }

        function Am(e) {
            return isNaN(e[0]) || isNaN(e[1])
        }

        function Pm(e) {
            return e && !Am(e[0]) && !Am(e[1])
        }

        function Lm(e) {
            var t = e.data;
            t && t[0] && t[0][0] && t[0][0].coord && (e.data = y(t, function (e) {
                var t = [e[0].coord, e[1].coord],
                    n = {
                        coords: t
                    };
                return e[0].name && (n.fromName = e[0].name), e[1].name && (n.toName = e[1].name), u([n, e[0], e[1]])
            }))
        }

        function Nm(e) {
            return e instanceof Array || (e = [e, e]), e
        }

        function Om(e) {
            e.registerChartView(vN), e.registerSeriesModel(wN), e.registerLayout(yN), e.registerVisual(bN)
        }

        function Em(e, n, i, r) {
            m(PN, function (o, a) {
                var s = l(l({}, AN[a], !0), r, !0),
                    u = function (e) {
                        function i() {
                            var t = null !== e && e.apply(this, arguments) || this;
                            return t.type = n + "Axis." + a, t
                        }
                        return t(i, e), i.prototype.mergeDefaultAndTheme = function (e, t) {
                            var n = il(this),
                                i = n ? ol(e) : {},
                                r = t.getTheme();
                            l(e, r.get(a + "Axis")), l(e, this.getDefaultOption()), e.type = Rm(e), n && rl(e, i, n)
                        }, i.prototype.optionUpdated = function () {
                            var e = this.option;
                            "category" === e.type && (this.__ordinalMeta = vA.createByAxisModel(this))
                        }, i.prototype.getCategories = function (e) {
                            var t = this.option;
                            return "category" === t.type ? e ? t.data : this.__ordinalMeta.categories : void 0
                        }, i.prototype.getOrdinalMeta = function () {
                            return this.__ordinalMeta
                        }, i.type = n + "Axis." + a, i.defaultOption = s, i
                    }(i);
                e.registerComponentModel(u)
            }), e.registerSubTypeDefaulter(n + "Axis", Rm)
        }

        function Rm(e) {
            return e.type || (e.data ? "category" : "value")
        }

        function zm(e) {
            return "interval" === e.type || "time" === e.type
        }

        function Bm(e, t, n) {
            n = n || {};
            var i = e.coordinateSystem,
                r = t.axis,
                o = {},
                a = r.getAxesOnZeroOf()[0],
                s = r.position,
                l = a ? "onZero" : s,
                u = r.dim,
                c = i.getRect(),
                p = [c.x, c.x + c.width, c.y, c.y + c.height],
                h = {
                    left: 0,
                    right: 1,
                    top: 0,
                    bottom: 1,
                    onZero: 2
                },
                d = t.get("offset") || 0,
                f = "x" === u ? [p[2] - d, p[3] + d] : [p[0] - d, p[1] + d];
            if (a) {
                var g = a.toGlobalCoord(a.dataToCoord(0));
                f[h.onZero] = Math.max(Math.min(g, f[1]), f[0])
            }
            o.position = ["y" === u ? f[h[l]] : p[0], "x" === u ? f[h[l]] : p[3]], o.rotation = Math.PI / 2 * ("x" === u ? 0 : 1);
            var m = {
                top: -1,
                bottom: 1,
                left: -1,
                right: 1
            };
            o.labelDirection = o.tickDirection = o.nameDirection = m[s], o.labelOffset = a ? f[h[s]] - f[h.onZero] : 0, t.get(["axisTick", "inside"]) && (o.tickDirection = -o.tickDirection), z(n.labelInside, t.get(["axisLabel", "inside"])) && (o.labelDirection = -o.labelDirection);
            var y = t.get(["axisLabel", "rotate"]);
            return o.labelRotate = "top" === l ? -y : y, o.z2 = 1, o
        }

        function Fm(e) {
            return "cartesian2d" === e.get("coordinateSystem")
        }

        function Hm(e) {
            var t = {
                xAxisModel: null,
                yAxisModel: null
            };
            return m(t, function (n, i) {
                var r = i.replace(/Model$/, ""),
                    o = e.getReferringComponents(r, Db).models[0];
                t[i] = o
            }), t
        }

        function Gm(e, t, n) {
            var i = wA.prototype,
                r = i.getTicks.call(n),
                o = i.getTicks.call(n, !0),
                a = r.length - 1,
                s = i.getInterval.call(n),
                l = qh(e, t),
                u = l.extent,
                c = l.fixMin,
                p = l.fixMax;
            if ("log" === e.type) {
                var h = RN(e.base);
                u = [RN(u[0]) / h, RN(u[1]) / h]
            }
            e.setExtent(u[0], u[1]), e.calcNiceExtent({
                splitNumber: a,
                fixMin: c,
                fixMax: p
            });
            var d = i.getExtent.call(e);
            c && (u[0] = d[0]), p && (u[1] = d[1]);
            var f = i.getInterval.call(e),
                g = u[0],
                m = u[1];
            if (c && p) f = (m - g) / a;
            else if (c)
                for (m = u[0] + f * a; m < u[1] && isFinite(m) && isFinite(u[1]);) f = yh(f), m = u[0] + f * a;
            else if (p)
                for (g = u[1] - f * a; g > u[0] && isFinite(g) && isFinite(u[0]);) f = yh(f), g = u[1] - f * a;
            else {
                var y = e.getTicks().length - 1;
                y > a && (f = yh(f));
                var v = f * a;
                m = Math.ceil(u[1] / f) * f, g = oi(m - v), 0 > g && u[0] >= 0 ? (g = 0, m = oi(v)) : m > 0 && u[1] <= 0 && (m = 0, g = -oi(v))
            }
            var x = (r[0].value - o[0].value) / s,
                _ = (r[a].value - o[a].value) / s;
            i.setExtent.call(e, g + f * x, m + f * _), i.setInterval.call(e, f), (x || _) && i.setNiceExtent.call(e, g + f, m - f)
        }

        function Vm(e, t) {
            return e.getCoordSysModel() === t
        }

        function Wm(e, t, n, i) {
            function r(e) {
                return e.dim + "_" + e.index
            }
            n.getAxesOnZeroOf = function () {
                return o ? [o] : []
            };
            var o, a = e[t],
                s = n.model,
                l = s.get(["axisLine", "onZero"]),
                u = s.get(["axisLine", "onZeroAxisIndex"]);
            if (l) {
                if (null != u) jm(a[u]) && (o = a[u]);
                else
                    for (var c in a)
                        if (a.hasOwnProperty(c) && jm(a[c]) && !i[r(a[c])]) {
                            o = a[c];
                            break
                        } o && (i[r(o)] = !0)
            }
        }

        function jm(e) {
            return e && "category" !== e.type && "time" !== e.type && Jh(e)
        }

        function Xm(e, t) {
            var n = e.getExtent(),
                i = n[0] + n[1];
            e.toGlobalCoord = "x" === e.dim ? function (e) {
                return e + t
            } : function (e) {
                return i - e + t
            }, e.toLocalCoord = "x" === e.dim ? function (e) {
                return e - t
            } : function (e) {
                return i - e + t
            }
        }

        function Ym(e, t, n, i) {
            var r, o, a = di(n - e),
                s = i[0] > i[1],
                l = "start" === t && !s || "start" !== t && s;
            return fi(a - BN / 2) ? (o = l ? "bottom" : "top", r = "center") : fi(a - 1.5 * BN) ? (o = l ? "top" : "bottom", r = "center") : (o = "middle", r = 1.5 * BN > a && a > BN / 2 ? l ? "left" : "right" : l ? "right" : "left"), {
                rotation: a,
                textAlign: r,
                textVerticalAlign: o
            }
        }

        function Um(e, t, n) {
            if (!rd(e.axis)) {
                var i = e.get(["axisLabel", "showMinLabel"]),
                    r = e.get(["axisLabel", "showMaxLabel"]);
                t = t || [], n = n || [];
                var o = t[0],
                    a = t[1],
                    s = t[t.length - 1],
                    l = t[t.length - 2],
                    u = n[0],
                    c = n[1],
                    p = n[n.length - 1],
                    h = n[n.length - 2];
                !1 === i ? (qm(o), qm(u)) : Zm(o, a) && (i ? (qm(a), qm(c)) : (qm(o), qm(u))), !1 === r ? (qm(s), qm(p)) : Zm(l, s) && (r ? (qm(l), qm(h)) : (qm(s), qm(p)))
            }
        }

        function qm(e) {
            e && (e.ignore = !0)
        }

        function Zm(e, t) {
            var n = e && e.getBoundingRect().clone(),
                i = t && t.getBoundingRect().clone();
            if (n && i) {
                var r = Be([]);
                return Ve(r, r, -e.rotation), n.applyTransform(He([], r, e.getLocalTransform())), i.applyTransform(He([], r, t.getLocalTransform())), n.intersect(i)
            }
        }

        function $m(e) {
            return "middle" === e || "center" === e
        }

        function Km(e, t, n, i, r) {
            for (var o = [], a = [], s = [], l = 0; l < e.length; l++) {
                var u = e[l].coord;
                a[0] = u, a[1] = 0, s[0] = u, s[1] = n, t && (me(a, a, t), me(s, s, t));
                var c = new eC({
                    shape: {
                        x1: a[0],
                        y1: a[1],
                        x2: s[0],
                        y2: s[1]
                    },
                    style: i,
                    z2: 2,
                    autoBatch: !0,
                    silent: !0
                });
                Fa(c.shape, c.style.lineWidth), c.anid = r + "_" + e[l].tickValue, o.push(c)
            }
            return o
        }

        function Jm(e, t, n, i) {
            var r = n.axis,
                o = n.getModel("axisTick"),
                a = o.get("show");
            if ("auto" === a && i.handleAutoShown && (a = i.handleAutoShown("axisTick")), a && !r.scale.isBlank()) {
                for (var s = o.getModel("lineStyle"), l = i.tickDirection * o.get("length"), u = r.getTicksCoords(), c = Km(u, t.transform, l, p(s.getLineStyle(), {
                        stroke: n.get(["axisLine", "lineStyle", "color"])
                    }), "ticks"), h = 0; h < c.length; h++) e.add(c[h]);
                return c
            }
        }

        function Qm(e, t, n, i) {
            var r = n.axis,
                o = n.getModel("minorTick");
            if (o.get("show") && !r.scale.isBlank()) {
                var a = r.getMinorTicksCoords();
                if (a.length)
                    for (var s = o.getModel("lineStyle"), l = i * o.get("length"), u = p(s.getLineStyle(), p(n.getModel("axisTick").getLineStyle(), {
                            stroke: n.get(["axisLine", "lineStyle", "color"])
                        })), c = 0; c < a.length; c++)
                        for (var h = Km(a[c], t.transform, l, u, "minorticks_" + c), d = 0; d < h.length; d++) e.add(h[d])
            }
        }

        function ey(e, t, n, i) {
            var r = n.axis,
                o = z(i.axisLabelShow, n.get(["axisLabel", "show"]));
            if (o && !r.scale.isBlank()) {
                var a = n.getModel("axisLabel"),
                    s = a.get("margin"),
                    l = r.getViewLabels(),
                    u = (z(i.labelRotate, a.get("rotate")) || 0) * BN / 180,
                    c = FN.innerTextLayout(i.rotation, u, i.labelDirection),
                    p = n.getCategories && n.getCategories(!0),
                    h = [],
                    d = FN.isLabelSilent(n),
                    f = n.get("triggerEvent");
                return m(l, function (o, l) {
                    var u = "ordinal" === r.scale.type ? r.scale.getRawOrdinalNumber(o.tickValue) : o.tickValue,
                        g = o.formattedLabel,
                        m = o.rawLabel,
                        y = a;
                    if (p && p[u]) {
                        var v = p[u];
                        D(v) && v.textStyle && (y = new HC(v.textStyle, a, n.ecModel))
                    }
                    var x = y.getTextColor() || n.get(["axisLine", "lineStyle", "color"]),
                        _ = r.dataToCoord(u),
                        w = new US({
                            x: _,
                            y: i.labelOffset + i.labelDirection * s,
                            rotation: c.rotation,
                            silent: d,
                            z2: 10 + (o.level || 0),
                            style: ss(y, {
                                text: g,
                                align: y.getShallow("align", !0) || c.textAlign,
                                verticalAlign: y.getShallow("verticalAlign", !0) || y.getShallow("baseline", !0) || c.textVerticalAlign,
                                fill: C(x) ? x("category" === r.type ? m : "value" === r.type ? u + "" : u, l) : x
                            })
                        });
                    if (w.anid = "label_" + u, f) {
                        var b = FN.makeAxisEventDataBase(n);
                        b.targetType = "axisLabel", b.value = m, b.tickIndex = l, "category" === r.type && (b.dataIndex = u), KS(w).eventData = b
                    }
                    t.add(w), w.updateTransform(), h.push(w), e.add(w), w.decomposeTransform()
                }), h
            }
        }

        function ty(e, t) {
            var n = {
                axesInfo: {},
                seriesInvolved: !1,
                coordSysAxesInfo: {},
                coordSysMap: {}
            };
            return ny(n, e, t), n.seriesInvolved && ry(n, e), n
        }

        function ny(e, t, n) {
            var i = t.getComponent("tooltip"),
                r = t.getComponent("axisPointer"),
                o = r.get("link", !0) || [],
                a = [];
            m(n.getCoordinateSystems(), function (n) {
                function s(i, s, l) {
                    var c = l.model.getModel("axisPointer", r),
                        h = c.get("show");
                    if (h && ("auto" !== h || i || cy(c))) {
                        null == s && (s = c.get("triggerTooltip")), c = i ? iy(l, p, r, t, i, s) : c;
                        var d = c.get("snap"),
                            f = py(l.model),
                            g = s || d || "category" === l.type,
                            m = e.axesInfo[f] = {
                                key: f,
                                axis: l,
                                coordSys: n,
                                axisPointerModel: c,
                                triggerTooltip: s,
                                involveSeries: g,
                                snap: d,
                                useHandle: cy(c),
                                seriesModels: [],
                                linkGroup: null
                            };
                        u[f] = m, e.seriesInvolved = e.seriesInvolved || g;
                        var y = oy(o, l);
                        if (null != y) {
                            var v = a[y] || (a[y] = {
                                axesInfo: {}
                            });
                            v.axesInfo[f] = m, v.mapper = o[y].mapper, m.linkGroup = v
                        }
                    }
                }
                if (n.axisPointerEnabled) {
                    var l = py(n.model),
                        u = e.coordSysAxesInfo[l] = {};
                    e.coordSysMap[l] = n;
                    var c = n.model,
                        p = c.getModel("tooltip", i);
                    if (m(n.getAxes(), S(s, !1, null)), n.getTooltipAxes && i && p.get("show")) {
                        var h = "axis" === p.get("trigger"),
                            d = "cross" === p.get(["axisPointer", "type"]),
                            f = n.getTooltipAxes(p.get(["axisPointer", "axis"]));
                        (h || d) && m(f.baseAxes, S(s, !d || "cross", h)), d && m(f.otherAxes, S(s, "cross", !1))
                    }
                }
            })
        }

        function iy(e, t, n, i, r, o) {
            var a = t.getModel("axisPointer"),
                l = ["type", "snap", "lineStyle", "shadowStyle", "label", "animation", "animationDurationUpdate", "animationEasingUpdate", "z"],
                u = {};
            m(l, function (e) {
                u[e] = s(a.get(e))
            }), u.snap = "category" !== e.type && !!o, "cross" === a.get("type") && (u.type = "line");
            var c = u.label || (u.label = {});
            if (null == c.show && (c.show = !1), "cross" === r) {
                var h = a.get(["label", "show"]);
                if (c.show = null == h || h, !o) {
                    var d = u.lineStyle = a.get("crossStyle");
                    d && p(c, d.textStyle)
                }
            }
            return e.model.getModel("axisPointer", new HC(u, n, i))
        }

        function ry(e, t) {
            t.eachSeries(function (t) {
                var n = t.coordinateSystem,
                    i = t.get(["tooltip", "trigger"], !0),
                    r = t.get(["tooltip", "show"], !0);
                n && "none" !== i && !1 !== i && "item" !== i && !1 !== r && !1 !== t.get(["axisPointer", "show"], !0) && m(e.coordSysAxesInfo[py(n.model)], function (e) {
                    var i = e.axis;
                    n.getAxis(i.dim) === i && (e.seriesModels.push(t), null == e.seriesDataCount && (e.seriesDataCount = 0), e.seriesDataCount += t.getData().count())
                })
            })
        }

        function oy(e, t) {
            for (var n = t.model, i = t.dim, r = 0; r < e.length; r++) {
                var o = e[r] || {};
                if (ay(o[i + "AxisId"], n.id) || ay(o[i + "AxisIndex"], n.componentIndex) || ay(o[i + "AxisName"], n.name)) return r
            }
        }

        function ay(e, t) {
            return "all" === e || T(e) && h(e, t) >= 0 || e === t
        }

        function sy(e) {
            var t = ly(e);
            if (t) {
                var n = t.axisPointerModel,
                    i = t.axis.scale,
                    r = n.option,
                    o = n.get("status"),
                    a = n.get("value");
                null != a && (a = i.parse(a));
                var s = cy(n);
                null == o && (r.status = s ? "show" : "hide");
                var l = i.getExtent().slice();
                l[0] > l[1] && l.reverse(), (null == a || a > l[1]) && (a = l[1]), a < l[0] && (a = l[0]), r.value = a, s && (r.status = t.axis.scale.isBlank() ? "hide" : "show")
            }
        }

        function ly(e) {
            var t = (e.ecModel.getComponent("axisPointer") || {}).coordSysAxesInfo;
            return t && t.axesInfo[py(e)]
        }

        function uy(e) {
            var t = ly(e);
            return t && t.axisPointerModel
        }

        function cy(e) {
            return !!e.get(["handle", "show"])
        }

        function py(e) {
            return e.type + "||" + e.id
        }

        function hy(e, t, n, i) {
            var r = n.axis;
            if (!r.scale.isBlank()) {
                var o = n.getModel("splitArea"),
                    a = o.getModel("areaStyle"),
                    s = a.get("color"),
                    l = i.coordinateSystem.getRect(),
                    u = r.getTicksCoords({
                        tickModel: o,
                        clamp: !0
                    });
                if (u.length) {
                    var c = s.length,
                        h = WN(e).splitAreaColors,
                        d = Y(),
                        f = 0;
                    if (h)
                        for (var g = 0; g < u.length; g++) {
                            var m = h.get(u[g].tickValue);
                            if (null != m) {
                                f = (m + (c - 1) * g) % c;
                                break
                            }
                        }
                    var y = r.toGlobalCoord(u[0].coord),
                        v = a.getAreaStyle();
                    s = T(s) ? s : [s];
                    for (g = 1; g < u.length; g++) {
                        var x = r.toGlobalCoord(u[g].coord),
                            _ = void 0,
                            w = void 0,
                            b = void 0,
                            S = void 0;
                        r.isHorizontal() ? (_ = y, w = l.y, b = x - _, S = l.height, y = _ + b) : (_ = l.x, w = y, b = l.width, S = x - w, y = w + S);
                        var C = u[g - 1].tickValue;
                        null != C && d.set(C, f), t.add(new WS({
                            anid: null != C ? "area_" + C : null,
                            shape: {
                                x: _,
                                y: w,
                                width: b,
                                height: S
                            },
                            style: p({
                                fill: s[f]
                            }, v),
                            autoBatch: !0,
                            silent: !0
                        })), f = (f + 1) % c
                    }
                    WN(e).splitAreaColors = d
                }
            }
        }

        function dy(e) {
            WN(e).splitAreaColors = null
        }

        function fy(e) {
            e.registerComponentView($N), e.registerComponentModel(SN), e.registerCoordinateSystem("cartesian2d", zN), Em(e, "x", TN, KN), Em(e, "y", TN, KN), e.registerComponentView(qN), e.registerComponentView(ZN), e.registerPreprocessor(function (e) {
                e.xAxis && e.yAxis && !e.grid && (e.grid = {})
            })
        }

        function gy(e) {
            e.registerComponentModel(JN), e.registerComponentView(QN)
        }

        function my(e, t) {
            var n = aM(t.get("padding")),
                i = t.getItemStyle(["color", "opacity"]);
            return i.fill = t.get("backgroundColor"), new WS({
                shape: {
                    x: e.x - n[3],
                    y: e.y - n[0],
                    width: e.width + n[1] + n[3],
                    height: e.height + n[0] + n[2],
                    r: t.get("borderRadius")
                },
                style: i,
                silent: !0,
                z2: -1
            })
        }

        function yy(e, t, n, i, r, o, a) {
            function s(e, t) {
                "auto" === e.lineWidth && (e.lineWidth = t.lineWidth > 0 ? 2 : 0), iO(e, function (n, i) {
                    "inherit" === e[i] && (e[i] = t[i])
                })
            }
            var l = t.getModel("itemStyle"),
                u = l.getItemStyle(),
                c = 0 === e.lastIndexOf("empty", 0) ? "fill" : "stroke",
                p = l.getShallow("decal");
            u.decal = p && "inherit" !== p ? lp(p, a) : i.decal, "inherit" === u.fill && (u.fill = i[r]), "inherit" === u.stroke && (u.stroke = i[c]), "inherit" === u.opacity && (u.opacity = ("fill" === r ? i : n).opacity), s(u, i);
            var h = t.getModel("lineStyle"),
                d = h.getLineStyle();
            if (s(d, n), "auto" === u.fill && (u.fill = i.fill), "auto" === u.stroke && (u.stroke = i.fill), "auto" === d.stroke && (d.stroke = i.fill), !o) {
                var f = t.get("inactiveBorderWidth"),
                    g = u[c];
                u.lineWidth = "auto" === f ? i.lineWidth > 0 && g ? 2 : 0 : u.lineWidth, u.fill = t.get("inactiveColor"), u.stroke = t.get("inactiveBorderColor"), d.stroke = h.get("inactiveColor"), d.lineWidth = h.get("inactiveWidth")
            }
            return {
                itemStyle: u,
                lineStyle: d
            }
        }

        function vy(e) {
            var t = e.icon || "roundRect",
                n = Dc(t, 0, 0, e.itemWidth, e.itemHeight, e.itemStyle.fill, e.symbolKeepAspect);
            return n.setStyle(e.itemStyle), n.rotation = (e.iconRotate || 0) * Math.PI / 180, n.setOrigin([e.itemWidth / 2, e.itemHeight / 2]), t.indexOf("empty") > -1 && (n.style.stroke = n.style.fill, n.style.fill = "#fff", n.style.lineWidth = 2), n
        }

        function xy(e, t, n, i) {
            by(e, t, n, i), n.dispatchAction({
                type: "legendToggleSelect",
                name: null != e ? e : t
            }), wy(e, t, n, i)
        }

        function _y(e) {
            for (var t, n = e.getZr().storage.getDisplayList(), i = 0, r = n.length; r > i && !(t = n[i].states.emphasis);) i++;
            return t && t.hoverLayer
        }

        function wy(e, t, n, i) {
            _y(n) || n.dispatchAction({
                type: "highlight",
                seriesName: e,
                name: t,
                excludeSeriesId: i
            })
        }

        function by(e, t, n, i) {
            _y(n) || n.dispatchAction({
                type: "downplay",
                seriesName: e,
                name: t,
                excludeSeriesId: i
            })
        }

        function Sy(e) {
            var t = e.findComponents({
                mainType: "legend"
            });
            t && t.length && e.filterSeries(function (e) {
                for (var n = 0; n < t.length; n++)
                    if (!t[n].isSelected(e.name)) return !1;
                return !0
            })
        }

        function Ty(e, t, n) {
            var i, r = {},
                o = "toggleSelected" === e;
            return n.eachComponent("legend", function (n) {
                o && null != i ? n[i ? "select" : "unSelect"](t.name) : "allSelect" === e || "inverseSelect" === e ? n[e]() : (n[e](t.name), i = n.isSelected(t.name));
                var a = n.getData();
                m(a, function (e) {
                    var t = e.get("name");
                    if ("\n" !== t && "" !== t) {
                        var i = n.isSelected(t);
                        r[t] = r.hasOwnProperty(t) ? r[t] && i : i
                    }
                })
            }), "allSelect" === e || "inverseSelect" === e ? {
                selected: r
            } : {
                name: t.name,
                selected: r
            }
        }

        function Cy(e) {
            e.registerAction("legendToggleSelect", "legendselectchanged", S(Ty, "toggleSelected")), e.registerAction("legendAllSelect", "legendselectall", S(Ty, "allSelect")), e.registerAction("legendInverseSelect", "legendinverseselect", S(Ty, "inverseSelect")), e.registerAction("legendSelect", "legendselected", S(Ty, "select")), e.registerAction("legendUnSelect", "legendunselected", S(Ty, "unSelect"))
        }

        function My(e) {
            e.registerComponentModel(tO), e.registerComponentView(oO), e.registerProcessor(e.PRIORITY.PROCESSOR.SERIES_FILTER, Sy), e.registerSubTypeDefaulter("legend", function () {
                return "plain"
            }), Cy(e)
        }

        function Iy(e, t, n) {
            var i = e.getOrient(),
                r = [1, 1];
            r[i.index] = 0, rl(t, n, {
                type: "box",
                ignoreSize: !!r
            })
        }

        function ky(e) {
            e.registerAction("legendScroll", "legendscroll", function (e, t) {
                var n = e.scrollDataIndex;
                null != n && t.eachComponent({
                    mainType: "legend",
                    subType: "scroll",
                    query: e
                }, function (e) {
                    e.setScrollDataIndex(n)
                })
            })
        }

        function Dy(e) {
            cd(My), e.registerComponentModel(aO), e.registerComponentView(cO), ky(e)
        }

        function Ay(e, t, n, i) {
            Py(pO(n).lastProp, i) || (pO(n).lastProp = i, t ? Ta(n, i, e) : (n.stopAnimation(), n.attr(i)))
        }

        function Py(e, t) {
            if (D(e) && D(t)) {
                var n = !0;
                return m(t, function (t, i) {
                    n = n && Py(e[i], t)
                }), !!n
            }
            return e === t
        }

        function Ly(e, t) {
            e[t.get(["label", "show"]) ? "show" : "hide"]()
        }

        function Ny(e) {
            return {
                x: e.x || 0,
                y: e.y || 0,
                rotation: e.rotation || 0
            }
        }

        function Oy(e, t, n) {
            var i = t.get("z"),
                r = t.get("zlevel");
            e && e.traverse(function (e) {
                "group" !== e.type && (null != i && (e.z = i), null != r && (e.zlevel = r), e.silent = n)
            })
        }

        function Ey(e) {
            var t, n = e.get("type"),
                i = e.getModel(n + "Style");
            return "line" === n ? (t = i.getLineStyle(), t.fill = null) : "shadow" === n && (t = i.getAreaStyle(), t.stroke = null), t
        }

        function Ry(e, t, n, i, r) {
            var o = n.get("value"),
                a = By(o, t.axis, t.ecModel, n.get("seriesDataIndices"), {
                    precision: n.get(["label", "precision"]),
                    formatter: n.get(["label", "formatter"])
                }),
                s = n.getModel("label"),
                l = aM(s.get("padding") || 0),
                u = s.getFont(),
                c = Rn(a, u),
                p = r.position,
                h = c.width + l[1] + l[3],
                d = c.height + l[0] + l[2],
                f = r.align;
            "right" === f && (p[0] -= h), "center" === f && (p[0] -= h / 2);
            var g = r.verticalAlign;
            "bottom" === g && (p[1] -= d), "middle" === g && (p[1] -= d / 2), zy(p, h, d, i);
            var m = s.get("backgroundColor");
            m && "auto" !== m || (m = t.get(["axisLine", "lineStyle", "color"])), e.label = {
                x: p[0],
                y: p[1],
                style: ss(s, {
                    text: a,
                    font: u,
                    fill: s.getTextColor(),
                    padding: l,
                    backgroundColor: m
                }),
                z2: 10
            }
        }

        function zy(e, t, n, i) {
            var r = i.getWidth(),
                o = i.getHeight();
            e[0] = Math.min(e[0] + t, r) - t, e[1] = Math.min(e[1] + n, o) - n, e[0] = Math.max(e[0], 0), e[1] = Math.max(e[1], 0)
        }

        function By(e, t, n, i, r) {
            e = t.scale.parse(e);
            var o = t.scale.getLabel({
                    value: e
                }, {
                    precision: r.precision
                }),
                a = r.formatter;
            if (a) {
                var s = {
                    value: ed(t, {
                        value: e
                    }),
                    axisDimension: t.dim,
                    axisIndex: t.index,
                    seriesData: []
                };
                m(i, function (e) {
                    var t = n.getSeriesByIndex(e.seriesIndex),
                        i = e.dataIndexInside,
                        r = t && t.getDataParams(i);
                    r && s.seriesData.push(r)
                }), M(a) ? o = a.replace("{value}", o) : C(a) && (o = a(s))
            }
            return o
        }

        function Fy(e, t, n) {
            var i = ze();
            return Ve(i, i, n.rotation), Ge(i, i, n.position), Va([e.dataToCoord(t), (n.labelOffset || 0) + (n.labelDirection || 1) * (n.labelMargin || 0)], i)
        }

        function Hy(e, t, n, i, r, o) {
            var a = FN.innerTextLayout(n.rotation, 0, n.labelDirection);
            n.labelMargin = r.get(["label", "margin"]), Ry(t, i, r, o, {
                position: Fy(i.axis, e, n),
                align: a.textAlign,
                verticalAlign: a.textVerticalAlign
            })
        }

        function Gy(e, t, n) {
            return n = n || 0, {
                x1: e[n],
                y1: e[1 - n],
                x2: t[n],
                y2: t[1 - n]
            }
        }

        function Vy(e, t, n) {
            return n = n || 0, {
                x: e[n],
                y: e[1 - n],
                width: t[n],
                height: t[1 - n]
            }
        }

        function Wy(e, t) {
            var n = {};
            return n[t.dim + "AxisIndex"] = t.index, e.getCartesian(n)
        }

        function jy(e) {
            return "x" === e.dim ? 0 : 1
        }

        function Xy(e, t, n) {
            if (!zx.node) {
                var i = t.getZr();
                vO(i).records || (vO(i).records = {}), Yy(i, t);
                var r = vO(i).records[e] || (vO(i).records[e] = {});
                r.handler = n
            }
        }

        function Yy(e, t) {
            function n(n, i) {
                e.on(n, function (n) {
                    var r = $y(t);
                    xO(vO(e).records, function (e) {
                        e && i(e, n, r.dispatchAction)
                    }), Uy(r.pendings, t)
                })
            }
            vO(e).initialized || (vO(e).initialized = !0, n("click", S(Zy, "click")), n("mousemove", S(Zy, "mousemove")), n("globalout", qy))
        }

        function Uy(e, t) {
            var n, i = e.showTip.length,
                r = e.hideTip.length;
            i ? n = e.showTip[i - 1] : r && (n = e.hideTip[r - 1]), n && (n.dispatchAction = null, t.dispatchAction(n))
        }

        function qy(e, t, n) {
            e.handler("leave", null, n)
        }

        function Zy(e, t, n, i) {
            t.handler(e, n, i)
        }

        function $y(e) {
            var t = {
                    showTip: [],
                    hideTip: []
                },
                n = function (i) {
                    var r = t[i.type];
                    r ? r.push(i) : (i.dispatchAction = n, e.dispatchAction(i))
                };
            return {
                dispatchAction: n,
                pendings: t
            }
        }

        function Ky(e, t) {
            if (!zx.node) {
                var n = t.getZr(),
                    i = (vO(n).records || {})[e];
                i && (vO(n).records[e] = null)
            }
        }

        function Jy(e, t) {
            var n, i = [],
                r = e.seriesIndex;
            if (null == r || !(n = t.getSeriesByIndex(r))) return {
                point: []
            };
            var o = n.getData(),
                a = Yi(o, e);
            if (null == a || 0 > a || T(a)) return {
                point: []
            };
            var s = o.getItemGraphicEl(a),
                l = n.coordinateSystem;
            if (n.getTooltipPosition) i = n.getTooltipPosition(a) || [];
            else if (l && l.dataToPoint)
                if (e.isStacked) {
                    var u = l.getBaseAxis(),
                        c = l.getOtherAxis(u),
                        p = c.dim,
                        h = u.dim,
                        d = "x" === p || "radius" === p ? 1 : 0,
                        f = o.mapDimension(h),
                        g = [];
                    g[d] = o.get(f, a), g[1 - d] = o.get(o.getCalculationInfo("stackResultDimension"), a), i = l.dataToPoint(g) || []
                } else i = l.dataToPoint(o.getValues(y(l.dimensions, function (e) {
                    return o.mapDimension(e)
                }), a)) || [];
            else if (s) {
                var m = s.getBoundingRect().clone();
                m.applyTransform(s.transform), i = [m.x + m.width / 2, m.y + m.height / 2]
            }
            return {
                point: i,
                el: s
            }
        }

        function Qy(e, t, n) {
            var i = e.currTrigger,
                r = [e.x, e.y],
                o = e,
                a = e.dispatchAction || o_(n.dispatchAction, n),
                s = t.getComponent("axisPointer").coordSysAxesInfo;
            if (s) {
                uv(r) && (r = Jy({
                    seriesIndex: o.seriesIndex,
                    dataIndex: o.dataIndex
                }, t).point);
                var l = uv(r),
                    u = o.axesInfo,
                    c = s.axesInfo,
                    p = "leave" === i || uv(r),
                    h = {},
                    d = {},
                    f = {
                        list: [],
                        map: {}
                    },
                    g = {
                        showPointer: S(nv, d),
                        showTooltip: S(iv, f)
                    };
                m(s.coordSysMap, function (e, t) {
                    var n = l || e.containPoint(r);
                    m(s.coordSysAxesInfo[t], function (e) {
                        var t = e.axis,
                            i = sv(u, e);
                        if (!p && n && (!u || i)) {
                            var o = i && i.value;
                            null != o || l || (o = t.pointToData(r)), null != o && ev(e, o, g, !1, h)
                        }
                    })
                });
                var y = {};
                return m(c, function (e, t) {
                    var n = e.linkGroup;
                    n && !d[t] && m(n.axesInfo, function (t, i) {
                        var r = d[i];
                        if (t !== e && r) {
                            var o = r.value;
                            n.mapper && (o = e.axis.scale.parse(n.mapper(o, lv(t), lv(e)))), y[e.key] = o
                        }
                    })
                }), m(y, function (e, t) {
                    ev(c[t], e, g, !0, h)
                }), rv(d, c, h), ov(f, r, e, a), av(c, a, n), h
            }
        }

        function ev(e, t, n, i, r) {
            var o = e.axis;
            if (!o.scale.isBlank() && o.containData(t)) {
                if (!e.involveSeries) return void n.showPointer(e, t);
                var a = tv(t, e),
                    s = a.payloadBatch,
                    l = a.snapToValue;
                s[0] && null == r.seriesIndex && c(r, s[0]), !i && e.snap && o.containData(l) && null != l && (t = l), n.showPointer(e, t, s), n.showTooltip(e, a, l)
            }
        }

        function tv(e, t) {
            var n = t.axis,
                i = n.dim,
                r = e,
                o = [],
                a = Number.MAX_VALUE,
                s = -1;
            return m(t.seriesModels, function (t) {
                var l, u, c = t.getData().mapDimensionsAll(i);
                if (t.getAxisTooltipData) {
                    var p = t.getAxisTooltipData(c, e, n);
                    u = p.dataIndices, l = p.nestestValue
                } else {
                    if (u = t.getData().indicesOfNearest(c[0], e, "category" === n.type ? .5 : null), !u.length) return;
                    l = t.getData().get(c[0], u[0])
                }
                if (null != l && isFinite(l)) {
                    var h = e - l,
                        d = Math.abs(h);
                    a >= d && ((a > d || h >= 0 && 0 > s) && (a = d, s = h, r = l, o.length = 0), m(u, function (e) {
                        o.push({
                            seriesIndex: t.seriesIndex,
                            dataIndexInside: e,
                            dataIndex: t.getData().getRawIndex(e)
                        })
                    }))
                }
            }), {
                payloadBatch: o,
                snapToValue: r
            }
        }

        function nv(e, t, n, i) {
            e[t.key] = {
                value: n,
                payloadBatch: i
            }
        }

        function iv(e, t, n, i) {
            var r = n.payloadBatch,
                o = t.axis,
                a = o.model,
                s = t.axisPointerModel;
            if (t.triggerTooltip && r.length) {
                var l = t.coordSys.model,
                    u = py(l),
                    c = e.map[u];
                c || (c = e.map[u] = {
                    coordSysId: l.id,
                    coordSysIndex: l.componentIndex,
                    coordSysType: l.type,
                    coordSysMainType: l.mainType,
                    dataByAxis: []
                }, e.list.push(c)), c.dataByAxis.push({
                    axisDim: o.dim,
                    axisIndex: a.componentIndex,
                    axisType: a.type,
                    axisId: a.id,
                    value: i,
                    valueLabelOpt: {
                        precision: s.get(["label", "precision"]),
                        formatter: s.get(["label", "formatter"])
                    },
                    seriesDataIndices: r.slice()
                })
            }
        }

        function rv(e, t, n) {
            var i = n.axesInfo = [];
            m(t, function (t, n) {
                var r = t.axisPointerModel.option,
                    o = e[n];
                o ? (!t.useHandle && (r.status = "show"), r.value = o.value, r.seriesDataIndices = (o.payloadBatch || []).slice()) : !t.useHandle && (r.status = "hide"), "show" === r.status && i.push({
                    axisDim: t.axis.dim,
                    axisIndex: t.axis.model.componentIndex,
                    value: r.value
                })
            })
        }

        function ov(e, t, n, i) {
            if (!uv(t) && e.list.length) {
                var r = ((e.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};
                i({
                    type: "showTip",
                    escapeConnect: !0,
                    x: t[0],
                    y: t[1],
                    tooltipOption: n.tooltipOption,
                    position: n.position,
                    dataIndexInside: r.dataIndexInside,
                    dataIndex: r.dataIndex,
                    seriesIndex: r.seriesIndex,
                    dataByCoordSys: e.list
                })
            } else i({
                type: "hideTip"
            })
        }

        function av(e, t, n) {
            var i = n.getZr(),
                r = "axisPointerLastHighlights",
                o = wO(i)[r] || {},
                a = wO(i)[r] = {};
            m(e, function (e) {
                var t = e.axisPointerModel.option;
                "show" === t.status && m(t.seriesDataIndices, function (e) {
                    var t = e.seriesIndex + " | " + e.dataIndex;
                    a[t] = e
                })
            });
            var s = [],
                l = [];
            m(o, function (e, t) {
                !a[t] && l.push(e)
            }), m(a, function (e, t) {
                !o[t] && s.push(e)
            }), l.length && n.dispatchAction({
                type: "downplay",
                escapeConnect: !0,
                notBlur: !0,
                batch: l
            }), s.length && n.dispatchAction({
                type: "highlight",
                escapeConnect: !0,
                notBlur: !0,
                batch: s
            })
        }

        function sv(e, t) {
            for (var n = 0; n < (e || []).length; n++) {
                var i = e[n];
                if (t.axis.dim === i.axisDim && t.axis.model.componentIndex === i.axisIndex) return i
            }
        }

        function lv(e) {
            var t = e.axis.model,
                n = {},
                i = n.axisDim = e.axis.dim;
            return n.axisIndex = n[i + "AxisIndex"] = t.componentIndex, n.axisName = n[i + "AxisName"] = t.name, n.axisId = n[i + "AxisId"] = t.id, n
        }

        function uv(e) {
            return !e || null == e[0] || isNaN(e[0]) || null == e[1] || isNaN(e[1])
        }

        function cv(e) {
            VN.registerAxisPointerClass("CartesianAxisPointer", gO), e.registerComponentModel(yO), e.registerComponentView(_O), e.registerPreprocessor(function (e) {
                if (e) {
                    (!e.axisPointer || 0 === e.axisPointer.length) && (e.axisPointer = {});
                    var t = e.axisPointer.link;
                    t && !T(t) && (e.axisPointer.link = [t])
                }
            }), e.registerProcessor(e.PRIORITY.PROCESSOR.STATISTIC, function (e, t) {
                e.getComponent("axisPointer").coordSysAxesInfo = ty(e, t)
            }), e.registerAction({
                type: "updateAxisPointer",
                event: "updateAxisPointer",
                update: ":updateAxisPointer"
            }, Qy)
        }

        function pv(e) {
            var t = e.get("confine");
            return null != t ? !!t : "richText" === e.get("renderMode")
        }

        function hv(e) {
            if (zx.domSupported)
                for (var t = document.documentElement.style, n = 0, i = e.length; i > n; n++)
                    if (e[n] in t) return e[n]
        }

        function dv(e, t) {
            if (!e) return t;
            t = Us(t, !0);
            var n = e.indexOf(t);
            return e = -1 === n ? t : "-" + e.slice(0, n) + "-" + t, e.toLowerCase()
        }

        function fv(e, t) {
            var n = e.currentStyle || document.defaultView && document.defaultView.getComputedStyle(e);
            return n ? t ? n[t] : n : null
        }

        function gv(e) {
            return "left" === e ? "right" : "right" === e ? "left" : "top" === e ? "bottom" : "top"
        }

        function mv(e, t, n) {
            if (!M(n) || "inside" === n) return "";
            var i = e.get("backgroundColor"),
                r = e.get("borderWidth");
            t = Qs(t);
            var o, a = gv(n),
                s = Math.max(1.5 * Math.round(r), 6),
                l = "",
                u = MO + ":";
            h(["left", "right"], a) > -1 ? (l += "top:50%", u += "translateY(-50%) rotate(" + (o = "left" === a ? -225 : -45) + "deg)") : (l += "left:50%", u += "translateX(-50%) rotate(" + (o = "top" === a ? 225 : 45) + "deg)");
            var c = o * Math.PI / 180,
                p = s + r,
                d = p * Math.abs(Math.cos(c)) + p * Math.abs(Math.sin(c)),
                f = Math.round(100 * ((d - Math.SQRT2 * r) / 2 + Math.SQRT2 * r - (d - p) / 2)) / 100;
            l += ";" + a + ":-" + f + "px";
            var g = t + " solid " + r + "px;",
                m = ["position:absolute;width:" + s + "px;height:" + s + "px;", l + ";" + u + ";", "border-bottom:" + g, "border-right:" + g, "background-color:" + i + ";"];
            return '<div style="' + m.join("") + '"></div>'
        }

        function yv(e, t) {
            var n = "cubic-bezier(0.23,1,0.32,1)",
                i = " " + e / 2 + "s " + n,
                r = "opacity" + i + ",visibility" + i;
            return t || (i = " " + e + "s " + n, r += zx.transformSupported ? "," + MO + i : ",left" + i + ",top" + i), CO + ":" + r
        }

        function vv(e, t, n) {
            var i = e.toFixed(0) + "px",
                r = t.toFixed(0) + "px";
            if (!zx.transformSupported) return n ? "top:" + r + ";left:" + i + ";" : [
                ["top", r],
                ["left", i]
            ];
            var o = zx.transform3dSupported,
                a = "translate" + (o ? "3d" : "") + "(" + i + "," + r + (o ? ",0" : "") + ")";
            return n ? "top:0;left:0;" + MO + ":" + a + ";" : [
                ["top", 0],
                ["left", 0],
                [SO, a]
            ]
        }

        function xv(e) {
            var t = [],
                n = e.get("fontSize"),
                i = e.getTextColor();
            i && t.push("color:" + i), t.push("font:" + e.getFont()), n && t.push("line-height:" + Math.round(3 * n / 2) + "px");
            var r = e.get("textShadowColor"),
                o = e.get("textShadowBlur") || 0,
                a = e.get("textShadowOffsetX") || 0,
                s = e.get("textShadowOffsetY") || 0;
            return r && o && t.push("text-shadow:" + a + "px " + s + "px " + o + "px " + r), m(["decoration", "align"], function (n) {
                var i = e.get(n);
                i && t.push("text-" + n + ":" + i)
            }), t.join(";")
        }

        function _v(e, t, n) {
            var i = [],
                r = e.get("transitionDuration"),
                o = e.get("backgroundColor"),
                a = e.get("shadowBlur"),
                s = e.get("shadowColor"),
                l = e.get("shadowOffsetX"),
                u = e.get("shadowOffsetY"),
                c = e.getModel("textStyle"),
                p = Wu(e, "html"),
                h = l + "px " + u + "px " + a + "px " + s;
            return i.push("box-shadow:" + h), t && r && i.push(yv(r, n)), o && i.push("background-color:" + o), m(["width", "color", "radius"], function (t) {
                var n = "border-" + t,
                    r = Us(n),
                    o = e.get(r);
                null != o && i.push(n + ":" + o + ("color" === t ? "" : "px"))
            }), i.push(xv(c)), null != p && i.push("padding:" + aM(p).join("px ") + "px"), i.join(";") + ";"
        }

        function wv(e, t, n, i, r) {
            var o = t && t.painter;
            if (n) {
                var a = o && o.getViewportRoot();
                a && we(e, a, document.body, i, r)
            } else {
                e[0] = i, e[1] = r;
                var s = o && o.getViewportRootOffset();
                s && (e[0] += s.offsetLeft, e[1] += s.offsetTop)
            }
            e[2] = e[0] / t.getWidth(), e[3] = e[1] / t.getHeight()
        }

        function bv(e) {
            return Math.max(0, e)
        }

        function Sv(e) {
            var t = bv(e.shadowBlur || 0),
                n = bv(e.shadowOffsetX || 0),
                i = bv(e.shadowOffsetY || 0);
            return {
                left: bv(t - n),
                right: bv(t + n),
                top: bv(t - i),
                bottom: bv(t + i)
            }
        }

        function Tv(e, t, n, i) {
            e[0] = n, e[1] = i, e[2] = e[0] / t.getWidth(), e[3] = e[1] / t.getHeight()
        }

        function Cv(e, t, n) {
            var i, r = t.ecModel;
            n ? (i = new HC(n, r, r), i = new HC(t.option, i, r)) : i = t;
            for (var o = e.length - 1; o >= 0; o--) {
                var a = e[o];
                a && (a instanceof HC && (a = a.get("tooltip", !0)), M(a) && (a = {
                    formatter: a
                }), a && (i = new HC(a, i, r)))
            }
            return i
        }

        function Mv(e, t) {
            return e.dispatchAction || o_(t.dispatchAction, t)
        }

        function Iv(e, t, n, i, r, o, a) {
            var s = n.getSize(),
                l = s[0],
                u = s[1];
            return null != o && (e + l + o + 2 > i ? e -= l + o : e += o), null != a && (t + u + a > r ? t -= u + a : t += a), [e, t]
        }

        function kv(e, t, n, i, r) {
            var o = n.getSize(),
                a = o[0],
                s = o[1];
            return e = Math.min(e + a, i) - a, t = Math.min(t + s, r) - s, e = Math.max(e, 0), t = Math.max(t, 0), [e, t]
        }

        function Dv(e, t, n, i) {
            var r = n[0],
                o = n[1],
                a = Math.ceil(Math.SQRT2 * i) + 8,
                s = 0,
                l = 0,
                u = t.width,
                c = t.height;
            switch (e) {
                case "inside":
                    s = t.x + u / 2 - r / 2, l = t.y + c / 2 - o / 2;
                    break;
                case "top":
                    s = t.x + u / 2 - r / 2, l = t.y - o - a;
                    break;
                case "bottom":
                    s = t.x + u / 2 - r / 2, l = t.y + c + a;
                    break;
                case "left":
                    s = t.x - r - a, l = t.y + c / 2 - o / 2;
                    break;
                case "right":
                    s = t.x + u + a, l = t.y + c / 2 - o / 2
            }
            return [s, l]
        }

        function Av(e) {
            return "center" === e || "middle" === e
        }

        function Pv(e, t, n) {
            var i = Zi(e).queryOptionMap,
                r = i.keys()[0];
            if (r && "series" !== r) {
                var o = $i(t, r, i.get(r), {
                        useDefault: !1,
                        enableAll: !1,
                        enableNone: !1
                    }),
                    a = o.models[0];
                if (a) {
                    var s, l = n.getViewOfComponentModel(a);
                    return l.group.traverse(function (t) {
                        var n = KS(t).tooltipConfig;
                        return n && n.name === e.name ? (s = t, !0) : void 0
                    }), s ? {
                        componentMainType: r,
                        componentIndex: a.componentIndex,
                        el: s
                    } : void 0
                }
            }
        }

        function Lv(e) {
            cd(cv), e.registerComponentModel(bO), e.registerComponentView(PO), e.registerAction({
                type: "showTip",
                event: "showTip",
                update: "tooltip:manuallyShowTip"
            }, K), e.registerAction({
                type: "hideTip",
                event: "hideTip",
                update: "tooltip:manuallyHideTip"
            }, K)
        }

        function Nv(e) {
            var t = e.fill;
            return null != t && t !== BO
        }

        function Ov(e) {
            var t = e.stroke;
            return null != t && t !== BO
        }

        function Ev(e, t, n, i) {
            var r = null == t.opacity ? 1 : t.opacity;
            if (n instanceof FS) e("opacity", r);
            else {
                if (Nv(t)) {
                    var o = Yt(t.fill);
                    e("fill", o.color);
                    var a = null != t.fillOpacity ? t.fillOpacity * o.opacity * r : o.opacity * r;
                    (i || 1 > a) && e("fill-opacity", a)
                } else e("fill", BO);
                if (Ov(t)) {
                    var s = Yt(t.stroke);
                    e("stroke", s.color);
                    var l = t.strokeNoScale ? n.getLineScale() : 1,
                        u = l ? (t.lineWidth || 0) / l : 0,
                        c = null != t.strokeOpacity ? t.strokeOpacity * s.opacity * r : s.opacity * r,
                        p = t.strokeFirst;
                    if ((i || 1 !== u) && e("stroke-width", u), (i || p) && e("paint-order", p ? "stroke" : "fill"), (i || 1 > c) && e("stroke-opacity", c), t.lineDash) {
                        var h = Hc(n),
                            d = h[0],
                            f = h[1];
                        d && (f = FO(f || 0), e("stroke-dasharray", d.join(",")), (f || i) && e("stroke-dashoffset", f))
                    } else i && e("stroke-dasharray", BO);
                    for (var g = 0; g < HO.length; g++) {
                        var m = HO[g];
                        if (i || t[m] !== PS[m]) {
                            var y = t[m] || PS[m];
                            y && e(GO[g], y)
                        }
                    }
                } else i && e("stroke", BO)
            }
        }

        function Rv(e) {
            return document.createElementNS(VO, e)
        }

        function zv(e, t, n, i, r) {
            return {
                tag: e,
                attrs: n || {},
                children: i,
                text: r,
                key: t
            }
        }

        function Bv(e, t) {
            var n = [];
            if (t)
                for (var i in t) {
                    var r = t[i],
                        o = i;
                    !1 !== r && (!0 !== r && null != r && (o += '="' + r + '"'), n.push(o))
                }
            return "<" + e + " " + n.join(" ") + ">"
        }

        function Fv(e) {
            return "</" + e + ">"
        }

        function Hv(e, t) {
            function n(e) {
                var t = e.children,
                    r = e.tag,
                    o = e.attrs;
                return Bv(r, o) + Me(e.text) + (t ? "" + i + y(t, function (e) {
                    return n(e)
                }).join(i) + i : "") + Fv(r)
            }
            t = t || {};
            var i = t.newline ? "\n" : "";
            return n(e)
        }

        function Gv(e, t, n) {
            n = n || {};
            var i = n.newline ? "\n" : "",
                r = " {" + i,
                o = i + "}",
                a = y(w(e), function (t) {
                    return t + r + y(w(e[t]), function (n) {
                        return n + ":" + e[t][n] + ";"
                    }).join(i) + o
                }).join(i),
                s = y(w(t), function (e) {
                    return "@keyframes " + e + r + y(w(t[e]), function (n) {
                        return n + r + y(w(t[e][n]), function (i) {
                            var r = t[e][n][i];
                            return "d" === i && (r = 'path("' + r + '")'), i + ":" + r + ";"
                        }).join(i) + o
                    }).join(i) + o
                }).join(i);
            return a || s ? ["<![CDATA[", a, s, "]]>"].join(i) : ""
        }

        function Vv(e) {
            return {
                zrId: e,
                shadowCache: {},
                patternCache: {},
                gradientCache: {},
                clipPathCache: {},
                defs: {},
                cssNodes: {},
                cssAnims: {},
                cssClassIdx: 0,
                cssAnimIdx: 0,
                shadowIdx: 0,
                gradientIdx: 0,
                patternIdx: 0,
                clipPathIdx: 0
            }
        }

        function Wv(e, t, n, i) {
            return zv("svg", "root", {
                width: e,
                height: t,
                xmlns: VO,
                "xmlns:xlink": WO,
                version: "1.1",
                baseProfile: "full",
                viewBox: !!i && "0 0 " + e + " " + t
            }, n)
        }

        function jv(e, t, n) {
            var i = c({}, e.shape);
            c(i, t), e.buildPath(n, i);
            var r = new zO;
            return r.reset(ln(e)), n.rebuildPath(r, 1), r.generateStr(), r.getStr()
        }

        function Xv(e, t) {
            var n = t.originX,
                i = t.originY;
            (n || i) && (e[UO] = n + "px " + i + "px")
        }

        function Yv(e, t) {
            var n = t.zrId + "-ani-" + t.cssAnimIdx++;
            return t.cssAnims[n] = e, n
        }

        function Uv(e, t, n) {
            var i, r, o = e.shape.paths,
                a = {};
            if (m(o, function (e) {
                    var t = Vv(n.zrId);
                    t.animation = !0, Zv(e, {}, t, !0);
                    var o = t.cssAnims,
                        s = t.cssNodes,
                        l = w(o),
                        u = l.length;
                    if (u) {
                        r = l[u - 1];
                        var c = o[r];
                        for (var p in c) {
                            var h = c[p];
                            a[p] = a[p] || {
                                d: ""
                            }, a[p].d += h.d || ""
                        }
                        for (var d in s) {
                            var f = s[d].animation;
                            f.indexOf(r) >= 0 && (i = f)
                        }
                    }
                }), i) {
                t.d = !1;
                var s = Yv(a, n);
                return i.replace(r, s)
            }
        }

        function qv(e) {
            return M(e) ? YO[e] ? "cubic-bezier(" + YO[e] + ")" : St(e) ? e : "" : ""
        }

        function Zv(e, t, n, i) {
            function r(r) {
                function o(e, t, n) {
                    for (var i = e.getTracks(), r = e.getMaxTime(), o = 0; o < i.length; o++) {
                        var a = i[o];
                        if (a.needsAnimate()) {
                            var s = a.keyframes,
                                l = a.propName;
                            if (n && (l = n(l)), l)
                                for (var u = 0; u < s.length; u++) {
                                    var c = s[u],
                                        p = Math.round(c.time / r * 100) + "%",
                                        d = qv(c.easing),
                                        f = c.rawValue;
                                    (M(f) || k(f)) && (t[p] = t[p] || {}, t[p][l] = c.rawValue, d && (t[p][h] = d))
                                }
                        }
                    }
                }
                for (var a = r[1], s = a.length, l = {}, u = {}, p = {}, h = "animation-timing-function", d = 0; s > d; d++) {
                    var f = a[d],
                        g = f.targetName;
                    g ? "shape" === g && o(f, u) : !i && o(f, l)
                }
                for (var m in l) {
                    var y = {};
                    Nn(y, e), c(y, l[m]);
                    var v = un(y),
                        _ = l[m][h];
                    p[m] = v ? {
                        transform: v
                    } : {}, Xv(p[m], y), _ && (p[m][h] = _)
                }
                var b, S = !0;
                for (var m in u) {
                    p[m] = p[m] || {};
                    var T = !b;
                    _ = u[m][h];
                    T && (b = new SS);
                    var C = b.len();
                    b.reset(), p[m].d = jv(e, u[m], b);
                    var I = b.len();
                    if (!T && C !== I) {
                        S = !1;
                        break
                    }
                    _ && (p[m][h] = _)
                }
                if (!S)
                    for (var m in p) delete p[m].d;
                if (!i)
                    for (d = 0; s > d; d++) {
                        f = a[d], g = f.targetName;
                        "style" === g && o(f, p, function (e) {
                            return qO[e]
                        })
                    }
                var D, A = w(p),
                    P = !0;
                for (d = 1; d < A.length; d++) {
                    var L = A[d - 1],
                        N = A[d];
                    if (p[L][UO] !== p[N][UO]) {
                        P = !1;
                        break
                    }
                    D = p[L][UO]
                }
                if (P && D) {
                    for (var m in p) p[m][UO] && delete p[m][UO];
                    t[UO] = D
                }
                if (x(A, function (e) {
                        return w(p[e]).length > 0
                    }).length) {
                    var O = Yv(p, n);
                    return O + " " + r[0] + " both"
                }
            }
            var o = e.animators,
                a = o.length,
                s = [];
            if (e instanceof aC) {
                var l = Uv(e, t, n);
                if (l) s.push(l);
                else if (!a) return
            } else if (!a) return;
            for (var u = {}, p = 0; a > p; p++) {
                var h = o[p],
                    d = [h.getMaxTime() / 1e3 + "s"],
                    f = qv(h.getClip().easing),
                    g = h.getDelay();
                d.push(f || "linear"), g && d.push(g / 1e3 + "s"), h.getLoop() && d.push("infinite");
                var m = d.join(" ");
                u[m] = u[m] || [m, []], u[m][1].push(h)
            }
            for (var y in u) {
                l = r(u[y]);
                l && s.push(l)
            }
            if (s.length) {
                var v = n.zrId + "-cls-" + n.cssClassIdx++;
                n.cssNodes["." + v] = {
                    animation: s.join(",")
                }, t.class = v
            }
        }

        function $v(e) {
            return e && M(e.src)
        }

        function Kv(e) {
            return e && C(e.toDataURL)
        }

        function Jv(e, t, n, i) {
            Ev(function (r, o) {
                var a = "fill" === r || "stroke" === r;
                a && an(o) ? px(t, e, r, i) : a && nn(o) ? hx(n, e, r, i) : e[r] = o
            }, t, n, !1), cx(n, e, i)
        }

        function Qv(e) {
            return Ut(e[0] - 1) && Ut(e[1]) && Ut(e[2]) && Ut(e[3] - 1)
        }

        function ex(e) {
            return Ut(e[4]) && Ut(e[5])
        }

        function tx(e, t, n) {
            if (t && (!ex(t) || !Qv(t))) {
                var i = n ? 10 : 1e4;
                e.transform = Qv(t) ? "translate(" + ZO(t[4] * i) / i + " " + ZO(t[5] * i) / i + ")" : $t(t)
            }
        }

        function nx(e, t, n) {
            for (var i = e.points, r = [], o = 0; o < i.length; o++) r.push(ZO(i[o][0] * n) / n), r.push(ZO(i[o][1] * n) / n);
            t.points = r.join(" ")
        }

        function ix(e) {
            return !e.smooth
        }

        function rx(e) {
            var t = y(e, function (e) {
                return "string" == typeof e ? [e, e] : e
            });
            return function (e, n, i) {
                for (var r = 0; r < t.length; r++) {
                    var o = t[r],
                        a = e[o[0]];
                    null != a && (n[o[1]] = ZO(a * i) / i)
                }
            }
        }

        function ox(e) {
            for (var t = e.animators, n = 0; n < t.length; n++)
                if ("shape" === t[n].targetName) return !0;
            return !1
        }

        function ax(e, t) {
            var n = e.style,
                i = e.shape,
                r = $O[e.type],
                o = {},
                a = t.animation,
                s = "path",
                l = e.style.strokePercent,
                u = t.compress && ln(e) || 4;
            if (!r || t.willUpdate || r[1] && !r[1](i) || a && ox(e) || 1 > l) {
                e.path || e.createPathProxy();
                var c = e.path;
                e.shapeChanged() && (c.beginPath(), e.buildPath(c, e.shape), e.pathUpdated());
                var p = c.getVersion(),
                    h = e,
                    d = h.__svgPathBuilder;
                h.__svgPathVersion === p && d && l === h.__svgPathStrokePercent || (d || (d = h.__svgPathBuilder = new zO), d.reset(u), c.rebuildPath(d, l), d.generateStr(), h.__svgPathVersion = p, h.__svgPathStrokePercent = l), o.d = d.getStr()
            } else {
                s = e.type;
                var f = Math.pow(10, u);
                r[0](i, o, f)
            }
            return tx(o, e.transform), Jv(o, n, e, t), t.animation && Zv(e, o, t), zv(s, e.id + "", o)
        }

        function sx(e, t) {
            var n = e.style,
                i = n.image;
            if (i && !M(i) && ($v(i) ? i = i.src : Kv(i) && (i = i.toDataURL())), i) {
                var r = n.x || 0,
                    o = n.y || 0,
                    a = n.width,
                    s = n.height,
                    l = {
                        href: i,
                        width: a,
                        height: s
                    };
                return r && (l.x = r), o && (l.y = o), tx(l, e.transform), Jv(l, n, e, t), t.animation && Zv(e, l, t), zv("image", e.id + "", l)
            }
        }

        function lx(e, t) {
            var n = e.style,
                i = n.text;
            if (null != i && (i += ""), i && !isNaN(n.x) && !isNaN(n.y)) {
                var r = n.font || Hx,
                    o = n.x || 0,
                    a = Kt(n.y || 0, Fn(r), n.textBaseline),
                    s = Tw[n.textAlign] || n.textAlign,
                    l = {
                        "dominant-baseline": "central",
                        "text-anchor": s
                    };
                if (eo(n)) {
                    var u = "",
                        c = n.fontStyle,
                        p = Jr(n.fontSize);
                    if (!parseFloat(p)) return;
                    var h = n.fontFamily || Fx,
                        d = n.fontWeight;
                    u += "font-size:" + p + ";font-family:" + h + ";", c && "normal" !== c && (u += "font-style:" + c + ";"), d && "normal" !== d && (u += "font-weight:" + d + ";"), l.style = u
                } else l.style = "font: " + r;
                return i.match(/\s/) && (l["xml:space"] = "preserve"), o && (l.x = o), a && (l.y = a), tx(l, e.transform), Jv(l, n, e, t), t.animation && Zv(e, l, t), zv("text", e.id + "", l, void 0, i)
            }
        }

        function ux(e, t) {
            return e instanceof OS ? ax(e, t) : e instanceof FS ? sx(e, t) : e instanceof RS ? lx(e, t) : void 0
        }

        function cx(e, t, n) {
            var i = e.style;
            if (Jt(i)) {
                var r = Qt(e),
                    o = n.shadowCache,
                    a = o[r];
                if (!a) {
                    var s = e.getGlobalScale(),
                        l = s[0],
                        u = s[1];
                    if (!l || !u) return;
                    var c = i.shadowOffsetX || 0,
                        p = i.shadowOffsetY || 0,
                        h = i.shadowBlur,
                        d = Yt(i.shadowColor),
                        f = d.opacity,
                        g = d.color,
                        m = h / 2 / l,
                        y = h / 2 / u,
                        v = m + " " + y;
                    a = n.zrId + "-s" + n.shadowIdx++, n.defs[a] = zv("filter", a, {
                        id: a,
                        x: "-100%",
                        y: "-100%",
                        width: "300%",
                        height: "300%"
                    }, [zv("feDropShadow", "", {
                        dx: c / l,
                        dy: p / u,
                        stdDeviation: v,
                        "flood-color": g,
                        "flood-opacity": f
                    })]), o[r] = a
                }
                t.filter = sn(a)
            }
        }

        function px(e, t, n, i) {
            var r, o = e[n],
                a = {
                    gradientUnits: o.global ? "userSpaceOnUse" : "objectBoundingBox"
                };
            if (rn(o)) r = "linearGradient", a.x1 = o.x, a.y1 = o.y, a.x2 = o.x2, a.y2 = o.y2;
            else {
                if (!on(o)) return;
                r = "radialGradient", a.cx = B(o.x, .5), a.cy = B(o.y, .5), a.r = B(o.r, .5)
            }
            for (var s = o.colorStops, l = [], u = 0, c = s.length; c > u; ++u) {
                var p = 100 * Zt(s[u].offset) + "%",
                    h = s[u].color,
                    d = Yt(h),
                    f = d.color,
                    g = d.opacity,
                    m = {
                        offset: p
                    };
                m["stop-color"] = f, 1 > g && (m["stop-opacity"] = g), l.push(zv("stop", u + "", m))
            }
            var y = zv(r, "", a, l),
                v = Hv(y),
                x = i.gradientCache,
                _ = x[v];
            _ || (_ = i.zrId + "-g" + i.gradientIdx++, x[v] = _, a.id = _, i.defs[_] = zv(r, _, a, l)), t[n] = sn(_)
        }

        function hx(e, t, n, i) {
            var r, o = e.style[n],
                a = {
                    patternUnits: "userSpaceOnUse"
                };
            if (en(o)) {
                var l = o.imageWidth,
                    u = o.imageHeight,
                    c = void 0,
                    p = o.image;
                if (M(p) ? c = p : $v(p) ? c = p.src : Kv(p) && (c = p.toDataURL()), "undefined" == typeof Image) {
                    var h = "Image width/height must been given explictly in svg-ssr renderer.";
                    V(l, h), V(u, h)
                } else if (null == l || null == u) {
                    var d = function (e, t) {
                            if (e) {
                                var n = e.elm,
                                    i = e.attrs.width = l || t.width,
                                    r = e.attrs.height = u || t.height;
                                n && (n.setAttribute("width", i), n.setAttribute("height", r))
                            }
                        },
                        f = dr(c, null, e, function (e) {
                            d(g, e), d(r, e)
                        });
                    f && f.width && f.height && (l = l || f.width, u = u || f.height)
                }
                r = zv("image", "img", {
                    href: c,
                    width: l,
                    height: u
                }), a.width = l, a.height = u
            } else o.svgElement && (r = s(o.svgElement), a.width = o.svgWidth, a.height = o.svgHeight);
            if (r) {
                a.patternTransform = un(o);
                var g = zv("pattern", "", a, [r]),
                    m = Hv(g),
                    y = i.patternCache,
                    v = y[m];
                v || (v = i.zrId + "-p" + i.patternIdx++, y[m] = v, a.id = v, g = i.defs[v] = zv("pattern", v, a, [r])), t[n] = sn(v)
            }
        }

        function dx(e, t, n) {
            var i = n.clipPathCache,
                r = n.defs,
                o = i[e.id];
            if (!o) {
                o = n.zrId + "-c" + n.clipPathIdx++;
                var a = {
                    id: o
                };
                i[e.id] = o, r[o] = zv("clipPath", o, a, [ax(e, n)])
            }
            t["clip-path"] = sn(o)
        }

        function fx(e) {
            return document.createTextNode(e)
        }

        function gx(e, t, n) {
            e.insertBefore(t, n)
        }

        function mx(e, t) {
            e.removeChild(t)
        }

        function yx(e, t) {
            e.appendChild(t)
        }

        function vx(e) {
            return e.parentNode
        }

        function xx(e) {
            return e.nextSibling
        }

        function _x(e, t) {
            e.textContent = t
        }

        function bx(e) {
            return void 0 === e
        }

        function Sx(e) {
            return void 0 !== e
        }

        function Tx(e, t, n) {
            for (var i = {}, r = t; n >= r; ++r) {
                var o = e[r].key;
                void 0 !== o && (i[o] = r)
            }
            return i
        }

        function Cx(e, t) {
            var n = e.key === t.key,
                i = e.tag === t.tag;
            return i && n
        }

        function Mx(e) {
            var t, n = e.children,
                i = e.tag;
            if (Sx(i)) {
                var r = e.elm = Rv(i);
                if (Dx(QO, e), T(n))
                    for (t = 0; t < n.length; ++t) {
                        var o = n[t];
                        null != o && yx(r, Mx(o))
                    } else Sx(e.text) && !D(e.text) && yx(r, fx(e.text))
            } else e.elm = fx(e.text);
            return e.elm
        }

        function Ix(e, t, n, i, r) {
            for (; r >= i; ++i) {
                var o = n[i];
                null != o && gx(e, Mx(o), t)
            }
        }

        function kx(e, t, n, i) {
            for (; i >= n; ++n) {
                var r = t[n];
                if (null != r)
                    if (Sx(r.tag)) {
                        var o = vx(r.elm);
                        mx(o, r.elm)
                    } else mx(e, r.elm)
            }
        }

        function Dx(e, t) {
            var n, i = t.elm,
                r = e && e.attrs || {},
                o = t.attrs || {};
            if (r !== o) {
                for (n in o) {
                    var a = o[n],
                        s = r[n];
                    s !== a && (!0 === a ? i.setAttribute(n, "") : !1 === a ? i.removeAttribute(n) : n.charCodeAt(0) !== JO ? i.setAttribute(n, a) : "xmlns:xlink" === n || "xmlns" === n ? i.setAttributeNS(jO, n, a) : n.charCodeAt(3) === KO ? i.setAttributeNS(XO, n, a) : n.charCodeAt(5) === KO ? i.setAttributeNS(WO, n, a) : i.setAttribute(n, a))
                }
                for (n in r) n in o || i.removeAttribute(n)
            }
        }

        function Ax(e, t, n) {
            for (var i, r, o, a, s = 0, l = 0, u = t.length - 1, c = t[0], p = t[u], h = n.length - 1, d = n[0], f = n[h]; u >= s && h >= l;) null == c ? c = t[++s] : null == p ? p = t[--u] : null == d ? d = n[++l] : null == f ? f = n[--h] : Cx(c, d) ? (Px(c, d), c = t[++s], d = n[++l]) : Cx(p, f) ? (Px(p, f), p = t[--u], f = n[--h]) : Cx(c, f) ? (Px(c, f), gx(e, c.elm, xx(p.elm)), c = t[++s], f = n[--h]) : Cx(p, d) ? (Px(p, d), gx(e, p.elm, c.elm), p = t[--u], d = n[++l]) : (bx(i) && (i = Tx(t, s, u)), r = i[d.key], bx(r) ? gx(e, Mx(d), c.elm) : (o = t[r], o.tag !== d.tag ? gx(e, Mx(d), c.elm) : (Px(o, d), t[r] = void 0, gx(e, o.elm, c.elm))), d = n[++l]);
            (u >= s || h >= l) && (s > u ? (a = null == n[h + 1] ? null : n[h + 1].elm, Ix(e, a, n, l, h)) : kx(e, t, s, u))
        }

        function Px(e, t) {
            var n = t.elm = e.elm,
                i = e.children,
                r = t.children;
            e !== t && (Dx(e, t), bx(t.text) ? Sx(i) && Sx(r) ? i !== r && Ax(n, i, r) : Sx(r) ? (Sx(e.text) && _x(n, ""), Ix(n, null, r, 0, r.length - 1)) : Sx(i) ? kx(n, i, 0, i.length - 1) : Sx(e.text) && _x(n, "") : e.text !== t.text && (Sx(i) && kx(n, i, 0, i.length - 1), _x(n, t.text)))
        }

        function Lx(e, t) {
            if (Cx(e, t)) Px(e, t);
            else {
                var n = e.elm,
                    i = vx(n);
                Mx(t), null !== i && (gx(i, t.elm, xx(n)), kx(i, [e], 0, 0))
            }
            return t
        }

        function Nx() {
            return function () {}
        }
        var Ox = function (e, t) {
                return (Ox = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function (e, t) {
                        e.__proto__ = t
                    } || function (e, t) {
                        for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
                    })(e, t)
            },
            Ex = function () {
                function e() {
                    this.firefox = !1, this.ie = !1, this.edge = !1, this.newEdge = !1, this.weChat = !1
                }
                return e
            }(),
            Rx = function () {
                function e() {
                    this.browser = new Ex, this.node = !1, this.wxa = !1, this.worker = !1, this.svgSupported = !1, this.touchEventsSupported = !1, this.pointerEventsSupported = !1, this.domSupported = !1, this.transformSupported = !1, this.transform3dSupported = !1, this.hasGlobalWindow = "undefined" != typeof window
                }
                return e
            }(),
            zx = new Rx;
        "object" == typeof wx && "function" == typeof wx.getSystemInfoSync ? (zx.wxa = !0, zx.touchEventsSupported = !0) : "undefined" == typeof document && "undefined" != typeof self ? zx.worker = !0 : "undefined" == typeof navigator ? (zx.node = !0, zx.svgSupported = !0) : n(navigator.userAgent, zx);
        var Bx = 12,
            Fx = "sans-serif",
            Hx = Bx + "px " + Fx,
            Gx = 20,
            Vx = 100,
            Wx = "007LLmW'55;N0500LLLLLLLLLL00NNNLzWW\\\\WQb\\0FWLg\\bWb\\WQ\\WrWWQ000CL5LLFLL0LL**F*gLLLL5F0LF\\FFF5.5N",
            jx = i(Wx),
            Xx = {
                createCanvas: function () {
                    return "undefined" != typeof document && document.createElement("canvas")
                },
                measureText: function () {
                    var e, t;
                    return function (n, i) {
                        if (!e) {
                            var r = Xx.createCanvas();
                            e = r && r.getContext("2d")
                        }
                        if (e) return t !== i && (t = e.font = i || Hx), e.measureText(n);
                        n = n || "", i = i || Hx;
                        var o = /^([0-9]*?)px$/.exec(i),
                            a = +(o && o[1]) || Bx,
                            s = 0;
                        if (i.indexOf("mono") >= 0) s = a * n.length;
                        else
                            for (var l = 0; l < n.length; l++) {
                                var u = jx[n[l]];
                                s += null == u ? a : u * a
                            }
                        return {
                            width: s
                        }
                    }
                }(),
                loadImage: function (e, t, n) {
                    var i = new Image;
                    return i.onload = t, i.onerror = n, i.src = e, i
                }
            },
            Yx = v(["Function", "RegExp", "Date", "Error", "CanvasGradient", "CanvasPattern", "Image", "Canvas"], function (e, t) {
                return e["[object " + t + "]"] = !0, e
            }, {}),
            Ux = v(["Int8", "Uint8", "Uint8Clamped", "Int16", "Uint16", "Int32", "Uint32", "Float32", "Float64"], function (e, t) {
                return e["[object " + t + "Array]"] = !0, e
            }, {}),
            qx = Object.prototype.toString,
            Zx = Array.prototype,
            $x = Zx.forEach,
            Kx = Zx.filter,
            Jx = Zx.slice,
            Qx = Zx.map,
            e_ = function () {}.constructor,
            t_ = e_ ? e_.prototype : null,
            n_ = "__proto__",
            i_ = 2311,
            r_ = Xx.createCanvas,
            o_ = t_ && C(t_.bind) ? t_.call.bind(t_.bind) : b,
            a_ = "__ec_primitive__",
            s_ = function () {
                function e(t) {
                    function n(e, t) {
                        i ? r.set(e, t) : r.set(t, e)
                    }
                    this.data = {};
                    var i = T(t);
                    this.data = {};
                    var r = this;
                    t instanceof e ? t.each(n) : t && m(t, n)
                }
                return e.prototype.get = function (e) {
                    return this.data.hasOwnProperty(e) ? this.data[e] : null
                }, e.prototype.set = function (e, t) {
                    return this.data[e] = t
                }, e.prototype.each = function (e, t) {
                    for (var n in this.data) this.data.hasOwnProperty(n) && e.call(t, this.data[n], n)
                }, e.prototype.keys = function () {
                    return w(this.data)
                }, e.prototype.removeKey = function (e) {
                    delete this.data[e]
                }, e
            }(),
            l_ = 180 / Math.PI,
            u_ = (Object.freeze || Object)({
                guid: o,
                logError: a,
                clone: s,
                merge: l,
                mergeAll: u,
                extend: c,
                defaults: p,
                createCanvas: r_,
                indexOf: h,
                inherits: d,
                mixin: f,
                isArrayLike: g,
                each: m,
                map: y,
                reduce: v,
                filter: x,
                find: _,
                keys: w,
                bind: o_,
                curry: S,
                isArray: T,
                isFunction: C,
                isString: M,
                isStringSafe: I,
                isNumber: k,
                isObject: D,
                isBuiltInObject: A,
                isTypedArray: P,
                isDom: L,
                isGradientObject: N,
                isImagePatternObject: O,
                isRegExp: E,
                eqNaN: R,
                retrieve: z,
                retrieve2: B,
                retrieve3: F,
                slice: H,
                normalizeCssArray: G,
                assert: V,
                trim: W,
                setAsPrimitive: j,
                isPrimitive: X,
                HashMap: s_,
                createHashMap: Y,
                concatArray: U,
                createObject: q,
                disableUserSelect: Z,
                hasOwn: $,
                noop: K,
                RADIAN_TO_DEGREE: l_
            }),
            c_ = oe,
            p_ = ae,
            h_ = he,
            d_ = de,
            f_ = (Object.freeze || Object)({
                create: J,
                copy: Q,
                clone: ee,
                set: te,
                add: ne,
                scaleAndAdd: ie,
                sub: re,
                len: oe,
                length: c_,
                lenSquare: ae,
                lengthSquare: p_,
                mul: se,
                div: le,
                dot: ue,
                scale: ce,
                normalize: pe,
                distance: he,
                dist: h_,
                distanceSquare: de,
                distSquare: d_,
                negate: fe,
                lerp: ge,
                applyTransform: me,
                min: ye,
                max: ve
            }),
            g_ = function () {
                function e(e, t) {
                    this.target = e, this.topTarget = t && t.topTarget
                }
                return e
            }(),
            m_ = function () {
                function e(e) {
                    this.handler = e, e.on("mousedown", this._dragStart, this), e.on("mousemove", this._drag, this), e.on("mouseup", this._dragEnd, this)
                }
                return e.prototype._dragStart = function (e) {
                    for (var t = e.target; t && !t.draggable;) t = t.parent || t.__hostTarget;
                    t && (this._draggingTarget = t, t.dragging = !0, this._x = e.offsetX, this._y = e.offsetY, this.handler.dispatchToElement(new g_(t, e), "dragstart", e.event))
                }, e.prototype._drag = function (e) {
                    var t = this._draggingTarget;
                    if (t) {
                        var n = e.offsetX,
                            i = e.offsetY,
                            r = n - this._x,
                            o = i - this._y;
                        this._x = n, this._y = i, t.drift(r, o, e), this.handler.dispatchToElement(new g_(t, e), "drag", e.event);
                        var a = this.handler.findHover(n, i, t).target,
                            s = this._dropTarget;
                        this._dropTarget = a, t !== a && (s && a !== s && this.handler.dispatchToElement(new g_(s, e), "dragleave", e.event), a && a !== s && this.handler.dispatchToElement(new g_(a, e), "dragenter", e.event))
                    }
                }, e.prototype._dragEnd = function (e) {
                    var t = this._draggingTarget;
                    t && (t.dragging = !1), this.handler.dispatchToElement(new g_(t, e), "dragend", e.event), this._dropTarget && this.handler.dispatchToElement(new g_(this._dropTarget, e), "drop", e.event), this._draggingTarget = null, this._dropTarget = null
                }, e
            }(),
            y_ = function () {
                function e(e) {
                    e && (this._$eventProcessor = e)
                }
                return e.prototype.on = function (e, t, n, i) {
                    this._$handlers || (this._$handlers = {});
                    var r = this._$handlers;
                    if ("function" == typeof t && (i = n, n = t, t = null), !n || !e) return this;
                    var o = this._$eventProcessor;
                    null != t && o && o.normalizeQuery && (t = o.normalizeQuery(t)), r[e] || (r[e] = []);
                    for (var a = 0; a < r[e].length; a++)
                        if (r[e][a].h === n) return this;
                    var s = {
                            h: n,
                            query: t,
                            ctx: i || this,
                            callAtLast: n.zrEventfulCallAtLast
                        },
                        l = r[e].length - 1,
                        u = r[e][l];
                    return u && u.callAtLast ? r[e].splice(l, 0, s) : r[e].push(s), this
                }, e.prototype.isSilent = function (e) {
                    var t = this._$handlers;
                    return !t || !t[e] || !t[e].length
                }, e.prototype.off = function (e, t) {
                    var n = this._$handlers;
                    if (!n) return this;
                    if (!e) return this._$handlers = {}, this;
                    if (t) {
                        if (n[e]) {
                            for (var i = [], r = 0, o = n[e].length; o > r; r++) n[e][r].h !== t && i.push(n[e][r]);
                            n[e] = i
                        }
                        n[e] && 0 === n[e].length && delete n[e]
                    } else delete n[e];
                    return this
                }, e.prototype.trigger = function (e) {
                    for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
                    if (!this._$handlers) return this;
                    var i = this._$handlers[e],
                        r = this._$eventProcessor;
                    if (i)
                        for (var o = t.length, a = i.length, s = 0; a > s; s++) {
                            var l = i[s];
                            if (!r || !r.filter || null == l.query || r.filter(e, l.query)) switch (o) {
                                case 0:
                                    l.h.call(l.ctx);
                                    break;
                                case 1:
                                    l.h.call(l.ctx, t[0]);
                                    break;
                                case 2:
                                    l.h.call(l.ctx, t[0], t[1]);
                                    break;
                                default:
                                    l.h.apply(l.ctx, t)
                            }
                        }
                    return r && r.afterTrigger && r.afterTrigger(e), this
                }, e.prototype.triggerWithContext = function (e) {
                    for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
                    if (!this._$handlers) return this;
                    var i = this._$handlers[e],
                        r = this._$eventProcessor;
                    if (i)
                        for (var o = t.length, a = t[o - 1], s = i.length, l = 0; s > l; l++) {
                            var u = i[l];
                            if (!r || !r.filter || null == u.query || r.filter(e, u.query)) switch (o) {
                                case 0:
                                    u.h.call(a);
                                    break;
                                case 1:
                                    u.h.call(a, t[0]);
                                    break;
                                case 2:
                                    u.h.call(a, t[0], t[1]);
                                    break;
                                default:
                                    u.h.apply(a, t.slice(1, o - 1))
                            }
                        }
                    return r && r.afterTrigger && r.afterTrigger(e), this
                }, e
            }(),
            v_ = Math.log(2),
            x_ = "___zrEVENTSAVED",
            __ = [],
            w_ = /([&<>"'])/g,
            b_ = {
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#39;"
            },
            S_ = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
            T_ = [],
            C_ = zx.browser.firefox && +zx.browser.version.split(".")[0] < 39,
            M_ = function (e) {
                e.preventDefault(), e.stopPropagation(), e.cancelBubble = !0
            },
            I_ = function () {
                function e() {
                    this._track = []
                }
                return e.prototype.recognize = function (e, t, n) {
                    return this._doTrack(e, t, n), this._recognize(e)
                }, e.prototype.clear = function () {
                    return this._track.length = 0, this
                }, e.prototype._doTrack = function (e, t, n) {
                    var i = e.touches;
                    if (i) {
                        for (var r = {
                                points: [],
                                touches: [],
                                target: t,
                                event: e
                            }, o = 0, a = i.length; a > o; o++) {
                            var s = i[o],
                                l = Ie(n, s, {});
                            r.points.push([l.zrX, l.zrY]), r.touches.push(s)
                        }
                        this._track.push(r)
                    }
                }, e.prototype._recognize = function (e) {
                    for (var t in k_)
                        if (k_.hasOwnProperty(t)) {
                            var n = k_[t](this._track, e);
                            if (n) return n
                        }
                }, e
            }(),
            k_ = {
                pinch: function (e, t) {
                    var n = e.length;
                    if (n) {
                        var i = (e[n - 1] || {}).points,
                            r = (e[n - 2] || {}).points || i;
                        if (r && r.length > 1 && i && i.length > 1) {
                            var o = Ee(i) / Ee(r);
                            !isFinite(o) && (o = 1), t.pinchScale = o;
                            var a = Re(i);
                            return t.pinchX = a[0], t.pinchY = a[1], {
                                type: "pinch",
                                target: e[0].target,
                                event: t
                            }
                        }
                    }
                }
            },
            D_ = (Object.freeze || Object)({
                create: ze,
                identity: Be,
                copy: Fe,
                mul: He,
                translate: Ge,
                rotate: Ve,
                scale: We,
                invert: je,
                clone: Xe
            }),
            A_ = function () {
                function e(e, t) {
                    this.x = e || 0, this.y = t || 0
                }
                return e.prototype.copy = function (e) {
                    return this.x = e.x, this.y = e.y, this
                }, e.prototype.clone = function () {
                    return new e(this.x, this.y)
                }, e.prototype.set = function (e, t) {
                    return this.x = e, this.y = t, this
                }, e.prototype.equal = function (e) {
                    return e.x === this.x && e.y === this.y
                }, e.prototype.add = function (e) {
                    return this.x += e.x, this.y += e.y, this
                }, e.prototype.scale = function (e) {
                    this.x *= e, this.y *= e
                }, e.prototype.scaleAndAdd = function (e, t) {
                    this.x += e.x * t, this.y += e.y * t
                }, e.prototype.sub = function (e) {
                    return this.x -= e.x, this.y -= e.y, this
                }, e.prototype.dot = function (e) {
                    return this.x * e.x + this.y * e.y
                }, e.prototype.len = function () {
                    return Math.sqrt(this.x * this.x + this.y * this.y)
                }, e.prototype.lenSquare = function () {
                    return this.x * this.x + this.y * this.y
                }, e.prototype.normalize = function () {
                    var e = this.len();
                    return this.x /= e, this.y /= e, this
                }, e.prototype.distance = function (e) {
                    var t = this.x - e.x,
                        n = this.y - e.y;
                    return Math.sqrt(t * t + n * n)
                }, e.prototype.distanceSquare = function (e) {
                    var t = this.x - e.x,
                        n = this.y - e.y;
                    return t * t + n * n
                }, e.prototype.negate = function () {
                    return this.x = -this.x, this.y = -this.y, this
                }, e.prototype.transform = function (e) {
                    if (e) {
                        var t = this.x,
                            n = this.y;
                        return this.x = e[0] * t + e[2] * n + e[4], this.y = e[1] * t + e[3] * n + e[5], this
                    }
                }, e.prototype.toArray = function (e) {
                    return e[0] = this.x, e[1] = this.y, e
                }, e.prototype.fromArray = function (e) {
                    this.x = e[0], this.y = e[1]
                }, e.set = function (e, t, n) {
                    e.x = t, e.y = n
                }, e.copy = function (e, t) {
                    e.x = t.x, e.y = t.y
                }, e.len = function (e) {
                    return Math.sqrt(e.x * e.x + e.y * e.y)
                }, e.lenSquare = function (e) {
                    return e.x * e.x + e.y * e.y
                }, e.dot = function (e, t) {
                    return e.x * t.x + e.y * t.y
                }, e.add = function (e, t, n) {
                    e.x = t.x + n.x, e.y = t.y + n.y
                }, e.sub = function (e, t, n) {
                    e.x = t.x - n.x, e.y = t.y - n.y
                }, e.scale = function (e, t, n) {
                    e.x = t.x * n, e.y = t.y * n
                }, e.scaleAndAdd = function (e, t, n, i) {
                    e.x = t.x + n.x * i, e.y = t.y + n.y * i
                }, e.lerp = function (e, t, n, i) {
                    var r = 1 - i;
                    e.x = r * t.x + i * n.x, e.y = r * t.y + i * n.y
                }, e
            }(),
            P_ = Math.min,
            L_ = Math.max,
            N_ = new A_,
            O_ = new A_,
            E_ = new A_,
            R_ = new A_,
            z_ = new A_,
            B_ = new A_,
            F_ = function () {
                function e(e, t, n, i) {
                    0 > n && (e += n, n = -n), 0 > i && (t += i, i = -i), this.x = e, this.y = t, this.width = n, this.height = i
                }
                return e.prototype.union = function (e) {
                    var t = P_(e.x, this.x),
                        n = P_(e.y, this.y);
                    this.width = isFinite(this.x) && isFinite(this.width) ? L_(e.x + e.width, this.x + this.width) - t : e.width, this.height = isFinite(this.y) && isFinite(this.height) ? L_(e.y + e.height, this.y + this.height) - n : e.height, this.x = t, this.y = n
                }, e.prototype.applyTransform = function (t) {
                    e.applyTransform(this, this, t)
                }, e.prototype.calculateTransform = function (e) {
                    var t = this,
                        n = e.width / t.width,
                        i = e.height / t.height,
                        r = ze();
                    return Ge(r, r, [-t.x, -t.y]), We(r, r, [n, i]), Ge(r, r, [e.x, e.y]), r
                }, e.prototype.intersect = function (t, n) {
                    if (!t) return !1;
                    t instanceof e || (t = e.create(t));
                    var i = this,
                        r = i.x,
                        o = i.x + i.width,
                        a = i.y,
                        s = i.y + i.height,
                        l = t.x,
                        u = t.x + t.width,
                        c = t.y,
                        p = t.y + t.height,
                        h = !(l > o || r > u || c > s || a > p);
                    if (n) {
                        var d = 1 / 0,
                            f = 0,
                            g = Math.abs(o - l),
                            m = Math.abs(u - r),
                            y = Math.abs(s - c),
                            v = Math.abs(p - a),
                            x = Math.min(g, m),
                            _ = Math.min(y, v);
                        l > o || r > u ? x > f && (f = x, m > g ? A_.set(B_, -g, 0) : A_.set(B_, m, 0)) : d > x && (d = x, m > g ? A_.set(z_, g, 0) : A_.set(z_, -m, 0)), c > s || a > p ? _ > f && (f = _, v > y ? A_.set(B_, 0, -y) : A_.set(B_, 0, v)) : d > x && (d = x, v > y ? A_.set(z_, 0, y) : A_.set(z_, 0, -v))
                    }
                    return n && A_.copy(n, h ? z_ : B_), h
                }, e.prototype.contain = function (e, t) {
                    var n = this;
                    return e >= n.x && e <= n.x + n.width && t >= n.y && t <= n.y + n.height
                }, e.prototype.clone = function () {
                    return new e(this.x, this.y, this.width, this.height)
                }, e.prototype.copy = function (t) {
                    e.copy(this, t)
                }, e.prototype.plain = function () {
                    return {
                        x: this.x,
                        y: this.y,
                        width: this.width,
                        height: this.height
                    }
                }, e.prototype.isFinite = function () {
                    return isFinite(this.x) && isFinite(this.y) && isFinite(this.width) && isFinite(this.height)
                }, e.prototype.isZero = function () {
                    return 0 === this.width || 0 === this.height
                }, e.create = function (t) {
                    return new e(t.x, t.y, t.width, t.height)
                }, e.copy = function (e, t) {
                    e.x = t.x, e.y = t.y, e.width = t.width, e.height = t.height
                }, e.applyTransform = function (t, n, i) {
                    if (i) {
                        if (i[1] < 1e-5 && i[1] > -1e-5 && i[2] < 1e-5 && i[2] > -1e-5) {
                            var r = i[0],
                                o = i[3],
                                a = i[4],
                                s = i[5];
                            return t.x = n.x * r + a, t.y = n.y * o + s, t.width = n.width * r, t.height = n.height * o, t.width < 0 && (t.x += t.width, t.width = -t.width), void(t.height < 0 && (t.y += t.height, t.height = -t.height))
                        }
                        N_.x = E_.x = n.x, N_.y = R_.y = n.y, O_.x = R_.x = n.x + n.width, O_.y = E_.y = n.y + n.height, N_.transform(i), R_.transform(i), O_.transform(i), E_.transform(i), t.x = P_(N_.x, O_.x, E_.x, R_.x), t.y = P_(N_.y, O_.y, E_.y, R_.y);
                        var l = L_(N_.x, O_.x, E_.x, R_.x),
                            u = L_(N_.y, O_.y, E_.y, R_.y);
                        t.width = l - t.x, t.height = u - t.y
                    } else t !== n && e.copy(t, n)
                }, e
            }(),
            H_ = "silent",
            G_ = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.handler = null, t
                }
                return t(n, e), n.prototype.dispose = function () {}, n.prototype.setCursor = function () {}, n
            }(y_),
            V_ = function () {
                function e(e, t) {
                    this.x = e, this.y = t
                }
                return e
            }(),
            W_ = ["click", "dblclick", "mousewheel", "mouseout", "mouseup", "mousedown", "mousemove", "contextmenu"],
            j_ = new F_(0, 0, 0, 0),
            X_ = function (e) {
                function n(t, n, i, r, o) {
                    var a = e.call(this) || this;
                    return a._hovered = new V_(0, 0), a.storage = t, a.painter = n, a.painterRoot = r, a._pointerSize = o, i = i || new G_, a.proxy = null, a.setHandlerProxy(i), a._draggingMgr = new m_(a), a
                }
                return t(n, e), n.prototype.setHandlerProxy = function (e) {
                    this.proxy && this.proxy.dispose(), e && (m(W_, function (t) {
                        e.on && e.on(t, this[t], this)
                    }, this), e.handler = this), this.proxy = e
                }, n.prototype.mousemove = function (e) {
                    var t = e.zrX,
                        n = e.zrY,
                        i = $e(this, t, n),
                        r = this._hovered,
                        o = r.target;
                    o && !o.__zr && (r = this.findHover(r.x, r.y), o = r.target);
                    var a = this._hovered = i ? new V_(t, n) : this.findHover(t, n),
                        s = a.target,
                        l = this.proxy;
                    l.setCursor && l.setCursor(s ? s.cursor : "default"), o && s !== o && this.dispatchToElement(r, "mouseout", e), this.dispatchToElement(a, "mousemove", e), s && s !== o && this.dispatchToElement(a, "mouseover", e)
                }, n.prototype.mouseout = function (e) {
                    var t = e.zrEventControl;
                    "only_globalout" !== t && this.dispatchToElement(this._hovered, "mouseout", e), "no_globalout" !== t && this.trigger("globalout", {
                        type: "globalout",
                        event: e
                    })
                }, n.prototype.resize = function () {
                    this._hovered = new V_(0, 0)
                }, n.prototype.dispatch = function (e, t) {
                    var n = this[e];
                    n && n.call(this, t)
                }, n.prototype.dispose = function () {
                    this.proxy.dispose(), this.storage = null, this.proxy = null, this.painter = null
                }, n.prototype.setCursorStyle = function (e) {
                    var t = this.proxy;
                    t.setCursor && t.setCursor(e)
                }, n.prototype.dispatchToElement = function (e, t, n) {
                    e = e || {};
                    var i = e.target;
                    if (!i || !i.silent) {
                        for (var r = "on" + t, o = Ye(t, e, n); i && (i[r] && (o.cancelBubble = !!i[r].call(i, o)), i.trigger(t, o), i = i.__hostTarget ? i.__hostTarget : i.parent, !o.cancelBubble););
                        o.cancelBubble || (this.trigger(t, o), this.painter && this.painter.eachOtherLayer && this.painter.eachOtherLayer(function (e) {
                            "function" == typeof e[r] && e[r].call(e, o), e.trigger && e.trigger(t, o)
                        }))
                    }
                }, n.prototype.findHover = function (e, t, n) {
                    var i = this.storage.getDisplayList(),
                        r = new V_(e, t);
                    if (Ze(i, r, e, t, n), this._pointerSize && !r.target) {
                        for (var o = [], a = this._pointerSize, s = a / 2, l = new F_(e - s, t - s, a, a), u = i.length - 1; u >= 0; u--) {
                            var c = i[u];
                            c === n || c.ignore || c.ignoreCoarsePointer || c.parent && c.parent.ignoreCoarsePointer || (j_.copy(c.getBoundingRect()), c.transform && j_.applyTransform(c.transform), j_.intersect(l) && o.push(c))
                        }
                        if (o.length)
                            for (var p = 4, h = Math.PI / 12, d = 2 * Math.PI, f = 0; s > f; f += p)
                                for (var g = 0; d > g; g += h) {
                                    var m = e + f * Math.cos(g),
                                        y = t + f * Math.sin(g);
                                    if (Ze(o, r, m, y, n), r.target) return r
                                }
                    }
                    return r
                }, n.prototype.processGesture = function (e, t) {
                    this._gestureMgr || (this._gestureMgr = new I_);
                    var n = this._gestureMgr;
                    "start" === t && n.clear();
                    var i = n.recognize(e, this.findHover(e.zrX, e.zrY, null).target, this.proxy.dom);
                    if ("end" === t && n.clear(), i) {
                        var r = i.type;
                        e.gestureEvent = r;
                        var o = new V_;
                        o.target = i.target, this.dispatchToElement(o, r, i.event)
                    }
                }, n
            }(y_);
        m(["click", "mousedown", "mouseup", "mousewheel", "dblclick", "contextmenu"], function (e) {
            X_.prototype[e] = function (t) {
                var n, i, r = t.zrX,
                    o = t.zrY,
                    a = $e(this, r, o);
                if ("mouseup" === e && a || (n = this.findHover(r, o), i = n.target), "mousedown" === e) this._downEl = i, this._downPoint = [t.zrX, t.zrY], this._upEl = i;
                else if ("mouseup" === e) this._upEl = i;
                else if ("click" === e) {
                    if (this._downEl !== this._upEl || !this._downPoint || h_(this._downPoint, [t.zrX, t.zrY]) > 4) return;
                    this._downPoint = null
                }
                this.dispatchToElement(n, e, t)
            }
        });
        var Y_, U_ = 32,
            q_ = 7,
            Z_ = 1,
            $_ = 2,
            K_ = 4,
            J_ = !1,
            Q_ = function () {
                function e() {
                    this._roots = [], this._displayList = [], this._displayListLen = 0, this.displayableSortFunc = at
                }
                return e.prototype.traverse = function (e, t) {
                    for (var n = 0; n < this._roots.length; n++) this._roots[n].traverse(e, t)
                }, e.prototype.getDisplayList = function (e, t) {
                    t = t || !1;
                    var n = this._displayList;
                    return (e || !n.length) && this.updateDisplayList(t), n
                }, e.prototype.updateDisplayList = function (e) {
                    this._displayListLen = 0;
                    for (var t = this._roots, n = this._displayList, i = 0, r = t.length; r > i; i++) this._updateAndAddDisplayable(t[i], null, e);
                    n.length = this._displayListLen, rt(n, at)
                }, e.prototype._updateAndAddDisplayable = function (e, t, n) {
                    if (!e.ignore || n) {
                        e.beforeUpdate(), e.update(), e.afterUpdate();
                        var i = e.getClipPath();
                        if (e.ignoreClip) t = null;
                        else if (i) {
                            t = t ? t.slice() : [];
                            for (var r = i, o = e; r;) r.parent = o, r.updateTransform(), t.push(r), o = r, r = r.getClipPath()
                        }
                        if (e.childrenRef) {
                            for (var a = e.childrenRef(), s = 0; s < a.length; s++) {
                                var l = a[s];
                                e.__dirty && (l.__dirty |= Z_), this._updateAndAddDisplayable(l, t, n)
                            }
                            e.__dirty = 0
                        } else {
                            var u = e;
                            t && t.length ? u.__clipPaths = t : u.__clipPaths && u.__clipPaths.length > 0 && (u.__clipPaths = []), isNaN(u.z) && (ot(), u.z = 0), isNaN(u.z2) && (ot(), u.z2 = 0), isNaN(u.zlevel) && (ot(), u.zlevel = 0), this._displayList[this._displayListLen++] = u
                        }
                        var c = e.getDecalElement && e.getDecalElement();
                        c && this._updateAndAddDisplayable(c, t, n);
                        var p = e.getTextGuideLine();
                        p && this._updateAndAddDisplayable(p, t, n);
                        var h = e.getTextContent();
                        h && this._updateAndAddDisplayable(h, t, n)
                    }
                }, e.prototype.addRoot = function (e) {
                    e.__zr && e.__zr.storage === this || this._roots.push(e)
                }, e.prototype.delRoot = function (e) {
                    if (e instanceof Array)
                        for (var t = 0, n = e.length; n > t; t++) this.delRoot(e[t]);
                    else {
                        var i = h(this._roots, e);
                        i >= 0 && this._roots.splice(i, 1)
                    }
                }, e.prototype.delAllRoots = function () {
                    this._roots = [], this._displayList = [], this._displayListLen = 0
                }, e.prototype.getRoots = function () {
                    return this._roots
                }, e.prototype.dispose = function () {
                    this._displayList = null, this._roots = null
                }, e
            }();
        Y_ = zx.hasGlobalWindow && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (e) {
            return setTimeout(e, 16)
        };
        var ew = Y_,
            tw = {
                linear: function (e) {
                    return e
                },
                quadraticIn: function (e) {
                    return e * e
                },
                quadraticOut: function (e) {
                    return e * (2 - e)
                },
                quadraticInOut: function (e) {
                    return (e *= 2) < 1 ? .5 * e * e : -.5 * (--e * (e - 2) - 1)
                },
                cubicIn: function (e) {
                    return e * e * e
                },
                cubicOut: function (e) {
                    return --e * e * e + 1
                },
                cubicInOut: function (e) {
                    return (e *= 2) < 1 ? .5 * e * e * e : .5 * ((e -= 2) * e * e + 2)
                },
                quarticIn: function (e) {
                    return e * e * e * e
                },
                quarticOut: function (e) {
                    return 1 - --e * e * e * e
                },
                quarticInOut: function (e) {
                    return (e *= 2) < 1 ? .5 * e * e * e * e : -.5 * ((e -= 2) * e * e * e - 2)
                },
                quinticIn: function (e) {
                    return e * e * e * e * e
                },
                quinticOut: function (e) {
                    return --e * e * e * e * e + 1
                },
                quinticInOut: function (e) {
                    return (e *= 2) < 1 ? .5 * e * e * e * e * e : .5 * ((e -= 2) * e * e * e * e + 2)
                },
                sinusoidalIn: function (e) {
                    return 1 - Math.cos(e * Math.PI / 2)
                },
                sinusoidalOut: function (e) {
                    return Math.sin(e * Math.PI / 2)
                },
                sinusoidalInOut: function (e) {
                    return .5 * (1 - Math.cos(Math.PI * e))
                },
                exponentialIn: function (e) {
                    return 0 === e ? 0 : Math.pow(1024, e - 1)
                },
                exponentialOut: function (e) {
                    return 1 === e ? 1 : 1 - Math.pow(2, -10 * e)
                },
                exponentialInOut: function (e) {
                    return 0 === e ? 0 : 1 === e ? 1 : (e *= 2) < 1 ? .5 * Math.pow(1024, e - 1) : .5 * (2 - Math.pow(2, -10 * (e - 1)))
                },
                circularIn: function (e) {
                    return 1 - Math.sqrt(1 - e * e)
                },
                circularOut: function (e) {
                    return Math.sqrt(1 - --e * e)
                },
                circularInOut: function (e) {
                    return (e *= 2) < 1 ? -.5 * (Math.sqrt(1 - e * e) - 1) : .5 * (Math.sqrt(1 - (e -= 2) * e) + 1)
                },
                elasticIn: function (e) {
                    var t, n = .1,
                        i = .4;
                    return 0 === e ? 0 : 1 === e ? 1 : (!n || 1 > n ? (n = 1, t = i / 4) : t = i * Math.asin(1 / n) / (2 * Math.PI), -n * Math.pow(2, 10 * (e -= 1)) * Math.sin(2 * (e - t) * Math.PI / i))
                },
                elasticOut: function (e) {
                    var t, n = .1,
                        i = .4;
                    return 0 === e ? 0 : 1 === e ? 1 : (!n || 1 > n ? (n = 1, t = i / 4) : t = i * Math.asin(1 / n) / (2 * Math.PI), n * Math.pow(2, -10 * e) * Math.sin(2 * (e - t) * Math.PI / i) + 1)
                },
                elasticInOut: function (e) {
                    var t, n = .1,
                        i = .4;
                    return 0 === e ? 0 : 1 === e ? 1 : (!n || 1 > n ? (n = 1, t = i / 4) : t = i * Math.asin(1 / n) / (2 * Math.PI), (e *= 2) < 1 ? -.5 * n * Math.pow(2, 10 * (e -= 1)) * Math.sin(2 * (e - t) * Math.PI / i) : n * Math.pow(2, -10 * (e -= 1)) * Math.sin(2 * (e - t) * Math.PI / i) * .5 + 1)
                },
                backIn: function (e) {
                    var t = 1.70158;
                    return e * e * ((t + 1) * e - t)
                },
                backOut: function (e) {
                    var t = 1.70158;
                    return --e * e * ((t + 1) * e + t) + 1
                },
                backInOut: function (e) {
                    var t = 2.5949095;
                    return (e *= 2) < 1 ? .5 * e * e * ((t + 1) * e - t) : .5 * ((e -= 2) * e * ((t + 1) * e + t) + 2)
                },
                bounceIn: function (e) {
                    return 1 - tw.bounceOut(1 - e)
                },
                bounceOut: function (e) {
                    return 1 / 2.75 > e ? 7.5625 * e * e : 2 / 2.75 > e ? 7.5625 * (e -= 1.5 / 2.75) * e + .75 : 2.5 / 2.75 > e ? 7.5625 * (e -= 2.25 / 2.75) * e + .9375 : 7.5625 * (e -= 2.625 / 2.75) * e + .984375
                },
                bounceInOut: function (e) {
                    return .5 > e ? .5 * tw.bounceIn(2 * e) : .5 * tw.bounceOut(2 * e - 1) + .5
                }
            },
            nw = Math.pow,
            iw = Math.sqrt,
            rw = 1e-8,
            ow = 1e-4,
            aw = iw(3),
            sw = 1 / 3,
            lw = J(),
            uw = J(),
            cw = J(),
            pw = /cubic-bezier\(([0-9,\.e ]+)\)/,
            hw = function () {
                function e(e) {
                    this._inited = !1, this._startTime = 0, this._pausedTime = 0, this._paused = !1, this._life = e.life || 1e3, this._delay = e.delay || 0, this.loop = e.loop || !1, this.onframe = e.onframe || K, this.ondestroy = e.ondestroy || K, this.onrestart = e.onrestart || K, e.easing && this.setEasing(e.easing)
                }
                return e.prototype.step = function (e, t) {
                    if (this._inited || (this._startTime = e + this._delay, this._inited = !0), !this._paused) {
                        var n = this._life,
                            i = e - this._startTime - this._pausedTime,
                            r = i / n;
                        0 > r && (r = 0), r = Math.min(r, 1);
                        var o = this.easingFunc,
                            a = o ? o(r) : r;
                        if (this.onframe(a), 1 === r) {
                            if (!this.loop) return !0;
                            var s = i % n;
                            this._startTime = e - s, this._pausedTime = 0, this.onrestart()
                        }
                        return !1
                    }
                    this._pausedTime += t
                }, e.prototype.pause = function () {
                    this._paused = !0
                }, e.prototype.resume = function () {
                    this._paused = !1
                }, e.prototype.setEasing = function (e) {
                    this.easing = e, this.easingFunc = C(e) ? e : tw[e] || St(e)
                }, e
            }(),
            dw = function () {
                function e(e) {
                    this.value = e
                }
                return e
            }(),
            fw = function () {
                function e() {
                    this._len = 0
                }
                return e.prototype.insert = function (e) {
                    var t = new dw(e);
                    return this.insertEntry(t), t
                }, e.prototype.insertEntry = function (e) {
                    this.head ? (this.tail.next = e, e.prev = this.tail, e.next = null, this.tail = e) : this.head = this.tail = e, this._len++
                }, e.prototype.remove = function (e) {
                    var t = e.prev,
                        n = e.next;
                    t ? t.next = n : this.head = n, n ? n.prev = t : this.tail = t, e.next = e.prev = null, this._len--
                }, e.prototype.len = function () {
                    return this._len
                }, e.prototype.clear = function () {
                    this.head = this.tail = null, this._len = 0
                }, e
            }(),
            gw = function () {
                function e(e) {
                    this._list = new fw, this._maxSize = 10, this._map = {}, this._maxSize = e
                }
                return e.prototype.put = function (e, t) {
                    var n = this._list,
                        i = this._map,
                        r = null;
                    if (null == i[e]) {
                        var o = n.len(),
                            a = this._lastRemovedEntry;
                        if (o >= this._maxSize && o > 0) {
                            var s = n.head;
                            n.remove(s), delete i[s.key], r = s.value, this._lastRemovedEntry = s
                        }
                        a ? a.value = t : a = new dw(t), a.key = e, n.insertEntry(a), i[e] = a
                    }
                    return r
                }, e.prototype.get = function (e) {
                    var t = this._map[e],
                        n = this._list;
                    return null != t ? (t !== n.tail && (n.remove(t), n.insertEntry(t)), t.value) : void 0
                }, e.prototype.clear = function () {
                    this._list.clear(), this._map = {}
                }, e.prototype.len = function () {
                    return this._list.len()
                }, e
            }(),
            mw = {
                transparent: [0, 0, 0, 0],
                aliceblue: [240, 248, 255, 1],
                antiquewhite: [250, 235, 215, 1],
                aqua: [0, 255, 255, 1],
                aquamarine: [127, 255, 212, 1],
                azure: [240, 255, 255, 1],
                beige: [245, 245, 220, 1],
                bisque: [255, 228, 196, 1],
                black: [0, 0, 0, 1],
                blanchedalmond: [255, 235, 205, 1],
                blue: [0, 0, 255, 1],
                blueviolet: [138, 43, 226, 1],
                brown: [165, 42, 42, 1],
                burlywood: [222, 184, 135, 1],
                cadetblue: [95, 158, 160, 1],
                chartreuse: [127, 255, 0, 1],
                chocolate: [210, 105, 30, 1],
                coral: [255, 127, 80, 1],
                cornflowerblue: [100, 149, 237, 1],
                cornsilk: [255, 248, 220, 1],
                crimson: [220, 20, 60, 1],
                cyan: [0, 255, 255, 1],
                darkblue: [0, 0, 139, 1],
                darkcyan: [0, 139, 139, 1],
                darkgoldenrod: [184, 134, 11, 1],
                darkgray: [169, 169, 169, 1],
                darkgreen: [0, 100, 0, 1],
                darkgrey: [169, 169, 169, 1],
                darkkhaki: [189, 183, 107, 1],
                darkmagenta: [139, 0, 139, 1],
                darkolivegreen: [85, 107, 47, 1],
                darkorange: [255, 140, 0, 1],
                darkorchid: [153, 50, 204, 1],
                darkred: [139, 0, 0, 1],
                darksalmon: [233, 150, 122, 1],
                darkseagreen: [143, 188, 143, 1],
                darkslateblue: [72, 61, 139, 1],
                darkslategray: [47, 79, 79, 1],
                darkslategrey: [47, 79, 79, 1],
                darkturquoise: [0, 206, 209, 1],
                darkviolet: [148, 0, 211, 1],
                deeppink: [255, 20, 147, 1],
                deepskyblue: [0, 191, 255, 1],
                dimgray: [105, 105, 105, 1],
                dimgrey: [105, 105, 105, 1],
                dodgerblue: [30, 144, 255, 1],
                firebrick: [178, 34, 34, 1],
                floralwhite: [255, 250, 240, 1],
                forestgreen: [34, 139, 34, 1],
                fuchsia: [255, 0, 255, 1],
                gainsboro: [220, 220, 220, 1],
                ghostwhite: [248, 248, 255, 1],
                gold: [255, 215, 0, 1],
                goldenrod: [218, 165, 32, 1],
                gray: [128, 128, 128, 1],
                green: [0, 128, 0, 1],
                greenyellow: [173, 255, 47, 1],
                grey: [128, 128, 128, 1],
                honeydew: [240, 255, 240, 1],
                hotpink: [255, 105, 180, 1],
                indianred: [205, 92, 92, 1],
                indigo: [75, 0, 130, 1],
                ivory: [255, 255, 240, 1],
                khaki: [240, 230, 140, 1],
                lavender: [230, 230, 250, 1],
                lavenderblush: [255, 240, 245, 1],
                lawngreen: [124, 252, 0, 1],
                lemonchiffon: [255, 250, 205, 1],
                lightblue: [173, 216, 230, 1],
                lightcoral: [240, 128, 128, 1],
                lightcyan: [224, 255, 255, 1],
                lightgoldenrodyellow: [250, 250, 210, 1],
                lightgray: [211, 211, 211, 1],
                lightgreen: [144, 238, 144, 1],
                lightgrey: [211, 211, 211, 1],
                lightpink: [255, 182, 193, 1],
                lightsalmon: [255, 160, 122, 1],
                lightseagreen: [32, 178, 170, 1],
                lightskyblue: [135, 206, 250, 1],
                lightslategray: [119, 136, 153, 1],
                lightslategrey: [119, 136, 153, 1],
                lightsteelblue: [176, 196, 222, 1],
                lightyellow: [255, 255, 224, 1],
                lime: [0, 255, 0, 1],
                limegreen: [50, 205, 50, 1],
                linen: [250, 240, 230, 1],
                magenta: [255, 0, 255, 1],
                maroon: [128, 0, 0, 1],
                mediumaquamarine: [102, 205, 170, 1],
                mediumblue: [0, 0, 205, 1],
                mediumorchid: [186, 85, 211, 1],
                mediumpurple: [147, 112, 219, 1],
                mediumseagreen: [60, 179, 113, 1],
                mediumslateblue: [123, 104, 238, 1],
                mediumspringgreen: [0, 250, 154, 1],
                mediumturquoise: [72, 209, 204, 1],
                mediumvioletred: [199, 21, 133, 1],
                midnightblue: [25, 25, 112, 1],
                mintcream: [245, 255, 250, 1],
                mistyrose: [255, 228, 225, 1],
                moccasin: [255, 228, 181, 1],
                navajowhite: [255, 222, 173, 1],
                navy: [0, 0, 128, 1],
                oldlace: [253, 245, 230, 1],
                olive: [128, 128, 0, 1],
                olivedrab: [107, 142, 35, 1],
                orange: [255, 165, 0, 1],
                orangered: [255, 69, 0, 1],
                orchid: [218, 112, 214, 1],
                palegoldenrod: [238, 232, 170, 1],
                palegreen: [152, 251, 152, 1],
                paleturquoise: [175, 238, 238, 1],
                palevioletred: [219, 112, 147, 1],
                papayawhip: [255, 239, 213, 1],
                peachpuff: [255, 218, 185, 1],
                peru: [205, 133, 63, 1],
                pink: [255, 192, 203, 1],
                plum: [221, 160, 221, 1],
                powderblue: [176, 224, 230, 1],
                purple: [128, 0, 128, 1],
                red: [255, 0, 0, 1],
                rosybrown: [188, 143, 143, 1],
                royalblue: [65, 105, 225, 1],
                saddlebrown: [139, 69, 19, 1],
                salmon: [250, 128, 114, 1],
                sandybrown: [244, 164, 96, 1],
                seagreen: [46, 139, 87, 1],
                seashell: [255, 245, 238, 1],
                sienna: [160, 82, 45, 1],
                silver: [192, 192, 192, 1],
                skyblue: [135, 206, 235, 1],
                slateblue: [106, 90, 205, 1],
                slategray: [112, 128, 144, 1],
                slategrey: [112, 128, 144, 1],
                snow: [255, 250, 250, 1],
                springgreen: [0, 255, 127, 1],
                steelblue: [70, 130, 180, 1],
                tan: [210, 180, 140, 1],
                teal: [0, 128, 128, 1],
                thistle: [216, 191, 216, 1],
                tomato: [255, 99, 71, 1],
                turquoise: [64, 224, 208, 1],
                violet: [238, 130, 238, 1],
                wheat: [245, 222, 179, 1],
                white: [255, 255, 255, 1],
                whitesmoke: [245, 245, 245, 1],
                yellow: [255, 255, 0, 1],
                yellowgreen: [154, 205, 50, 1]
            },
            yw = new gw(20),
            vw = null,
            xw = Ft,
            _w = Ht,
            ww = (Object.freeze || Object)({
                parse: Ot,
                lift: zt,
                toHex: Bt,
                fastLerp: Ft,
                fastMapToColor: xw,
                lerp: Ht,
                mapToColor: _w,
                modifyHSL: Gt,
                modifyAlpha: Vt,
                stringify: Wt,
                lum: jt,
                random: Xt
            }),
            bw = Math.round,
            Sw = 1e-4,
            Tw = {
                left: "start",
                right: "end",
                center: "middle",
                middle: "middle"
            },
            Cw = zx.hasGlobalWindow && C(window.btoa) ? function (e) {
                return window.btoa(unescape(e))
            } : "undefined" != typeof Buffer ? function (e) {
                return Buffer.from(e).toString("base64")
            } : function () {
                return null
            },
            Mw = Array.prototype.slice,
            Iw = 0,
            kw = 1,
            Dw = 2,
            Aw = 3,
            Pw = 4,
            Lw = 5,
            Nw = 6,
            Ow = [0, 0, 0, 0],
            Ew = function () {
                function e(e) {
                    this.keyframes = [], this.discrete = !1, this._invalid = !1, this._needsSort = !1, this._lastFr = 0, this._lastFrP = 0, this.propName = e
                }
                return e.prototype.isFinished = function () {
                    return this._finished
                }, e.prototype.setFinished = function () {
                    this._finished = !0, this._additiveTrack && this._additiveTrack.setFinished()
                }, e.prototype.needsAnimate = function () {
                    return this.keyframes.length >= 1
                }, e.prototype.getAdditiveTrack = function () {
                    return this._additiveTrack
                }, e.prototype.addKeyframe = function (e, t, n) {
                    this._needsSort = !0;
                    var i = this.keyframes,
                        r = i.length,
                        o = !1,
                        a = Nw,
                        s = t;
                    if (g(t)) {
                        var l = xn(t);
                        a = l, (1 === l && !k(t[0]) || 2 === l && !k(t[0][0])) && (o = !0)
                    } else if (k(t) && !R(t)) a = Iw;
                    else if (M(t))
                        if (isNaN(+t)) {
                            var u = Ot(t);
                            u && (s = u, a = Aw)
                        } else a = Iw;
                    else if (N(t)) {
                        var p = c({}, s);
                        p.colorStops = y(t.colorStops, function (e) {
                            return {
                                offset: e.offset,
                                color: Ot(e.color)
                            }
                        }), rn(t) ? a = Pw : on(t) && (a = Lw), s = p
                    }
                    0 === r ? this.valType = a : (a !== this.valType || a === Nw) && (o = !0), this.discrete = this.discrete || o;
                    var h = {
                        time: e,
                        value: s,
                        rawValue: t,
                        percent: 0
                    };
                    return n && (h.easing = n, h.easingFunc = C(n) ? n : tw[n] || St(n)), i.push(h), h
                }, e.prototype.prepare = function (e, t) {
                    var n = this.keyframes;
                    this._needsSort && n.sort(function (e, t) {
                        return e.time - t.time
                    });
                    for (var i = this.valType, r = n.length, o = n[r - 1], a = this.discrete, s = wn(i), l = _n(i), u = 0; r > u; u++) {
                        var c = n[u],
                            p = c.value,
                            h = o.value;
                        c.percent = c.time / e, a || (s && u !== r - 1 ? mn(p, h, i) : l && gn(p.colorStops, h.colorStops))
                    }
                    if (!a && i !== Lw && t && this.needsAnimate() && t.needsAnimate() && i === t.valType && !t._finished) {
                        this._additiveTrack = t;
                        var d = n[0].value;
                        for (u = 0; r > u; u++) i === Iw ? n[u].additiveValue = n[u].value - d : i === Aw ? n[u].additiveValue = dn([], n[u].value, d, -1) : wn(i) && (n[u].additiveValue = i === kw ? dn([], n[u].value, d, -1) : fn([], n[u].value, d, -1))
                    }
                }, e.prototype.step = function (e, t) {
                    if (!this._finished) {
                        this._additiveTrack && this._additiveTrack._finished && (this._additiveTrack = null);
                        var n, i, r, o = null != this._additiveTrack,
                            a = o ? "additiveValue" : "value",
                            s = this.valType,
                            l = this.keyframes,
                            u = l.length,
                            c = this.propName,
                            p = s === Aw,
                            h = this._lastFr,
                            d = Math.min;
                        if (1 === u) i = r = l[0];
                        else {
                            if (0 > t) n = 0;
                            else if (t < this._lastFrP) {
                                var f = d(h + 1, u - 1);
                                for (n = f; n >= 0 && !(l[n].percent <= t); n--);
                                n = d(n, u - 2)
                            } else {
                                for (n = h; u > n && !(l[n].percent > t); n++);
                                n = d(n - 1, u - 2)
                            }
                            r = l[n + 1], i = l[n]
                        }
                        if (i && r) {
                            this._lastFr = n, this._lastFrP = t;
                            var g = r.percent - i.percent,
                                m = 0 === g ? 1 : d((t - i.percent) / g, 1);
                            r.easingFunc && (m = r.easingFunc(m));
                            var v = o ? this._additiveValue : p ? Ow : e[c];
                            if (!wn(s) && !p || v || (v = this._additiveValue = []), this.discrete) e[c] = 1 > m ? i.rawValue : r.rawValue;
                            else if (wn(s)) s === kw ? pn(v, i[a], r[a], m) : hn(v, i[a], r[a], m);
                            else if (_n(s)) {
                                var x = i[a],
                                    _ = r[a],
                                    w = s === Pw;
                                e[c] = {
                                    type: w ? "linear" : "radial",
                                    x: cn(x.x, _.x, m),
                                    y: cn(x.y, _.y, m),
                                    colorStops: y(x.colorStops, function (e, t) {
                                        var n = _.colorStops[t];
                                        return {
                                            offset: cn(e.offset, n.offset, m),
                                            color: vn(pn([], e.color, n.color, m))
                                        }
                                    }),
                                    global: _.global
                                }, w ? (e[c].x2 = cn(x.x2, _.x2, m), e[c].y2 = cn(x.y2, _.y2, m)) : e[c].r = cn(x.r, _.r, m)
                            } else if (p) pn(v, i[a], r[a], m), o || (e[c] = vn(v));
                            else {
                                var b = cn(i[a], r[a], m);
                                o ? this._additiveValue = b : e[c] = b
                            }
                            o && this._addToTarget(e)
                        }
                    }
                }, e.prototype._addToTarget = function (e) {
                    var t = this.valType,
                        n = this.propName,
                        i = this._additiveValue;
                    t === Iw ? e[n] = e[n] + i : t === Aw ? (Ot(e[n], Ow), dn(Ow, Ow, i, 1), e[n] = vn(Ow)) : t === kw ? dn(e[n], e[n], i, 1) : t === Dw && fn(e[n], e[n], i, 1)
                }, e
            }(),
            Rw = function () {
                function e(e, t, n, i) {
                    return this._tracks = {}, this._trackKeys = [], this._maxTime = 0, this._started = 0, this._clip = null, this._target = e, this._loop = t, t && i ? void a("Can' use additive animation on looped animation.") : (this._additiveAnimators = i,
                        void(this._allowDiscrete = n))
                }
                return e.prototype.getMaxTime = function () {
                    return this._maxTime
                }, e.prototype.getDelay = function () {
                    return this._delay
                }, e.prototype.getLoop = function () {
                    return this._loop
                }, e.prototype.getTarget = function () {
                    return this._target
                }, e.prototype.changeTarget = function (e) {
                    this._target = e
                }, e.prototype.when = function (e, t, n) {
                    return this.whenWithKeys(e, t, w(t), n)
                }, e.prototype.whenWithKeys = function (e, t, n, i) {
                    for (var r = this._tracks, o = 0; o < n.length; o++) {
                        var a = n[o],
                            s = r[a];
                        if (!s) {
                            s = r[a] = new Ew(a);
                            var l = void 0,
                                u = this._getAdditiveTrack(a);
                            if (u) {
                                var c = u.keyframes,
                                    p = c[c.length - 1];
                                l = p && p.value, u.valType === Aw && l && (l = vn(l))
                            } else l = this._target[a];
                            if (null == l) continue;
                            e > 0 && s.addKeyframe(0, yn(l), i), this._trackKeys.push(a)
                        }
                        s.addKeyframe(e, yn(t[a]), i)
                    }
                    return this._maxTime = Math.max(this._maxTime, e), this
                }, e.prototype.pause = function () {
                    this._clip.pause(), this._paused = !0
                }, e.prototype.resume = function () {
                    this._clip.resume(), this._paused = !1
                }, e.prototype.isPaused = function () {
                    return !!this._paused
                }, e.prototype.duration = function (e) {
                    return this._maxTime = e, this._force = !0, this
                }, e.prototype._doneCallback = function () {
                    this._setTracksFinished(), this._clip = null;
                    var e = this._doneCbs;
                    if (e)
                        for (var t = e.length, n = 0; t > n; n++) e[n].call(this)
                }, e.prototype._abortedCallback = function () {
                    this._setTracksFinished();
                    var e = this.animation,
                        t = this._abortedCbs;
                    if (e && e.removeClip(this._clip), this._clip = null, t)
                        for (var n = 0; n < t.length; n++) t[n].call(this)
                }, e.prototype._setTracksFinished = function () {
                    for (var e = this._tracks, t = this._trackKeys, n = 0; n < t.length; n++) e[t[n]].setFinished()
                }, e.prototype._getAdditiveTrack = function (e) {
                    var t, n = this._additiveAnimators;
                    if (n)
                        for (var i = 0; i < n.length; i++) {
                            var r = n[i].getTrack(e);
                            r && (t = r)
                        }
                    return t
                }, e.prototype.start = function (e) {
                    if (!(this._started > 0)) {
                        this._started = 1;
                        for (var t = this, n = [], i = this._maxTime || 0, r = 0; r < this._trackKeys.length; r++) {
                            var o = this._trackKeys[r],
                                a = this._tracks[o],
                                s = this._getAdditiveTrack(o),
                                l = a.keyframes,
                                u = l.length;
                            if (a.prepare(i, s), a.needsAnimate())
                                if (!this._allowDiscrete && a.discrete) {
                                    var c = l[u - 1];
                                    c && (t._target[a.propName] = c.rawValue), a.setFinished()
                                } else n.push(a)
                        }
                        if (n.length || this._force) {
                            var p = new hw({
                                life: i,
                                loop: this._loop,
                                delay: this._delay || 0,
                                onframe: function (e) {
                                    t._started = 2;
                                    var i = t._additiveAnimators;
                                    if (i) {
                                        for (var r = !1, o = 0; o < i.length; o++)
                                            if (i[o]._clip) {
                                                r = !0;
                                                break
                                            } r || (t._additiveAnimators = null)
                                    }
                                    for (o = 0; o < n.length; o++) n[o].step(t._target, e);
                                    var a = t._onframeCbs;
                                    if (a)
                                        for (o = 0; o < a.length; o++) a[o](t._target, e)
                                },
                                ondestroy: function () {
                                    t._doneCallback()
                                }
                            });
                            this._clip = p, this.animation && this.animation.addClip(p), e && p.setEasing(e)
                        } else this._doneCallback();
                        return this
                    }
                }, e.prototype.stop = function (e) {
                    if (this._clip) {
                        var t = this._clip;
                        e && t.onframe(1), this._abortedCallback()
                    }
                }, e.prototype.delay = function (e) {
                    return this._delay = e, this
                }, e.prototype.during = function (e) {
                    return e && (this._onframeCbs || (this._onframeCbs = []), this._onframeCbs.push(e)), this
                }, e.prototype.done = function (e) {
                    return e && (this._doneCbs || (this._doneCbs = []), this._doneCbs.push(e)), this
                }, e.prototype.aborted = function (e) {
                    return e && (this._abortedCbs || (this._abortedCbs = []), this._abortedCbs.push(e)), this
                }, e.prototype.getClip = function () {
                    return this._clip
                }, e.prototype.getTrack = function (e) {
                    return this._tracks[e]
                }, e.prototype.getTracks = function () {
                    var e = this;
                    return y(this._trackKeys, function (t) {
                        return e._tracks[t]
                    })
                }, e.prototype.stopTracks = function (e, t) {
                    if (!e.length || !this._clip) return !0;
                    for (var n = this._tracks, i = this._trackKeys, r = 0; r < e.length; r++) {
                        var o = n[e[r]];
                        o && !o.isFinished() && (t ? o.step(this._target, 1) : 1 === this._started && o.step(this._target, 0), o.setFinished())
                    }
                    var a = !0;
                    for (r = 0; r < i.length; r++)
                        if (!n[i[r]].isFinished()) {
                            a = !1;
                            break
                        } return a && this._abortedCallback(), a
                }, e.prototype.saveTo = function (e, t, n) {
                    if (e) {
                        t = t || this._trackKeys;
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i],
                                o = this._tracks[r];
                            if (o && !o.isFinished()) {
                                var a = o.keyframes,
                                    s = a[n ? 0 : a.length - 1];
                                s && (e[r] = yn(s.rawValue))
                            }
                        }
                    }
                }, e.prototype.__changeFinalValue = function (e, t) {
                    t = t || w(e);
                    for (var n = 0; n < t.length; n++) {
                        var i = t[n],
                            r = this._tracks[i];
                        if (r) {
                            var o = r.keyframes;
                            if (o.length > 1) {
                                var a = o.pop();
                                r.addKeyframe(a.time, e[i]), r.prepare(this._maxTime, r.getAdditiveTrack())
                            }
                        }
                    }
                }, e
            }(),
            zw = function (e) {
                function n(t) {
                    var n = e.call(this) || this;
                    return n._running = !1, n._time = 0, n._pausedTime = 0, n._pauseStart = 0, n._paused = !1, t = t || {}, n.stage = t.stage || {}, n
                }
                return t(n, e), n.prototype.addClip = function (e) {
                    e.animation && this.removeClip(e), this._head ? (this._tail.next = e, e.prev = this._tail, e.next = null, this._tail = e) : this._head = this._tail = e, e.animation = this
                }, n.prototype.addAnimator = function (e) {
                    e.animation = this;
                    var t = e.getClip();
                    t && this.addClip(t)
                }, n.prototype.removeClip = function (e) {
                    if (e.animation) {
                        var t = e.prev,
                            n = e.next;
                        t ? t.next = n : this._head = n, n ? n.prev = t : this._tail = t, e.next = e.prev = e.animation = null
                    }
                }, n.prototype.removeAnimator = function (e) {
                    var t = e.getClip();
                    t && this.removeClip(t), e.animation = null
                }, n.prototype.update = function (e) {
                    for (var t = bn() - this._pausedTime, n = t - this._time, i = this._head; i;) {
                        var r = i.next,
                            o = i.step(t, n);
                        o ? (i.ondestroy(), this.removeClip(i), i = r) : i = r
                    }
                    this._time = t, e || (this.trigger("frame", n), this.stage.update && this.stage.update())
                }, n.prototype._startLoop = function () {
                    function e() {
                        t._running && (ew(e), !t._paused && t.update())
                    }
                    var t = this;
                    this._running = !0, ew(e)
                }, n.prototype.start = function () {
                    this._running || (this._time = bn(), this._pausedTime = 0, this._startLoop())
                }, n.prototype.stop = function () {
                    this._running = !1
                }, n.prototype.pause = function () {
                    this._paused || (this._pauseStart = bn(), this._paused = !0)
                }, n.prototype.resume = function () {
                    this._paused && (this._pausedTime += bn() - this._pauseStart, this._paused = !1)
                }, n.prototype.clear = function () {
                    for (var e = this._head; e;) {
                        var t = e.next;
                        e.prev = e.next = e.animation = null, e = t
                    }
                    this._head = this._tail = null
                }, n.prototype.isFinished = function () {
                    return null == this._head
                }, n.prototype.animate = function (e, t) {
                    t = t || {}, this.start();
                    var n = new Rw(e, t.loop);
                    return this.addAnimator(n), n
                }, n
            }(y_),
            Bw = 300,
            Fw = zx.domSupported,
            Hw = function () {
                var e = ["click", "dblclick", "mousewheel", "wheel", "mouseout", "mouseup", "mousedown", "mousemove", "contextmenu"],
                    t = ["touchstart", "touchend", "touchmove"],
                    n = {
                        pointerdown: 1,
                        pointerup: 1,
                        pointermove: 1,
                        pointerout: 1
                    },
                    i = y(e, function (e) {
                        var t = e.replace("mouse", "pointer");
                        return n.hasOwnProperty(t) ? t : e
                    });
                return {
                    mouse: e,
                    touch: t,
                    pointer: i
                }
            }(),
            Gw = {
                mouse: ["mousemove", "mouseup"],
                pointer: ["pointermove", "pointerup"]
            },
            Vw = !1,
            Ww = function () {
                function e(e, t) {
                    this.stopPropagation = K, this.stopImmediatePropagation = K, this.preventDefault = K, this.type = t.type, this.target = this.currentTarget = e.dom, this.pointerType = t.pointerType, this.clientX = t.clientX, this.clientY = t.clientY
                }
                return e
            }(),
            jw = {
                mousedown: function (e) {
                    e = Ae(this.dom, e), this.__mayPointerCapture = [e.zrX, e.zrY], this.trigger("mousedown", e)
                },
                mousemove: function (e) {
                    e = Ae(this.dom, e);
                    var t = this.__mayPointerCapture;
                    !t || e.zrX === t[0] && e.zrY === t[1] || this.__togglePointerCapture(!0), this.trigger("mousemove", e)
                },
                mouseup: function (e) {
                    e = Ae(this.dom, e), this.__togglePointerCapture(!1), this.trigger("mouseup", e)
                },
                mouseout: function (e) {
                    e = Ae(this.dom, e);
                    var t = e.toElement || e.relatedTarget;
                    In(this, t) || (this.__pointerCapturing && (e.zrEventControl = "no_globalout"), this.trigger("mouseout", e))
                },
                wheel: function (e) {
                    Vw = !0, e = Ae(this.dom, e), this.trigger("mousewheel", e)
                },
                mousewheel: function (e) {
                    Vw || (e = Ae(this.dom, e), this.trigger("mousewheel", e))
                },
                touchstart: function (e) {
                    e = Ae(this.dom, e), Cn(e), this.__lastTouchMoment = new Date, this.handler.processGesture(e, "start"), jw.mousemove.call(this, e), jw.mousedown.call(this, e)
                },
                touchmove: function (e) {
                    e = Ae(this.dom, e), Cn(e), this.handler.processGesture(e, "change"), jw.mousemove.call(this, e)
                },
                touchend: function (e) {
                    e = Ae(this.dom, e), Cn(e), this.handler.processGesture(e, "end"), jw.mouseup.call(this, e), +new Date - +this.__lastTouchMoment < Bw && jw.click.call(this, e)
                },
                pointerdown: function (e) {
                    jw.mousedown.call(this, e)
                },
                pointermove: function (e) {
                    Sn(e) || jw.mousemove.call(this, e)
                },
                pointerup: function (e) {
                    jw.mouseup.call(this, e)
                },
                pointerout: function (e) {
                    Sn(e) || jw.mouseout.call(this, e)
                }
            };
        m(["click", "dblclick", "contextmenu"], function (e) {
            jw[e] = function (t) {
                t = Ae(this.dom, t), this.trigger(e, t)
            }
        });
        var Xw = {
                pointermove: function (e) {
                    Sn(e) || Xw.mousemove.call(this, e)
                },
                pointerup: function (e) {
                    Xw.mouseup.call(this, e)
                },
                mousemove: function (e) {
                    this.trigger("mousemove", e)
                },
                mouseup: function (e) {
                    var t = this.__pointerCapturing;
                    this.__togglePointerCapture(!1), this.trigger("mouseup", e), t && (e.zrEventControl = "only_globalout", this.trigger("mouseout", e))
                }
            },
            Yw = function () {
                function e(e, t) {
                    this.mounted = {}, this.listenerOpts = {}, this.touching = !1, this.domTarget = e, this.domHandlers = t
                }
                return e
            }(),
            Uw = function (e) {
                function n(t, n) {
                    var i = e.call(this) || this;
                    return i.__pointerCapturing = !1, i.dom = t, i.painterRoot = n, i._localHandlerScope = new Yw(t, jw), Fw && (i._globalHandlerScope = new Yw(document, Xw)), kn(i, i._localHandlerScope), i
                }
                return t(n, e), n.prototype.dispose = function () {
                    Pn(this._localHandlerScope), Fw && Pn(this._globalHandlerScope)
                }, n.prototype.setCursor = function (e) {
                    this.dom.style && (this.dom.style.cursor = e || "default")
                }, n.prototype.__togglePointerCapture = function (e) {
                    if (this.__mayPointerCapture = null, Fw && +this.__pointerCapturing ^ +e) {
                        this.__pointerCapturing = e;
                        var t = this._globalHandlerScope;
                        e ? Dn(this, t) : Pn(t)
                    }
                }, n
            }(y_),
            qw = 1;
        zx.hasGlobalWindow && (qw = Math.max(window.devicePixelRatio || window.screen && window.screen.deviceXDPI / window.screen.logicalXDPI || 1, 1));
        var Zw = qw,
            $w = .4,
            Kw = "#333",
            Jw = "#ccc",
            Qw = "#eee",
            eb = Be,
            tb = 5e-5,
            nb = [],
            ib = [],
            rb = ze(),
            ob = Math.abs,
            ab = function () {
                function e() {}
                return e.prototype.getLocalTransform = function (t) {
                    return e.getLocalTransform(this, t)
                }, e.prototype.setPosition = function (e) {
                    this.x = e[0], this.y = e[1]
                }, e.prototype.setScale = function (e) {
                    this.scaleX = e[0], this.scaleY = e[1]
                }, e.prototype.setSkew = function (e) {
                    this.skewX = e[0], this.skewY = e[1]
                }, e.prototype.setOrigin = function (e) {
                    this.originX = e[0], this.originY = e[1]
                }, e.prototype.needLocalTransform = function () {
                    return Ln(this.rotation) || Ln(this.x) || Ln(this.y) || Ln(this.scaleX - 1) || Ln(this.scaleY - 1) || Ln(this.skewX) || Ln(this.skewY)
                }, e.prototype.updateTransform = function () {
                    var e = this.parent && this.parent.transform,
                        t = this.needLocalTransform(),
                        n = this.transform;
                    return t || e ? (n = n || ze(), t ? this.getLocalTransform(n) : eb(n), e && (t ? He(n, e, n) : Fe(n, e)), this.transform = n, void this._resolveGlobalScaleRatio(n)) : void(n && eb(n))
                }, e.prototype._resolveGlobalScaleRatio = function (e) {
                    var t = this.globalScaleRatio;
                    if (null != t && 1 !== t) {
                        this.getGlobalScale(nb);
                        var n = nb[0] < 0 ? -1 : 1,
                            i = nb[1] < 0 ? -1 : 1,
                            r = ((nb[0] - n) * t + n) / nb[0] || 0,
                            o = ((nb[1] - i) * t + i) / nb[1] || 0;
                        e[0] *= r, e[1] *= r, e[2] *= o, e[3] *= o
                    }
                    this.invTransform = this.invTransform || ze(), je(this.invTransform, e)
                }, e.prototype.getComputedTransform = function () {
                    for (var e = this, t = []; e;) t.push(e), e = e.parent;
                    for (; e = t.pop();) e.updateTransform();
                    return this.transform
                }, e.prototype.setLocalTransform = function (e) {
                    if (e) {
                        var t = e[0] * e[0] + e[1] * e[1],
                            n = e[2] * e[2] + e[3] * e[3],
                            i = Math.atan2(e[1], e[0]),
                            r = Math.PI / 2 + i - Math.atan2(e[3], e[2]);
                        n = Math.sqrt(n) * Math.cos(r), t = Math.sqrt(t), this.skewX = r, this.skewY = 0, this.rotation = -i, this.x = +e[4], this.y = +e[5], this.scaleX = t, this.scaleY = n, this.originX = 0, this.originY = 0
                    }
                }, e.prototype.decomposeTransform = function () {
                    if (this.transform) {
                        var e = this.parent,
                            t = this.transform;
                        e && e.transform && (He(ib, e.invTransform, t), t = ib);
                        var n = this.originX,
                            i = this.originY;
                        (n || i) && (rb[4] = n, rb[5] = i, He(ib, t, rb), ib[4] -= n, ib[5] -= i, t = ib), this.setLocalTransform(t)
                    }
                }, e.prototype.getGlobalScale = function (e) {
                    var t = this.transform;
                    return e = e || [], t ? (e[0] = Math.sqrt(t[0] * t[0] + t[1] * t[1]), e[1] = Math.sqrt(t[2] * t[2] + t[3] * t[3]), t[0] < 0 && (e[0] = -e[0]), t[3] < 0 && (e[1] = -e[1]), e) : (e[0] = 1, e[1] = 1, e)
                }, e.prototype.transformCoordToLocal = function (e, t) {
                    var n = [e, t],
                        i = this.invTransform;
                    return i && me(n, n, i), n
                }, e.prototype.transformCoordToGlobal = function (e, t) {
                    var n = [e, t],
                        i = this.transform;
                    return i && me(n, n, i), n
                }, e.prototype.getLineScale = function () {
                    var e = this.transform;
                    return e && ob(e[0] - 1) > 1e-10 && ob(e[3] - 1) > 1e-10 ? Math.sqrt(ob(e[0] * e[3] - e[2] * e[1])) : 1
                }, e.prototype.copyTransform = function (e) {
                    Nn(this, e)
                }, e.getLocalTransform = function (e, t) {
                    t = t || [];
                    var n = e.originX || 0,
                        i = e.originY || 0,
                        r = e.scaleX,
                        o = e.scaleY,
                        a = e.anchorX,
                        s = e.anchorY,
                        l = e.rotation || 0,
                        u = e.x,
                        c = e.y,
                        p = e.skewX ? Math.tan(e.skewX) : 0,
                        h = e.skewY ? Math.tan(-e.skewY) : 0;
                    if (n || i || a || s) {
                        var d = n + a,
                            f = i + s;
                        t[4] = -d * r - p * f * o, t[5] = -f * o - h * d * r
                    } else t[4] = t[5] = 0;
                    return t[0] = r, t[3] = o, t[1] = h * r, t[2] = p * o, l && Ve(t, t, l), t[4] += n + u, t[5] += i + c, t
                }, e.initDefaultProps = (t = e.prototype, t.scaleX = t.scaleY = t.globalScaleRatio = 1, void(t.x = t.y = t.originX = t.originY = t.skewX = t.skewY = t.rotation = t.anchorX = t.anchorY = 0)), e;
                var t
            }(),
            sb = ["x", "y", "originX", "originY", "anchorX", "anchorY", "rotation", "scaleX", "scaleY", "skewX", "skewY"],
            lb = {},
            ub = "__zr_normal__",
            cb = sb.concat(["ignore"]),
            pb = v(sb, function (e, t) {
                return e[t] = !0, e
            }, {
                ignore: !1
            }),
            hb = {},
            db = new F_(0, 0, 0, 0),
            fb = function () {
                function e(e) {
                    this.id = o(), this.animators = [], this.currentStates = [], this.states = {}, this._init(e)
                }
                return e.prototype._init = function (e) {
                    this.attr(e)
                }, e.prototype.drift = function (e, t) {
                    switch (this.draggable) {
                        case "horizontal":
                            t = 0;
                            break;
                        case "vertical":
                            e = 0
                    }
                    var n = this.transform;
                    n || (n = this.transform = [1, 0, 0, 1, 0, 0]), n[4] += e, n[5] += t, this.decomposeTransform(), this.markRedraw()
                }, e.prototype.beforeUpdate = function () {}, e.prototype.afterUpdate = function () {}, e.prototype.update = function () {
                    this.updateTransform(), this.__dirty && this.updateInnerText()
                }, e.prototype.updateInnerText = function (e) {
                    var t = this._textContent;
                    if (t && (!t.ignore || e)) {
                        this.textConfig || (this.textConfig = {});
                        var n = this.textConfig,
                            i = n.local,
                            r = t.innerTransformable,
                            o = void 0,
                            a = void 0,
                            s = !1;
                        r.parent = i ? this : null;
                        var l = !1;
                        if (r.copyTransform(t), null != n.position) {
                            var u = db;
                            u.copy(n.layoutRect ? n.layoutRect : this.getBoundingRect()), i || u.applyTransform(this.transform), this.calculateTextPosition ? this.calculateTextPosition(hb, n, u) : Gn(hb, n, u), r.x = hb.x, r.y = hb.y, o = hb.align, a = hb.verticalAlign;
                            var c = n.origin;
                            if (c && null != n.rotation) {
                                var p = void 0,
                                    h = void 0;
                                "center" === c ? (p = .5 * u.width, h = .5 * u.height) : (p = Hn(c[0], u.width), h = Hn(c[1], u.height)), l = !0, r.originX = -r.x + p + (i ? 0 : u.x), r.originY = -r.y + h + (i ? 0 : u.y)
                            }
                        }
                        null != n.rotation && (r.rotation = n.rotation);
                        var d = n.offset;
                        d && (r.x += d[0], r.y += d[1], l || (r.originX = -d[0], r.originY = -d[1]));
                        var f = null == n.inside ? "string" == typeof n.position && n.position.indexOf("inside") >= 0 : n.inside,
                            g = this._innerTextDefaultStyle || (this._innerTextDefaultStyle = {}),
                            m = void 0,
                            y = void 0,
                            v = void 0;
                        f && this.canBeInsideText() ? (m = n.insideFill, y = n.insideStroke, (null == m || "auto" === m) && (m = this.getInsideTextFill()), (null == y || "auto" === y) && (y = this.getInsideTextStroke(m), v = !0)) : (m = n.outsideFill, y = n.outsideStroke, (null == m || "auto" === m) && (m = this.getOutsideFill()), (null == y || "auto" === y) && (y = this.getOutsideStroke(m), v = !0)), m = m || "#000", (m !== g.fill || y !== g.stroke || v !== g.autoStroke || o !== g.align || a !== g.verticalAlign) && (s = !0, g.fill = m, g.stroke = y, g.autoStroke = v, g.align = o, g.verticalAlign = a, t.setDefaultTextStyle(g)), t.__dirty |= Z_, s && t.dirtyStyle(!0)
                    }
                }, e.prototype.canBeInsideText = function () {
                    return !0
                }, e.prototype.getInsideTextFill = function () {
                    return "#fff"
                }, e.prototype.getInsideTextStroke = function () {
                    return "#000"
                }, e.prototype.getOutsideFill = function () {
                    return this.__zr && this.__zr.isDarkMode() ? Jw : Kw
                }, e.prototype.getOutsideStroke = function () {
                    var e = this.__zr && this.__zr.getBackgroundColor(),
                        t = "string" == typeof e && Ot(e);
                    t || (t = [255, 255, 255, 1]);
                    for (var n = t[3], i = this.__zr.isDarkMode(), r = 0; 3 > r; r++) t[r] = t[r] * n + (i ? 0 : 255) * (1 - n);
                    return t[3] = 1, Wt(t, "rgba")
                }, e.prototype.traverse = function () {}, e.prototype.attrKV = function (e, t) {
                    "textConfig" === e ? this.setTextConfig(t) : "textContent" === e ? this.setTextContent(t) : "clipPath" === e ? this.setClipPath(t) : "extra" === e ? (this.extra = this.extra || {}, c(this.extra, t)) : this[e] = t
                }, e.prototype.hide = function () {
                    this.ignore = !0, this.markRedraw()
                }, e.prototype.show = function () {
                    this.ignore = !1, this.markRedraw()
                }, e.prototype.attr = function (e, t) {
                    if ("string" == typeof e) this.attrKV(e, t);
                    else if (D(e))
                        for (var n = e, i = w(n), r = 0; r < i.length; r++) {
                            var o = i[r];
                            this.attrKV(o, e[o])
                        }
                    return this.markRedraw(), this
                }, e.prototype.saveCurrentToNormalState = function (e) {
                    this._innerSaveToNormal(e);
                    for (var t = this._normalState, n = 0; n < this.animators.length; n++) {
                        var i = this.animators[n],
                            r = i.__fromStateTransition;
                        if (!(i.getLoop() || r && r !== ub)) {
                            var o = i.targetName,
                                a = o ? t[o] : t;
                            i.saveTo(a)
                        }
                    }
                }, e.prototype._innerSaveToNormal = function (e) {
                    var t = this._normalState;
                    t || (t = this._normalState = {}), e.textConfig && !t.textConfig && (t.textConfig = this.textConfig), this._savePrimaryToNormal(e, t, cb)
                }, e.prototype._savePrimaryToNormal = function (e, t, n) {
                    for (var i = 0; i < n.length; i++) {
                        var r = n[i];
                        null == e[r] || r in t || (t[r] = this[r])
                    }
                }, e.prototype.hasState = function () {
                    return this.currentStates.length > 0
                }, e.prototype.getState = function (e) {
                    return this.states[e]
                }, e.prototype.ensureState = function (e) {
                    var t = this.states;
                    return t[e] || (t[e] = {}), t[e]
                }, e.prototype.clearStates = function (e) {
                    this.useState(ub, !1, e)
                }, e.prototype.useState = function (e, t, n, i) {
                    var r = e === ub,
                        o = this.hasState();
                    if (o || !r) {
                        var s = this.currentStates,
                            l = this.stateTransition;
                        if (!(h(s, e) >= 0) || !t && 1 !== s.length) {
                            var u;
                            if (this.stateProxy && !r && (u = this.stateProxy(e)), u || (u = this.states && this.states[e]), !u && !r) return void a("State " + e + " not exists.");
                            r || this.saveCurrentToNormalState(u);
                            var c = !!(u && u.hoverLayer || i);
                            c && this._toggleHoverLayerFlag(!0), this._applyStateObj(e, u, this._normalState, t, !n && !this.__inHover && l && l.duration > 0, l);
                            var p = this._textContent,
                                d = this._textGuide;
                            return p && p.useState(e, t, n, c), d && d.useState(e, t, n, c), r ? (this.currentStates = [], this._normalState = {}) : t ? this.currentStates.push(e) : this.currentStates = [e], this._updateAnimationTargets(), this.markRedraw(), !c && this.__inHover && (this._toggleHoverLayerFlag(!1), this.__dirty &= ~Z_), u
                        }
                    }
                }, e.prototype.useStates = function (e, t, n) {
                    if (e.length) {
                        var i = [],
                            r = this.currentStates,
                            o = e.length,
                            a = o === r.length;
                        if (a)
                            for (var s = 0; o > s; s++)
                                if (e[s] !== r[s]) {
                                    a = !1;
                                    break
                                } if (a) return;
                        for (s = 0; o > s; s++) {
                            var l = e[s],
                                u = void 0;
                            this.stateProxy && (u = this.stateProxy(l, e)), u || (u = this.states[l]), u && i.push(u)
                        }
                        var c = i[o - 1],
                            p = !!(c && c.hoverLayer || n);
                        p && this._toggleHoverLayerFlag(!0);
                        var h = this._mergeStates(i),
                            d = this.stateTransition;
                        this.saveCurrentToNormalState(h), this._applyStateObj(e.join(","), h, this._normalState, !1, !t && !this.__inHover && d && d.duration > 0, d);
                        var f = this._textContent,
                            g = this._textGuide;
                        f && f.useStates(e, t, p), g && g.useStates(e, t, p), this._updateAnimationTargets(), this.currentStates = e.slice(), this.markRedraw(), !p && this.__inHover && (this._toggleHoverLayerFlag(!1), this.__dirty &= ~Z_)
                    } else this.clearStates()
                }, e.prototype._updateAnimationTargets = function () {
                    for (var e = 0; e < this.animators.length; e++) {
                        var t = this.animators[e];
                        t.targetName && t.changeTarget(this[t.targetName])
                    }
                }, e.prototype.removeState = function (e) {
                    var t = h(this.currentStates, e);
                    if (t >= 0) {
                        var n = this.currentStates.slice();
                        n.splice(t, 1), this.useStates(n)
                    }
                }, e.prototype.replaceState = function (e, t, n) {
                    var i = this.currentStates.slice(),
                        r = h(i, e),
                        o = h(i, t) >= 0;
                    r >= 0 ? o ? i.splice(r, 1) : i[r] = t : n && !o && i.push(t), this.useStates(i)
                }, e.prototype.toggleState = function (e, t) {
                    t ? this.useState(e, !0) : this.removeState(e)
                }, e.prototype._mergeStates = function (e) {
                    for (var t, n = {}, i = 0; i < e.length; i++) {
                        var r = e[i];
                        c(n, r), r.textConfig && (t = t || {}, c(t, r.textConfig))
                    }
                    return t && (n.textConfig = t), n
                }, e.prototype._applyStateObj = function (e, t, n, i, r, o) {
                    var a = !(t && i);
                    t && t.textConfig ? (this.textConfig = c({}, i ? this.textConfig : n.textConfig), c(this.textConfig, t.textConfig)) : a && n.textConfig && (this.textConfig = n.textConfig);
                    for (var s = {}, l = !1, u = 0; u < cb.length; u++) {
                        var p = cb[u],
                            h = r && pb[p];
                        t && null != t[p] ? h ? (l = !0, s[p] = t[p]) : this[p] = t[p] : a && null != n[p] && (h ? (l = !0, s[p] = n[p]) : this[p] = n[p])
                    }
                    if (!r)
                        for (u = 0; u < this.animators.length; u++) {
                            var d = this.animators[u],
                                f = d.targetName;
                            d.getLoop() || d.__changeFinalValue(f ? (t || n)[f] : t || n)
                        }
                    l && this._transitionState(e, s, o)
                }, e.prototype._attachComponent = function (e) {
                    if ((!e.__zr || e.__hostTarget) && e !== this) {
                        var t = this.__zr;
                        t && e.addSelfToZr(t), e.__zr = t, e.__hostTarget = this
                    }
                }, e.prototype._detachComponent = function (e) {
                    e.__zr && e.removeSelfFromZr(e.__zr), e.__zr = null, e.__hostTarget = null
                }, e.prototype.getClipPath = function () {
                    return this._clipPath
                }, e.prototype.setClipPath = function (e) {
                    this._clipPath && this._clipPath !== e && this.removeClipPath(), this._attachComponent(e), this._clipPath = e, this.markRedraw()
                }, e.prototype.removeClipPath = function () {
                    var e = this._clipPath;
                    e && (this._detachComponent(e), this._clipPath = null, this.markRedraw())
                }, e.prototype.getTextContent = function () {
                    return this._textContent
                }, e.prototype.setTextContent = function (e) {
                    var t = this._textContent;
                    t !== e && (t && t !== e && this.removeTextContent(), e.innerTransformable = new ab, this._attachComponent(e), this._textContent = e, this.markRedraw())
                }, e.prototype.setTextConfig = function (e) {
                    this.textConfig || (this.textConfig = {}), c(this.textConfig, e), this.markRedraw()
                }, e.prototype.removeTextConfig = function () {
                    this.textConfig = null, this.markRedraw()
                }, e.prototype.removeTextContent = function () {
                    var e = this._textContent;
                    e && (e.innerTransformable = null, this._detachComponent(e), this._textContent = null, this._innerTextDefaultStyle = null, this.markRedraw())
                }, e.prototype.getTextGuideLine = function () {
                    return this._textGuide
                }, e.prototype.setTextGuideLine = function (e) {
                    this._textGuide && this._textGuide !== e && this.removeTextGuideLine(), this._attachComponent(e), this._textGuide = e, this.markRedraw()
                }, e.prototype.removeTextGuideLine = function () {
                    var e = this._textGuide;
                    e && (this._detachComponent(e), this._textGuide = null, this.markRedraw())
                }, e.prototype.markRedraw = function () {
                    this.__dirty |= Z_;
                    var e = this.__zr;
                    e && (this.__inHover ? e.refreshHover() : e.refresh()), this.__hostTarget && this.__hostTarget.markRedraw()
                }, e.prototype.dirty = function () {
                    this.markRedraw()
                }, e.prototype._toggleHoverLayerFlag = function (e) {
                    this.__inHover = e;
                    var t = this._textContent,
                        n = this._textGuide;
                    t && (t.__inHover = e), n && (n.__inHover = e)
                }, e.prototype.addSelfToZr = function (e) {
                    if (this.__zr !== e) {
                        this.__zr = e;
                        var t = this.animators;
                        if (t)
                            for (var n = 0; n < t.length; n++) e.animation.addAnimator(t[n]);
                        this._clipPath && this._clipPath.addSelfToZr(e), this._textContent && this._textContent.addSelfToZr(e), this._textGuide && this._textGuide.addSelfToZr(e)
                    }
                }, e.prototype.removeSelfFromZr = function (e) {
                    if (this.__zr) {
                        this.__zr = null;
                        var t = this.animators;
                        if (t)
                            for (var n = 0; n < t.length; n++) e.animation.removeAnimator(t[n]);
                        this._clipPath && this._clipPath.removeSelfFromZr(e), this._textContent && this._textContent.removeSelfFromZr(e), this._textGuide && this._textGuide.removeSelfFromZr(e)
                    }
                }, e.prototype.animate = function (e, t, n) {
                    var i = e ? this[e] : this,
                        r = new Rw(i, t, n);
                    return e && (r.targetName = e), this.addAnimator(r, e), r
                }, e.prototype.addAnimator = function (e, t) {
                    var n = this.__zr,
                        i = this;
                    e.during(function () {
                        i.updateDuringAnimation(t)
                    }).done(function () {
                        var t = i.animators,
                            n = h(t, e);
                        n >= 0 && t.splice(n, 1)
                    }), this.animators.push(e), n && n.animation.addAnimator(e), n && n.wakeUp()
                }, e.prototype.updateDuringAnimation = function () {
                    this.markRedraw()
                }, e.prototype.stopAnimation = function (e, t) {
                    for (var n = this.animators, i = n.length, r = [], o = 0; i > o; o++) {
                        var a = n[o];
                        e && e !== a.scope ? r.push(a) : a.stop(t)
                    }
                    return this.animators = r, this
                }, e.prototype.animateTo = function (e, t, n) {
                    Vn(this, e, t, n)
                }, e.prototype.animateFrom = function (e, t, n) {
                    Vn(this, e, t, n, !0)
                }, e.prototype._transitionState = function (e, t, n, i) {
                    for (var r = Vn(this, t, n, i), o = 0; o < r.length; o++) r[o].__fromStateTransition = e
                }, e.prototype.getBoundingRect = function () {
                    return null
                }, e.prototype.getPaintRect = function () {
                    return null
                }, e.initDefaultProps = function () {
                    function t(e, t, i, r) {
                        function o(e, t) {
                            Object.defineProperty(t, 0, {
                                get: function () {
                                    return e[i]
                                },
                                set: function (t) {
                                    e[i] = t
                                }
                            }), Object.defineProperty(t, 1, {
                                get: function () {
                                    return e[r]
                                },
                                set: function (t) {
                                    e[r] = t
                                }
                            })
                        }
                        Object.defineProperty(n, e, {
                            get: function () {
                                if (!this[t]) {
                                    var e = this[t] = [];
                                    o(this, e)
                                }
                                return this[t]
                            },
                            set: function (e) {
                                this[i] = e[0], this[r] = e[1], this[t] = e, o(this, e)
                            }
                        })
                    }
                    var n = e.prototype;
                    n.type = "element", n.name = "", n.ignore = n.silent = n.isGroup = n.draggable = n.dragging = n.ignoreClip = n.__inHover = !1, n.__dirty = Z_, Object.defineProperty && (t("position", "_legacyPos", "x", "y"), t("scale", "_legacyScale", "scaleX", "scaleY"), t("origin", "_legacyOrigin", "originX", "originY"))
                }(), e
            }();
        f(fb, y_), f(fb, ab);
        var gb = function (e) {
            function n(t) {
                var n = e.call(this) || this;
                return n.isGroup = !0, n._children = [], n.attr(t), n
            }
            return t(n, e), n.prototype.childrenRef = function () {
                return this._children
            }, n.prototype.children = function () {
                return this._children.slice()
            }, n.prototype.childAt = function (e) {
                return this._children[e]
            }, n.prototype.childOfName = function (e) {
                for (var t = this._children, n = 0; n < t.length; n++)
                    if (t[n].name === e) return t[n]
            }, n.prototype.childCount = function () {
                return this._children.length
            }, n.prototype.add = function (e) {
                return e && e !== this && e.parent !== this && (this._children.push(e), this._doAdd(e)), this
            }, n.prototype.addBefore = function (e, t) {
                if (e && e !== this && e.parent !== this && t && t.parent === this) {
                    var n = this._children,
                        i = n.indexOf(t);
                    i >= 0 && (n.splice(i, 0, e), this._doAdd(e))
                }
                return this
            }, n.prototype.replace = function (e, t) {
                var n = h(this._children, e);
                return n >= 0 && this.replaceAt(t, n), this
            }, n.prototype.replaceAt = function (e, t) {
                var n = this._children,
                    i = n[t];
                if (e && e !== this && e.parent !== this && e !== i) {
                    n[t] = e, i.parent = null;
                    var r = this.__zr;
                    r && i.removeSelfFromZr(r), this._doAdd(e)
                }
                return this
            }, n.prototype._doAdd = function (e) {
                e.parent && e.parent.remove(e), e.parent = this;
                var t = this.__zr;
                t && t !== e.__zr && e.addSelfToZr(t), t && t.refresh()
            }, n.prototype.remove = function (e) {
                var t = this.__zr,
                    n = this._children,
                    i = h(n, e);
                return 0 > i ? this : (n.splice(i, 1), e.parent = null, t && e.removeSelfFromZr(t), t && t.refresh(), this)
            }, n.prototype.removeAll = function () {
                for (var e = this._children, t = this.__zr, n = 0; n < e.length; n++) {
                    var i = e[n];
                    t && i.removeSelfFromZr(t), i.parent = null
                }
                return e.length = 0, this
            }, n.prototype.eachChild = function (e, t) {
                for (var n = this._children, i = 0; i < n.length; i++) {
                    var r = n[i];
                    e.call(t, r, i)
                }
                return this
            }, n.prototype.traverse = function (e, t) {
                for (var n = 0; n < this._children.length; n++) {
                    var i = this._children[n],
                        r = e.call(t, i);
                    i.isGroup && !r && i.traverse(e, t)
                }
                return this
            }, n.prototype.addSelfToZr = function (t) {
                e.prototype.addSelfToZr.call(this, t);
                for (var n = 0; n < this._children.length; n++) {
                    var i = this._children[n];
                    i.addSelfToZr(t)
                }
            }, n.prototype.removeSelfFromZr = function (t) {
                e.prototype.removeSelfFromZr.call(this, t);
                for (var n = 0; n < this._children.length; n++) {
                    var i = this._children[n];
                    i.removeSelfFromZr(t)
                }
            }, n.prototype.getBoundingRect = function (e) {
                for (var t = new F_(0, 0, 0, 0), n = e || this._children, i = [], r = null, o = 0; o < n.length; o++) {
                    var a = n[o];
                    if (!a.ignore && !a.invisible) {
                        var s = a.getBoundingRect(),
                            l = a.getLocalTransform(i);
                        l ? (F_.applyTransform(t, s, l), r = r || t.clone(), r.union(t)) : (r = r || s.clone(), r.union(s))
                    }
                }
                return r || t
            }, n
        }(fb);
        gb.prototype.type = "group";
        var mb = {},
            yb = {},
            vb = function () {
                function e(e, t, n) {
                    var i = this;
                    this._sleepAfterStill = 10, this._stillFrameAccum = 0, this._needsRefresh = !0, this._needsRefreshHover = !0, this._darkMode = !1, n = n || {}, this.dom = t, this.id = e;
                    var r = new Q_,
                        o = n.renderer || "canvas";
                    mb[o] || (o = w(mb)[0]), n.useDirtyRect = null != n.useDirtyRect && n.useDirtyRect;
                    var a = new mb[o](t, r, n, e),
                        s = n.ssr || a.ssrOnly;
                    this.storage = r, this.painter = a;
                    var l, u = zx.node || zx.worker || s ? null : new Uw(a.getViewportRoot(), a.root),
                        c = n.useCoarsePointer,
                        p = null == c || "auto" === c ? zx.touchEventsSupported : !!c,
                        h = 44;
                    p && (l = B(n.pointerSize, h)), this.handler = new X_(r, a, u, a.root, l), this.animation = new zw({
                        stage: {
                            update: s ? null : function () {
                                return i._flush(!0)
                            }
                        }
                    }), s || this.animation.start()
                }
                return e.prototype.add = function (e) {
                    e && (this.storage.addRoot(e), e.addSelfToZr(this), this.refresh())
                }, e.prototype.remove = function (e) {
                    e && (this.storage.delRoot(e), e.removeSelfFromZr(this), this.refresh())
                }, e.prototype.configLayer = function (e, t) {
                    this.painter.configLayer && this.painter.configLayer(e, t), this.refresh()
                }, e.prototype.setBackgroundColor = function (e) {
                    this.painter.setBackgroundColor && this.painter.setBackgroundColor(e), this.refresh(), this._backgroundColor = e, this._darkMode = $n(e)
                }, e.prototype.getBackgroundColor = function () {
                    return this._backgroundColor
                }, e.prototype.setDarkMode = function (e) {
                    this._darkMode = e
                }, e.prototype.isDarkMode = function () {
                    return this._darkMode
                }, e.prototype.refreshImmediately = function (e) {
                    e || this.animation.update(!0), this._needsRefresh = !1, this.painter.refresh(), this._needsRefresh = !1
                }, e.prototype.refresh = function () {
                    this._needsRefresh = !0, this.animation.start()
                }, e.prototype.flush = function () {
                    this._flush(!1)
                }, e.prototype._flush = function (e) {
                    var t, n = bn();
                    this._needsRefresh && (t = !0, this.refreshImmediately(e)), this._needsRefreshHover && (t = !0, this.refreshHoverImmediately());
                    var i = bn();
                    t ? (this._stillFrameAccum = 0, this.trigger("rendered", {
                        elapsedTime: i - n
                    })) : this._sleepAfterStill > 0 && (this._stillFrameAccum++, this._stillFrameAccum > this._sleepAfterStill && this.animation.stop())
                }, e.prototype.setSleepAfterStill = function (e) {
                    this._sleepAfterStill = e
                }, e.prototype.wakeUp = function () {
                    this.animation.start(), this._stillFrameAccum = 0
                }, e.prototype.refreshHover = function () {
                    this._needsRefreshHover = !0
                }, e.prototype.refreshHoverImmediately = function () {
                    this._needsRefreshHover = !1, this.painter.refreshHover && "canvas" === this.painter.getType() && this.painter.refreshHover()
                }, e.prototype.resize = function (e) {
                    e = e || {}, this.painter.resize(e.width, e.height), this.handler.resize()
                }, e.prototype.clearAnimation = function () {
                    this.animation.clear()
                }, e.prototype.getWidth = function () {
                    return this.painter.getWidth()
                }, e.prototype.getHeight = function () {
                    return this.painter.getHeight()
                }, e.prototype.setCursorStyle = function (e) {
                    this.handler.setCursorStyle(e)
                }, e.prototype.findHover = function (e, t) {
                    return this.handler.findHover(e, t)
                }, e.prototype.on = function (e, t, n) {
                    return this.handler.on(e, t, n), this
                }, e.prototype.off = function (e, t) {
                    this.handler.off(e, t)
                }, e.prototype.trigger = function (e, t) {
                    this.handler.trigger(e, t)
                }, e.prototype.clear = function () {
                    for (var e = this.storage.getRoots(), t = 0; t < e.length; t++) e[t] instanceof gb && e[t].removeSelfFromZr(this);
                    this.storage.delAllRoots(), this.painter.clear()
                }, e.prototype.dispose = function () {
                    this.animation.stop(), this.clear(), this.storage.dispose(), this.painter.dispose(), this.handler.dispose(), this.animation = this.storage = this.painter = this.handler = null, Zn(this.id)
                }, e
            }(),
            xb = "5.4.0",
            _b = (Object.freeze || Object)({
                init: Kn,
                dispose: Jn,
                disposeAll: Qn,
                getInstance: ei,
                registerPainter: ti,
                version: xb
            }),
            wb = 1e-4,
            bb = 20,
            Sb = 9007199254740991,
            Tb = /^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d{1,2})(?::(\d{1,2})(?:[.,](\d+))?)?)?(Z|[\+\-]\d\d:?\d\d)?)?)?)?)?$/,
            Cb = ("undefined" != typeof console && console.warn && console.log, "series\0"),
            Mb = "\0_ec_\0",
            Ib = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "rich", "tag", "color", "textBorderColor", "textBorderWidth", "width", "height", "lineHeight", "align", "verticalAlign", "baseline", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY", "backgroundColor", "borderColor", "borderWidth", "borderRadius", "padding"],
            kb = Si(),
            Db = {
                useDefault: !0,
                enableAll: !1,
                enableNone: !1
            },
            Ab = ".",
            Pb = "___EC__COMPONENT__CONTAINER___",
            Lb = "___EC__EXTENDED_CLASS___",
            Nb = Math.round(10 * Math.random()),
            Ob = [
                ["fill", "color"],
                ["shadowBlur"],
                ["shadowOffsetX"],
                ["shadowOffsetY"],
                ["opacity"],
                ["shadowColor"]
            ],
            Eb = pr(Ob),
            Rb = function () {
                function e() {}
                return e.prototype.getAreaStyle = function (e, t) {
                    return Eb(this, e, t)
                }, e
            }(),
            zb = new gw(50),
            Bb = /\{([a-zA-Z0-9_]+)\|([^}]*)\}/g,
            Fb = function () {
                function e() {}
                return e
            }(),
            Hb = function () {
                function e(e) {
                    this.tokens = [], e && (this.tokens = e)
                }
                return e
            }(),
            Gb = function () {
                function e() {
                    this.width = 0, this.height = 0, this.contentWidth = 0, this.contentHeight = 0, this.outerWidth = 0, this.outerHeight = 0, this.lines = []
                }
                return e
            }(),
            Vb = v(",&?/;] ".split(""), function (e, t) {
                return e[t] = !0, e
            }, {}),
            Wb = "__zr_style_" + Math.round(10 * Math.random()),
            jb = {
                shadowBlur: 0,
                shadowOffsetX: 0,
                shadowOffsetY: 0,
                shadowColor: "#000",
                opacity: 1,
                blend: "source-over"
            },
            Xb = {
                style: {
                    shadowBlur: !0,
                    shadowOffsetX: !0,
                    shadowOffsetY: !0,
                    shadowColor: !0,
                    opacity: !0
                }
            };
        jb[Wb] = !0;
        var Yb = ["z", "z2", "invisible"],
            Ub = ["invisible"],
            qb = function (e) {
                function n(t) {
                    return e.call(this, t) || this
                }
                return t(n, e), n.prototype._init = function (t) {
                        for (var n = w(t), i = 0; i < n.length; i++) {
                            var r = n[i];
                            "style" === r ? this.useStyle(t[r]) : e.prototype.attrKV.call(this, r, t[r])
                        }
                        this.style || this.useStyle({})
                    }, n.prototype.beforeBrush = function () {}, n.prototype.afterBrush = function () {}, n.prototype.innerBeforeBrush = function () {}, n.prototype.innerAfterBrush = function () {}, n.prototype.shouldBePainted = function (e, t, n, i) {
                        var r = this.transform;
                        if (this.ignore || this.invisible || 0 === this.style.opacity || this.culling && Mr(this, e, t) || r && !r[0] && !r[3]) return !1;
                        if (n && this.__clipPaths)
                            for (var o = 0; o < this.__clipPaths.length; ++o)
                                if (this.__clipPaths[o].isZeroArea()) return !1;
                        if (i && this.parent)
                            for (var a = this.parent; a;) {
                                if (a.ignore) return !1;
                                a = a.parent
                            }
                        return !0
                    },
                    n.prototype.contain = function (e, t) {
                        return this.rectContain(e, t)
                    }, n.prototype.traverse = function (e, t) {
                        e.call(t, this)
                    }, n.prototype.rectContain = function (e, t) {
                        var n = this.transformCoordToLocal(e, t),
                            i = this.getBoundingRect();
                        return i.contain(n[0], n[1])
                    }, n.prototype.getPaintRect = function () {
                        var e = this._paintRect;
                        if (!this._paintRect || this.__dirty) {
                            var t = this.transform,
                                n = this.getBoundingRect(),
                                i = this.style,
                                r = i.shadowBlur || 0,
                                o = i.shadowOffsetX || 0,
                                a = i.shadowOffsetY || 0;
                            e = this._paintRect || (this._paintRect = new F_(0, 0, 0, 0)), t ? F_.applyTransform(e, n, t) : e.copy(n), (r || o || a) && (e.width += 2 * r + Math.abs(o), e.height += 2 * r + Math.abs(a), e.x = Math.min(e.x, e.x + o - r), e.y = Math.min(e.y, e.y + a - r));
                            var s = this.dirtyRectTolerance;
                            e.isZero() || (e.x = Math.floor(e.x - s), e.y = Math.floor(e.y - s), e.width = Math.ceil(e.width + 1 + 2 * s), e.height = Math.ceil(e.height + 1 + 2 * s))
                        }
                        return e
                    }, n.prototype.setPrevPaintRect = function (e) {
                        e ? (this._prevPaintRect = this._prevPaintRect || new F_(0, 0, 0, 0), this._prevPaintRect.copy(e)) : this._prevPaintRect = null
                    }, n.prototype.getPrevPaintRect = function () {
                        return this._prevPaintRect
                    }, n.prototype.animateStyle = function (e) {
                        return this.animate("style", e)
                    }, n.prototype.updateDuringAnimation = function (e) {
                        "style" === e ? this.dirtyStyle() : this.markRedraw()
                    }, n.prototype.attrKV = function (t, n) {
                        "style" !== t ? e.prototype.attrKV.call(this, t, n) : this.style ? this.setStyle(n) : this.useStyle(n)
                    }, n.prototype.setStyle = function (e, t) {
                        return "string" == typeof e ? this.style[e] = t : c(this.style, e), this.dirtyStyle(), this
                    }, n.prototype.dirtyStyle = function (e) {
                        e || this.markRedraw(), this.__dirty |= $_, this._rect && (this._rect = null)
                    }, n.prototype.dirty = function () {
                        this.dirtyStyle()
                    }, n.prototype.styleChanged = function () {
                        return !!(this.__dirty & $_)
                    }, n.prototype.styleUpdated = function () {
                        this.__dirty &= ~$_
                    }, n.prototype.createStyle = function (e) {
                        return q(jb, e)
                    }, n.prototype.useStyle = function (e) {
                        e[Wb] || (e = this.createStyle(e)), this.__inHover ? this.__hoverStyle = e : this.style = e, this.dirtyStyle()
                    }, n.prototype.isStyleObject = function (e) {
                        return e[Wb]
                    }, n.prototype._innerSaveToNormal = function (t) {
                        e.prototype._innerSaveToNormal.call(this, t);
                        var n = this._normalState;
                        t.style && !n.style && (n.style = this._mergeStyle(this.createStyle(), this.style)), this._savePrimaryToNormal(t, n, Yb)
                    }, n.prototype._applyStateObj = function (t, n, i, r, o, a) {
                        e.prototype._applyStateObj.call(this, t, n, i, r, o, a);
                        var s, l = !(n && r);
                        if (n && n.style ? o ? r ? s = n.style : (s = this._mergeStyle(this.createStyle(), i.style), this._mergeStyle(s, n.style)) : (s = this._mergeStyle(this.createStyle(), r ? this.style : i.style), this._mergeStyle(s, n.style)) : l && (s = i.style), s)
                            if (o) {
                                var u = this.style;
                                if (this.style = this.createStyle(l ? {} : u), l)
                                    for (var c = w(u), p = 0; p < c.length; p++) {
                                        var h = c[p];
                                        h in s && (s[h] = s[h], this.style[h] = u[h])
                                    }
                                var d = w(s);
                                for (p = 0; p < d.length; p++) {
                                    h = d[p];
                                    this.style[h] = this.style[h]
                                }
                                this._transitionState(t, {
                                    style: s
                                }, a, this.getAnimationStyleProps())
                            } else this.useStyle(s);
                        var f = this.__inHover ? Ub : Yb;
                        for (p = 0; p < f.length; p++) {
                            h = f[p];
                            n && null != n[h] ? this[h] = n[h] : l && null != i[h] && (this[h] = i[h])
                        }
                    }, n.prototype._mergeStates = function (t) {
                        for (var n, i = e.prototype._mergeStates.call(this, t), r = 0; r < t.length; r++) {
                            var o = t[r];
                            o.style && (n = n || {}, this._mergeStyle(n, o.style))
                        }
                        return n && (i.style = n), i
                    }, n.prototype._mergeStyle = function (e, t) {
                        return c(e, t), e
                    }, n.prototype.getAnimationStyleProps = function () {
                        return Xb
                    }, n.initDefaultProps = function () {
                        var e = n.prototype;
                        e.type = "displayable", e.invisible = !1, e.z = 0, e.z2 = 0, e.zlevel = 0, e.culling = !1, e.cursor = "pointer", e.rectHover = !1, e.incremental = !1, e._rect = null, e.dirtyRectTolerance = 0, e.__dirty = Z_ | $_
                    }(), n
            }(fb),
            Zb = new F_(0, 0, 0, 0),
            $b = new F_(0, 0, 0, 0),
            Kb = Math.min,
            Jb = Math.max,
            Qb = Math.sin,
            eS = Math.cos,
            tS = 2 * Math.PI,
            nS = J(),
            iS = J(),
            rS = J(),
            oS = [],
            aS = [],
            sS = {
                M: 1,
                L: 2,
                C: 3,
                Q: 4,
                A: 5,
                Z: 6,
                R: 7
            },
            lS = [],
            uS = [],
            cS = [],
            pS = [],
            hS = [],
            dS = [],
            fS = Math.min,
            gS = Math.max,
            mS = Math.cos,
            yS = Math.sin,
            vS = Math.abs,
            xS = Math.PI,
            _S = 2 * xS,
            wS = "undefined" != typeof Float32Array,
            bS = [],
            SS = function () {
                function e(e) {
                    this.dpr = 1, this._xi = 0, this._yi = 0, this._x0 = 0, this._y0 = 0, this._len = 0, e && (this._saveData = !1), this._saveData && (this.data = [])
                }
                return e.prototype.increaseVersion = function () {
                    this._version++
                }, e.prototype.getVersion = function () {
                    return this._version
                }, e.prototype.setScale = function (e, t, n) {
                    n = n || 0, n > 0 && (this._ux = vS(n / Zw / e) || 0, this._uy = vS(n / Zw / t) || 0)
                }, e.prototype.setDPR = function (e) {
                    this.dpr = e
                }, e.prototype.setContext = function (e) {
                    this._ctx = e
                }, e.prototype.getContext = function () {
                    return this._ctx
                }, e.prototype.beginPath = function () {
                    return this._ctx && this._ctx.beginPath(), this.reset(), this
                }, e.prototype.reset = function () {
                    this._saveData && (this._len = 0), this._pathSegLen && (this._pathSegLen = null, this._pathLen = 0), this._version++
                }, e.prototype.moveTo = function (e, t) {
                    return this._drawPendingPt(), this.addData(sS.M, e, t), this._ctx && this._ctx.moveTo(e, t), this._x0 = e, this._y0 = t, this._xi = e, this._yi = t, this
                }, e.prototype.lineTo = function (e, t) {
                    var n = vS(e - this._xi),
                        i = vS(t - this._yi),
                        r = n > this._ux || i > this._uy;
                    if (this.addData(sS.L, e, t), this._ctx && r && this._ctx.lineTo(e, t), r) this._xi = e, this._yi = t, this._pendingPtDist = 0;
                    else {
                        var o = n * n + i * i;
                        o > this._pendingPtDist && (this._pendingPtX = e, this._pendingPtY = t, this._pendingPtDist = o)
                    }
                    return this
                }, e.prototype.bezierCurveTo = function (e, t, n, i, r, o) {
                    return this._drawPendingPt(), this.addData(sS.C, e, t, n, i, r, o), this._ctx && this._ctx.bezierCurveTo(e, t, n, i, r, o), this._xi = r, this._yi = o, this
                }, e.prototype.quadraticCurveTo = function (e, t, n, i) {
                    return this._drawPendingPt(), this.addData(sS.Q, e, t, n, i), this._ctx && this._ctx.quadraticCurveTo(e, t, n, i), this._xi = n, this._yi = i, this
                }, e.prototype.arc = function (e, t, n, i, r, o) {
                    this._drawPendingPt(), bS[0] = i, bS[1] = r, Lr(bS, o), i = bS[0], r = bS[1];
                    var a = r - i;
                    return this.addData(sS.A, e, t, n, n, i, a, 0, o ? 0 : 1), this._ctx && this._ctx.arc(e, t, n, i, r, o), this._xi = mS(r) * n + e, this._yi = yS(r) * n + t, this
                }, e.prototype.arcTo = function (e, t, n, i, r) {
                    return this._drawPendingPt(), this._ctx && this._ctx.arcTo(e, t, n, i, r), this
                }, e.prototype.rect = function (e, t, n, i) {
                    return this._drawPendingPt(), this._ctx && this._ctx.rect(e, t, n, i), this.addData(sS.R, e, t, n, i), this
                }, e.prototype.closePath = function () {
                    this._drawPendingPt(), this.addData(sS.Z);
                    var e = this._ctx,
                        t = this._x0,
                        n = this._y0;
                    return e && e.closePath(), this._xi = t, this._yi = n, this
                }, e.prototype.fill = function (e) {
                    e && e.fill(), this.toStatic()
                }, e.prototype.stroke = function (e) {
                    e && e.stroke(), this.toStatic()
                }, e.prototype.len = function () {
                    return this._len
                }, e.prototype.setData = function (e) {
                    var t = e.length;
                    this.data && this.data.length === t || !wS || (this.data = new Float32Array(t));
                    for (var n = 0; t > n; n++) this.data[n] = e[n];
                    this._len = t
                }, e.prototype.appendPath = function (e) {
                    e instanceof Array || (e = [e]);
                    for (var t = e.length, n = 0, i = this._len, r = 0; t > r; r++) n += e[r].len();
                    wS && this.data instanceof Float32Array && (this.data = new Float32Array(i + n));
                    for (r = 0; t > r; r++)
                        for (var o = e[r].data, a = 0; a < o.length; a++) this.data[i++] = o[a];
                    this._len = i
                }, e.prototype.addData = function () {
                    if (this._saveData) {
                        var e = this.data;
                        this._len + arguments.length > e.length && (this._expandData(), e = this.data);
                        for (var t = 0; t < arguments.length; t++) e[this._len++] = arguments[t]
                    }
                }, e.prototype._drawPendingPt = function () {
                    this._pendingPtDist > 0 && (this._ctx && this._ctx.lineTo(this._pendingPtX, this._pendingPtY), this._pendingPtDist = 0)
                }, e.prototype._expandData = function () {
                    if (!(this.data instanceof Array)) {
                        for (var e = [], t = 0; t < this._len; t++) e[t] = this.data[t];
                        this.data = e
                    }
                }, e.prototype.toStatic = function () {
                    if (this._saveData) {
                        this._drawPendingPt();
                        var e = this.data;
                        e instanceof Array && (e.length = this._len, wS && this._len > 11 && (this.data = new Float32Array(e)))
                    }
                }, e.prototype.getBoundingRect = function () {
                    cS[0] = cS[1] = hS[0] = hS[1] = Number.MAX_VALUE, pS[0] = pS[1] = dS[0] = dS[1] = -Number.MAX_VALUE;
                    var e, t = this.data,
                        n = 0,
                        i = 0,
                        r = 0,
                        o = 0;
                    for (e = 0; e < this._len;) {
                        var a = t[e++],
                            s = 1 === e;
                        switch (s && (n = t[e], i = t[e + 1], r = n, o = i), a) {
                            case sS.M:
                                n = r = t[e++], i = o = t[e++], hS[0] = r, hS[1] = o, dS[0] = r, dS[1] = o;
                                break;
                            case sS.L:
                                Ir(n, i, t[e], t[e + 1], hS, dS), n = t[e++], i = t[e++];
                                break;
                            case sS.C:
                                kr(n, i, t[e++], t[e++], t[e++], t[e++], t[e], t[e + 1], hS, dS), n = t[e++], i = t[e++];
                                break;
                            case sS.Q:
                                Dr(n, i, t[e++], t[e++], t[e], t[e + 1], hS, dS), n = t[e++], i = t[e++];
                                break;
                            case sS.A:
                                var l = t[e++],
                                    u = t[e++],
                                    c = t[e++],
                                    p = t[e++],
                                    h = t[e++],
                                    d = t[e++] + h;
                                e += 1;
                                var f = !t[e++];
                                s && (r = mS(h) * c + l, o = yS(h) * p + u), Ar(l, u, c, p, h, d, f, hS, dS), n = mS(d) * c + l, i = yS(d) * p + u;
                                break;
                            case sS.R:
                                r = n = t[e++], o = i = t[e++];
                                var g = t[e++],
                                    m = t[e++];
                                Ir(r, o, r + g, o + m, hS, dS);
                                break;
                            case sS.Z:
                                n = r, i = o
                        }
                        ye(cS, cS, hS), ve(pS, pS, dS)
                    }
                    return 0 === e && (cS[0] = cS[1] = pS[0] = pS[1] = 0), new F_(cS[0], cS[1], pS[0] - cS[0], pS[1] - cS[1])
                }, e.prototype._calculateLength = function () {
                    var e = this.data,
                        t = this._len,
                        n = this._ux,
                        i = this._uy,
                        r = 0,
                        o = 0,
                        a = 0,
                        s = 0;
                    this._pathSegLen || (this._pathSegLen = []);
                    for (var l = this._pathSegLen, u = 0, c = 0, p = 0; t > p;) {
                        var h = e[p++],
                            d = 1 === p;
                        d && (r = e[p], o = e[p + 1], a = r, s = o);
                        var f = -1;
                        switch (h) {
                            case sS.M:
                                r = a = e[p++], o = s = e[p++];
                                break;
                            case sS.L:
                                var g = e[p++],
                                    m = e[p++],
                                    y = g - r,
                                    v = m - o;
                                (vS(y) > n || vS(v) > i || p === t - 1) && (f = Math.sqrt(y * y + v * v), r = g, o = m);
                                break;
                            case sS.C:
                                var x = e[p++],
                                    _ = e[p++],
                                    w = (g = e[p++], m = e[p++], e[p++]),
                                    b = e[p++];
                                f = gt(r, o, x, _, g, m, w, b, 10), r = w, o = b;
                                break;
                            case sS.Q:
                                x = e[p++], _ = e[p++], g = e[p++], m = e[p++];
                                f = bt(r, o, x, _, g, m, 10), r = g, o = m;
                                break;
                            case sS.A:
                                var S = e[p++],
                                    T = e[p++],
                                    C = e[p++],
                                    M = e[p++],
                                    I = e[p++],
                                    k = e[p++],
                                    D = k + I;
                                p += 1, e[p++], d && (a = mS(I) * C + S, s = yS(I) * M + T), f = gS(C, M) * fS(_S, Math.abs(k)), r = mS(D) * C + S, o = yS(D) * M + T;
                                break;
                            case sS.R:
                                a = r = e[p++], s = o = e[p++];
                                var A = e[p++],
                                    P = e[p++];
                                f = 2 * A + 2 * P;
                                break;
                            case sS.Z:
                                y = a - r, v = s - o;
                                f = Math.sqrt(y * y + v * v), r = a, o = s
                        }
                        f >= 0 && (l[c++] = f, u += f)
                    }
                    return this._pathLen = u, u
                }, e.prototype.rebuildPath = function (e, t) {
                    var n, i, r, o, a, s, l, u, c, p, h, d = this.data,
                        f = this._ux,
                        g = this._uy,
                        m = this._len,
                        y = 1 > t,
                        v = 0,
                        x = 0,
                        _ = 0;
                    if (!y || (this._pathSegLen || this._calculateLength(), l = this._pathSegLen, u = this._pathLen, c = t * u)) e: for (var w = 0; m > w;) {
                        var b = d[w++],
                            S = 1 === w;
                        switch (S && (r = d[w], o = d[w + 1], n = r, i = o), b !== sS.L && _ > 0 && (e.lineTo(p, h), _ = 0), b) {
                            case sS.M:
                                n = r = d[w++], i = o = d[w++], e.moveTo(r, o);
                                break;
                            case sS.L:
                                a = d[w++], s = d[w++];
                                var T = vS(a - r),
                                    C = vS(s - o);
                                if (T > f || C > g) {
                                    if (y) {
                                        var M = l[x++];
                                        if (v + M > c) {
                                            var I = (c - v) / M;
                                            e.lineTo(r * (1 - I) + a * I, o * (1 - I) + s * I);
                                            break e
                                        }
                                        v += M
                                    }
                                    e.lineTo(a, s), r = a, o = s, _ = 0
                                } else {
                                    var k = T * T + C * C;
                                    k > _ && (p = a, h = s, _ = k)
                                }
                                break;
                            case sS.C:
                                var D = d[w++],
                                    A = d[w++],
                                    P = d[w++],
                                    L = d[w++],
                                    N = d[w++],
                                    O = d[w++];
                                if (y) {
                                    M = l[x++];
                                    if (v + M > c) {
                                        I = (c - v) / M;
                                        dt(r, D, P, N, I, lS), dt(o, A, L, O, I, uS), e.bezierCurveTo(lS[1], uS[1], lS[2], uS[2], lS[3], uS[3]);
                                        break e
                                    }
                                    v += M
                                }
                                e.bezierCurveTo(D, A, P, L, N, O), r = N, o = O;
                                break;
                            case sS.Q:
                                D = d[w++], A = d[w++], P = d[w++], L = d[w++];
                                if (y) {
                                    M = l[x++];
                                    if (v + M > c) {
                                        I = (c - v) / M;
                                        _t(r, D, P, I, lS), _t(o, A, L, I, uS), e.quadraticCurveTo(lS[1], uS[1], lS[2], uS[2]);
                                        break e
                                    }
                                    v += M
                                }
                                e.quadraticCurveTo(D, A, P, L), r = P, o = L;
                                break;
                            case sS.A:
                                var E = d[w++],
                                    R = d[w++],
                                    z = d[w++],
                                    B = d[w++],
                                    F = d[w++],
                                    H = d[w++],
                                    G = d[w++],
                                    V = !d[w++],
                                    W = z > B ? z : B,
                                    j = vS(z - B) > .001,
                                    X = F + H,
                                    Y = !1;
                                if (y) {
                                    M = l[x++];
                                    v + M > c && (X = F + H * (c - v) / M, Y = !0), v += M
                                }
                                if (j && e.ellipse ? e.ellipse(E, R, z, B, G, F, X, V) : e.arc(E, R, W, F, X, V), Y) break e;
                                S && (n = mS(F) * z + E, i = yS(F) * B + R), r = mS(X) * z + E, o = yS(X) * B + R;
                                break;
                            case sS.R:
                                n = r = d[w], i = o = d[w + 1], a = d[w++], s = d[w++];
                                var U = d[w++],
                                    q = d[w++];
                                if (y) {
                                    M = l[x++];
                                    if (v + M > c) {
                                        var Z = c - v;
                                        e.moveTo(a, s), e.lineTo(a + fS(Z, U), s), Z -= U, Z > 0 && e.lineTo(a + U, s + fS(Z, q)), Z -= q, Z > 0 && e.lineTo(a + gS(U - Z, 0), s + q), Z -= U, Z > 0 && e.lineTo(a, s + gS(q - Z, 0));
                                        break e
                                    }
                                    v += M
                                }
                                e.rect(a, s, U, q);
                                break;
                            case sS.Z:
                                if (y) {
                                    M = l[x++];
                                    if (v + M > c) {
                                        I = (c - v) / M;
                                        e.lineTo(r * (1 - I) + n * I, o * (1 - I) + i * I);
                                        break e
                                    }
                                    v += M
                                }
                                e.closePath(), r = n, o = i
                        }
                    }
                }, e.prototype.clone = function () {
                    var t = new e,
                        n = this.data;
                    return t.data = n.slice ? n.slice() : Array.prototype.slice.call(n), t._len = this._len, t
                }, e.CMD = sS, e.initDefaultProps = (t = e.prototype, t._saveData = !0, t._ux = 0, t._uy = 0, t._pendingPtDist = 0, void(t._version = 0)), e;
                var t
            }(),
            TS = 2 * Math.PI,
            CS = 2 * Math.PI,
            MS = SS.CMD,
            IS = 2 * Math.PI,
            kS = 1e-4,
            DS = [-1, -1, -1],
            AS = [-1, -1],
            PS = p({
                fill: "#000",
                stroke: null,
                strokePercent: 1,
                fillOpacity: 1,
                strokeOpacity: 1,
                lineDashOffset: 0,
                lineWidth: 1,
                lineCap: "butt",
                miterLimit: 10,
                strokeNoScale: !1,
                strokeFirst: !1
            }, jb),
            LS = {
                style: p({
                    fill: !0,
                    stroke: !0,
                    strokePercent: !0,
                    fillOpacity: !0,
                    strokeOpacity: !0,
                    lineDashOffset: !0,
                    lineWidth: !0,
                    miterLimit: !0
                }, Xb.style)
            },
            NS = sb.concat(["invisible", "culling", "z", "z2", "zlevel", "parent"]),
            OS = function (e) {
                function n(t) {
                    return e.call(this, t) || this
                }
                return t(n, e), n.prototype.update = function () {
                    var t = this;
                    e.prototype.update.call(this);
                    var i = this.style;
                    if (i.decal) {
                        var r = this._decalEl = this._decalEl || new n;
                        r.buildPath === n.prototype.buildPath && (r.buildPath = function (e) {
                            t.buildPath(e, t.shape)
                        }), r.silent = !0;
                        var o = r.style;
                        for (var a in i) o[a] !== i[a] && (o[a] = i[a]);
                        o.fill = i.fill ? i.decal : null, o.decal = null, o.shadowColor = null, i.strokeFirst && (o.stroke = null);
                        for (var s = 0; s < NS.length; ++s) r[NS[s]] = this[NS[s]];
                        r.__dirty |= Z_
                    } else this._decalEl && (this._decalEl = null)
                }, n.prototype.getDecalElement = function () {
                    return this._decalEl
                }, n.prototype._init = function (t) {
                    var n = w(t);
                    this.shape = this.getDefaultShape();
                    var i = this.getDefaultStyle();
                    i && this.useStyle(i);
                    for (var r = 0; r < n.length; r++) {
                        var o = n[r],
                            a = t[o];
                        "style" === o ? this.style ? c(this.style, a) : this.useStyle(a) : "shape" === o ? c(this.shape, a) : e.prototype.attrKV.call(this, o, a)
                    }
                    this.style || this.useStyle({})
                }, n.prototype.getDefaultStyle = function () {
                    return null
                }, n.prototype.getDefaultShape = function () {
                    return {}
                }, n.prototype.canBeInsideText = function () {
                    return this.hasFill()
                }, n.prototype.getInsideTextFill = function () {
                    var e = this.style.fill;
                    if ("none" !== e) {
                        if (M(e)) {
                            var t = jt(e, 0);
                            return t > .5 ? Kw : t > .2 ? Qw : Jw
                        }
                        if (e) return Jw
                    }
                    return Kw
                }, n.prototype.getInsideTextStroke = function (e) {
                    var t = this.style.fill;
                    if (M(t)) {
                        var n = this.__zr,
                            i = !(!n || !n.isDarkMode()),
                            r = jt(e, 0) < $w;
                        if (i === r) return t
                    }
                }, n.prototype.buildPath = function () {}, n.prototype.pathUpdated = function () {
                    this.__dirty &= ~K_
                }, n.prototype.getUpdatedPathProxy = function (e) {
                    return !this.path && this.createPathProxy(), this.path.beginPath(), this.buildPath(this.path, this.shape, e), this.path
                }, n.prototype.createPathProxy = function () {
                    this.path = new SS(!1)
                }, n.prototype.hasStroke = function () {
                    var e = this.style,
                        t = e.stroke;
                    return !(null == t || "none" === t || !(e.lineWidth > 0))
                }, n.prototype.hasFill = function () {
                    var e = this.style,
                        t = e.fill;
                    return null != t && "none" !== t
                }, n.prototype.getBoundingRect = function () {
                    var e = this._rect,
                        t = this.style,
                        n = !e;
                    if (n) {
                        var i = !1;
                        this.path || (i = !0, this.createPathProxy());
                        var r = this.path;
                        (i || this.__dirty & K_) && (r.beginPath(), this.buildPath(r, this.shape, !1), this.pathUpdated()), e = r.getBoundingRect()
                    }
                    if (this._rect = e, this.hasStroke() && this.path && this.path.len() > 0) {
                        var o = this._rectStroke || (this._rectStroke = e.clone());
                        if (this.__dirty || n) {
                            o.copy(e);
                            var a = t.strokeNoScale ? this.getLineScale() : 1,
                                s = t.lineWidth;
                            if (!this.hasFill()) {
                                var l = this.strokeContainThreshold;
                                s = Math.max(s, null == l ? 4 : l)
                            }
                            a > 1e-10 && (o.width += s / a, o.height += s / a, o.x -= s / a / 2, o.y -= s / a / 2)
                        }
                        return o
                    }
                    return e
                }, n.prototype.contain = function (e, t) {
                    var n = this.transformCoordToLocal(e, t),
                        i = this.getBoundingRect(),
                        r = this.style;
                    if (e = n[0], t = n[1], i.contain(e, t)) {
                        var o = this.path;
                        if (this.hasStroke()) {
                            var a = r.lineWidth,
                                s = r.strokeNoScale ? this.getLineScale() : 1;
                            if (s > 1e-10 && (this.hasFill() || (a = Math.max(a, this.strokeContainThreshold)), Yr(o, a / s, e, t))) return !0
                        }
                        if (this.hasFill()) return Xr(o, e, t)
                    }
                    return !1
                }, n.prototype.dirtyShape = function () {
                    this.__dirty |= K_, this._rect && (this._rect = null), this._decalEl && this._decalEl.dirtyShape(), this.markRedraw()
                }, n.prototype.dirty = function () {
                    this.dirtyStyle(), this.dirtyShape()
                }, n.prototype.animateShape = function (e) {
                    return this.animate("shape", e)
                }, n.prototype.updateDuringAnimation = function (e) {
                    "style" === e ? this.dirtyStyle() : "shape" === e ? this.dirtyShape() : this.markRedraw()
                }, n.prototype.attrKV = function (t, n) {
                    "shape" === t ? this.setShape(n) : e.prototype.attrKV.call(this, t, n)
                }, n.prototype.setShape = function (e, t) {
                    var n = this.shape;
                    return n || (n = this.shape = {}), "string" == typeof e ? n[e] = t : c(n, e), this.dirtyShape(), this
                }, n.prototype.shapeChanged = function () {
                    return !!(this.__dirty & K_)
                }, n.prototype.createStyle = function (e) {
                    return q(PS, e)
                }, n.prototype._innerSaveToNormal = function (t) {
                    e.prototype._innerSaveToNormal.call(this, t);
                    var n = this._normalState;
                    t.shape && !n.shape && (n.shape = c({}, this.shape))
                }, n.prototype._applyStateObj = function (t, n, i, r, o, a) {
                    e.prototype._applyStateObj.call(this, t, n, i, r, o, a);
                    var s, l = !(n && r);
                    if (n && n.shape ? o ? r ? s = n.shape : (s = c({}, i.shape), c(s, n.shape)) : (s = c({}, r ? this.shape : i.shape), c(s, n.shape)) : l && (s = i.shape), s)
                        if (o) {
                            this.shape = c({}, this.shape);
                            for (var u = {}, p = w(s), h = 0; h < p.length; h++) {
                                var d = p[h];
                                "object" == typeof s[d] ? this.shape[d] = s[d] : u[d] = s[d]
                            }
                            this._transitionState(t, {
                                shape: u
                            }, a)
                        } else this.shape = s, this.dirtyShape()
                }, n.prototype._mergeStates = function (t) {
                    for (var n, i = e.prototype._mergeStates.call(this, t), r = 0; r < t.length; r++) {
                        var o = t[r];
                        o.shape && (n = n || {}, this._mergeStyle(n, o.shape))
                    }
                    return n && (i.shape = n), i
                }, n.prototype.getAnimationStyleProps = function () {
                    return LS
                }, n.prototype.isZeroArea = function () {
                    return !1
                }, n.extend = function (e) {
                    var i = function (n) {
                        function i(t) {
                            var i = n.call(this, t) || this;
                            return e.init && e.init.call(i, t), i
                        }
                        return t(i, n), i.prototype.getDefaultStyle = function () {
                            return s(e.style)
                        }, i.prototype.getDefaultShape = function () {
                            return s(e.shape)
                        }, i
                    }(n);
                    for (var r in e) "function" == typeof e[r] && (i.prototype[r] = e[r]);
                    return i
                }, n.initDefaultProps = function () {
                    var e = n.prototype;
                    e.type = "path", e.strokeContainThreshold = 5, e.segmentIgnoreThreshold = 0, e.subPixelOptimize = !1, e.autoBatch = !1, e.__dirty = Z_ | $_ | K_
                }(), n
            }(qb),
            ES = p({
                strokeFirst: !0,
                font: Hx,
                x: 0,
                y: 0,
                textAlign: "left",
                textBaseline: "top",
                miterLimit: 2
            }, PS),
            RS = function (e) {
                function n() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return t(n, e), n.prototype.hasStroke = function () {
                    var e = this.style,
                        t = e.stroke;
                    return null != t && "none" !== t && e.lineWidth > 0
                }, n.prototype.hasFill = function () {
                    var e = this.style,
                        t = e.fill;
                    return null != t && "none" !== t
                }, n.prototype.createStyle = function (e) {
                    return q(ES, e)
                }, n.prototype.setBoundingRect = function (e) {
                    this._rect = e
                }, n.prototype.getBoundingRect = function () {
                    var e = this.style;
                    if (!this._rect) {
                        var t = e.text;
                        null != t ? t += "" : t = "";
                        var n = Rn(t, e.font, e.textAlign, e.textBaseline);
                        if (n.x += e.x || 0, n.y += e.y || 0, this.hasStroke()) {
                            var i = e.lineWidth;
                            n.x -= i / 2, n.y -= i / 2, n.width += i, n.height += i
                        }
                        this._rect = n
                    }
                    return this._rect
                }, n.initDefaultProps = function () {
                    var e = n.prototype;
                    e.dirtyRectTolerance = 10
                }(), n
            }(qb);
        RS.prototype.type = "tspan";
        var zS = p({
                x: 0,
                y: 0
            }, jb),
            BS = {
                style: p({
                    x: !0,
                    y: !0,
                    width: !0,
                    height: !0,
                    sx: !0,
                    sy: !0,
                    sWidth: !0,
                    sHeight: !0
                }, Xb.style)
            },
            FS = function (e) {
                function n() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return t(n, e), n.prototype.createStyle = function (e) {
                    return q(zS, e)
                }, n.prototype._getSize = function (e) {
                    var t = this.style,
                        n = t[e];
                    if (null != n) return n;
                    var i = Ur(t.image) ? t.image : this.__image;
                    if (!i) return 0;
                    var r = "width" === e ? "height" : "width",
                        o = t[r];
                    return null == o ? i[e] : i[e] / i[r] * o
                }, n.prototype.getWidth = function () {
                    return this._getSize("width")
                }, n.prototype.getHeight = function () {
                    return this._getSize("height")
                }, n.prototype.getAnimationStyleProps = function () {
                    return BS
                }, n.prototype.getBoundingRect = function () {
                    var e = this.style;
                    return this._rect || (this._rect = new F_(e.x || 0, e.y || 0, this.getWidth(), this.getHeight())), this._rect
                }, n
            }(qb);
        FS.prototype.type = "image";
        var HS = Math.round,
            GS = function () {
                function e() {
                    this.x = 0, this.y = 0, this.width = 0, this.height = 0
                }
                return e
            }(),
            VS = {},
            WS = function (e) {
                function n(t) {
                    return e.call(this, t) || this
                }
                return t(n, e), n.prototype.getDefaultShape = function () {
                    return new GS
                }, n.prototype.buildPath = function (e, t) {
                    var n, i, r, o;
                    if (this.subPixelOptimize) {
                        var a = $r(VS, t, this.style);
                        n = a.x, i = a.y, r = a.width, o = a.height, a.r = t.r, t = a
                    } else n = t.x, i = t.y, r = t.width, o = t.height;
                    t.r ? qr(e, t) : e.rect(n, i, r, o)
                }, n.prototype.isZeroArea = function () {
                    return !this.shape.width || !this.shape.height
                }, n
            }(OS);
        WS.prototype.type = "rect";
        var jS = {
                fill: "#000"
            },
            XS = 2,
            YS = {
                style: p({
                    fill: !0,
                    stroke: !0,
                    fillOpacity: !0,
                    strokeOpacity: !0,
                    lineWidth: !0,
                    fontSize: !0,
                    lineHeight: !0,
                    width: !0,
                    height: !0,
                    textShadowColor: !0,
                    textShadowBlur: !0,
                    textShadowOffsetX: !0,
                    textShadowOffsetY: !0,
                    backgroundColor: !0,
                    padding: !0,
                    borderColor: !0,
                    borderWidth: !0,
                    borderRadius: !0
                }, Xb.style)
            },
            US = function (e) {
                function n(t) {
                    var n = e.call(this) || this;
                    return n.type = "text", n._children = [], n._defaultStyle = jS, n.attr(t), n
                }
                return t(n, e), n.prototype.childrenRef = function () {
                    return this._children
                }, n.prototype.update = function () {
                    e.prototype.update.call(this), this.styleChanged() && this._updateSubTexts();
                    for (var t = 0; t < this._children.length; t++) {
                        var n = this._children[t];
                        n.zlevel = this.zlevel, n.z = this.z, n.z2 = this.z2, n.culling = this.culling, n.cursor = this.cursor, n.invisible = this.invisible
                    }
                }, n.prototype.updateTransform = function () {
                    var t = this.innerTransformable;
                    t ? (t.updateTransform(), t.transform && (this.transform = t.transform)) : e.prototype.updateTransform.call(this)
                }, n.prototype.getLocalTransform = function (t) {
                    var n = this.innerTransformable;
                    return n ? n.getLocalTransform(t) : e.prototype.getLocalTransform.call(this, t)
                }, n.prototype.getComputedTransform = function () {
                    return this.__hostTarget && (this.__hostTarget.getComputedTransform(), this.__hostTarget.updateInnerText(!0)), e.prototype.getComputedTransform.call(this)
                }, n.prototype._updateSubTexts = function () {
                    this._childCursor = 0, to(this.style), this.style.rich ? this._updateRichTexts() : this._updatePlainTexts(), this._children.length = this._childCursor, this.styleUpdated()
                }, n.prototype.addSelfToZr = function (t) {
                    e.prototype.addSelfToZr.call(this, t);
                    for (var n = 0; n < this._children.length; n++) this._children[n].__zr = t
                }, n.prototype.removeSelfFromZr = function (t) {
                    e.prototype.removeSelfFromZr.call(this, t);
                    for (var n = 0; n < this._children.length; n++) this._children[n].__zr = null
                }, n.prototype.getBoundingRect = function () {
                    if (this.styleChanged() && this._updateSubTexts(), !this._rect) {
                        for (var e = new F_(0, 0, 0, 0), t = this._children, n = [], i = null, r = 0; r < t.length; r++) {
                            var o = t[r],
                                a = o.getBoundingRect(),
                                s = o.getLocalTransform(n);
                            s ? (e.copy(a), e.applyTransform(s), i = i || e.clone(), i.union(e)) : (i = i || a.clone(), i.union(a))
                        }
                        this._rect = i || e
                    }
                    return this._rect
                }, n.prototype.setDefaultTextStyle = function (e) {
                    this._defaultStyle = e || jS
                }, n.prototype.setTextContent = function () {}, n.prototype._mergeStyle = function (e, t) {
                    if (!t) return e;
                    var n = t.rich,
                        i = e.rich || n && {};
                    return c(e, t), n && i ? (this._mergeRich(i, n), e.rich = i) : i && (e.rich = i), e
                }, n.prototype._mergeRich = function (e, t) {
                    for (var n = w(t), i = 0; i < n.length; i++) {
                        var r = n[i];
                        e[r] = e[r] || {}, c(e[r], t[r])
                    }
                }, n.prototype.getAnimationStyleProps = function () {
                    return YS
                }, n.prototype._getOrCreateChild = function (e) {
                    var t = this._children[this._childCursor];
                    return t && t instanceof e || (t = new e), this._children[this._childCursor++] = t, t.__zr = this.__zr, t.parent = this, t
                }, n.prototype._updatePlainTexts = function () {
                    var e = this.style,
                        t = e.font || Hx,
                        n = e.padding,
                        i = ao(e),
                        r = _r(i, e),
                        o = so(e),
                        a = !!e.backgroundColor,
                        s = r.outerHeight,
                        l = r.outerWidth,
                        u = r.contentWidth,
                        c = r.lines,
                        p = r.lineHeight,
                        h = this._defaultStyle,
                        d = e.x || 0,
                        f = e.y || 0,
                        g = e.align || h.align || "left",
                        m = e.verticalAlign || h.verticalAlign || "top",
                        y = d,
                        v = Bn(f, r.contentHeight, m);
                    if (o || n) {
                        var x = zn(d, l, g),
                            _ = Bn(f, s, m);
                        o && this._renderBackground(e, e, x, _, l, s)
                    }
                    v += p / 2, n && (y = oo(d, g, n), "top" === m ? v += n[0] : "bottom" === m && (v -= n[2]));
                    for (var w = 0, b = !1, S = (ro("fill" in e ? e.fill : (b = !0, h.fill))), T = (io("stroke" in e ? e.stroke : a || h.autoStroke && !b ? null : (w = XS, h.stroke))), C = e.textShadowBlur > 0, M = null != e.width && ("truncate" === e.overflow || "break" === e.overflow || "breakAll" === e.overflow), I = r.calculatedLineHeight, k = 0; k < c.length; k++) {
                        var D = this._getOrCreateChild(RS),
                            A = D.createStyle();
                        D.useStyle(A), A.text = c[k], A.x = y, A.y = v, g && (A.textAlign = g), A.textBaseline = "middle", A.opacity = e.opacity, A.strokeFirst = !0, C && (A.shadowBlur = e.textShadowBlur || 0, A.shadowColor = e.textShadowColor || "transparent", A.shadowOffsetX = e.textShadowOffsetX || 0, A.shadowOffsetY = e.textShadowOffsetY || 0), A.stroke = T, A.fill = S, T && (A.lineWidth = e.lineWidth || w, A.lineDash = e.lineDash, A.lineDashOffset = e.lineDashOffset || 0), A.font = t, Qr(A, e), v += p, M && D.setBoundingRect(new F_(zn(A.x, e.width, A.textAlign), Bn(A.y, I, A.textBaseline), u, I))
                    }
                }, n.prototype._updateRichTexts = function () {
                    var e = this.style,
                        t = ao(e),
                        n = wr(t, e),
                        i = n.width,
                        r = n.outerWidth,
                        o = n.outerHeight,
                        a = e.padding,
                        s = e.x || 0,
                        l = e.y || 0,
                        u = this._defaultStyle,
                        c = e.align || u.align,
                        p = e.verticalAlign || u.verticalAlign,
                        h = zn(s, r, c),
                        d = Bn(l, o, p),
                        f = h,
                        g = d;
                    a && (f += a[3], g += a[0]);
                    var m = f + i;
                    so(e) && this._renderBackground(e, e, h, d, r, o);
                    for (var y = !!e.backgroundColor, v = 0; v < n.lines.length; v++) {
                        for (var x = n.lines[v], _ = x.tokens, w = _.length, b = x.lineHeight, S = x.width, T = 0, C = f, M = m, I = w - 1, k = void 0; w > T && (k = _[T], !k.align || "left" === k.align);) this._placeToken(k, e, b, g, C, "left", y), S -= k.width, C += k.width, T++;
                        for (; I >= 0 && (k = _[I], "right" === k.align);) this._placeToken(k, e, b, g, M, "right", y), S -= k.width, M -= k.width, I--;
                        for (C += (i - (C - f) - (m - M) - S) / 2; I >= T;) k = _[T], this._placeToken(k, e, b, g, C + k.width / 2, "center", y), C += k.width, T++;
                        g += b
                    }
                }, n.prototype._placeToken = function (e, t, n, i, r, o, a) {
                    var s = t.rich[e.styleName] || {};
                    s.text = e.text;
                    var l = e.verticalAlign,
                        u = i + n / 2;
                    "top" === l ? u = i + e.height / 2 : "bottom" === l && (u = i + n - e.height / 2);
                    var c = !e.isLineHolder && so(s);
                    c && this._renderBackground(s, t, "right" === o ? r - e.width : "center" === o ? r - e.width / 2 : r, u - e.height / 2, e.width, e.height);
                    var p = !!s.backgroundColor,
                        h = e.textPadding;
                    h && (r = oo(r, o, h), u -= e.height / 2 - h[0] - e.innerHeight / 2);
                    var d = this._getOrCreateChild(RS),
                        f = d.createStyle();
                    d.useStyle(f);
                    var g = this._defaultStyle,
                        m = !1,
                        y = 0,
                        v = ro("fill" in s ? s.fill : "fill" in t ? t.fill : (m = !0, g.fill)),
                        x = io("stroke" in s ? s.stroke : "stroke" in t ? t.stroke : p || a || g.autoStroke && !m ? null : (y = XS, g.stroke)),
                        _ = s.textShadowBlur > 0 || t.textShadowBlur > 0;
                    f.text = e.text, f.x = r, f.y = u, _ && (f.shadowBlur = s.textShadowBlur || t.textShadowBlur || 0, f.shadowColor = s.textShadowColor || t.textShadowColor || "transparent", f.shadowOffsetX = s.textShadowOffsetX || t.textShadowOffsetX || 0, f.shadowOffsetY = s.textShadowOffsetY || t.textShadowOffsetY || 0), f.textAlign = o, f.textBaseline = "middle", f.font = e.font || Hx, f.opacity = F(s.opacity, t.opacity, 1), Qr(f, s), x && (f.lineWidth = F(s.lineWidth, t.lineWidth, y), f.lineDash = B(s.lineDash, t.lineDash), f.lineDashOffset = t.lineDashOffset || 0, f.stroke = x), v && (f.fill = v);
                    var w = e.contentWidth,
                        b = e.contentHeight;
                    d.setBoundingRect(new F_(zn(f.x, w, f.textAlign), Bn(f.y, b, f.textBaseline), w, b))
                }, n.prototype._renderBackground = function (e, t, n, i, r, o) {
                    var a, s, l = e.backgroundColor,
                        u = e.borderWidth,
                        c = e.borderColor,
                        p = l && l.image,
                        h = l && !p,
                        d = e.borderRadius,
                        f = this;
                    if (h || e.lineHeight || u && c) {
                        a = this._getOrCreateChild(WS), a.useStyle(a.createStyle()), a.style.fill = null;
                        var g = a.shape;
                        g.x = n, g.y = i, g.width = r, g.height = o, g.r = d, a.dirtyShape()
                    }
                    if (h) {
                        var m = a.style;
                        m.fill = l || null, m.fillOpacity = B(e.fillOpacity, 1)
                    } else if (p) {
                        s = this._getOrCreateChild(FS), s.onload = function () {
                            f.dirtyStyle()
                        };
                        var y = s.style;
                        y.image = l.image, y.x = n, y.y = i, y.width = r, y.height = o
                    }
                    if (u && c) {
                        m = a.style;
                        m.lineWidth = u, m.stroke = c, m.strokeOpacity = B(e.strokeOpacity, 1), m.lineDash = e.borderDash, m.lineDashOffset = e.borderDashOffset || 0, a.strokeContainThreshold = 0, a.hasFill() && a.hasStroke() && (m.strokeFirst = !0, m.lineWidth *= 2)
                    }
                    var v = (a || s).style;
                    v.shadowBlur = e.shadowBlur || 0, v.shadowColor = e.shadowColor || "transparent", v.shadowOffsetX = e.shadowOffsetX || 0, v.shadowOffsetY = e.shadowOffsetY || 0, v.opacity = F(e.opacity, t.opacity, 1)
                }, n.makeFont = function (e) {
                    var t = "";
                    return eo(e) && (t = [e.fontStyle, e.fontWeight, Jr(e.fontSize), e.fontFamily || "sans-serif"].join(" ")), t && W(t) || e.textFont || e.font
                }, n
            }(qb),
            qS = {
                left: !0,
                right: 1,
                center: 1
            },
            ZS = {
                top: 1,
                bottom: 1,
                middle: 1
            },
            $S = ["fontStyle", "fontWeight", "fontSize", "fontFamily"],
            KS = Ui(),
            JS = function (e, t, n, i) {
                if (i) {
                    var r = KS(i);
                    r.dataIndex = n, r.dataType = t, r.seriesIndex = e, "group" === i.type && i.traverse(function (i) {
                        var r = KS(i);
                        r.seriesIndex = e, r.dataIndex = n, r.dataType = t
                    })
                }
            },
            QS = 1,
            eT = {},
            tT = Ui(),
            nT = Ui(),
            iT = 0,
            rT = 1,
            oT = 2,
            aT = ["emphasis", "blur", "select"],
            sT = ["normal", "emphasis", "blur", "select"],
            lT = 10,
            uT = 9,
            cT = "highlight",
            pT = "downplay",
            hT = "select",
            dT = "unselect",
            fT = "toggleSelect",
            gT = new gw(100),
            mT = ["emphasis", "blur", "select"],
            yT = {
                itemStyle: "getItemStyle",
                lineStyle: "getLineStyle",
                areaStyle: "getAreaStyle"
            },
            vT = SS.CMD,
            xT = [
                [],
                [],
                []
            ],
            _T = Math.sqrt,
            wT = Math.atan2,
            bT = Math.sqrt,
            ST = Math.sin,
            TT = Math.cos,
            CT = Math.PI,
            MT = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/gi,
            IT = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g,
            kT = function (e) {
                function n() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return t(n, e), n.prototype.applyTransform = function () {}, n
            }(OS),
            DT = function () {
                function e() {
                    this.cx = 0, this.cy = 0, this.r = 0
                }
                return e
            }(),
            AT = function (e) {
                function n(t) {
                    return e.call(this, t) || this
                }
                return t(n, e), n.prototype.getDefaultShape = function () {
                    return new DT
                }, n.prototype.buildPath = function (e, t) {
                    e.moveTo(t.cx + t.r, t.cy), e.arc(t.cx, t.cy, t.r, 0, 2 * Math.PI)
                }, n
            }(OS);
        AT.prototype.type = "circle";
        var PT = function () {
                function e() {
                    this.cx = 0, this.cy = 0, this.rx = 0, this.ry = 0
                }
                return e
            }(),
            LT = function (e) {
                function n(t) {
                    return e.call(this, t) || this
                }
                return t(n, e), n.prototype.getDefaultShape = function () {
                    return new PT
                }, n.prototype.buildPath = function (e, t) {
                    var n = .5522848,
                        i = t.cx,
                        r = t.cy,
                        o = t.rx,
                        a = t.ry,
                        s = o * n,
                        l = a * n;
                    e.moveTo(i - o, r), e.bezierCurveTo(i - o, r - l, i - s, r - a, i, r - a), e.bezierCurveTo(i + s, r - a, i + o, r - l, i + o, r), e.bezierCurveTo(i + o, r + l, i + s, r + a, i, r + a), e.bezierCurveTo(i - s, r + a, i - o, r + l, i - o, r), e.closePath()
                }, n
            }(OS);
        LT.prototype.type = "ellipse";
        var NT = Math.PI,
            OT = 2 * NT,
            ET = Math.sin,
            RT = Math.cos,
            zT = Math.acos,
            BT = Math.atan2,
            FT = Math.abs,
            HT = Math.sqrt,
            GT = Math.max,
            VT = Math.min,
            WT = 1e-4,
            jT = function () {
                function e() {
                    this.cx = 0, this.cy = 0, this.r0 = 0, this.r = 0, this.startAngle = 0, this.endAngle = 2 * Math.PI, this.clockwise = !0, this.cornerRadius = 0
                }
                return e
            }(),
            XT = function (e) {
                function n(t) {
                    return e.call(this, t) || this
                }
                return t(n, e), n.prototype.getDefaultShape = function () {
                    return new jT
                }, n.prototype.buildPath = function (e, t) {
                    va(e, t)
                }, n.prototype.isZeroArea = function () {
                    return this.shape.startAngle === this.shape.endAngle || this.shape.r === this.shape.r0
                }, n
            }(OS);
        XT.prototype.type = "sector";
        var YT = function () {
                function e() {
                    this.cx = 0, this.cy = 0, this.r = 0, this.r0 = 0
                }
                return e
            }(),
            UT = function (e) {
                function n(t) {
                    return e.call(this, t) || this
                }
                return t(n, e), n.prototype.getDefaultShape = function () {
                    return new YT
                }, n.prototype.buildPath = function (e, t) {
                    var n = t.cx,
                        i = t.cy,
                        r = 2 * Math.PI;
                    e.moveTo(n + t.r, i), e.arc(n, i, t.r, 0, r, !1), e.moveTo(n + t.r0, i), e.arc(n, i, t.r0, 0, r, !0)
                }, n
            }(OS);
        UT.prototype.type = "ring";
        var qT = function () {
                function e() {
                    this.points = null, this.smooth = 0, this.smoothConstraint = null
                }
                return e
            }(),
            ZT = function (e) {
                function n(t) {
                    return e.call(this, t) || this
                }
                return t(n, e), n.prototype.getDefaultShape = function () {
                    return new qT
                }, n.prototype.buildPath = function (e, t) {
                    _a(e, t, !0)
                }, n
            }(OS);
        ZT.prototype.type = "polygon";
        var $T = function () {
                function e() {
                    this.points = null, this.percent = 1, this.smooth = 0, this.smoothConstraint = null
                }
                return e
            }(),
            KT = function (e) {
                function n(t) {
                    return e.call(this, t) || this
                }
                return t(n, e), n.prototype.getDefaultStyle = function () {
                    return {
                        stroke: "#000",
                        fill: null
                    }
                }, n.prototype.getDefaultShape = function () {
                    return new $T
                }, n.prototype.buildPath = function (e, t) {
                    _a(e, t, !1)
                }, n
            }(OS);
        KT.prototype.type = "polyline";
        var JT = {},
            QT = function () {
                function e() {
                    this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.percent = 1
                }
                return e
            }(),
            eC = function (e) {
                function n(t) {
                    return e.call(this, t) || this
                }
                return t(n, e), n.prototype.getDefaultStyle = function () {
                    return {
                        stroke: "#000",
                        fill: null
                    }
                }, n.prototype.getDefaultShape = function () {
                    return new QT
                }, n.prototype.buildPath = function (e, t) {
                    var n, i, r, o;
                    if (this.subPixelOptimize) {
                        var a = Zr(JT, t, this.style);
                        n = a.x1, i = a.y1, r = a.x2, o = a.y2
                    } else n = t.x1, i = t.y1, r = t.x2, o = t.y2;
                    var s = t.percent;
                    0 !== s && (e.moveTo(n, i), 1 > s && (r = n * (1 - s) + r * s, o = i * (1 - s) + o * s), e.lineTo(r, o))
                }, n.prototype.pointAt = function (e) {
                    var t = this.shape;
                    return [t.x1 * (1 - e) + t.x2 * e, t.y1 * (1 - e) + t.y2 * e]
                }, n
            }(OS);
        eC.prototype.type = "line";
        var tC = [],
            nC = function () {
                function e() {
                    this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.cpx1 = 0, this.cpy1 = 0, this.percent = 1
                }
                return e
            }(),
            iC = function (e) {
                function n(t) {
                    return e.call(this, t) || this
                }
                return t(n, e), n.prototype.getDefaultStyle = function () {
                    return {
                        stroke: "#000",
                        fill: null
                    }
                }, n.prototype.getDefaultShape = function () {
                    return new nC
                }, n.prototype.buildPath = function (e, t) {
                    var n = t.x1,
                        i = t.y1,
                        r = t.x2,
                        o = t.y2,
                        a = t.cpx1,
                        s = t.cpy1,
                        l = t.cpx2,
                        u = t.cpy2,
                        c = t.percent;
                    0 !== c && (e.moveTo(n, i), null == l || null == u ? (1 > c && (_t(n, a, r, c, tC), a = tC[1], r = tC[2], _t(i, s, o, c, tC), s = tC[1], o = tC[2]), e.quadraticCurveTo(a, s, r, o)) : (1 > c && (dt(n, a, l, r, c, tC), a = tC[1], l = tC[2], r = tC[3], dt(i, s, u, o, c, tC), s = tC[1], u = tC[2], o = tC[3]), e.bezierCurveTo(a, s, l, u, r, o)))
                }, n.prototype.pointAt = function (e) {
                    return wa(this.shape, e, !1)
                }, n.prototype.tangentAt = function (e) {
                    var t = wa(this.shape, e, !0);
                    return pe(t, t)
                }, n
            }(OS);
        iC.prototype.type = "bezier-curve";
        var rC = function () {
                function e() {
                    this.cx = 0, this.cy = 0, this.r = 0, this.startAngle = 0, this.endAngle = 2 * Math.PI, this.clockwise = !0
                }
                return e
            }(),
            oC = function (e) {
                function n(t) {
                    return e.call(this, t) || this
                }
                return t(n, e), n.prototype.getDefaultStyle = function () {
                    return {
                        stroke: "#000",
                        fill: null
                    }
                }, n.prototype.getDefaultShape = function () {
                    return new rC
                }, n.prototype.buildPath = function (e, t) {
                    var n = t.cx,
                        i = t.cy,
                        r = Math.max(t.r, 0),
                        o = t.startAngle,
                        a = t.endAngle,
                        s = t.clockwise,
                        l = Math.cos(o),
                        u = Math.sin(o);
                    e.moveTo(l * r + n, u * r + i), e.arc(n, i, r, o, a, !s)
                }, n
            }(OS);
        oC.prototype.type = "arc";
        var aC = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = "compound", t
                }
                return t(n, e), n.prototype._updatePathDirty = function () {
                    for (var e = this.shape.paths, t = this.shapeChanged(), n = 0; n < e.length; n++) t = t || e[n].shapeChanged();
                    t && this.dirtyShape()
                }, n.prototype.beforeBrush = function () {
                    this._updatePathDirty();
                    for (var e = this.shape.paths || [], t = this.getGlobalScale(), n = 0; n < e.length; n++) e[n].path || e[n].createPathProxy(), e[n].path.setScale(t[0], t[1], e[n].segmentIgnoreThreshold)
                }, n.prototype.buildPath = function (e, t) {
                    for (var n = t.paths || [], i = 0; i < n.length; i++) n[i].buildPath(e, n[i].shape, !0)
                }, n.prototype.afterBrush = function () {
                    for (var e = this.shape.paths || [], t = 0; t < e.length; t++) e[t].pathUpdated()
                }, n.prototype.getBoundingRect = function () {
                    return this._updatePathDirty.call(this), OS.prototype.getBoundingRect.call(this)
                }, n
            }(OS),
            sC = function () {
                function e(e) {
                    this.colorStops = e || []
                }
                return e.prototype.addColorStop = function (e, t) {
                    this.colorStops.push({
                        offset: e,
                        color: t
                    })
                }, e
            }(),
            lC = function (e) {
                function n(t, n, i, r, o, a) {
                    var s = e.call(this, o) || this;
                    return s.x = null == t ? 0 : t, s.y = null == n ? 0 : n, s.x2 = null == i ? 1 : i, s.y2 = null == r ? 0 : r, s.type = "linear", s.global = a || !1, s
                }
                return t(n, e), n
            }(sC),
            uC = function (e) {
                function n(t, n, i, r, o) {
                    var a = e.call(this, r) || this;
                    return a.x = null == t ? .5 : t, a.y = null == n ? .5 : n, a.r = null == i ? .5 : i, a.type = "radial", a.global = o || !1, a
                }
                return t(n, e), n
            }(sC),
            cC = [0, 0],
            pC = [0, 0],
            hC = new A_,
            dC = new A_,
            fC = function () {
                function e(e, t) {
                    this._corners = [], this._axes = [], this._origin = [0, 0];
                    for (var n = 0; 4 > n; n++) this._corners[n] = new A_;
                    for (n = 0; 2 > n; n++) this._axes[n] = new A_;
                    e && this.fromBoundingRect(e, t)
                }
                return e.prototype.fromBoundingRect = function (e, t) {
                    var n = this._corners,
                        i = this._axes,
                        r = e.x,
                        o = e.y,
                        a = r + e.width,
                        s = o + e.height;
                    if (n[0].set(r, o), n[1].set(a, o), n[2].set(a, s), n[3].set(r, s), t)
                        for (var l = 0; 4 > l; l++) n[l].transform(t);
                    A_.sub(i[0], n[1], n[0]), A_.sub(i[1], n[3], n[0]), i[0].normalize(), i[1].normalize();
                    for (l = 0; 2 > l; l++) this._origin[l] = i[l].dot(n[0])
                }, e.prototype.intersect = function (e, t) {
                    var n = !0,
                        i = !t;
                    return hC.set(1 / 0, 1 / 0), dC.set(0, 0), !this._intersectCheckOneSide(this, e, hC, dC, i, 1) && (n = !1, i) ? n : !this._intersectCheckOneSide(e, this, hC, dC, i, -1) && (n = !1, i) ? n : (i || A_.copy(t, n ? hC : dC), n)
                }, e.prototype._intersectCheckOneSide = function (e, t, n, i, r, o) {
                    for (var a = !0, s = 0; 2 > s; s++) {
                        var l = this._axes[s];
                        if (this._getProjMinMaxOnAxis(s, e._corners, cC), this._getProjMinMaxOnAxis(s, t._corners, pC), cC[1] < pC[0] || cC[0] > pC[1]) {
                            if (a = !1, r) return a;
                            var u = Math.abs(pC[0] - cC[1]),
                                c = Math.abs(cC[0] - pC[1]);
                            Math.min(u, c) > i.len() && (c > u ? A_.scale(i, l, -u * o) : A_.scale(i, l, c * o))
                        } else if (n) {
                            u = Math.abs(pC[0] - cC[1]), c = Math.abs(cC[0] - pC[1]);
                            Math.min(u, c) < n.len() && (c > u ? A_.scale(n, l, u * o) : A_.scale(n, l, -c * o))
                        }
                    }
                    return a
                }, e.prototype._getProjMinMaxOnAxis = function (e, t, n) {
                    for (var i = this._axes[e], r = this._origin, o = t[0].dot(i) + r[e], a = o, s = o, l = 1; l < t.length; l++) {
                        var u = t[l].dot(i) + r[e];
                        a = Math.min(u, a), s = Math.max(u, s)
                    }
                    n[0] = a, n[1] = s
                }, e
            }(),
            gC = [],
            mC = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.notClear = !0, t.incremental = !0, t._displayables = [], t._temporaryDisplayables = [], t._cursor = 0, t
                }
                return t(n, e), n.prototype.traverse = function (e, t) {
                    e.call(t, this)
                }, n.prototype.useStyle = function () {
                    this.style = {}
                }, n.prototype.getCursor = function () {
                    return this._cursor
                }, n.prototype.innerAfterBrush = function () {
                    this._cursor = this._displayables.length
                }, n.prototype.clearDisplaybles = function () {
                    this._displayables = [], this._temporaryDisplayables = [], this._cursor = 0, this.markRedraw(), this.notClear = !1
                }, n.prototype.clearTemporalDisplayables = function () {
                    this._temporaryDisplayables = []
                }, n.prototype.addDisplayable = function (e, t) {
                    t ? this._temporaryDisplayables.push(e) : this._displayables.push(e), this.markRedraw()
                }, n.prototype.addDisplayables = function (e, t) {
                    t = t || !1;
                    for (var n = 0; n < e.length; n++) this.addDisplayable(e[n], t)
                }, n.prototype.getDisplayables = function () {
                    return this._displayables
                }, n.prototype.getTemporalDisplayables = function () {
                    return this._temporaryDisplayables
                }, n.prototype.eachPendingDisplayable = function (e) {
                    for (var t = this._cursor; t < this._displayables.length; t++) e && e(this._displayables[t]);
                    for (t = 0; t < this._temporaryDisplayables.length; t++) e && e(this._temporaryDisplayables[t])
                }, n.prototype.update = function () {
                    this.updateTransform();
                    for (var e = this._cursor; e < this._displayables.length; e++) {
                        var t = this._displayables[e];
                        t.parent = this, t.update(), t.parent = null
                    }
                    for (e = 0; e < this._temporaryDisplayables.length; e++) {
                        t = this._temporaryDisplayables[e];
                        t.parent = this, t.update(), t.parent = null
                    }
                }, n.prototype.getBoundingRect = function () {
                    if (!this._rect) {
                        for (var e = new F_(1 / 0, 1 / 0, -1 / 0, -1 / 0), t = 0; t < this._displayables.length; t++) {
                            var n = this._displayables[t],
                                i = n.getBoundingRect().clone();
                            n.needLocalTransform() && i.applyTransform(n.getLocalTransform(gC)), e.union(i)
                        }
                        this._rect = e
                    }
                    return this._rect
                }, n.prototype.contain = function (e, t) {
                    var n = this.transformCoordToLocal(e, t),
                        i = this.getBoundingRect();
                    if (i.contain(n[0], n[1]))
                        for (var r = 0; r < this._displayables.length; r++) {
                            var o = this._displayables[r];
                            if (o.contain(e, t)) return !0
                        }
                    return !1
                }, n
            }(qb),
            yC = Ui(),
            vC = Math.max,
            xC = Math.min,
            _C = {},
            wC = da,
            bC = fa,
            SC = Kr;
        Na("circle", AT), Na("ellipse", LT), Na("sector", XT), Na("ring", UT), Na("polygon", ZT), Na("polyline", KT), Na("rect", WS), Na("line", eC), Na("bezierCurve", iC), Na("arc", oC);
        var TC = (Object.freeze || Object)({
                updateProps: Ta,
                initProps: Ca,
                removeElement: Ia,
                removeElementWithFadeOut: Da,
                isElementRemoved: Ma,
                extendShape: Pa,
                extendPath: La,
                registerShape: Na,
                getShapeClass: Oa,
                makePath: Ea,
                makeImage: Ra,
                mergePath: bC,
                resizePath: Ba,
                subPixelOptimizeLine: Fa,
                subPixelOptimizeRect: Ha,
                subPixelOptimize: SC,
                getTransform: Ga,
                applyTransform: Va,
                transformDirection: Wa,
                groupTransition: Ya,
                clipPointsByRect: Ua,
                clipRectByRect: qa,
                createIcon: Za,
                linePolygonIntersect: $a,
                lineLineIntersect: Ka,
                setTooltipConfig: es,
                traverseElements: ns,
                Group: gb,
                Image: FS,
                Text: US,
                Circle: AT,
                Ellipse: LT,
                Sector: XT,
                Ring: UT,
                Polygon: ZT,
                Polyline: KT,
                Rect: WS,
                Line: eC,
                BezierCurve: iC,
                Arc: oC,
                IncrementalDisplayable: mC,
                CompoundPath: aC,
                LinearGradient: lC,
                RadialGradient: uC,
                BoundingRect: F_,
                OrientedBoundingRect: fC,
                Point: A_,
                Path: OS
            }),
            CC = {},
            MC = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY"],
            IC = ["align", "lineHeight", "width", "height", "tag", "verticalAlign"],
            kC = ["padding", "borderWidth", "borderRadius", "borderDashOffset", "backgroundColor", "borderColor", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"],
            DC = Ui(),
            AC = ["textStyle", "color"],
            PC = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "padding", "lineHeight", "rich", "width", "height", "overflow"],
            LC = new US,
            NC = function () {
                function e() {}
                return e.prototype.getTextColor = function (e) {
                    var t = this.ecModel;
                    return this.getShallow("color") || (!e && t ? t.get(AC) : null)
                }, e.prototype.getFont = function () {
                    return hs({
                        fontStyle: this.getShallow("fontStyle"),
                        fontWeight: this.getShallow("fontWeight"),
                        fontSize: this.getShallow("fontSize"),
                        fontFamily: this.getShallow("fontFamily")
                    }, this.ecModel)
                }, e.prototype.getTextRect = function (e) {
                    for (var t = {
                            text: e,
                            verticalAlign: this.getShallow("verticalAlign") || this.getShallow("baseline")
                        }, n = 0; n < PC.length; n++) t[PC[n]] = this.getShallow(PC[n]);
                    return LC.useStyle(t), LC.update(), LC.getBoundingRect()
                }, e
            }(),
            OC = [
                ["lineWidth", "width"],
                ["stroke", "color"],
                ["opacity"],
                ["shadowBlur"],
                ["shadowOffsetX"],
                ["shadowOffsetY"],
                ["shadowColor"],
                ["lineDash", "type"],
                ["lineDashOffset", "dashOffset"],
                ["lineCap", "cap"],
                ["lineJoin", "join"],
                ["miterLimit"]
            ],
            EC = pr(OC),
            RC = function () {
                function e() {}
                return e.prototype.getLineStyle = function (e) {
                    return EC(this, e)
                }, e
            }(),
            zC = [
                ["fill", "color"],
                ["stroke", "borderColor"],
                ["lineWidth", "borderWidth"],
                ["opacity"],
                ["shadowBlur"],
                ["shadowOffsetX"],
                ["shadowOffsetY"],
                ["shadowColor"],
                ["lineDash", "borderType"],
                ["lineDashOffset", "borderDashOffset"],
                ["lineCap", "borderCap"],
                ["lineJoin", "borderJoin"],
                ["miterLimit", "borderMiterLimit"]
            ],
            BC = pr(zC),
            FC = function () {
                function e() {}
                return e.prototype.getItemStyle = function (e, t) {
                    return BC(this, e, t)
                }, e
            }(),
            HC = function () {
                function e(e, t, n) {
                    this.parentModel = t, this.ecModel = n, this.option = e
                }
                return e.prototype.init = function () {
                    for (var e = [], t = 3; t < arguments.length; t++) e[t - 3] = arguments[t]
                }, e.prototype.mergeOption = function (e) {
                    l(this.option, e, !0)
                }, e.prototype.get = function (e, t) {
                    return null == e ? this.option : this._doGet(this.parsePath(e), !t && this.parentModel)
                }, e.prototype.getShallow = function (e, t) {
                    var n = this.option,
                        i = null == n ? n : n[e];
                    if (null == i && !t) {
                        var r = this.parentModel;
                        r && (i = r.getShallow(e))
                    }
                    return i
                }, e.prototype.getModel = function (t, n) {
                    var i = null != t,
                        r = i ? this.parsePath(t) : null,
                        o = i ? this._doGet(r) : this.option;
                    return n = n || this.parentModel && this.parentModel.getModel(this.resolveParentPath(r)), new e(o, n, this.ecModel)
                }, e.prototype.isEmpty = function () {
                    return null == this.option
                }, e.prototype.restoreData = function () {}, e.prototype.clone = function () {
                    var e = this.constructor;
                    return new e(s(this.option))
                }, e.prototype.parsePath = function (e) {
                    return "string" == typeof e ? e.split(".") : e
                }, e.prototype.resolveParentPath = function (e) {
                    return e
                }, e.prototype.isAnimationEnabled = function () {
                    if (!zx.node && this.option) {
                        if (null != this.option.animation) return !!this.option.animation;
                        if (this.parentModel) return this.parentModel.isAnimationEnabled()
                    }
                }, e.prototype._doGet = function (e, t) {
                    var n = this.option;
                    if (!e) return n;
                    for (var i = 0; i < e.length && (!e[i] || (n = n && "object" == typeof n ? n[e[i]] : null, null != n)); i++);
                    return null == n && t && (n = t._doGet(this.resolveParentPath(e), t.parentModel)), n
                }, e
            }();
        rr(HC), sr(HC), f(HC, RC), f(HC, FC), f(HC, Rb), f(HC, NC);
        var GC = Math.round(10 * Math.random()),
            VC = {
                time: {
                    month: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                    monthAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                    dayOfWeekAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
                },
                legend: {
                    selector: {
                        all: "All",
                        inverse: "Inv"
                    }
                },
                toolbox: {
                    brush: {
                        title: {
                            rect: "Box Select",
                            polygon: "Lasso Select",
                            lineX: "Horizontally Select",
                            lineY: "Vertically Select",
                            keep: "Keep Selections",
                            clear: "Clear Selections"
                        }
                    },
                    dataView: {
                        title: "Data View",
                        lang: ["Data View", "Close", "Refresh"]
                    },
                    dataZoom: {
                        title: {
                            zoom: "Zoom",
                            back: "Zoom Reset"
                        }
                    },
                    magicType: {
                        title: {
                            line: "Switch to Line Chart",
                            bar: "Switch to Bar Chart",
                            stack: "Stack",
                            tiled: "Tile"
                        }
                    },
                    restore: {
                        title: "Restore"
                    },
                    saveAsImage: {
                        title: "Save as Image",
                        lang: ["Right Click to Save Image"]
                    }
                },
                series: {
                    typeNames: {
                        pie: "Pie chart",
                        bar: "Bar chart",
                        line: "Line chart",
                        scatter: "Scatter plot",
                        effectScatter: "Ripple scatter plot",
                        radar: "Radar chart",
                        tree: "Tree",
                        treemap: "Treemap",
                        boxplot: "Boxplot",
                        candlestick: "Candlestick",
                        k: "K line chart",
                        heatmap: "Heat map",
                        map: "Map",
                        parallel: "Parallel coordinate map",
                        lines: "Line graph",
                        graph: "Relationship graph",
                        sankey: "Sankey diagram",
                        funnel: "Funnel chart",
                        gauge: "Gauge",
                        pictorialBar: "Pictorial bar",
                        themeRiver: "Theme River Map",
                        sunburst: "Sunburst"
                    }
                },
                aria: {
                    general: {
                        withTitle: 'This is a chart about "{title}"',
                        withoutTitle: "This is a chart"
                    },
                    series: {
                        single: {
                            prefix: "",
                            withName: " with type {seriesType} named {seriesName}.",
                            withoutName: " with type {seriesType}."
                        },
                        multiple: {
                            prefix: ". It consists of {seriesCount} series count.",
                            withName: " The {seriesId} series is a {seriesType} representing {seriesName}.",
                            withoutName: " The {seriesId} series is a {seriesType}.",
                            separator: {
                                middle: "",
                                end: ""
                            }
                        }
                    },
                    data: {
                        allData: "The data is as follows: ",
                        partialData: "The first {displayCnt} items are: ",
                        withName: "the data for {name} is {value}",
                        withoutName: "{value}",
                        separator: {
                            middle: ", ",
                            end: ". "
                        }
                    }
                }
            },
            WC = {
                time: {
                    month: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
                    monthAbbr: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
                    dayOfWeek: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
                    dayOfWeekAbbr: ["日", "一", "二", "三", "四", "五", "六"]
                },
                legend: {
                    selector: {
                        all: "全选",
                        inverse: "反选"
                    }
                },
                toolbox: {
                    brush: {
                        title: {
                            rect: "矩形选择",
                            polygon: "圈选",
                            lineX: "横向选择",
                            lineY: "纵向选择",
                            keep: "保持选择",
                            clear: "清除选择"
                        }
                    },
                    dataView: {
                        title: "数据视图",
                        lang: ["数据视图", "关闭", "刷新"]
                    },
                    dataZoom: {
                        title: {
                            zoom: "区域缩放",
                            back: "区域缩放还原"
                        }
                    },
                    magicType: {
                        title: {
                            line: "切换为折线图",
                            bar: "切换为柱状图",
                            stack: "切换为堆叠",
                            tiled: "切换为平铺"
                        }
                    },
                    restore: {
                        title: "还原"
                    },
                    saveAsImage: {
                        title: "保存为图片",
                        lang: ["右键另存为图片"]
                    }
                },
                series: {
                    typeNames: {
                        pie: "饼图",
                        bar: "柱状图",
                        line: "折线图",
                        scatter: "散点图",
                        effectScatter: "涟漪散点图",
                        radar: "雷达图",
                        tree: "树图",
                        treemap: "矩形树图",
                        boxplot: "箱型图",
                        candlestick: "K线图",
                        k: "K线图",
                        heatmap: "热力图",
                        map: "地图",
                        parallel: "平行坐标图",
                        lines: "线图",
                        graph: "关系图",
                        sankey: "桑基图",
                        funnel: "漏斗图",
                        gauge: "仪表盘图",
                        pictorialBar: "象形柱图",
                        themeRiver: "主题河流图",
                        sunburst: "旭日图"
                    }
                },
                aria: {
                    general: {
                        withTitle: "这是一个关于“{title}”的图表。",
                        withoutTitle: "这是一个图表，"
                    },
                    series: {
                        single: {
                            prefix: "",
                            withName: "图表类型是{seriesType}，表示{seriesName}。",
                            withoutName: "图表类型是{seriesType}。"
                        },
                        multiple: {
                            prefix: "它由{seriesCount}个图表系列组成。",
                            withName: "第{seriesId}个系列是一个表示{seriesName}的{seriesType}，",
                            withoutName: "第{seriesId}个系列是一个{seriesType}，",
                            separator: {
                                middle: "；",
                                end: "。"
                            }
                        }
                    },
                    data: {
                        allData: "其数据是——",
                        partialData: "其中，前{displayCnt}项是——",
                        withName: "{name}的数据是{value}",
                        withoutName: "{value}",
                        separator: {
                            middle: "，",
                            end: ""
                        }
                    }
                }
            },
            jC = "ZH",
            XC = "EN",
            YC = XC,
            UC = {},
            qC = {},
            ZC = zx.domSupported ? function () {
                var e = (document.documentElement.lang || navigator.language || navigator.browserLanguage).toUpperCase();
                return e.indexOf(jC) > -1 ? jC : YC
            }() : YC;
        xs(XC, VC), xs(jC, WC);
        var $C = 1e3,
            KC = 60 * $C,
            JC = 60 * KC,
            QC = 24 * JC,
            eM = 365 * QC,
            tM = {
                year: "{yyyy}",
                month: "{MMM}",
                day: "{d}",
                hour: "{HH}:{mm}",
                minute: "{HH}:{mm}",
                second: "{HH}:{mm}:{ss}",
                millisecond: "{HH}:{mm}:{ss} {SSS}",
                none: "{yyyy}-{MM}-{dd} {HH}:{mm}:{ss} {SSS}"
            },
            nM = "{yyyy}-{MM}-{dd}",
            iM = {
                year: "{yyyy}",
                month: "{yyyy}-{MM}",
                day: nM,
                hour: nM + " " + tM.hour,
                minute: nM + " " + tM.minute,
                second: nM + " " + tM.second,
                millisecond: tM.none
            },
            rM = ["year", "month", "day", "hour", "minute", "second", "millisecond"],
            oM = ["year", "half-year", "quarter", "month", "week", "half-week", "day", "half-day", "quarter-day", "hour", "minute", "second", "millisecond"],
            aM = G,
            sM = ["a", "b", "c", "d", "e", "f", "g"],
            lM = function (e, t) {
                return "{" + e + (null == t ? "" : t) + "}"
            },
            uM = m,
            cM = ["left", "right", "top", "bottom", "width", "height"],
            pM = [
                ["width", "left", "right"],
                ["height", "top", "bottom"]
            ],
            hM = tl,
            dM = (S(tl, "vertical"), S(tl, "horizontal"), Ui()),
            fM = function (e) {
                function n(t, n, i) {
                    var r = e.call(this, t, n, i) || this;
                    return r.uid = gs("ec_cpt_model"), r
                }
                return t(n, e), n.prototype.init = function (e, t, n) {
                    this.mergeDefaultAndTheme(e, n)
                }, n.prototype.mergeDefaultAndTheme = function (e, t) {
                    var n = il(this),
                        i = n ? ol(e) : {},
                        r = t.getTheme();
                    l(e, r.get(this.mainType)), l(e, this.getDefaultOption()), n && rl(e, i, n)
                }, n.prototype.mergeOption = function (e) {
                    l(this.option, e, !0);
                    var t = il(this);
                    t && rl(this.option, e, t)
                }, n.prototype.optionUpdated = function () {}, n.prototype.getDefaultOption = function () {
                    var e = this.constructor;
                    if (!ir(e)) return e.defaultOption;
                    var t = dM(this);
                    if (!t.defaultOption) {
                        for (var n = [], i = e; i;) {
                            var r = i.prototype.defaultOption;
                            r && n.push(r), i = i.superClass
                        }
                        for (var o = {}, a = n.length - 1; a >= 0; a--) o = l(o, n[a], !0);
                        t.defaultOption = o
                    }
                    return t.defaultOption
                }, n.prototype.getReferringComponents = function (e, t) {
                    var n = e + "Index",
                        i = e + "Id";
                    return $i(this.ecModel, e, {
                        index: this.get(n, !0),
                        id: this.get(i, !0)
                    }, t)
                }, n.prototype.getBoxLayoutParams = function () {
                    var e = this;
                    return {
                        left: e.get("left"),
                        top: e.get("top"),
                        right: e.get("right"),
                        bottom: e.get("bottom"),
                        width: e.get("width"),
                        height: e.get("height")
                    }
                }, n.prototype.getZLevelKey = function () {
                    return ""
                }, n.prototype.setZLevel = function (e) {
                    this.option.zlevel = e
                }, n.protoInitialize = function () {
                    var e = n.prototype;
                    e.type = "component", e.id = "", e.name = "", e.mainType = "", e.subType = "", e.componentIndex = 0
                }(), n
            }(HC);
        ar(fM, HC), cr(fM), ms(fM), ys(fM, sl);
        var gM = "";
        "undefined" != typeof navigator && (gM = navigator.platform || "");
        var mM, yM, vM = "rgba(0, 0, 0, 0.2)",
            xM = {
                darkMode: "auto",
                colorBy: "series",
                color: ["#5470c6", "#91cc75", "#fac858", "#ee6666", "#73c0de", "#3ba272", "#fc8452", "#9a60b4", "#ea7ccc"],
                gradientColor: ["#f6efa6", "#d88273", "#bf444c"],
                aria: {
                    decal: {
                        decals: [{
                            color: vM,
                            dashArrayX: [1, 0],
                            dashArrayY: [2, 5],
                            symbolSize: 1,
                            rotation: Math.PI / 6
                        }, {
                            color: vM,
                            symbol: "circle",
                            dashArrayX: [
                                [8, 8],
                                [0, 8, 8, 0]
                            ],
                            dashArrayY: [6, 0],
                            symbolSize: .8
                        }, {
                            color: vM,
                            dashArrayX: [1, 0],
                            dashArrayY: [4, 3],
                            rotation: -Math.PI / 4
                        }, {
                            color: vM,
                            dashArrayX: [
                                [6, 6],
                                [0, 6, 6, 0]
                            ],
                            dashArrayY: [6, 0]
                        }, {
                            color: vM,
                            dashArrayX: [
                                [1, 0],
                                [1, 6]
                            ],
                            dashArrayY: [1, 0, 6, 0],
                            rotation: Math.PI / 4
                        }, {
                            color: vM,
                            symbol: "triangle",
                            dashArrayX: [
                                [9, 9],
                                [0, 9, 9, 0]
                            ],
                            dashArrayY: [7, 2],
                            symbolSize: .75
                        }]
                    }
                },
                textStyle: {
                    fontFamily: gM.match(/^Win/) ? "Microsoft YaHei" : "sans-serif",
                    fontSize: 12,
                    fontStyle: "normal",
                    fontWeight: "normal"
                },
                blendMode: null,
                stateAnimation: {
                    duration: 300,
                    easing: "cubicOut"
                },
                animation: "auto",
                animationDuration: 1e3,
                animationDurationUpdate: 500,
                animationEasing: "cubicInOut",
                animationEasingUpdate: "cubicInOut",
                animationThreshold: 2e3,
                progressiveThreshold: 3e3,
                progressive: 400,
                hoverLayerThreshold: 3e3,
                useUTC: !1
            },
            _M = Y(["tooltip", "label", "itemName", "itemId", "itemGroupId", "seriesName"]),
            wM = "original",
            bM = "arrayRows",
            SM = "objectRows",
            TM = "keyedColumns",
            CM = "typedArray",
            MM = "unknown",
            IM = "column",
            kM = "row",
            DM = {
                Must: 1,
                Might: 2,
                Not: 3
            },
            AM = Ui(),
            PM = Y(),
            LM = Ui(),
            NM = (Ui(), function () {
                function e() {}
                return e.prototype.getColorFromPalette = function (e, t, n) {
                    var i = ki(this.get("color", !0)),
                        r = this.get("colorLayer", !0);
                    return yl(this, LM, i, r, e, t, n)
                }, e.prototype.clearColorPalette = function () {
                    vl(this, LM)
                }, e
            }()),
            OM = "\0_ec_inner",
            EM = 1,
            RM = function (e) {
                function n() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return t(n, e), n.prototype.init = function (e, t, n, i, r, o) {
                    i = i || {}, this.option = null, this._theme = new HC(i), this._locale = new HC(r), this._optionManager = o
                }, n.prototype.setOption = function (e, t, n) {
                    var i = Sl(t);
                    this._optionManager.setOption(e, n, i), this._resetOption(null, i)
                }, n.prototype.resetOption = function (e, t) {
                    return this._resetOption(e, Sl(t))
                }, n.prototype._resetOption = function (e, t) {
                    var n = !1,
                        i = this._optionManager;
                    if (!e || "recreate" === e) {
                        var r = i.mountOption("recreate" === e);
                        this.option && "recreate" !== e ? (this.restoreData(), this._mergeOption(r, t)) : yM(this, r), n = !0
                    }
                    if (("timeline" === e || "media" === e) && this.restoreData(), !e || "recreate" === e || "timeline" === e) {
                        var o = i.getTimelineOption(this);
                        o && (n = !0, this._mergeOption(o, t))
                    }
                    if (!e || "recreate" === e || "media" === e) {
                        var a = i.getMediaOption(this);
                        a.length && m(a, function (e) {
                            n = !0, this._mergeOption(e, t)
                        }, this)
                    }
                    return n
                }, n.prototype.mergeOption = function (e) {
                    this._mergeOption(e, null)
                }, n.prototype._mergeOption = function (e, t) {
                    function n(t) {
                        var n = gl(this, t, ki(e[t])),
                            a = r.get(t),
                            s = a ? p && p.get(t) ? "replaceMerge" : "normalMerge" : "replaceAll",
                            l = Li(a, n, s);
                        ji(l, t, fM), i[t] = null, r.set(t, null), o.set(t, 0);
                        var u, h = [],
                            d = [],
                            f = 0;
                        m(l, function (e, n) {
                            var i = e.existing,
                                r = e.newOption;
                            if (r) {
                                var o = "series" === t,
                                    a = fM.getClass(t, e.keyInfo.subType, !o);
                                if (!a) return;
                                if ("tooltip" === t) {
                                    if (u) return;
                                    u = !0
                                }
                                if (i && i.constructor === a) i.name = e.keyInfo.name, i.mergeOption(r, this), i.optionUpdated(r, !1);
                                else {
                                    var s = c({
                                        componentIndex: n
                                    }, e.keyInfo);
                                    i = new a(r, this, this, s), c(i, s), e.brandNew && (i.__requireNewView = !0), i.init(r, this, this), i.optionUpdated(null, !0)
                                }
                            } else i && (i.mergeOption({}, this), i.optionUpdated({}, !1));
                            i ? (h.push(i.option), d.push(i), f++) : (h.push(void 0), d.push(void 0))
                        }, this), i[t] = h, r.set(t, d), o.set(t, f), "series" === t && mM(this)
                    }
                    var i = this.option,
                        r = this._componentsMap,
                        o = this._componentsCount,
                        a = [],
                        u = Y(),
                        p = t && t.replaceMergeMainTypeMap;
                    ll(this), m(e, function (e, t) {
                        null != e && (fM.hasClass(t) ? t && (a.push(t), u.set(t, !0)) : i[t] = null == i[t] ? s(e) : l(i[t], e, !0))
                    }), p && p.each(function (e, t) {
                        fM.hasClass(t) && !u.get(t) && (a.push(t), u.set(t, !0))
                    }), fM.topologicalTravel(a, fM.getAllClassMainTypes(), n, this), this._seriesIndices || mM(this)
                }, n.prototype.getOption = function () {
                    var e = s(this.option);
                    return m(e, function (t, n) {
                        if (fM.hasClass(n)) {
                            for (var i = ki(t), r = i.length, o = !1, a = r - 1; a >= 0; a--) i[a] && !Wi(i[a]) ? o = !0 : (i[a] = null, !o && r--);
                            i.length = r, e[n] = i
                        }
                    }), delete e[OM], e
                }, n.prototype.getTheme = function () {
                    return this._theme
                }, n.prototype.getLocaleModel = function () {
                    return this._locale
                }, n.prototype.setUpdatePayload = function (e) {
                    this._payload = e
                }, n.prototype.getUpdatePayload = function () {
                    return this._payload
                }, n.prototype.getComponent = function (e, t) {
                    var n = this._componentsMap.get(e);
                    if (n) {
                        var i = n[t || 0];
                        if (i) return i;
                        if (null == t)
                            for (var r = 0; r < n.length; r++)
                                if (n[r]) return n[r]
                    }
                }, n.prototype.queryComponents = function (e) {
                    var t = e.mainType;
                    if (!t) return [];
                    var n, i = e.index,
                        r = e.id,
                        o = e.name,
                        a = this._componentsMap.get(t);
                    return a && a.length ? (null != i ? (n = [], m(ki(i), function (e) {
                        a[e] && n.push(a[e])
                    })) : n = null != r ? wl("id", r, a) : null != o ? wl("name", o, a) : x(a, function (e) {
                        return !!e
                    }), bl(n, e)) : []
                }, n.prototype.findComponents = function (e) {
                    function t(e) {
                        var t = r + "Index",
                            n = r + "Id",
                            i = r + "Name";
                        return !e || null == e[t] && null == e[n] && null == e[i] ? null : {
                            mainType: r,
                            index: e[t],
                            id: e[n],
                            name: e[i]
                        }
                    }

                    function n(t) {
                        return e.filter ? x(t, e.filter) : t
                    }
                    var i = e.query,
                        r = e.mainType,
                        o = t(i),
                        a = o ? this.queryComponents(o) : x(this._componentsMap.get(r), function (e) {
                            return !!e
                        });
                    return n(bl(a, e))
                }, n.prototype.eachComponent = function (e, t, n) {
                    var i = this._componentsMap;
                    if (C(e)) {
                        var r = t,
                            o = e;
                        i.each(function (e, t) {
                            for (var n = 0; e && n < e.length; n++) {
                                var i = e[n];
                                i && o.call(r, t, i, i.componentIndex)
                            }
                        })
                    } else
                        for (var a = M(e) ? i.get(e) : D(e) ? this.findComponents(e) : null, s = 0; a && s < a.length; s++) {
                            var l = a[s];
                            l && t.call(n, l, l.componentIndex)
                        }
                }, n.prototype.getSeriesByName = function (e) {
                    var t = Gi(e, null);
                    return x(this._componentsMap.get("series"), function (e) {
                        return !!e && null != t && e.name === t
                    })
                }, n.prototype.getSeriesByIndex = function (e) {
                    return this._componentsMap.get("series")[e]
                }, n.prototype.getSeriesByType = function (e) {
                    return x(this._componentsMap.get("series"), function (t) {
                        return !!t && t.subType === e
                    })
                }, n.prototype.getSeries = function () {
                    return x(this._componentsMap.get("series"), function (e) {
                        return !!e
                    })
                }, n.prototype.getSeriesCount = function () {
                    return this._componentsCount.get("series")
                }, n.prototype.eachSeries = function (e, t) {
                    m(this._seriesIndices, function (n) {
                        var i = this._componentsMap.get("series")[n];
                        e.call(t, i, n)
                    }, this)
                }, n.prototype.eachRawSeries = function (e, t) {
                    m(this._componentsMap.get("series"), function (n) {
                        n && e.call(t, n, n.componentIndex)
                    })
                }, n.prototype.eachSeriesByType = function (e, t, n) {
                    m(this._seriesIndices, function (i) {
                        var r = this._componentsMap.get("series")[i];
                        r.subType === e && t.call(n, r, i)
                    }, this)
                }, n.prototype.eachRawSeriesByType = function (e, t, n) {
                    return m(this.getSeriesByType(e), t, n)
                }, n.prototype.isSeriesFiltered = function (e) {
                    return null == this._seriesIndicesMap.get(e.componentIndex)
                }, n.prototype.getCurrentSeriesIndices = function () {
                    return (this._seriesIndices || []).slice()
                }, n.prototype.filterSeries = function (e, t) {
                    var n = [];
                    m(this._seriesIndices, function (i) {
                        var r = this._componentsMap.get("series")[i];
                        e.call(t, r, i) && n.push(i)
                    }, this), this._seriesIndices = n, this._seriesIndicesMap = Y(n)
                }, n.prototype.restoreData = function (e) {
                    mM(this);
                    var t = this._componentsMap,
                        n = [];
                    t.each(function (e, t) {
                        fM.hasClass(t) && n.push(t)
                    }), fM.topologicalTravel(n, fM.getAllClassMainTypes(), function (n) {
                        m(t.get(n), function (t) {
                            !t || "series" === n && xl(t, e) || t.restoreData()
                        })
                    })
                }, n.internalField = (mM = function (e) {
                    var t = e._seriesIndices = [];
                    m(e._componentsMap.get("series"), function (e) {
                        e && t.push(e.componentIndex)
                    }), e._seriesIndicesMap = Y(t)
                }, void(yM = function (e, t) {
                    e.option = {}, e.option[OM] = EM, e._componentsMap = Y({
                        series: []
                    }), e._componentsCount = Y();
                    var n = t.aria;
                    D(n) && null == n.enabled && (n.enabled = !0), _l(t, e._theme.option), l(t, xM, !1), e._mergeOption(t, null)
                })), n
            }(HC);
        f(RM, NM);
        var zM, BM, FM, HM, GM, VM, WM = ["getDom", "getZr", "getWidth", "getHeight", "getDevicePixelRatio", "dispatchAction", "isSSR", "isDisposed", "on", "off", "getDataURL", "getConnectedDataURL", "getOption", "getId", "updateLabelLayout"],
            jM = function () {
                function e(e) {
                    m(WM, function (t) {
                        this[t] = o_(e[t], e)
                    }, this)
                }
                return e
            }(),
            XM = {},
            YM = function () {
                function e() {
                    this._coordinateSystems = []
                }
                return e.prototype.create = function (e, t) {
                    var n = [];
                    m(XM, function (i) {
                        var r = i.create(e, t);
                        n = n.concat(r || [])
                    }), this._coordinateSystems = n
                }, e.prototype.update = function (e, t) {
                    m(this._coordinateSystems, function (n) {
                        n.update && n.update(e, t)
                    })
                }, e.prototype.getCoordinateSystems = function () {
                    return this._coordinateSystems.slice()
                }, e.register = function (e, t) {
                    XM[e] = t
                }, e.get = function (e) {
                    return XM[e]
                }, e
            }(),
            UM = /^(min|max)?(.+)$/,
            qM = function () {
                function e(e) {
                    this._timelineOptions = [], this._mediaList = [], this._currentMediaIndices = [], this._api = e
                }
                return e.prototype.setOption = function (e, t) {
                    e && (m(ki(e.series), function (e) {
                        e && e.data && P(e.data) && j(e.data)
                    }), m(ki(e.dataset), function (e) {
                        e && e.source && P(e.source) && j(e.source)
                    })), e = s(e);
                    var n = this._optionBackup,
                        i = Tl(e, t, !n);
                    this._newBaseOption = i.baseOption, n ? (i.timelineOptions.length && (n.timelineOptions = i.timelineOptions), i.mediaList.length && (n.mediaList = i.mediaList), i.mediaDefault && (n.mediaDefault = i.mediaDefault)) : this._optionBackup = i
                }, e.prototype.mountOption = function (e) {
                    var t = this._optionBackup;
                    return this._timelineOptions = t.timelineOptions, this._mediaList = t.mediaList, this._mediaDefault = t.mediaDefault, this._currentMediaIndices = [], s(e ? t.baseOption : this._newBaseOption)
                }, e.prototype.getTimelineOption = function (e) {
                    var t, n = this._timelineOptions;
                    if (n.length) {
                        var i = e.getComponent("timeline");
                        i && (t = s(n[i.getCurrentIndex()]))
                    }
                    return t
                }, e.prototype.getMediaOption = function () {
                    var e = this._api.getWidth(),
                        t = this._api.getHeight(),
                        n = this._mediaList,
                        i = this._mediaDefault,
                        r = [],
                        o = [];
                    if (!n.length && !i) return o;
                    for (var a = 0, l = n.length; l > a; a++) Cl(n[a].query, e, t) && r.push(a);
                    return !r.length && i && (r = [-1]), r.length && !Il(r, this._currentMediaIndices) && (o = y(r, function (e) {
                        return s(-1 === e ? i.option : n[e].option)
                    })), this._currentMediaIndices = r, o
                }, e
            }(),
            ZM = m,
            $M = D,
            KM = ["areaStyle", "lineStyle", "nodeStyle", "linkStyle", "chordStyle", "label", "labelLine"],
            JM = [
                ["x", "left"],
                ["y", "top"],
                ["x2", "right"],
                ["y2", "bottom"]
            ],
            QM = ["grid", "geo", "parallel", "legend", "toolbox", "title", "visualMap", "dataZoom", "timeline"],
            eI = [
                ["borderRadius", "barBorderRadius"],
                ["borderColor", "barBorderColor"],
                ["borderWidth", "barBorderWidth"]
            ],
            tI = function () {
                function e(e) {
                    this.data = e.data || (e.sourceFormat === TM ? {} : []), this.sourceFormat = e.sourceFormat || MM, this.seriesLayoutBy = e.seriesLayoutBy || IM, this.startIndex = e.startIndex || 0, this.dimensionsDetectedCount = e.dimensionsDetectedCount, this.metaRawOption = e.metaRawOption;
                    var t = this.dimensionsDefine = e.dimensionsDefine;
                    if (t)
                        for (var n = 0; n < t.length; n++) {
                            var i = t[n];
                            null == i.type && dl(this, n) === DM.Must && (i.type = "ordinal")
                        }
                }
                return e
            }(),
            nI = function () {
                function e(e, t) {
                    var n = ql(e) ? e : $l(e);
                    this._source = n;
                    var i = this._data = n.data;
                    n.sourceFormat === CM && (this._offset = 0, this._dimSize = t, this._data = i), GM(this, i, n)
                }
                return e.prototype.getSource = function () {
                    return this._source
                }, e.prototype.count = function () {
                    return 0
                }, e.prototype.getItem = function () {}, e.prototype.appendData = function () {}, e.prototype.clean = function () {}, e.protoInitialize = (t = e.prototype, t.pure = !1, void(t.persistent = !0)), e.internalField = function () {
                    function e(e) {
                        for (var t = 0; t < e.length; t++) this._data.push(e[t])
                    }
                    var t;
                    GM = function (e, t, o) {
                        var a = o.sourceFormat,
                            s = o.seriesLayoutBy,
                            l = o.startIndex,
                            u = o.dimensionsDefine,
                            p = HM[su(a, s)];
                        if (c(e, p), a === CM) e.getItem = n, e.count = r, e.fillStorage = i;
                        else {
                            var h = ru(a, s);
                            e.getItem = o_(h, null, t, l, u);
                            var d = ou(a, s);
                            e.count = o_(d, null, t, l, u)
                        }
                    };
                    var n = function (e, t) {
                            e -= this._offset, t = t || [];
                            for (var n = this._data, i = this._dimSize, r = i * e, o = 0; i > o; o++) t[o] = n[r + o];
                            return t
                        },
                        i = function (e, t, n, i) {
                            for (var r = this._data, o = this._dimSize, a = 0; o > a; a++) {
                                for (var s = i[a], l = null == s[0] ? 1 / 0 : s[0], u = null == s[1] ? -1 / 0 : s[1], c = t - e, p = n[a], h = 0; c > h; h++) {
                                    var d = r[h * o + a];
                                    p[e + h] = d, l > d && (l = d), d > u && (u = d)
                                }
                                s[0] = l, s[1] = u
                            }
                        },
                        r = function () {
                            return this._data ? this._data.length / this._dimSize : 0
                        };
                    t = {}, t[bM + "_" + IM] = {
                        pure: !0,
                        appendData: e
                    }, t[bM + "_" + kM] = {
                        pure: !0,
                        appendData: function () {
                            throw new Error('Do not support appendData when set seriesLayoutBy: "row".')
                        }
                    }, t[SM] = {
                        pure: !0,
                        appendData: e
                    }, t[TM] = {
                        pure: !0,
                        appendData: function (e) {
                            var t = this._data;
                            m(e, function (e, n) {
                                for (var i = t[n] || (t[n] = []), r = 0; r < (e || []).length; r++) i.push(e[r])
                            })
                        }
                    }, t[wM] = {
                        appendData: e
                    }, t[CM] = {
                        persistent: !1,
                        pure: !0,
                        appendData: function (e) {
                            this._data = e
                        },
                        clean: function () {
                            this._offset += this.count(), this._data = null
                        }
                    }, HM = t
                }(), e;
                var t
            }(),
            iI = function (e, t, n, i) {
                return e[i]
            },
            rI = (zM = {}, zM[bM + "_" + IM] = function (e, t, n, i) {
                return e[i + t]
            }, zM[bM + "_" + kM] = function (e, t, n, i, r) {
                i += t;
                for (var o = r || [], a = e, s = 0; s < a.length; s++) {
                    var l = a[s];
                    o[s] = l ? l[i] : null
                }
                return o
            }, zM[SM] = iI, zM[TM] = function (e, t, n, i, r) {
                for (var o = r || [], a = 0; a < n.length; a++) {
                    var s = n[a].name,
                        l = e[s];
                    o[a] = l ? l[i] : null
                }
                return o
            }, zM[wM] = iI, zM),
            oI = function (e) {
                return e.length
            },
            aI = (BM = {}, BM[bM + "_" + IM] = function (e, t) {
                return Math.max(0, e.length - t)
            }, BM[bM + "_" + kM] = function (e, t) {
                var n = e[0];
                return n ? Math.max(0, n.length - t) : 0
            }, BM[SM] = oI, BM[TM] = function (e, t, n) {
                var i = n[0].name,
                    r = e[i];
                return r ? r.length : 0
            }, BM[wM] = oI, BM),
            sI = function (e, t) {
                return e[t]
            },
            lI = (FM = {}, FM[bM] = sI, FM[SM] = function (e, t, n) {
                return e[n]
            }, FM[TM] = sI, FM[wM] = function (e, t) {
                var n = Ai(e);
                return n instanceof Array ? n[t] : n
            }, FM[CM] = sI, FM),
            uI = /\{@(.+?)\}/g,
            cI = function () {
                function e() {}
                return e.prototype.getDataParams = function (e, t) {
                    var n = this.getData(t),
                        i = this.getRawValue(e, t),
                        r = n.getRawIndex(e),
                        o = n.getName(e),
                        a = n.getRawDataItem(e),
                        s = n.getItemVisual(e, "style"),
                        l = s && s[n.getItemVisual(e, "drawType") || "fill"],
                        u = s && s.stroke,
                        c = this.mainType,
                        p = "series" === c,
                        h = n.userOutput && n.userOutput.get();
                    return {
                        componentType: c,
                        componentSubType: this.subType,
                        componentIndex: this.componentIndex,
                        seriesType: p ? this.subType : null,
                        seriesIndex: this.seriesIndex,
                        seriesId: p ? this.id : null,
                        seriesName: p ? this.name : null,
                        name: o,
                        dataIndex: r,
                        data: a,
                        dataType: t,
                        value: i,
                        color: l,
                        borderColor: u,
                        dimensionNames: h ? h.fullDimensions : null,
                        encode: h ? h.encode : null,
                        $vars: ["seriesName", "name", "value"]
                    }
                }, e.prototype.getFormattedLabel = function (e, t, n, i, r, o) {
                    t = t || "normal";
                    var a = this.getData(n),
                        s = this.getDataParams(e, n);
                    if (o && (s.value = o.interpolatedValue), null != i && T(s.value) && (s.value = s.value[i]), !r) {
                        var l = a.getItemModel(e);
                        r = l.get("normal" === t ? ["label", "formatter"] : [t, "label", "formatter"])
                    }
                    if (C(r)) return s.status = t, s.dimensionIndex = i, r(s);
                    if (M(r)) {
                        var u = Zs(r, s);
                        return u.replace(uI, function (t, n) {
                            var i = n.length,
                                r = n;
                            "[" === r.charAt(0) && "]" === r.charAt(i - 1) && (r = +r.slice(1, i - 1));
                            var s = lu(a, e, r);
                            if (o && T(o.interpolatedValue)) {
                                var l = a.getDimensionIndex(r);
                                l >= 0 && (s = o.interpolatedValue[l])
                            }
                            return null != s ? s + "" : ""
                        })
                    }
                }, e.prototype.getRawValue = function (e, t) {
                    return lu(this.getData(t), e)
                }, e.prototype.formatTooltip = function () {}, e
            }(),
            pI = function () {
                function e(e) {
                    e = e || {}, this._reset = e.reset, this._plan = e.plan, this._count = e.count, this._onDirty = e.onDirty, this._dirty = !0
                }
                return e.prototype.perform = function (e) {
                    function t(e) {
                        return !(e >= 1) && (e = 1), e
                    }
                    var n, i = this._upstream,
                        r = e && e.skip;
                    if (this._dirty && i) {
                        var o = this.context;
                        o.data = o.outputData = i.context.outputData
                    }
                    this.__pipeline && (this.__pipeline.currentTask = this), this._plan && !r && (n = this._plan(this.context));
                    var a, s = t(this._modBy),
                        l = this._modDataCount || 0,
                        u = t(e && e.modBy),
                        c = e && e.modDataCount || 0;
                    (s !== u || l !== c) && (n = "reset"), (this._dirty || "reset" === n) && (this._dirty = !1, a = this._doReset(r)), this._modBy = u, this._modDataCount = c;
                    var p = e && e.step;
                    if (this._dueEnd = i ? i._outputDueEnd : this._count ? this._count(this.context) : 1 / 0, this._progress) {
                        var h = this._dueIndex,
                            d = Math.min(null != p ? this._dueIndex + p : 1 / 0, this._dueEnd);
                        if (!r && (a || d > h)) {
                            var f = this._progress;
                            if (T(f))
                                for (var g = 0; g < f.length; g++) this._doProgress(f[g], h, d, u, c);
                            else this._doProgress(f, h, d, u, c)
                        }
                        this._dueIndex = d;
                        var m = null != this._settedOutputEnd ? this._settedOutputEnd : d;
                        this._outputDueEnd = m
                    } else this._dueIndex = this._outputDueEnd = null != this._settedOutputEnd ? this._settedOutputEnd : this._dueEnd;
                    return this.unfinished()
                }, e.prototype.dirty = function () {
                    this._dirty = !0, this._onDirty && this._onDirty(this.context)
                }, e.prototype._doProgress = function (e, t, n, i, r) {
                    hI.reset(t, n, i, r), this._callingProgress = e, this._callingProgress({
                        start: t,
                        end: n,
                        count: n - t,
                        next: hI.next
                    }, this.context)
                }, e.prototype._doReset = function (e) {
                    var t, n;
                    this._dueIndex = this._outputDueEnd = this._dueEnd = 0, this._settedOutputEnd = null, !e && this._reset && (t = this._reset(this.context), t && t.progress && (n = t.forceFirstProgress, t = t.progress), T(t) && !t.length && (t = null)), this._progress = t, this._modBy = this._modDataCount = null;
                    var i = this._downstream;
                    return i && i.dirty(), n
                }, e.prototype.unfinished = function () {
                    return this._progress && this._dueIndex < this._dueEnd
                }, e.prototype.pipe = function (e) {
                    (this._downstream !== e || this._dirty) && (this._downstream = e, e._upstream = this, e.dirty())
                }, e.prototype.dispose = function () {
                    this._disposed || (this._upstream && (this._upstream._downstream = null), this._downstream && (this._downstream._upstream = null), this._dirty = !1, this._disposed = !0)
                }, e.prototype.getUpstream = function () {
                    return this._upstream
                }, e.prototype.getDownstream = function () {
                    return this._downstream
                }, e.prototype.setOutputEnd = function (e) {
                    this._outputDueEnd = this._settedOutputEnd = e
                }, e
            }(),
            hI = function () {
                function e() {
                    return n > i ? i++ : null
                }

                function t() {
                    var e = i % a * r + Math.ceil(i / a),
                        t = i >= n ? null : o > e ? e : i;
                    return i++, t
                }
                var n, i, r, o, a, s = {
                    reset: function (l, u, c, p) {
                        i = l, n = u,
                            r = c, o = p, a = Math.ceil(o / r), s.next = r > 1 && o > 0 ? t : e
                    }
                };
                return s
            }(),
            dI = (Y({
                number: function (e) {
                    return parseFloat(e)
                },
                time: function (e) {
                    return +gi(e)
                },
                trim: function (e) {
                    return M(e) ? W(e) : e
                }
            }), {
                lt: function (e, t) {
                    return t > e
                },
                lte: function (e, t) {
                    return t >= e
                },
                gt: function (e, t) {
                    return e > t
                },
                gte: function (e, t) {
                    return e >= t
                }
            }),
            fI = (function () {
                function e(e, t) {
                    if (!k(t)) {
                        var n = "";
                        Mi(n)
                    }
                    this._opFn = dI[e], this._rvalFloat = wi(t)
                }
                e.prototype.evaluate = function (e) {
                    return k(e) ? this._opFn(e, this._rvalFloat) : this._opFn(wi(e), this._rvalFloat)
                }
            }(), function () {
                function e(e, t) {
                    var n = "desc" === e;
                    this._resultLT = n ? 1 : -1, null == t && (t = n ? "min" : "max"), this._incomparable = "min" === t ? -1 / 0 : 1 / 0
                }
                return e.prototype.evaluate = function (e, t) {
                    var n = k(e) ? e : wi(e),
                        i = k(t) ? t : wi(t),
                        r = isNaN(n),
                        o = isNaN(i);
                    if (r && (n = this._incomparable), o && (i = this._incomparable), r && o) {
                        var a = M(e),
                            s = M(t);
                        a && (n = s ? e : 0), s && (i = a ? t : 0)
                    }
                    return i > n ? this._resultLT : n > i ? -this._resultLT : 0
                }, e
            }()),
            gI = (function () {
                function e(e, t) {
                    this._rval = t, this._isEQ = e, this._rvalTypeof = typeof t, this._rvalFloat = wi(t)
                }
                e.prototype.evaluate = function (e) {
                    var t = e === this._rval;
                    if (!t) {
                        var n = typeof e;
                        n === this._rvalTypeof || "number" !== n && "number" !== this._rvalTypeof || (t = wi(e) === this._rvalFloat)
                    }
                    return this._isEQ ? t : !t
                }
            }(), function () {
                function e() {}
                return e.prototype.getRawData = function () {
                    throw new Error("not supported")
                }, e.prototype.getRawDataItem = function () {
                    throw new Error("not supported")
                }, e.prototype.cloneRawData = function () {}, e.prototype.getDimensionInfo = function () {}, e.prototype.cloneAllDimensionInfo = function () {}, e.prototype.count = function () {}, e.prototype.retrieveValue = function () {}, e.prototype.retrieveValueFromItem = function () {}, e.prototype.convertValue = function (e, t) {
                    return pu(e, t)
                }, e
            }()),
            mI = Y(),
            yI = "undefined",
            vI = typeof Uint32Array === yI ? Array : Uint32Array,
            xI = typeof Uint16Array === yI ? Array : Uint16Array,
            _I = typeof Int32Array === yI ? Array : Int32Array,
            wI = typeof Float64Array === yI ? Array : Float64Array,
            bI = {
                float: wI,
                int: _I,
                ordinal: Array,
                number: Array,
                time: wI
            },
            SI = function () {
                function e() {
                    this._chunks = [], this._rawExtent = [], this._extent = [], this._count = 0, this._rawCount = 0, this._calcDimNameToIdx = Y()
                }
                return e.prototype.initData = function (e, t, n) {
                    this._provider = e, this._chunks = [], this._indices = null, this.getRawIndex = this._getRawIdxIdentity;
                    var i = e.getSource(),
                        r = this.defaultDimValueGetter = VM[i.sourceFormat];
                    this._dimValueGetter = n || r, this._rawExtent = [], iu(i), this._dimensions = y(t, function (e) {
                        return {
                            type: e.type,
                            property: e.property
                        }
                    }), this._initDataFromProvider(0, e.count())
                }, e.prototype.getProvider = function () {
                    return this._provider
                }, e.prototype.getSource = function () {
                    return this._provider.getSource()
                }, e.prototype.ensureCalculationDimension = function (e, t) {
                    var n = this._calcDimNameToIdx,
                        i = this._dimensions,
                        r = n.get(e);
                    if (null != r) {
                        if (i[r].type === t) return r
                    } else r = i.length;
                    return i[r] = {
                        type: t
                    }, n.set(e, r), this._chunks[r] = new bI[t || "float"](this._rawCount), this._rawExtent[r] = bu(), r
                }, e.prototype.collectOrdinalMeta = function (e, t) {
                    var n = this._chunks[e],
                        i = this._dimensions[e],
                        r = this._rawExtent,
                        o = i.ordinalOffset || 0,
                        a = n.length;
                    0 === o && (r[e] = bu());
                    for (var s = r[e], l = o; a > l; l++) {
                        var u = n[l] = t.parseAndCollect(n[l]);
                        isNaN(u) || (s[0] = Math.min(u, s[0]), s[1] = Math.max(u, s[1]))
                    }
                    i.ordinalMeta = t, i.ordinalOffset = a, i.type = "ordinal"
                }, e.prototype.getOrdinalMeta = function (e) {
                    var t = this._dimensions[e],
                        n = t.ordinalMeta;
                    return n
                }, e.prototype.getDimensionProperty = function (e) {
                    var t = this._dimensions[e];
                    return t && t.property
                }, e.prototype.appendData = function (e) {
                    var t = this._provider,
                        n = this.count();
                    t.appendData(e);
                    var i = t.count();
                    return t.persistent || (i += n), i > n && this._initDataFromProvider(n, i, !0), [n, i]
                }, e.prototype.appendValues = function (e, t) {
                    for (var n = this._chunks, i = this._dimensions, r = i.length, o = this._rawExtent, a = this.count(), s = a + Math.max(e.length, t || 0), l = 0; r > l; l++) {
                        var u = i[l];
                        Tu(n, l, u.type, s, !0)
                    }
                    for (var c = [], p = a; s > p; p++)
                        for (var h = p - a, d = 0; r > d; d++) {
                            u = i[d];
                            var f = VM.arrayRows.call(this, e[h] || c, u.property, h, d);
                            n[d][p] = f;
                            var g = o[d];
                            f < g[0] && (g[0] = f), f > g[1] && (g[1] = f)
                        }
                    return this._rawCount = this._count = s, {
                        start: a,
                        end: s
                    }
                }, e.prototype._initDataFromProvider = function (e, t, n) {
                    for (var i = this._provider, r = this._chunks, o = this._dimensions, a = o.length, s = this._rawExtent, l = y(o, function (e) {
                            return e.property
                        }), u = 0; a > u; u++) {
                        var c = o[u];
                        s[u] || (s[u] = bu()), Tu(r, u, c.type, t, n)
                    }
                    if (i.fillStorage) i.fillStorage(e, t, r, s);
                    else
                        for (var p = [], h = e; t > h; h++) {
                            p = i.getItem(h, p);
                            for (var d = 0; a > d; d++) {
                                var f = r[d],
                                    g = this._dimValueGetter(p, l[d], h, d);
                                f[h] = g;
                                var m = s[d];
                                g < m[0] && (m[0] = g), g > m[1] && (m[1] = g)
                            }
                        }!i.persistent && i.clean && i.clean(), this._rawCount = this._count = t, this._extent = []
                }, e.prototype.count = function () {
                    return this._count
                }, e.prototype.get = function (e, t) {
                    if (!(t >= 0 && t < this._count)) return NaN;
                    var n = this._chunks[e];
                    return n ? n[this.getRawIndex(t)] : NaN
                }, e.prototype.getValues = function (e, t) {
                    var n = [],
                        i = [];
                    if (null == t) {
                        t = e, e = [];
                        for (var r = 0; r < this._dimensions.length; r++) i.push(r)
                    } else i = e;
                    r = 0;
                    for (var o = i.length; o > r; r++) n.push(this.get(i[r], t));
                    return n
                }, e.prototype.getByRawIndex = function (e, t) {
                    if (!(t >= 0 && t < this._rawCount)) return NaN;
                    var n = this._chunks[e];
                    return n ? n[t] : NaN
                }, e.prototype.getSum = function (e) {
                    var t = this._chunks[e],
                        n = 0;
                    if (t)
                        for (var i = 0, r = this.count(); r > i; i++) {
                            var o = this.get(e, i);
                            isNaN(o) || (n += o)
                        }
                    return n
                }, e.prototype.getMedian = function (e) {
                    var t = [];
                    this.each([e], function (e) {
                        isNaN(e) || t.push(e)
                    });
                    var n = t.sort(function (e, t) {
                            return e - t
                        }),
                        i = this.count();
                    return 0 === i ? 0 : i % 2 == 1 ? n[(i - 1) / 2] : (n[i / 2] + n[i / 2 - 1]) / 2
                }, e.prototype.indexOfRawIndex = function (e) {
                    if (e >= this._rawCount || 0 > e) return -1;
                    if (!this._indices) return e;
                    var t = this._indices,
                        n = t[e];
                    if (null != n && n < this._count && n === e) return e;
                    for (var i = 0, r = this._count - 1; r >= i;) {
                        var o = (i + r) / 2 | 0;
                        if (t[o] < e) i = o + 1;
                        else {
                            if (!(t[o] > e)) return o;
                            r = o - 1
                        }
                    }
                    return -1
                }, e.prototype.indicesOfNearest = function (e, t, n) {
                    var i = this._chunks,
                        r = i[e],
                        o = [];
                    if (!r) return o;
                    null == n && (n = 1 / 0);
                    for (var a = 1 / 0, s = -1, l = 0, u = 0, c = this.count(); c > u; u++) {
                        var p = this.getRawIndex(u),
                            h = t - r[p],
                            d = Math.abs(h);
                        n >= d && ((a > d || d === a && h >= 0 && 0 > s) && (a = d, s = h, l = 0), h === s && (o[l++] = u))
                    }
                    return o.length = l, o
                }, e.prototype.getIndices = function () {
                    var e, t = this._indices;
                    if (t) {
                        var n = t.constructor,
                            i = this._count;
                        if (n === Array) {
                            e = new n(i);
                            for (var r = 0; i > r; r++) e[r] = t[r]
                        } else e = new n(t.buffer, 0, i)
                    } else {
                        n = wu(this._rawCount);
                        e = new n(this.count());
                        for (r = 0; r < e.length; r++) e[r] = r
                    }
                    return e
                }, e.prototype.filter = function (e, t) {
                    if (!this._count) return this;
                    for (var n = this.clone(), i = n.count(), r = wu(n._rawCount), o = new r(i), a = [], s = e.length, l = 0, u = e[0], c = n._chunks, p = 0; i > p; p++) {
                        var h = void 0,
                            d = n.getRawIndex(p);
                        if (0 === s) h = t(p);
                        else if (1 === s) {
                            var f = c[u][d];
                            h = t(f, p)
                        } else {
                            for (var g = 0; s > g; g++) a[g] = c[e[g]][d];
                            a[g] = p, h = t.apply(null, a)
                        }
                        h && (o[l++] = d)
                    }
                    return i > l && (n._indices = o), n._count = l, n._extent = [], n._updateGetRawIdx(), n
                }, e.prototype.selectRange = function (e) {
                    var t = this.clone(),
                        n = t._count;
                    if (!n) return this;
                    var i = w(e),
                        r = i.length;
                    if (!r) return this;
                    var o = t.count(),
                        a = wu(t._rawCount),
                        s = new a(o),
                        l = 0,
                        u = i[0],
                        c = e[u][0],
                        p = e[u][1],
                        h = t._chunks,
                        d = !1;
                    if (!t._indices) {
                        var f = 0;
                        if (1 === r) {
                            for (var g = h[i[0]], m = 0; n > m; m++) {
                                var y = g[m];
                                (y >= c && p >= y || isNaN(y)) && (s[l++] = f), f++
                            }
                            d = !0
                        } else if (2 === r) {
                            g = h[i[0]];
                            var v = h[i[1]],
                                x = e[i[1]][0],
                                _ = e[i[1]][1];
                            for (m = 0; n > m; m++) {
                                y = g[m];
                                var b = v[m];
                                (y >= c && p >= y || isNaN(y)) && (b >= x && _ >= b || isNaN(b)) && (s[l++] = f), f++
                            }
                            d = !0
                        }
                    }
                    if (!d)
                        if (1 === r)
                            for (m = 0; o > m; m++) {
                                var S = t.getRawIndex(m);
                                y = h[i[0]][S];
                                (y >= c && p >= y || isNaN(y)) && (s[l++] = S)
                            } else
                                for (m = 0; o > m; m++) {
                                    for (var T = !0, C = (S = t.getRawIndex(m), 0); r > C; C++) {
                                        var M = i[C];
                                        y = h[M][S];
                                        (y < e[M][0] || y > e[M][1]) && (T = !1)
                                    }
                                    T && (s[l++] = t.getRawIndex(m))
                                }
                    return o > l && (t._indices = s), t._count = l, t._extent = [], t._updateGetRawIdx(), t
                }, e.prototype.map = function (e, t) {
                    var n = this.clone(e);
                    return this._updateDims(n, e, t), n
                }, e.prototype.modify = function (e, t) {
                    this._updateDims(this, e, t)
                }, e.prototype._updateDims = function (e, t, n) {
                    for (var i = e._chunks, r = [], o = t.length, a = e.count(), s = [], l = e._rawExtent, u = 0; u < t.length; u++) l[t[u]] = bu();
                    for (var c = 0; a > c; c++) {
                        for (var p = e.getRawIndex(c), h = 0; o > h; h++) s[h] = i[t[h]][p];
                        s[o] = c;
                        var d = n && n.apply(null, s);
                        if (null != d) {
                            "object" != typeof d && (r[0] = d, d = r);
                            for (u = 0; u < d.length; u++) {
                                var f = t[u],
                                    g = d[u],
                                    m = l[f],
                                    y = i[f];
                                y && (y[p] = g), g < m[0] && (m[0] = g), g > m[1] && (m[1] = g)
                            }
                        }
                    }
                }, e.prototype.lttbDownSample = function (e, t) {
                    var n, i, r, o = this.clone([e], !0),
                        a = o._chunks,
                        s = a[e],
                        l = this.count(),
                        u = 0,
                        c = Math.floor(1 / t),
                        p = this.getRawIndex(0),
                        h = new(wu(this._rawCount))(Math.min(2 * (Math.ceil(l / c) + 2), l));
                    h[u++] = p;
                    for (var d = 1; l - 1 > d; d += c) {
                        for (var f = Math.min(d + c, l - 1), g = Math.min(d + 2 * c, l), m = (g + f) / 2, y = 0, v = f; g > v; v++) {
                            var x = this.getRawIndex(v),
                                _ = s[x];
                            isNaN(_) || (y += _)
                        }
                        y /= g - f;
                        var w = d,
                            b = Math.min(d + c, l),
                            S = d - 1,
                            T = s[p];
                        n = -1, r = w;
                        var C = -1,
                            M = 0;
                        for (v = w; b > v; v++) {
                            x = this.getRawIndex(v), _ = s[x];
                            isNaN(_) ? (M++, 0 > C && (C = x)) : (i = Math.abs((S - m) * (_ - T) - (S - v) * (y - T)), i > n && (n = i, r = x))
                        }
                        M > 0 && b - w > M && (h[u++] = Math.min(C, r), r = Math.max(C, r)), h[u++] = r, p = r
                    }
                    return h[u++] = this.getRawIndex(l - 1), o._count = u, o._indices = h, o.getRawIndex = this._getRawIdx, o
                }, e.prototype.downSample = function (e, t, n, i) {
                    for (var r = this.clone([e], !0), o = r._chunks, a = [], s = Math.floor(1 / t), l = o[e], u = this.count(), c = r._rawExtent[e] = bu(), p = new(wu(this._rawCount))(Math.ceil(u / s)), h = 0, d = 0; u > d; d += s) {
                        s > u - d && (s = u - d, a.length = s);
                        for (var f = 0; s > f; f++) {
                            var g = this.getRawIndex(d + f);
                            a[f] = l[g]
                        }
                        var m = n(a),
                            y = this.getRawIndex(Math.min(d + i(a, m) || 0, u - 1));
                        l[y] = m, m < c[0] && (c[0] = m), m > c[1] && (c[1] = m), p[h++] = y
                    }
                    return r._count = h, r._indices = p, r._updateGetRawIdx(), r
                }, e.prototype.each = function (e, t) {
                    if (this._count)
                        for (var n = e.length, i = this._chunks, r = 0, o = this.count(); o > r; r++) {
                            var a = this.getRawIndex(r);
                            switch (n) {
                                case 0:
                                    t(r);
                                    break;
                                case 1:
                                    t(i[e[0]][a], r);
                                    break;
                                case 2:
                                    t(i[e[0]][a], i[e[1]][a], r);
                                    break;
                                default:
                                    for (var s = 0, l = []; n > s; s++) l[s] = i[e[s]][a];
                                    l[s] = r, t.apply(null, l)
                            }
                        }
                }, e.prototype.getDataExtent = function (e) {
                    var t = this._chunks[e],
                        n = bu();
                    if (!t) return n;
                    var i, r = this.count(),
                        o = !this._indices;
                    if (o) return this._rawExtent[e].slice();
                    if (i = this._extent[e]) return i.slice();
                    i = n;
                    for (var a = i[0], s = i[1], l = 0; r > l; l++) {
                        var u = this.getRawIndex(l),
                            c = t[u];
                        a > c && (a = c), c > s && (s = c)
                    }
                    return i = [a, s], this._extent[e] = i, i
                }, e.prototype.getRawDataItem = function (e) {
                    var t = this.getRawIndex(e);
                    if (this._provider.persistent) return this._provider.getItem(t);
                    for (var n = [], i = this._chunks, r = 0; r < i.length; r++) n.push(i[r][t]);
                    return n
                }, e.prototype.clone = function (t, n) {
                    var i = new e,
                        r = this._chunks,
                        o = t && v(t, function (e, t) {
                            return e[t] = !0, e
                        }, {});
                    if (o)
                        for (var a = 0; a < r.length; a++) i._chunks[a] = o[a] ? Su(r[a]) : r[a];
                    else i._chunks = r;
                    return this._copyCommonProps(i), n || (i._indices = this._cloneIndices()), i._updateGetRawIdx(), i
                }, e.prototype._copyCommonProps = function (e) {
                    e._count = this._count, e._rawCount = this._rawCount, e._provider = this._provider, e._dimensions = this._dimensions, e._extent = s(this._extent), e._rawExtent = s(this._rawExtent)
                }, e.prototype._cloneIndices = function () {
                    if (this._indices) {
                        var e = this._indices.constructor,
                            t = void 0;
                        if (e === Array) {
                            var n = this._indices.length;
                            t = new e(n);
                            for (var i = 0; n > i; i++) t[i] = this._indices[i]
                        } else t = new e(this._indices);
                        return t
                    }
                    return null
                }, e.prototype._getRawIdxIdentity = function (e) {
                    return e
                }, e.prototype._getRawIdx = function (e) {
                    return e < this._count && e >= 0 ? this._indices[e] : -1
                }, e.prototype._updateGetRawIdx = function () {
                    this.getRawIndex = this._indices ? this._getRawIdx : this._getRawIdxIdentity
                }, e.internalField = function () {
                    function e(e, t, n, i) {
                        return pu(e[i], this._dimensions[i])
                    }
                    VM = {
                        arrayRows: e,
                        objectRows: function (e, t, n, i) {
                            return pu(e[t], this._dimensions[i])
                        },
                        keyedColumns: e,
                        original: function (e, t, n, i) {
                            var r = e && (null == e.value ? e : e.value);
                            return pu(r instanceof Array ? r[i] : r, this._dimensions[i])
                        },
                        typedArray: function (e, t, n, i) {
                            return e[i]
                        }
                    }
                }(), e
            }(),
            TI = function () {
                function e(e) {
                    this._sourceList = [], this._storeList = [], this._upstreamSignList = [], this._versionSignBase = 0, this._dirty = !0, this._sourceHost = e
                }
                return e.prototype.dirty = function () {
                    this._setLocalSource([], []), this._storeList = [], this._dirty = !0
                }, e.prototype._setLocalSource = function (e, t) {
                    this._sourceList = e, this._upstreamSignList = t, this._versionSignBase++, this._versionSignBase > 9e10 && (this._versionSignBase = 0)
                }, e.prototype._getVersionSign = function () {
                    return this._sourceHost.uid + "_" + this._versionSignBase
                }, e.prototype.prepareSource = function () {
                    this._isDirty() && (this._createSource(), this._dirty = !1)
                }, e.prototype._createSource = function () {
                    this._setLocalSource([], []);
                    var e, t, n = this._sourceHost,
                        i = this._getUpstreamSourceManagers(),
                        r = !!i.length;
                    if (Mu(n)) {
                        var o = n,
                            a = void 0,
                            s = void 0,
                            l = void 0;
                        if (r) {
                            var u = i[0];
                            u.prepareSource(), l = u.getSource(), a = l.data, s = l.sourceFormat, t = [u._getVersionSign()]
                        } else a = o.get("data", !0), s = P(a) ? CM : wM, t = [];
                        var c = this._getSourceMetaRawOption() || {},
                            p = l && l.metaRawOption || {},
                            h = B(c.seriesLayoutBy, p.seriesLayoutBy) || null,
                            d = B(c.sourceHeader, p.sourceHeader),
                            f = B(c.dimensions, p.dimensions),
                            g = h !== p.seriesLayoutBy || !!d != !!p.sourceHeader || f;
                        e = g ? [Zl(a, {
                            seriesLayoutBy: h,
                            sourceHeader: d,
                            dimensions: f
                        }, s)] : []
                    } else {
                        var m = n;
                        if (r) {
                            var y = this._applyTransform(i);
                            e = y.sourceList, t = y.upstreamSignList
                        } else {
                            var v = m.get("source", !0);
                            e = [Zl(v, this._getSourceMetaRawOption(), null)], t = []
                        }
                    }
                    this._setLocalSource(e, t)
                }, e.prototype._applyTransform = function (e) {
                    var t = this._sourceHost,
                        n = t.get("transform", !0),
                        i = t.get("fromTransformResult", !0);
                    if (null != i) {
                        var r = "";
                        1 !== e.length && Iu(r)
                    }
                    var o, a = [],
                        s = [];
                    return m(e, function (e) {
                        e.prepareSource();
                        var t = e.getSource(i || 0),
                            n = "";
                        null == i || t || Iu(n), a.push(t), s.push(e._getVersionSign())
                    }), n ? o = vu(n, a, {
                        datasetIndex: t.componentIndex
                    }) : null != i && (o = [Kl(a[0])]), {
                        sourceList: o,
                        upstreamSignList: s
                    }
                }, e.prototype._isDirty = function () {
                    if (this._dirty) return !0;
                    for (var e = this._getUpstreamSourceManagers(), t = 0; t < e.length; t++) {
                        var n = e[t];
                        if (n._isDirty() || this._upstreamSignList[t] !== n._getVersionSign()) return !0
                    }
                }, e.prototype.getSource = function (e) {
                    e = e || 0;
                    var t = this._sourceList[e];
                    if (!t) {
                        var n = this._getUpstreamSourceManagers();
                        return n[0] && n[0].getSource(e)
                    }
                    return t
                }, e.prototype.getSharedDataStore = function (e) {
                    var t = e.makeStoreSchema();
                    return this._innerGetDataStore(t.dimensions, e.source, t.hash)
                }, e.prototype._innerGetDataStore = function (e, t, n) {
                    var i = 0,
                        r = this._storeList,
                        o = r[i];
                    o || (o = r[i] = {});
                    var a = o[n];
                    if (!a) {
                        var s = this._getUpstreamSourceManagers()[0];
                        Mu(this._sourceHost) && s ? a = s._innerGetDataStore(e, t, n) : (a = new SI, a.initData(new nI(t, e.length), e)), o[n] = a
                    }
                    return a
                }, e.prototype._getUpstreamSourceManagers = function () {
                    var e = this._sourceHost;
                    if (Mu(e)) {
                        var t = pl(e);
                        return t ? [t.getSourceManager()] : []
                    }
                    return y(hl(e), function (e) {
                        return e.getSourceManager()
                    })
                }, e.prototype._getSourceMetaRawOption = function () {
                    var e, t, n, i = this._sourceHost;
                    if (Mu(i)) e = i.get("seriesLayoutBy", !0), t = i.get("sourceHeader", !0), n = i.get("dimensions", !0);
                    else if (!this._getUpstreamSourceManagers().length) {
                        var r = i;
                        e = r.get("seriesLayoutBy", !0), t = r.get("sourceHeader", !0), n = r.get("dimensions", !0)
                    }
                    return {
                        seriesLayoutBy: e,
                        sourceHeader: t,
                        dimensions: n
                    }
                }, e
            }(),
            CI = "line-height:1",
            MI = [0, 10, 20, 30],
            II = ["", "\n", "\n\n", "\n\n\n"],
            kI = function () {
                function e() {
                    this.richTextStyles = {}, this._nextStyleNameId = Si()
                }
                return e.prototype._generateStyleName = function () {
                    return "__EC_aUTo_" + this._nextStyleNameId++
                }, e.prototype.makeTooltipMarker = function (e, t, n) {
                    var i = "richText" === n ? this._generateStyleName() : null,
                        r = $s({
                            color: t,
                            type: e,
                            renderMode: n,
                            markerId: i
                        });
                    return M(r) ? r : (this.richTextStyles[i] = r.style, r.content)
                }, e.prototype.wrapRichTextStyle = function (e, t) {
                    var n = {};
                    T(t) ? m(t, function (e) {
                        return c(n, e)
                    }) : c(n, t);
                    var i = this._generateStyleName();
                    return this.richTextStyles[i] = n, "{" + i + "|" + e + "}"
                }, e
            }(),
            DI = Ui(),
            AI = "__universalTransitionEnabled",
            PI = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t._selectedDataIndicesMap = {}, t
                }
                return t(n, e), n.prototype.init = function (e, t, n) {
                    this.seriesIndex = this.componentIndex, this.dataTask = cu({
                        count: Zu,
                        reset: $u
                    }), this.dataTask.context = {
                        model: this
                    }, this.mergeDefaultAndTheme(e, n);
                    var i = DI(this).sourceManager = new TI(this);
                    i.prepareSource();
                    var r = this.getInitialData(e, n);
                    Ju(r, this), this.dataTask.context.data = r, DI(this).dataBeforeProcessed = r, Uu(this), this._initSelectedMapFromData(r)
                }, n.prototype.mergeDefaultAndTheme = function (e, t) {
                    var n = il(this),
                        i = n ? ol(e) : {},
                        r = this.subType;
                    fM.hasClass(r) && (r += "Series"), l(e, t.getTheme().get(this.subType)), l(e, this.getDefaultOption()), Di(e, "label", ["show"]), this.fillDataTextStyle(e.data), n && rl(e, i, n)
                }, n.prototype.mergeOption = function (e, t) {
                    e = l(this.option, e, !0), this.fillDataTextStyle(e.data);
                    var n = il(this);
                    n && rl(this.option, e, n);
                    var i = DI(this).sourceManager;
                    i.dirty(), i.prepareSource();
                    var r = this.getInitialData(e, t);
                    Ju(r, this), this.dataTask.dirty(), this.dataTask.context.data = r, DI(this).dataBeforeProcessed = r, Uu(this), this._initSelectedMapFromData(r)
                }, n.prototype.fillDataTextStyle = function (e) {
                    if (e && !P(e))
                        for (var t = ["show"], n = 0; n < e.length; n++) e[n] && e[n].label && Di(e[n], "label", t)
                }, n.prototype.getInitialData = function () {}, n.prototype.appendData = function (e) {
                    var t = this.getRawData();
                    t.appendData(e.data)
                }, n.prototype.getData = function (e) {
                    var t = ec(this);
                    if (t) {
                        var n = t.context.data;
                        return null == e ? n : n.getLinkedData(e)
                    }
                    return DI(this).data
                }, n.prototype.getAllData = function () {
                    var e = this.getData();
                    return e && e.getLinkedDataAll ? e.getLinkedDataAll() : [{
                        data: e
                    }]
                }, n.prototype.setData = function (e) {
                    var t = ec(this);
                    if (t) {
                        var n = t.context;
                        n.outputData = e, t !== this.dataTask && (n.data = e)
                    }
                    DI(this).data = e
                }, n.prototype.getEncode = function () {
                    var e = this.get("encode", !0);
                    return e ? Y(e) : void 0
                }, n.prototype.getSourceManager = function () {
                    return DI(this).sourceManager
                }, n.prototype.getSource = function () {
                    return this.getSourceManager().getSource()
                }, n.prototype.getRawData = function () {
                    return DI(this).dataBeforeProcessed
                }, n.prototype.getColorBy = function () {
                    var e = this.get("colorBy");
                    return e || "series"
                }, n.prototype.isColorBySeries = function () {
                    return "series" === this.getColorBy()
                }, n.prototype.getBaseAxis = function () {
                    var e = this.coordinateSystem;
                    return e && e.getBaseAxis && e.getBaseAxis()
                }, n.prototype.formatTooltip = function (e, t) {
                    return ju({
                        series: this,
                        dataIndex: e,
                        multipleSeries: t
                    })
                }, n.prototype.isAnimationEnabled = function () {
                    var e = this.ecModel;
                    if (zx.node && (!e || !e.ssr)) return !1;
                    var t = this.getShallow("animation");
                    return t && this.getData().count() > this.getShallow("animationThreshold") && (t = !1), !!t
                }, n.prototype.restoreData = function () {
                    this.dataTask.dirty()
                }, n.prototype.getColorFromPalette = function (e, t, n) {
                    var i = this.ecModel,
                        r = NM.prototype.getColorFromPalette.call(this, e, t, n);
                    return r || (r = i.getColorFromPalette(e, t, n)), r
                }, n.prototype.coordDimToDataDim = function (e) {
                    return this.getRawData().mapDimensionsAll(e)
                }, n.prototype.getProgressive = function () {
                    return this.get("progressive")
                }, n.prototype.getProgressiveThreshold = function () {
                    return this.get("progressiveThreshold")
                }, n.prototype.select = function (e, t) {
                    this._innerSelect(this.getData(t), e)
                }, n.prototype.unselect = function (e, t) {
                    var n = this.option.selectedMap;
                    if (n) {
                        var i = this.option.selectedMode,
                            r = this.getData(t);
                        if ("series" === i || "all" === n) return this.option.selectedMap = {}, void(this._selectedDataIndicesMap = {});
                        for (var o = 0; o < e.length; o++) {
                            var a = e[o],
                                s = Yu(r, a);
                            n[s] = !1, this._selectedDataIndicesMap[s] = -1
                        }
                    }
                }, n.prototype.toggleSelect = function (e, t) {
                    for (var n = [], i = 0; i < e.length; i++) n[0] = e[i], this.isSelected(e[i], t) ? this.unselect(n, t) : this.select(n, t)
                }, n.prototype.getSelectedDataIndices = function () {
                    if ("all" === this.option.selectedMap) return [].slice.call(this.getData().getIndices());
                    for (var e = this._selectedDataIndicesMap, t = w(e), n = [], i = 0; i < t.length; i++) {
                        var r = e[t[i]];
                        r >= 0 && n.push(r)
                    }
                    return n
                }, n.prototype.isSelected = function (e, t) {
                    var n = this.option.selectedMap;
                    if (!n) return !1;
                    var i = this.getData(t);
                    return ("all" === n || n[Yu(i, e)]) && !i.getItemModel(e).get(["select", "disabled"])
                }, n.prototype.isUniversalTransitionEnabled = function () {
                    if (this[AI]) return !0;
                    var e = this.option.universalTransition;
                    return !!e && (!0 === e || e && e.enabled)
                }, n.prototype._innerSelect = function (e, t) {
                    var n, i, r = this.option,
                        o = r.selectedMode,
                        a = t.length;
                    if (o && a)
                        if ("series" === o) r.selectedMap = "all";
                        else if ("multiple" === o) {
                        D(r.selectedMap) || (r.selectedMap = {});
                        for (var s = r.selectedMap, l = 0; a > l; l++) {
                            var u = t[l],
                                c = Yu(e, u);
                            s[c] = !0, this._selectedDataIndicesMap[c] = e.getRawIndex(u)
                        }
                    } else if ("single" === o || !0 === o) {
                        var p = t[a - 1];
                        c = Yu(e, p);
                        r.selectedMap = (n = {}, n[c] = !0, n), this._selectedDataIndicesMap = (i = {}, i[c] = e.getRawIndex(p), i)
                    }
                }, n.prototype._initSelectedMapFromData = function (e) {
                    if (!this.option.selectedMap) {
                        var t = [];
                        e.hasItemOption && e.each(function (n) {
                            var i = e.getRawDataItem(n);
                            i && i.selected && t.push(n)
                        }), t.length > 0 && this._innerSelect(e, t)
                    }
                }, n.registerClass = function (e) {
                    return fM.registerClass(e)
                }, n.protoInitialize = function () {
                    var e = n.prototype;
                    e.type = "series.__base__", e.seriesIndex = 0, e.ignoreStyleOnData = !1, e.hasSymbolVisual = !1, e.defaultSymbol = "circle", e.visualStyleAccessPath = "itemStyle", e.visualDrawType = "fill"
                }(), n
            }(fM);
        f(PI, cI), f(PI, NM), ar(PI, fM);
        var LI = function () {
            function e() {
                this.group = new gb, this.uid = gs("viewComponent")
            }
            return e.prototype.init = function () {}, e.prototype.render = function () {}, e.prototype.dispose = function () {}, e.prototype.updateView = function () {}, e.prototype.updateLayout = function () {}, e.prototype.updateVisual = function () {}, e.prototype.toggleBlurSeries = function () {}, e.prototype.eachRendered = function (e) {
                var t = this.group;
                t && t.traverse(e)
            }, e
        }();
        rr(LI), cr(LI);
        var NI = Ui(),
            OI = tc(),
            EI = function () {
                function e() {
                    this.group = new gb, this.uid = gs("viewChart"), this.renderTask = cu({
                        plan: rc,
                        reset: oc
                    }), this.renderTask.context = {
                        view: this
                    }
                }
                return e.prototype.init = function () {}, e.prototype.render = function () {}, e.prototype.highlight = function (e, t, n, i) {
                    var r = e.getData(i && i.dataType);
                    r && ic(r, i, "emphasis")
                }, e.prototype.downplay = function (e, t, n, i) {
                    var r = e.getData(i && i.dataType);
                    r && ic(r, i, "normal")
                }, e.prototype.remove = function () {
                    this.group.removeAll()
                }, e.prototype.dispose = function () {}, e.prototype.updateView = function (e, t, n, i) {
                    this.render(e, t, n, i)
                }, e.prototype.updateLayout = function (e, t, n, i) {
                    this.render(e, t, n, i)
                }, e.prototype.updateVisual = function (e, t, n, i) {
                    this.render(e, t, n, i)
                }, e.prototype.eachRendered = function (e) {
                    ns(this.group, e)
                }, e.markUpdateMethod = function (e, t) {
                    NI(e).updateMethod = t
                }, e.protoInitialize = (t = e.prototype, void(t.type = "chart")), e;
                var t
            }();
        rr(EI, ["dispose"]), cr(EI);
        var RI, zI = {
                incrementalPrepareRender: {
                    progress: function (e, t) {
                        t.view.incrementalRender(e, t.model, t.ecModel, t.api, t.payload)
                    }
                },
                render: {
                    forceFirstProgress: !0,
                    progress: function (e, t) {
                        t.view.render(t.model, t.ecModel, t.api, t.payload)
                    }
                }
            },
            BI = "\0__throttleOriginMethod",
            FI = "\0__throttleRate",
            HI = "\0__throttleType",
            GI = Ui(),
            VI = {
                itemStyle: pr(zC, !0),
                lineStyle: pr(OC, !0)
            },
            WI = {
                lineStyle: "stroke",
                itemStyle: "fill"
            },
            jI = {
                createOnAllSeries: !0,
                performRawSeries: !0,
                reset: function (e, t) {
                    var n = e.getData(),
                        i = e.visualStyleAccessPath || "itemStyle",
                        r = e.getModel(i),
                        o = uc(e, i),
                        a = o(r),
                        s = r.getShallow("decal");
                    s && (n.setVisual("decal", s), s.dirty = !0);
                    var l = cc(e, i),
                        u = a[l],
                        p = C(u) ? u : null,
                        h = "auto" === a.fill || "auto" === a.stroke;
                    if (!a[l] || p || h) {
                        var d = e.getColorFromPalette(e.name, null, t.getSeriesCount());
                        a[l] || (a[l] = d, n.setVisual("colorFromPalette", !0)), a.fill = "auto" === a.fill || C(a.fill) ? d : a.fill, a.stroke = "auto" === a.stroke || C(a.stroke) ? d : a.stroke
                    }
                    return n.setVisual("style", a), n.setVisual("drawType", l), !t.isSeriesFiltered(e) && p ? (n.setVisual("colorFromPalette", !1), {
                        dataEach: function (t, n) {
                            var i = e.getDataParams(n),
                                r = c({}, a);
                            r[l] = p(i), t.setItemVisual(n, "style", r)
                        }
                    }) : void 0
                }
            },
            XI = new HC,
            YI = {
                createOnAllSeries: !0,
                performRawSeries: !0,
                reset: function (e, t) {
                    if (!e.ignoreStyleOnData && !t.isSeriesFiltered(e)) {
                        var n = e.getData(),
                            i = e.visualStyleAccessPath || "itemStyle",
                            r = uc(e, i),
                            o = n.getVisual("drawType");
                        return {
                            dataEach: n.hasItemOption ? function (e, t) {
                                var n = e.getRawDataItem(t);
                                if (n && n[i]) {
                                    XI.option = n[i];
                                    var a = r(XI),
                                        s = e.ensureUniqueItemVisual(t, "style");
                                    c(s, a), XI.option.decal && (e.setItemVisual(t, "decal", XI.option.decal), XI.option.decal.dirty = !0), o in a && e.setItemVisual(t, "colorFromPalette", !1)
                                }
                            } : null
                        }
                    }
                }
            },
            UI = {
                performRawSeries: !0,
                overallReset: function (e) {
                    var t = Y();
                    e.eachSeries(function (e) {
                        var n = e.getColorBy();
                        if (!e.isColorBySeries()) {
                            var i = e.type + "-" + n,
                                r = t.get(i);
                            r || (r = {}, t.set(i, r)), GI(e).scope = r
                        }
                    }), e.eachSeries(function (t) {
                        if (!t.isColorBySeries() && !e.isSeriesFiltered(t)) {
                            var n = t.getRawData(),
                                i = {},
                                r = t.getData(),
                                o = GI(t).scope,
                                a = t.visualStyleAccessPath || "itemStyle",
                                s = cc(t, a);
                            r.each(function (e) {
                                var t = r.getRawIndex(e);
                                i[t] = e
                            }), n.each(function (e) {
                                var a = i[e],
                                    l = r.getItemVisual(a, "colorFromPalette");
                                if (l) {
                                    var u = r.ensureUniqueItemVisual(a, "style"),
                                        c = n.getName(e) || e + "",
                                        p = n.count();
                                    u[s] = t.getColorFromPalette(c, o, p)
                                }
                            })
                        }
                    })
                }
            },
            qI = Math.PI,
            ZI = function () {
                function e(e, t, n, i) {
                    this._stageTaskMap = Y(), this.ecInstance = e, this.api = t, n = this._dataProcessorHandlers = n.slice(), i = this._visualHandlers = i.slice(), this._allHandlers = n.concat(i)
                }
                return e.prototype.restoreData = function (e, t) {
                    e.restoreData(t), this._stageTaskMap.each(function (e) {
                        var t = e.overallTask;
                        t && t.dirty()
                    })
                }, e.prototype.getPerformArgs = function (e, t) {
                    if (e.__pipeline) {
                        var n = this._pipelineMap.get(e.__pipeline.id),
                            i = n.context,
                            r = !t && n.progressiveEnabled && (!i || i.progressiveRender) && e.__idxInPipeline > n.blockIndex,
                            o = r ? n.step : null,
                            a = i && i.modDataCount,
                            s = null != a ? Math.ceil(a / o) : null;
                        return {
                            step: o,
                            modBy: s,
                            modDataCount: a
                        }
                    }
                }, e.prototype.getPipeline = function (e) {
                    return this._pipelineMap.get(e)
                }, e.prototype.updateStreamModes = function (e, t) {
                    var n = this._pipelineMap.get(e.uid),
                        i = e.getData(),
                        r = i.count(),
                        o = n.progressiveEnabled && t.incrementalPrepareRender && r >= n.threshold,
                        a = e.get("large") && r >= e.get("largeThreshold"),
                        s = "mod" === e.get("progressiveChunkMode") ? r : null;
                    e.pipelineContext = n.context = {
                        progressiveRender: o,
                        modDataCount: s,
                        large: a
                    }
                }, e.prototype.restorePipelines = function (e) {
                    var t = this,
                        n = t._pipelineMap = Y();
                    e.eachSeries(function (e) {
                        var i = e.getProgressive(),
                            r = e.uid;
                        n.set(r, {
                            id: r,
                            head: null,
                            tail: null,
                            threshold: e.getProgressiveThreshold(),
                            progressiveEnabled: i && !(e.preventIncremental && e.preventIncremental()),
                            blockIndex: -1,
                            step: Math.round(i || 700),
                            count: 0
                        }), t._pipe(e, e.dataTask)
                    })
                }, e.prototype.prepareStageTasks = function () {
                    var e = this._stageTaskMap,
                        t = this.api.getModel(),
                        n = this.api;
                    m(this._allHandlers, function (i) {
                        var r = e.get(i.uid) || e.set(i.uid, {}),
                            o = "";
                        V(!(i.reset && i.overallReset), o), i.reset && this._createSeriesStageTask(i, r, t, n), i.overallReset && this._createOverallStageTask(i, r, t, n)
                    }, this)
                }, e.prototype.prepareView = function (e, t, n, i) {
                    var r = e.renderTask,
                        o = r.context;
                    o.model = t, o.ecModel = n, o.api = i, r.__block = !e.incrementalPrepareRender, this._pipe(t, r)
                }, e.prototype.performDataProcessorTasks = function (e, t) {
                    this._performStageTasks(this._dataProcessorHandlers, e, t, {
                        block: !0
                    })
                }, e.prototype.performVisualTasks = function (e, t, n) {
                    this._performStageTasks(this._visualHandlers, e, t, n)
                }, e.prototype._performStageTasks = function (e, t, n, i) {
                    function r(e, t) {
                        return e.setDirty && (!e.dirtyMap || e.dirtyMap.get(t.__pipeline.id))
                    }
                    i = i || {};
                    var o = !1,
                        a = this;
                    m(e, function (e) {
                        if (!i.visualType || i.visualType === e.visualType) {
                            var s = a._stageTaskMap.get(e.uid),
                                l = s.seriesTaskMap,
                                u = s.overallTask;
                            if (u) {
                                var c, p = u.agentStubMap;
                                p.each(function (e) {
                                    r(i, e) && (e.dirty(), c = !0)
                                }), c && u.dirty(), a.updatePayload(u, n);
                                var h = a.getPerformArgs(u, i.block);
                                p.each(function (e) {
                                    e.perform(h)
                                }), u.perform(h) && (o = !0)
                            } else l && l.each(function (s) {
                                r(i, s) && s.dirty();
                                var l = a.getPerformArgs(s, i.block);
                                l.skip = !e.performRawSeries && t.isSeriesFiltered(s.context.model), a.updatePayload(s, n), s.perform(l) && (o = !0)
                            })
                        }
                    }), this.unfinished = o || this.unfinished
                }, e.prototype.performSeriesTasks = function (e) {
                    var t;
                    e.eachSeries(function (e) {
                        t = e.dataTask.perform() || t
                    }), this.unfinished = t || this.unfinished
                }, e.prototype.plan = function () {
                    this._pipelineMap.each(function (e) {
                        var t = e.tail;
                        do {
                            if (t.__block) {
                                e.blockIndex = t.__idxInPipeline;
                                break
                            }
                            t = t.getUpstream()
                        } while (t)
                    })
                }, e.prototype.updatePayload = function (e, t) {
                    "remain" !== t && (e.context.payload = t)
                }, e.prototype._createSeriesStageTask = function (e, t, n, i) {
                    function r(t) {
                        var r = t.uid,
                            l = s.set(r, a && a.get(r) || cu({
                                plan: mc,
                                reset: yc,
                                count: xc
                            }));
                        l.context = {
                            model: t,
                            ecModel: n,
                            api: i,
                            useClearVisual: e.isVisual && !e.isLayout,
                            plan: e.plan,
                            reset: e.reset,
                            scheduler: o
                        }, o._pipe(t, l)
                    }
                    var o = this,
                        a = t.seriesTaskMap,
                        s = t.seriesTaskMap = Y(),
                        l = e.seriesType,
                        u = e.getTargetSeries;
                    e.createOnAllSeries ? n.eachRawSeries(r) : l ? n.eachRawSeriesByType(l, r) : u && u(n, i).each(r)
                }, e.prototype._createOverallStageTask = function (e, t, n, i) {
                    function r(e) {
                        var t = e.uid,
                            n = l.set(t, s && s.get(t) || (h = !0, cu({
                                reset: dc,
                                onDirty: gc
                            })));
                        n.context = {
                            model: e,
                            overallProgress: p
                        }, n.agent = a, n.__block = p, o._pipe(e, n)
                    }
                    var o = this,
                        a = t.overallTask = t.overallTask || cu({
                            reset: hc
                        });
                    a.context = {
                        ecModel: n,
                        api: i,
                        overallReset: e.overallReset,
                        scheduler: o
                    };
                    var s = a.agentStubMap,
                        l = a.agentStubMap = Y(),
                        u = e.seriesType,
                        c = e.getTargetSeries,
                        p = !0,
                        h = !1,
                        d = "";
                    V(!e.createOnAllSeries, d), u ? n.eachRawSeriesByType(u, r) : c ? c(n, i).each(r) : (p = !1, m(n.getSeries(), r)), h && a.dirty()
                }, e.prototype._pipe = function (e, t) {
                    var n = e.uid,
                        i = this._pipelineMap.get(n);
                    !i.head && (i.head = t), i.tail && i.tail.pipe(t), i.tail = t, t.__idxInPipeline = i.count++, t.__pipeline = i
                }, e.wrapStageHandler = function (e, t) {
                    return C(e) && (e = {
                        overallReset: e,
                        seriesType: _c(e)
                    }), e.uid = gs("stageHandler"), t && (e.visualType = t), e
                }, e
            }(),
            $I = vc(0),
            KI = {},
            JI = {};
        wc(KI, RM), wc(JI, jM), KI.eachSeriesByType = KI.eachRawSeriesByType = function (e) {
            RI = e
        }, KI.eachComponent = function (e) {
            "series" === e.mainType && e.subType && (RI = e.subType)
        };
        var QI = ["#37A2DA", "#32C5E9", "#67E0E3", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#E062AE", "#E690D1", "#e7bcf3", "#9d96f5", "#8378EA", "#96BFFF"],
            ek = {
                color: QI,
                colorLayer: [
                    ["#37A2DA", "#ffd85c", "#fd7b5f"],
                    ["#37A2DA", "#67E0E3", "#FFDB5C", "#ff9f7f", "#E062AE", "#9d96f5"],
                    ["#37A2DA", "#32C5E9", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#e7bcf3", "#8378EA", "#96BFFF"], QI
                ]
            },
            tk = "#B9B8CE",
            nk = "#100C2A",
            ik = function () {
                return {
                    axisLine: {
                        lineStyle: {
                            color: tk
                        }
                    },
                    splitLine: {
                        lineStyle: {
                            color: "#484753"
                        }
                    },
                    splitArea: {
                        areaStyle: {
                            color: ["rgba(255,255,255,0.02)", "rgba(255,255,255,0.05)"]
                        }
                    },
                    minorSplitLine: {
                        lineStyle: {
                            color: "#20203B"
                        }
                    }
                }
            },
            rk = ["#4992ff", "#7cffb2", "#fddd60", "#ff6e76", "#58d9f9", "#05c091", "#ff8a45", "#8d48e3", "#dd79ff"],
            ok = {
                darkMode: !0,
                color: rk,
                backgroundColor: nk,
                axisPointer: {
                    lineStyle: {
                        color: "#817f91"
                    },
                    crossStyle: {
                        color: "#817f91"
                    },
                    label: {
                        color: "#fff"
                    }
                },
                legend: {
                    textStyle: {
                        color: tk
                    }
                },
                textStyle: {
                    color: tk
                },
                title: {
                    textStyle: {
                        color: "#EEF1FA"
                    },
                    subtextStyle: {
                        color: "#B9B8CE"
                    }
                },
                toolbox: {
                    iconStyle: {
                        borderColor: tk
                    }
                },
                dataZoom: {
                    borderColor: "#71708A",
                    textStyle: {
                        color: tk
                    },
                    brushStyle: {
                        color: "rgba(135,163,206,0.3)"
                    },
                    handleStyle: {
                        color: "#353450",
                        borderColor: "#C5CBE3"
                    },
                    moveHandleStyle: {
                        color: "#B0B6C3",
                        opacity: .3
                    },
                    fillerColor: "rgba(135,163,206,0.2)",
                    emphasis: {
                        handleStyle: {
                            borderColor: "#91B7F2",
                            color: "#4D587D"
                        },
                        moveHandleStyle: {
                            color: "#636D9A",
                            opacity: .7
                        }
                    },
                    dataBackground: {
                        lineStyle: {
                            color: "#71708A",
                            width: 1
                        },
                        areaStyle: {
                            color: "#71708A"
                        }
                    },
                    selectedDataBackground: {
                        lineStyle: {
                            color: "#87A3CE"
                        },
                        areaStyle: {
                            color: "#87A3CE"
                        }
                    }
                },
                visualMap: {
                    textStyle: {
                        color: tk
                    }
                },
                timeline: {
                    lineStyle: {
                        color: tk
                    },
                    label: {
                        color: tk
                    },
                    controlStyle: {
                        color: tk,
                        borderColor: tk
                    }
                },
                calendar: {
                    itemStyle: {
                        color: nk
                    },
                    dayLabel: {
                        color: tk
                    },
                    monthLabel: {
                        color: tk
                    },
                    yearLabel: {
                        color: tk
                    }
                },
                timeAxis: ik(),
                logAxis: ik(),
                valueAxis: ik(),
                categoryAxis: ik(),
                line: {
                    symbol: "circle"
                },
                graph: {
                    color: rk
                },
                gauge: {
                    title: {
                        color: tk
                    },
                    axisLine: {
                        lineStyle: {
                            color: [
                                [1, "rgba(207,212,219,0.2)"]
                            ]
                        }
                    },
                    axisLabel: {
                        color: tk
                    },
                    detail: {
                        color: "#EEF1FA"
                    }
                },
                candlestick: {
                    itemStyle: {
                        color: "#f64e56",
                        color0: "#54ea92",
                        borderColor: "#f64e56",
                        borderColor0: "#54ea92"
                    }
                }
            };
        ok.categoryAxis.splitLine.show = !1;
        var ak = function () {
                function e() {}
                return e.prototype.normalizeQuery = function (e) {
                    var t = {},
                        n = {},
                        i = {};
                    if (M(e)) {
                        var r = tr(e);
                        t.mainType = r.main || null, t.subType = r.sub || null
                    } else {
                        var o = ["Index", "Name", "Id"],
                            a = {
                                name: 1,
                                dataIndex: 1,
                                dataType: 1
                            };
                        m(e, function (e, r) {
                            for (var s = !1, l = 0; l < o.length; l++) {
                                var u = o[l],
                                    c = r.lastIndexOf(u);
                                if (c > 0 && c === r.length - u.length) {
                                    var p = r.slice(0, c);
                                    "data" !== p && (t.mainType = p, t[u.toLowerCase()] = e, s = !0)
                                }
                            }
                            a.hasOwnProperty(r) && (n[r] = e, s = !0), s || (i[r] = e)
                        })
                    }
                    return {
                        cptQuery: t,
                        dataQuery: n,
                        otherQuery: i
                    }
                }, e.prototype.filter = function (e, t) {
                    function n(e, t, n, i) {
                        return null == e[n] || t[i || n] === e[n]
                    }
                    var i = this.eventInfo;
                    if (!i) return !0;
                    var r = i.targetEl,
                        o = i.packedEvent,
                        a = i.model,
                        s = i.view;
                    if (!a || !s) return !0;
                    var l = t.cptQuery,
                        u = t.dataQuery;
                    return n(l, a, "mainType") && n(l, a, "subType") && n(l, a, "index", "componentIndex") && n(l, a, "name") && n(l, a, "id") && n(u, o, "name") && n(u, o, "dataIndex") && n(u, o, "dataType") && (!s.filterForExposedEvent || s.filterForExposedEvent(e, t.otherQuery, r, o))
                }, e.prototype.afterTrigger = function () {
                    this.eventInfo = null
                }, e
            }(),
            sk = ["symbol", "symbolSize", "symbolRotate", "symbolOffset"],
            lk = sk.concat(["symbolKeepAspect"]),
            uk = {
                createOnAllSeries: !0,
                performRawSeries: !0,
                reset: function (e, t) {
                    function n(t, n) {
                        for (var i = e.getRawValue(n), r = e.getDataParams(n), a = 0; a < p.length; a++) {
                            var s = p[a];
                            t.setItemVisual(n, s, o[s](i, r))
                        }
                    }
                    var i = e.getData();
                    if (e.legendIcon && i.setVisual("legendIcon", e.legendIcon), e.hasSymbolVisual) {
                        for (var r = {}, o = {}, a = !1, s = 0; s < sk.length; s++) {
                            var l = sk[s],
                                u = e.get(l);
                            C(u) ? (a = !0, o[l] = u) : r[l] = u
                        }
                        if (r.symbol = r.symbol || e.defaultSymbol, i.setVisual(c({
                                legendIcon: e.legendIcon || r.symbol,
                                symbolKeepAspect: e.get("symbolKeepAspect")
                            }, r)), !t.isSeriesFiltered(e)) {
                            var p = w(o);
                            return {
                                dataEach: a ? n : null
                            }
                        }
                    }
                }
            },
            ck = {
                createOnAllSeries: !0,
                performRawSeries: !0,
                reset: function (e, t) {
                    function n(e, t) {
                        for (var n = e.getItemModel(t), i = 0; i < lk.length; i++) {
                            var r = lk[i],
                                o = n.getShallow(r, !0);
                            null != o && e.setItemVisual(t, r, o)
                        }
                    }
                    if (e.hasSymbolVisual && !t.isSeriesFiltered(e)) {
                        var i = e.getData();
                        return {
                            dataEach: i.hasItemOption ? n : null
                        }
                    }
                }
            },
            pk = Math.round(9 * Math.random()),
            hk = "function" == typeof Object.defineProperty,
            dk = function () {
                function e() {
                    this._id = "__ec_inner_" + pk++
                }
                return e.prototype.get = function (e) {
                    return this._guard(e)[this._id]
                }, e.prototype.set = function (e, t) {
                    var n = this._guard(e);
                    return hk ? Object.defineProperty(n, this._id, {
                        value: t,
                        enumerable: !1,
                        configurable: !0
                    }) : n[this._id] = t, this
                }, e.prototype.delete = function (e) {
                    return !!this.has(e) && (delete this._guard(e)[this._id], !0)
                }, e.prototype.has = function (e) {
                    return !!this._guard(e)[this._id]
                }, e.prototype._guard = function (e) {
                    if (e !== Object(e)) throw TypeError("Value of WeakMap is not a non-null object.");
                    return e
                }, e
            }(),
            fk = OS.extend({
                type: "triangle",
                shape: {
                    cx: 0,
                    cy: 0,
                    width: 0,
                    height: 0
                },
                buildPath: function (e, t) {
                    var n = t.cx,
                        i = t.cy,
                        r = t.width / 2,
                        o = t.height / 2;
                    e.moveTo(n, i - o), e.lineTo(n + r, i + o), e.lineTo(n - r, i + o), e.closePath()
                }
            }),
            gk = OS.extend({
                type: "diamond",
                shape: {
                    cx: 0,
                    cy: 0,
                    width: 0,
                    height: 0
                },
                buildPath: function (e, t) {
                    var n = t.cx,
                        i = t.cy,
                        r = t.width / 2,
                        o = t.height / 2;
                    e.moveTo(n, i - o), e.lineTo(n + r, i), e.lineTo(n, i + o), e.lineTo(n - r, i), e.closePath()
                }
            }),
            mk = OS.extend({
                type: "pin",
                shape: {
                    x: 0,
                    y: 0,
                    width: 0,
                    height: 0
                },
                buildPath: function (e, t) {
                    var n = t.x,
                        i = t.y,
                        r = t.width / 5 * 3,
                        o = Math.max(r, t.height),
                        a = r / 2,
                        s = a * a / (o - a),
                        l = i - o + a + s,
                        u = Math.asin(s / a),
                        c = Math.cos(u) * a,
                        p = Math.sin(u),
                        h = Math.cos(u),
                        d = .6 * a,
                        f = .7 * a;
                    e.moveTo(n - c, l + s), e.arc(n, l, a, Math.PI - u, 2 * Math.PI + u), e.bezierCurveTo(n + c - p * d, l + s + h * d, n, i - f, n, i), e.bezierCurveTo(n, i - f, n - c + p * d, l + s + h * d, n - c, l + s), e.closePath()
                }
            }),
            yk = OS.extend({
                type: "arrow",
                shape: {
                    x: 0,
                    y: 0,
                    width: 0,
                    height: 0
                },
                buildPath: function (e, t) {
                    var n = t.height,
                        i = t.width,
                        r = t.x,
                        o = t.y,
                        a = i / 3 * 2;
                    e.moveTo(r, o), e.lineTo(r + a, o + n), e.lineTo(r, o + n / 4 * 3), e.lineTo(r - a, o + n), e.lineTo(r, o), e.closePath()
                }
            }),
            vk = {
                line: eC,
                rect: WS,
                roundRect: WS,
                square: WS,
                circle: AT,
                diamond: gk,
                pin: mk,
                arrow: yk,
                triangle: fk
            },
            xk = {
                line: function (e, t, n, i, r) {
                    r.x1 = e, r.y1 = t + i / 2, r.x2 = e + n, r.y2 = t + i / 2
                },
                rect: function (e, t, n, i, r) {
                    r.x = e, r.y = t, r.width = n, r.height = i
                },
                roundRect: function (e, t, n, i, r) {
                    r.x = e, r.y = t, r.width = n, r.height = i, r.r = Math.min(n, i) / 4
                },
                square: function (e, t, n, i, r) {
                    var o = Math.min(n, i);
                    r.x = e, r.y = t, r.width = o, r.height = o
                },
                circle: function (e, t, n, i, r) {
                    r.cx = e + n / 2, r.cy = t + i / 2, r.r = Math.min(n, i) / 2
                },
                diamond: function (e, t, n, i, r) {
                    r.cx = e + n / 2, r.cy = t + i / 2, r.width = n, r.height = i
                },
                pin: function (e, t, n, i, r) {
                    r.x = e + n / 2, r.y = t + i / 2, r.width = n, r.height = i
                },
                arrow: function (e, t, n, i, r) {
                    r.x = e + n / 2, r.y = t + i / 2, r.width = n, r.height = i
                },
                triangle: function (e, t, n, i, r) {
                    r.cx = e + n / 2, r.cy = t + i / 2, r.width = n, r.height = i
                }
            },
            _k = {};
        m(vk, function (e, t) {
            _k[t] = new e
        });
        var wk = OS.extend({
                type: "symbol",
                shape: {
                    symbolType: "",
                    x: 0,
                    y: 0,
                    width: 0,
                    height: 0
                },
                calculateTextPosition: function (e, t, n) {
                    var i = Gn(e, t, n),
                        r = this.shape;
                    return r && "pin" === r.symbolType && "inside" === t.position && (i.y = n.y + .4 * n.height), i
                },
                buildPath: function (e, t, n) {
                    var i = t.symbolType;
                    if ("none" !== i) {
                        var r = _k[i];
                        r || (i = "rect", r = _k[i]), xk[i](t.x, t.y, t.width, t.height, r.shape), r.buildPath(e, r.shape, n)
                    }
                }
            }),
            bk = new SS(!0),
            Sk = ["shadowBlur", "shadowOffsetX", "shadowOffsetY"],
            Tk = [
                ["lineCap", "butt"],
                ["lineJoin", "miter"],
                ["miterLimit", 10]
            ],
            Ck = 1,
            Mk = 2,
            Ik = 3,
            kk = 4,
            Dk = new dk,
            Ak = new gw(100),
            Pk = ["symbol", "symbolSize", "symbolKeepAspect", "color", "backgroundColor", "dashArrayX", "dashArrayY", "maxTileWidth", "maxTileHeight"],
            Lk = new y_,
            Nk = {},
            Ok = "undefined" != typeof window,
            Ek = "5.4.0",
            Rk = {
                zrender: "5.4.0"
            },
            zk = 1,
            Bk = 800,
            Fk = 900,
            Hk = 1e3,
            Gk = 2e3,
            Vk = 5e3,
            Wk = 1e3,
            jk = 1100,
            Xk = 2e3,
            Yk = 3e3,
            Uk = 4e3,
            qk = 4500,
            Zk = 4600,
            $k = 5e3,
            Kk = 6e3,
            Jk = 7e3,
            Qk = {
                PROCESSOR: {
                    FILTER: Hk,
                    SERIES_FILTER: Bk,
                    STATISTIC: Vk
                },
                VISUAL: {
                    LAYOUT: Wk,
                    PROGRESSIVE_LAYOUT: jk,
                    GLOBAL: Xk,
                    CHART: Yk,
                    POST_CHART_LAYOUT: Zk,
                    COMPONENT: Uk,
                    BRUSH: $k,
                    CHART_ITEM: qk,
                    ARIA: Kk,
                    DECAL: Jk
                }
            },
            eD = "__flagInMainProcess",
            tD = "__pendingUpdate",
            nD = "__needsUpdateStatus",
            iD = /^[a-zA-Z0-9_]+$/,
            rD = "__connectUpdateStatus",
            oD = 0,
            aD = 1,
            sD = 2,
            lD = function (e) {
                function n() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return t(n, e), n
            }(y_),
            uD = lD.prototype;
        uD.on = vp("on"), uD.off = vp("off");
        var cD, pD, hD, dD, fD, gD, mD, yD, vD, xD, _D, wD, bD, SD, TD, CD, MD, ID, kD = function (e) {
                function n(t, n, i) {
                    function r(e, t) {
                        return e.__prio - t.__prio
                    }
                    var o = e.call(this, new ak) || this;
                    o._chartsViews = [], o._chartsMap = {}, o._componentsViews = [], o._componentsMap = {}, o._pendingActions = [], i = i || {}, M(n) && (n = RD[n]), o._dom = t;
                    var a = "canvas",
                        l = "auto",
                        u = !1,
                        c = o._zr = Kn(t, {
                            renderer: i.renderer || a,
                            devicePixelRatio: i.devicePixelRatio,
                            width: i.width,
                            height: i.height,
                            ssr: i.ssr,
                            useDirtyRect: B(i.useDirtyRect, u),
                            useCoarsePointer: B(i.useCoarsePointer, l),
                            pointerSize: i.pointerSize
                        });
                    o._ssr = i.ssr, o._throttledZrFlush = ac(o_(c.flush, c), 17), n = s(n), n && Xl(n, !0), o._theme = n, o._locale = _s(i.locale || ZC), o._coordSysMgr = new YM;
                    var p = o._api = TD(o);
                    return rt(ED, r), rt(ND, r), o._scheduler = new ZI(o, p, ND, ED), o._messageCenter = new lD, o._initEvents(), o.resize = o_(o.resize, o), c.animation.on("frame", o._onframe, o), xD(c, o), _D(c, o), j(o), o
                }
                return t(n, e), n.prototype._onframe = function () {
                    if (!this._disposed) {
                        ID(this);
                        var e = this._scheduler;
                        if (this[tD]) {
                            var t = this[tD].silent;
                            this[eD] = !0;
                            try {
                                cD(this), dD.update.call(this, null, this[tD].updateParams)
                            } catch (e) {
                                throw this[eD] = !1, this[tD] = null, e
                            }
                            this._zr.flush(), this[eD] = !1, this[tD] = null, yD.call(this, t), vD.call(this, t)
                        } else if (e.unfinished) {
                            var n = zk,
                                i = this._model,
                                r = this._api;
                            e.unfinished = !1;
                            do {
                                var o = +new Date;
                                e.performSeriesTasks(i), e.performDataProcessorTasks(i), gD(this, i), e.performVisualTasks(i), SD(this, this._model, r, "remain", {}), n -= +new Date - o
                            } while (n > 0 && e.unfinished);
                            e.unfinished || this._zr.flush()
                        }
                    }
                }, n.prototype.getDom = function () {
                    return this._dom
                }, n.prototype.getId = function () {
                    return this.id
                }, n.prototype.getZr = function () {
                    return this._zr
                }, n.prototype.isSSR = function () {
                    return this._ssr
                }, n.prototype.setOption = function (e, t, n) {
                    if (!this[eD] && !this._disposed) {
                        var i, r, o;
                        if (D(t) && (n = t.lazyUpdate, i = t.silent, r = t.replaceMerge, o = t.transition, t = t.notMerge), this[eD] = !0, !this._model || t) {
                            var a = new qM(this._api),
                                s = this._theme,
                                l = this._model = new RM;
                            l.scheduler = this._scheduler, l.ssr = this._ssr, l.init(null, null, null, s, this._locale, a)
                        }
                        this._model.setOption(e, {
                            replaceMerge: r
                        }, OD);
                        var u = {
                            seriesTransition: o,
                            optionChanged: !0
                        };
                        if (n) this[tD] = {
                            silent: i,
                            updateParams: u
                        }, this[eD] = !1, this.getZr().wakeUp();
                        else {
                            try {
                                cD(this), dD.update.call(this, null, u)
                            } catch (e) {
                                throw this[tD] = null, this[eD] = !1, e
                            }
                            this._ssr || this._zr.flush(), this[tD] = null, this[eD] = !1, yD.call(this, i), vD.call(this, i)
                        }
                    }
                }, n.prototype.setTheme = function () {}, n.prototype.getModel = function () {
                    return this._model
                }, n.prototype.getOption = function () {
                    return this._model && this._model.getOption()
                }, n.prototype.getWidth = function () {
                    return this._zr.getWidth()
                }, n.prototype.getHeight = function () {
                    return this._zr.getHeight()
                }, n.prototype.getDevicePixelRatio = function () {
                    return this._zr.painter.dpr || Ok && window.devicePixelRatio || 1
                }, n.prototype.getRenderedCanvas = function (e) {
                    return this.renderToCanvas(e)
                }, n.prototype.renderToCanvas = function (e) {
                    e = e || {};
                    var t = this._zr.painter;
                    return t.getRenderedCanvas({
                        backgroundColor: e.backgroundColor || this._model.get("backgroundColor"),
                        pixelRatio: e.pixelRatio || this.getDevicePixelRatio()
                    })
                }, n.prototype.renderToSVGString = function (e) {
                    e = e || {};
                    var t = this._zr.painter;
                    return t.renderToString({
                        useViewBox: e.useViewBox
                    })
                }, n.prototype.getSvgDataURL = function () {
                    if (zx.svgSupported) {
                        var e = this._zr,
                            t = e.storage.getDisplayList();
                        return m(t, function (e) {
                            e.stopAnimation(null, !0)
                        }), e.painter.toDataURL()
                    }
                }, n.prototype.getDataURL = function (e) {
                    if (!this._disposed) {
                        e = e || {};
                        var t = e.excludeComponents,
                            n = this._model,
                            i = [],
                            r = this;
                        m(t, function (e) {
                            n.eachComponent({
                                mainType: e
                            }, function (e) {
                                var t = r._componentsMap[e.__viewId];
                                t.group.ignore || (i.push(t), t.group.ignore = !0)
                            })
                        });
                        var o = "svg" === this._zr.painter.getType() ? this.getSvgDataURL() : this.renderToCanvas(e).toDataURL("image/" + (e && e.type || "png"));
                        return m(i, function (e) {
                            e.group.ignore = !1
                        }), o
                    }
                }, n.prototype.getConnectedDataURL = function (e) {
                    if (!this._disposed) {
                        var t = "svg" === e.type,
                            n = this.group,
                            i = Math.min,
                            r = Math.max,
                            o = 1 / 0;
                        if (FD[n]) {
                            var a = o,
                                l = o,
                                u = -o,
                                c = -o,
                                p = [],
                                h = e && e.pixelRatio || this.getDevicePixelRatio();
                            m(BD, function (o) {
                                if (o.group === n) {
                                    var h = t ? o.getZr().painter.getSvgDom().innerHTML : o.renderToCanvas(s(e)),
                                        d = o.getDom().getBoundingClientRect();
                                    a = i(d.left, a), l = i(d.top, l), u = r(d.right, u), c = r(d.bottom, c), p.push({
                                        dom: h,
                                        left: d.left,
                                        top: d.top
                                    })
                                }
                            }), a *= h, l *= h, u *= h, c *= h;
                            var d = u - a,
                                f = c - l,
                                g = Xx.createCanvas(),
                                y = Kn(g, {
                                    renderer: t ? "svg" : "canvas"
                                });
                            if (y.resize({
                                    width: d,
                                    height: f
                                }), t) {
                                var v = "";
                                return m(p, function (e) {
                                    var t = e.left - a,
                                        n = e.top - l;
                                    v += '<g transform="translate(' + t + "," + n + ')">' + e.dom + "</g>"
                                }), y.painter.getSvgRoot().innerHTML = v, e.connectedBackgroundColor && y.painter.setBackgroundColor(e.connectedBackgroundColor), y.refreshImmediately(), y.painter.toDataURL()
                            }
                            return e.connectedBackgroundColor && y.add(new WS({
                                shape: {
                                    x: 0,
                                    y: 0,
                                    width: d,
                                    height: f
                                },
                                style: {
                                    fill: e.connectedBackgroundColor
                                }
                            })), m(p, function (e) {
                                var t = new FS({
                                    style: {
                                        x: e.left * h - a,
                                        y: e.top * h - l,
                                        image: e.dom
                                    }
                                });
                                y.add(t)
                            }), y.refreshImmediately(), g.toDataURL("image/" + (e && e.type || "png"))
                        }
                        return this.getDataURL(e)
                    }
                }, n.prototype.convertToPixel = function (e, t) {
                    return fD(this, "convertToPixel", e, t)
                }, n.prototype.convertFromPixel = function (e, t) {
                    return fD(this, "convertFromPixel", e, t)
                }, n.prototype.containPixel = function (e, t) {
                    if (!this._disposed) {
                        var n, i = this._model,
                            r = qi(i, e);
                        return m(r, function (e, i) {
                            i.indexOf("Models") >= 0 && m(e, function (e) {
                                var r = e.coordinateSystem;
                                if (r && r.containPoint) n = n || !!r.containPoint(t);
                                else if ("seriesModels" === i) {
                                    var o = this._chartsMap[e.__viewId];
                                    o && o.containPoint && (n = n || o.containPoint(t, e))
                                }
                            }, this)
                        }, this), !!n
                    }
                }, n.prototype.getVisual = function (e, t) {
                    var n = this._model,
                        i = qi(n, e, {
                            defaultMainType: "series"
                        }),
                        r = i.seriesModel,
                        o = r.getData(),
                        a = i.hasOwnProperty("dataIndexInside") ? i.dataIndexInside : i.hasOwnProperty("dataIndex") ? o.indexOfRawIndex(i.dataIndex) : null;
                    return null != a ? bc(o, a, t) : Sc(o, t)
                }, n.prototype.getViewOfComponentModel = function (e) {
                    return this._componentsMap[e.__viewId]
                }, n.prototype.getViewOfSeriesModel = function (e) {
                    return this._chartsMap[e.__viewId]
                }, n.prototype._initEvents = function () {
                    var e = this;
                    m(AD, function (t) {
                        var n = function (n) {
                            var i, r = e.getModel(),
                                o = n.target,
                                a = "globalout" === t;
                            if (a ? i = {} : o && Ic(o, function (e) {
                                    var t = KS(e);
                                    if (t && null != t.dataIndex) {
                                        var n = t.dataModel || r.getSeriesByIndex(t.seriesIndex);
                                        return i = n && n.getDataParams(t.dataIndex, t.dataType) || {}, !0
                                    }
                                    return t.eventData ? (i = c({}, t.eventData), !0) : void 0
                                }, !0), i) {
                                var s = i.componentType,
                                    l = i.componentIndex;
                                ("markLine" === s || "markPoint" === s || "markArea" === s) && (s = "series", l = i.seriesIndex);
                                var u = s && null != l && r.getComponent(s, l),
                                    p = u && e["series" === u.mainType ? "_chartsMap" : "_componentsMap"][u.__viewId];
                                i.event = n, i.type = t, e._$eventProcessor.eventInfo = {
                                    targetEl: o,
                                    packedEvent: i,
                                    model: u,
                                    view: p
                                }, e.trigger(t, i)
                            }
                        };
                        n.zrEventfulCallAtLast = !0, e._zr.on(t, n, e)
                    }), m(LD, function (t, n) {
                        e._messageCenter.on(n, function (e) {
                            this.trigger(n, e)
                        }, e)
                    }), m(["selectchanged"], function (t) {
                        e._messageCenter.on(t, function (e) {
                            this.trigger(t, e)
                        }, e)
                    }), Mc(this._messageCenter, this, this._api)
                }, n.prototype.isDisposed = function () {
                    return this._disposed
                }, n.prototype.clear = function () {
                    this._disposed || this.setOption({
                        series: []
                    }, !0)
                }, n.prototype.dispose = function () {
                    if (!this._disposed) {
                        this._disposed = !0;
                        var e = this.getDom();
                        e && Ki(this.getDom(), VD, "");
                        var t = this,
                            n = t._api,
                            i = t._model;
                        m(t._componentsViews, function (e) {
                            e.dispose(i, n)
                        }), m(t._chartsViews, function (e) {
                            e.dispose(i, n)
                        }), t._zr.dispose(), t._dom = t._model = t._chartsMap = t._componentsMap = t._chartsViews = t._componentsViews = t._scheduler = t._api = t._zr = t._throttledZrFlush = t._theme = t._coordSysMgr = t._messageCenter = null, delete BD[t.id]
                    }
                }, n.prototype.resize = function (e) {
                    if (!this[eD] && !this._disposed) {
                        this._zr.resize(e);
                        var t = this._model;
                        if (this._loadingFX && this._loadingFX.resize(), t) {
                            var n = t.resetOption("media"),
                                i = e && e.silent;
                            this[tD] && (null == i && (i = this[tD].silent), n = !0, this[tD] = null), this[eD] = !0;
                            try {
                                n && cD(this), dD.update.call(this, {
                                    type: "resize",
                                    animation: c({
                                        duration: 0
                                    }, e && e.animation)
                                })
                            } catch (e) {
                                throw this[eD] = !1, e
                            }
                            this[eD] = !1, yD.call(this, i), vD.call(this, i)
                        }
                    }
                }, n.prototype.showLoading = function (e, t) {
                    if (!this._disposed && (D(e) && (t = e, e = ""), e = e || "default", this.hideLoading(), zD[e])) {
                        var n = zD[e](this._api, t),
                            i = this._zr;
                        this._loadingFX = n, i.add(n)
                    }
                }, n.prototype.hideLoading = function () {
                    this._disposed || (this._loadingFX && this._zr.remove(this._loadingFX), this._loadingFX = null)
                }, n.prototype.makeActionFromEvent = function (e) {
                    var t = c({}, e);
                    return t.type = LD[e.type], t
                }, n.prototype.dispatchAction = function (e, t) {
                    if (!this._disposed && (D(t) || (t = {
                            silent: !!t
                        }), PD[e.type] && this._model)) {
                        if (this[eD]) return void this._pendingActions.push(e);
                        var n = t.silent;
                        mD.call(this, e, n);
                        var i = t.flush;
                        i ? this._zr.flush() : !1 !== i && zx.browser.weChat && this._throttledZrFlush(), yD.call(this, n), vD.call(this, n)
                    }
                }, n.prototype.updateLabelLayout = function () {
                    Lk.trigger("series:layoutlabels", this._model, this._api, {
                        updatedSeries: []
                    })
                }, n.prototype.appendData = function (e) {
                    if (!this._disposed) {
                        var t = e.seriesIndex,
                            n = this.getModel(),
                            i = n.getSeriesByIndex(t);
                        i.appendData(e), this._scheduler.unfinished = !0, this.getZr().wakeUp()
                    }
                }, n.internalField = function () {
                    function e(e) {
                        e.clearColorPalette(), e.eachSeries(function (e) {
                            e.clearColorPalette()
                        })
                    }

                    function n(e) {
                        var t = [],
                            n = [],
                            i = !1;
                        if (e.eachComponent(function (e, r) {
                                var o = r.get("zlevel") || 0,
                                    a = r.get("z") || 0,
                                    s = r.getZLevelKey();
                                i = i || !!s, ("series" === e ? n : t).push({
                                    zlevel: o,
                                    z: a,
                                    idx: r.componentIndex,
                                    type: e,
                                    key: s
                                })
                            }), i) {
                            var r, o, a = t.concat(n);
                            rt(a, function (e, t) {
                                return e.zlevel === t.zlevel ? e.z - t.z : e.zlevel - t.zlevel
                            }), m(a, function (t) {
                                var n = e.getComponent(t.type, t.idx),
                                    i = t.zlevel,
                                    a = t.key;
                                null != r && (i = Math.max(r, i)), a ? (i === r && a !== o && i++, o = a) : o && (i === r && i++, o = ""), r = i, n.setZLevel(i)
                            })
                        }
                    }

                    function i(e) {
                        for (var t = [], n = e.currentStates, i = 0; i < n.length; i++) {
                            var r = n[i];
                            "emphasis" !== r && "blur" !== r && "select" !== r && t.push(r)
                        }
                        e.selected && e.states.select && t.push("select"), e.hoverState === oT && e.states.emphasis ? t.push("emphasis") : e.hoverState === rT && e.states.blur && t.push("blur"), e.useStates(t)
                    }

                    function r(e, t) {
                        var n = e._zr,
                            i = n.storage,
                            r = 0;
                        i.traverse(function (e) {
                            e.isGroup || r++
                        }), r > t.get("hoverLayerThreshold") && !zx.node && !zx.worker && t.eachSeries(function (t) {
                            if (!t.preventUsingHoverLayer) {
                                var n = e._chartsMap[t.__viewId];
                                n.__alive && n.eachRendered(function (e) {
                                    e.states.emphasis && (e.states.emphasis.hoverLayer = !0)
                                })
                            }
                        })
                    }

                    function o(e, t) {
                        var n = e.get("blendMode") || null;
                        t.eachRendered(function (e) {
                            e.isGroup || (e.style.blend = n)
                        })
                    }

                    function a(e, t) {
                        if (!e.preventAutoZ) {
                            var n = e.get("z") || 0,
                                i = e.get("zlevel") || 0;
                            t.eachRendered(function (e) {
                                return s(e, n, i, -1 / 0), !0
                            })
                        }
                    }

                    function s(e, t, n, i) {
                        var r = e.getTextContent(),
                            o = e.getTextGuideLine(),
                            a = e.isGroup;
                        if (a)
                            for (var l = e.childrenRef(), u = 0; u < l.length; u++) i = Math.max(s(l[u], t, n, i), i);
                        else e.z = t, e.zlevel = n, i = Math.max(e.z2, i);
                        if (r && (r.z = t, r.zlevel = n, isFinite(i) && (r.z2 = i + 2)), o) {
                            var c = e.textGuideLineConfig;
                            o.z = t, o.zlevel = n, isFinite(i) && (o.z2 = i + (c && c.showAbove ? 1 : -1))
                        }
                        return i
                    }

                    function l(e, t) {
                        t.eachRendered(function (e) {
                            if (!Ma(e)) {
                                var t = e.getTextContent(),
                                    n = e.getTextGuideLine();
                                e.stateTransition && (e.stateTransition = null), t && t.stateTransition && (t.stateTransition = null), n && n.stateTransition && (n.stateTransition = null), e.hasState() ? (e.prevStates = e.currentStates, e.clearStates()) : e.prevStates && (e.prevStates = null)
                            }
                        })
                    }

                    function u(e, t) {
                        var n = e.getModel("stateAnimation"),
                            r = e.isAnimationEnabled(),
                            o = n.get("duration"),
                            a = o > 0 ? {
                                duration: o,
                                delay: n.get("delay"),
                                easing: n.get("easing")
                            } : null;
                        t.eachRendered(function (e) {
                            if (e.states && e.states.emphasis) {
                                if (Ma(e)) return;
                                if (e instanceof OS && ia(e), e.__dirty) {
                                    var t = e.prevStates;
                                    t && e.useStates(t)
                                }
                                if (r) {
                                    e.stateTransition = a;
                                    var n = e.getTextContent(),
                                        o = e.getTextGuideLine();
                                    n && (n.stateTransition = a), o && (o.stateTransition = a)
                                }
                                e.__dirty && i(e)
                            }
                        })
                    }
                    cD = function (e) {
                        var t = e._scheduler;
                        t.restorePipelines(e._model), t.prepareStageTasks(), pD(e, !0), pD(e, !1), t.plan()
                    }, pD = function (e, t) {
                        function n(e) {
                            var n = e.__requireNewView;
                            e.__requireNewView = !1;
                            var u = "_ec_" + e.id + "_" + e.type,
                                c = !n && a[u];
                            if (!c) {
                                var p = tr(e.type),
                                    h = t ? LI.getClass(p.main, p.sub) : EI.getClass(p.sub);
                                c = new h, c.init(i, l), a[u] = c, o.push(c), s.add(c.group)
                            }
                            e.__viewId = c.__id = u, c.__alive = !0, c.__model = e, c.group.__ecComponentInfo = {
                                mainType: e.mainType,
                                index: e.componentIndex
                            }, !t && r.prepareView(c, e, i, l)
                        }
                        for (var i = e._model, r = e._scheduler, o = t ? e._componentsViews : e._chartsViews, a = t ? e._componentsMap : e._chartsMap, s = e._zr, l = e._api, u = 0; u < o.length; u++) o[u].__alive = !1;
                        t ? i.eachComponent(function (e, t) {
                            "series" !== e && n(t)
                        }) : i.eachSeries(n);
                        for (u = 0; u < o.length;) {
                            var c = o[u];
                            c.__alive ? u++ : (!t && c.renderTask.dispose(), s.remove(c.group), c.dispose(i, l), o.splice(u, 1), a[c.__id] === c && delete a[c.__id], c.__id = c.group.__ecComponentInfo = null)
                        }
                    }, hD = function (e, t, n, i, r) {
                        function o(i) {
                            i && i.__alive && i[t] && i[t](i.__model, a, e._api, n)
                        }
                        var a = e._model;
                        if (a.setUpdatePayload(n), i) {
                            var s = {};
                            s[i + "Id"] = n[i + "Id"], s[i + "Index"] = n[i + "Index"], s[i + "Name"] = n[i + "Name"];
                            var l = {
                                mainType: i,
                                query: s
                            };
                            r && (l.subType = r);
                            var u, c = n.excludeSeriesId;
                            null != c && (u = Y(), m(ki(c), function (e) {
                                var t = Gi(e, null);
                                null != t && u.set(t, !0)
                            })), a && a.eachComponent(l, function (t) {
                                var i = u && null !== u.get(t.id);
                                if (!i)
                                    if (na(n))
                                        if (t instanceof PI) n.type !== cT || n.notBlur || t.get(["emphasis", "disabled"]) || Fo(t, n, e._api);
                                        else {
                                            var r = Ho(t.mainType, t.componentIndex, n.name, e._api),
                                                o = r.focusSelf,
                                                a = r.dispatchers;
                                            n.type === cT && o && !n.notBlur && Bo(t.mainType, t.componentIndex, e._api), a && m(a, function (e) {
                                                n.type === cT ? Do(e) : Ao(e)
                                            })
                                        }
                                else ta(n) && t instanceof PI && (Wo(t, n, e._api), jo(t), MD(e))
                            }, e), a && a.eachComponent(l, function (t) {
                                var n = u && null !== u.get(t.id);
                                n || o(e["series" === i ? "_chartsMap" : "_componentsMap"][t.__viewId])
                            }, e)
                        } else m([].concat(e._componentsViews).concat(e._chartsViews), o)
                    }, dD = {
                        prepareAndUpdate: function (e) {
                            cD(this), dD.update.call(this, e, {
                                optionChanged: null != e.newOption
                            })
                        },
                        update: function (t, n) {
                            var i = this._model,
                                r = this._api,
                                o = this._zr,
                                a = this._coordSysMgr,
                                s = this._scheduler;
                            if (i) {
                                i.setUpdatePayload(t), s.restoreData(i, t), s.performSeriesTasks(i), a.create(i, r), s.performDataProcessorTasks(i, t), gD(this, i), a.update(i, r), e(i), s.performVisualTasks(i, t), wD(this, i, r, t, n);
                                var l = i.get("backgroundColor") || "transparent",
                                    u = i.get("darkMode");
                                o.setBackgroundColor(l), null != u && "auto" !== u && o.setDarkMode(u), Lk.trigger("afterupdate", i, r)
                            }
                        },
                        updateTransform: function (t) {
                            var n = this,
                                i = this._model,
                                r = this._api;
                            if (i) {
                                i.setUpdatePayload(t);
                                var o = [];
                                i.eachComponent(function (e, a) {
                                    if ("series" !== e) {
                                        var s = n.getViewOfComponentModel(a);
                                        if (s && s.__alive)
                                            if (s.updateTransform) {
                                                var l = s.updateTransform(a, i, r, t);
                                                l && l.update && o.push(s)
                                            } else o.push(s)
                                    }
                                });
                                var a = Y();
                                i.eachSeries(function (e) {
                                    var o = n._chartsMap[e.__viewId];
                                    if (o.updateTransform) {
                                        var s = o.updateTransform(e, i, r, t);
                                        s && s.update && a.set(e.uid, 1)
                                    } else a.set(e.uid, 1)
                                }), e(i), this._scheduler.performVisualTasks(i, t, {
                                    setDirty: !0,
                                    dirtyMap: a
                                }), SD(this, i, r, t, {}, a), Lk.trigger("afterupdate", i, r)
                            }
                        },
                        updateView: function (t) {
                            var n = this._model;
                            n && (n.setUpdatePayload(t), EI.markUpdateMethod(t, "updateView"), e(n), this._scheduler.performVisualTasks(n, t, {
                                setDirty: !0
                            }), wD(this, n, this._api, t, {}), Lk.trigger("afterupdate", n, this._api))
                        },
                        updateVisual: function (t) {
                            var n = this,
                                i = this._model;
                            i && (i.setUpdatePayload(t), i.eachSeries(function (e) {
                                e.getData().clearAllVisual()
                            }), EI.markUpdateMethod(t, "updateVisual"), e(i), this._scheduler.performVisualTasks(i, t, {
                                visualType: "visual",
                                setDirty: !0
                            }), i.eachComponent(function (e, r) {
                                if ("series" !== e) {
                                    var o = n.getViewOfComponentModel(r);
                                    o && o.__alive && o.updateVisual(r, i, n._api, t)
                                }
                            }), i.eachSeries(function (e) {
                                var r = n._chartsMap[e.__viewId];
                                r.updateVisual(e, i, n._api, t)
                            }), Lk.trigger("afterupdate", i, this._api))
                        },
                        updateLayout: function (e) {
                            dD.update.call(this, e)
                        }
                    }, fD = function (e, t, n, i) {
                        if (!e._disposed)
                            for (var r, o = e._model, a = e._coordSysMgr.getCoordinateSystems(), s = qi(o, n), l = 0; l < a.length; l++) {
                                var u = a[l];
                                if (u[t] && null != (r = u[t](o, s, i))) return r
                            }
                    }, gD = function (e, t) {
                        var n = e._chartsMap,
                            i = e._scheduler;
                        t.eachSeries(function (e) {
                            i.updateStreamModes(e, n[e.__viewId])
                        })
                    }, mD = function (e, t) {
                        var n = this,
                            i = this.getModel(),
                            r = e.type,
                            o = e.escapeConnect,
                            a = PD[r],
                            s = a.actionInfo,
                            l = (s.update || "update").split(":"),
                            u = l.pop(),
                            h = null != l[0] && tr(l[0]);
                        this[eD] = !0;
                        var d = [e],
                            f = !1;
                        e.batch && (f = !0, d = y(e.batch, function (t) {
                            return t = p(c({}, t), e), t.batch = null, t
                        }));
                        var g, v = [],
                            x = ta(e),
                            _ = na(e);
                        if (_ && Ro(this._api), m(d, function (t) {
                                if (g = a.action(t, n._model, n._api), g = g || c({}, t), g.type = s.event || g.type, v.push(g), _) {
                                    var i = Zi(e),
                                        r = i.queryOptionMap,
                                        o = i.mainTypeSpecified,
                                        l = o ? r.keys()[0] : "series";
                                    hD(n, u, t, l), MD(n)
                                } else x ? (hD(n, u, t, "series"), MD(n)) : h && hD(n, u, t, h.main, h.sub)
                            }), "none" !== u && !_ && !x && !h) try {
                            this[tD] ? (cD(this), dD.update.call(this, e), this[tD] = null) : dD[u].call(this, e)
                        } catch (e) {
                            throw this[eD] = !1, e
                        }
                        if (g = f ? {
                                type: s.event || r,
                                escapeConnect: o,
                                batch: v
                            } : v[0], this[eD] = !1, !t) {
                            var w = this._messageCenter;
                            if (w.trigger(g.type, g), x) {
                                var b = {
                                    type: "selectchanged",
                                    escapeConnect: o,
                                    selected: Xo(i),
                                    isFromClick: e.isFromClick || !1,
                                    fromAction: e.type,
                                    fromActionPayload: e
                                };
                                w.trigger(b.type, b)
                            }
                        }
                    }, yD = function (e) {
                        for (var t = this._pendingActions; t.length;) {
                            var n = t.shift();
                            mD.call(this, n, e)
                        }
                    }, vD = function (e) {
                        !e && this.trigger("updated")
                    }, xD = function (e, t) {
                        e.on("rendered", function (n) {
                            t.trigger("rendered", n), !e.animation.isFinished() || t[tD] || t._scheduler.unfinished || t._pendingActions.length || t.trigger("finished")
                        })
                    }, _D = function (e, t) {
                        e.on("mouseover", function (e) {
                            var n = e.target,
                                i = Ic(n, Jo);
                            i && (Go(i, e, t._api), MD(t))
                        }).on("mouseout", function (e) {
                            var n = e.target,
                                i = Ic(n, Jo);
                            i && (Vo(i, e, t._api), MD(t))
                        }).on("click", function (e) {
                            var n = e.target,
                                i = Ic(n, function (e) {
                                    return null != KS(e).dataIndex
                                }, !0);
                            if (i) {
                                var r = i.selected ? "unselect" : "select",
                                    o = KS(i);
                                t._api.dispatchAction({
                                    type: r,
                                    dataType: o.dataType,
                                    dataIndexInside: o.dataIndex,
                                    seriesIndex: o.seriesIndex,
                                    isFromClick: !0
                                })
                            }
                        })
                    }, wD = function (e, t, i, r, o) {
                        n(t), bD(e, t, i, r, o), m(e._chartsViews, function (e) {
                            e.__alive = !1
                        }), SD(e, t, i, r, o), m(e._chartsViews, function (e) {
                            e.__alive || e.remove(t, i)
                        })
                    }, bD = function (e, t, n, i, r, o) {
                        m(o || e._componentsViews, function (e) {
                            var r = e.__model;
                            l(r, e), e.render(r, t, n, i), a(r, e), u(r, e)
                        })
                    }, SD = function (e, t, n, i, s, p) {
                        var h = e._scheduler;
                        s = c(s || {}, {
                            updatedSeries: t.getSeries()
                        }), Lk.trigger("series:beforeupdate", t, n, s);
                        var d = !1;
                        t.eachSeries(function (t) {
                            var n = e._chartsMap[t.__viewId];
                            n.__alive = !0;
                            var r = n.renderTask;
                            h.updatePayload(r, i), l(t, n), p && p.get(t.uid) && r.dirty(), r.perform(h.getPerformArgs(r)) && (d = !0), n.group.silent = !!t.get("silent"), o(t, n), jo(t)
                        }), h.unfinished = d || h.unfinished, Lk.trigger("series:layoutlabels", t, n, s), Lk.trigger("series:transition", t, n, s), t.eachSeries(function (t) {
                            var n = e._chartsMap[t.__viewId];
                            a(t, n), u(t, n)
                        }), r(e, t), Lk.trigger("series:afterupdate", t, n, s)
                    }, MD = function (e) {
                        e[nD] = !0, e.getZr().wakeUp()
                    }, ID = function (e) {
                        e[nD] && (e.getZr().storage.traverse(function (e) {
                            Ma(e) || i(e)
                        }), e[nD] = !1)
                    }, TD = function (e) {
                        return new(function (n) {
                            function i() {
                                return null !== n && n.apply(this, arguments) || this
                            }
                            return t(i, n), i.prototype.getCoordinateSystems = function () {
                                return e._coordSysMgr.getCoordinateSystems()
                            }, i.prototype.getComponentByElement = function (t) {
                                for (; t;) {
                                    var n = t.__ecComponentInfo;
                                    if (null != n) return e._model.getComponent(n.mainType, n.index);
                                    t = t.parent
                                }
                            }, i.prototype.enterEmphasis = function (t, n) {
                                Do(t, n), MD(e)
                            }, i.prototype.leaveEmphasis = function (t, n) {
                                Ao(t, n), MD(e)
                            }, i.prototype.enterBlur = function (t) {
                                Po(t), MD(e)
                            }, i.prototype.leaveBlur = function (t) {
                                Lo(t), MD(e)
                            }, i.prototype.enterSelect = function (t) {
                                No(t), MD(e)
                            }, i.prototype.leaveSelect = function (t) {
                                Oo(t), MD(e)
                            }, i.prototype.getModel = function () {
                                return e.getModel()
                            }, i.prototype.getViewOfComponentModel = function (t) {
                                return e.getViewOfComponentModel(t)
                            }, i.prototype.getViewOfSeriesModel = function (t) {
                                return e.getViewOfSeriesModel(t)
                            }, i
                        }(jM))(e)
                    }, CD = function (e) {
                        function t(e, t) {
                            for (var n = 0; n < e.length; n++) {
                                var i = e[n];
                                i[rD] = t
                            }
                        }
                        m(LD, function (n, i) {
                            e._messageCenter.on(i, function (n) {
                                if (FD[e.group] && e[rD] !== oD) {
                                    if (n && n.escapeConnect) return;
                                    var i = e.makeActionFromEvent(n),
                                        r = [];
                                    m(BD, function (t) {
                                        t !== e && t.group === e.group && r.push(t)
                                    }), t(r, oD), m(r, function (e) {
                                        e[rD] !== aD && e.dispatchAction(i)
                                    }), t(r, sD)
                                }
                            })
                        })
                    }
                }(), n
            }(y_),
            DD = kD.prototype;
        DD.on = yp("on"), DD.off = yp("off"), DD.one = function (e, t, n) {
            function i() {
                for (var n = [], o = 0; o < arguments.length; o++) n[o] = arguments[o];
                t && t.apply && t.apply(this, n), r.off(e, i)
            }
            var r = this;
            this.on.call(this, e, i, n)
        };
        var AD = ["click", "dblclick", "mouseover", "mouseout", "mousemove", "mousedown", "mouseup", "globalout", "contextmenu"],
            PD = {},
            LD = {},
            ND = [],
            OD = [],
            ED = [],
            RD = {},
            zD = {},
            BD = {},
            FD = {},
            HD = +new Date - 0,
            GD = +new Date - 0,
            VD = "_echarts_instance_",
            WD = bp,
            jD = [],
            XD = yu;
        Rp(Xk, jI), Rp(qk, YI), Rp(qk, UI), Rp(Xk, uk), Rp(qk, ck), Rp(Jk, fp), Ip(Xl), kp(Fk, Yl), Bp("default", pc), Lp({
            type: cT,
            event: cT,
            update: cT
        }, K), Lp({
            type: pT,
            event: pT,
            update: pT
        }, K), Lp({
            type: hT,
            event: hT,
            update: hT
        }, K), Lp({
            type: dT,
            event: dT,
            update: dT
        }, K), Lp({
            type: fT,
            event: fT,
            update: fT
        }, K), Mp("light", ek), Mp("dark", ok);
        var YD, UD, qD, ZD, $D, KD, JD, QD = {},
            eA = function () {
                function e(e, t, n, i, r, o) {
                    this._old = e, this._new = t, this._oldKeyGetter = n || Wp, this._newKeyGetter = i || Wp, this.context = r, this._diffModeMultiple = "multiple" === o
                }
                return e.prototype.add = function (e) {
                    return this._add = e, this
                }, e.prototype.update = function (e) {
                    return this._update = e, this
                }, e.prototype.updateManyToOne = function (e) {
                    return this._updateManyToOne = e, this
                }, e.prototype.updateOneToMany = function (e) {
                    return this._updateOneToMany = e, this
                }, e.prototype.updateManyToMany = function (e) {
                    return this._updateManyToMany = e, this
                }, e.prototype.remove = function (e) {
                    return this._remove = e, this
                }, e.prototype.execute = function () {
                    this[this._diffModeMultiple ? "_executeMultiple" : "_executeOneToOne"]()
                }, e.prototype._executeOneToOne = function () {
                    var e = this._old,
                        t = this._new,
                        n = {},
                        i = new Array(e.length),
                        r = new Array(t.length);
                    this._initIndexMap(e, null, i, "_oldKeyGetter"), this._initIndexMap(t, n, r, "_newKeyGetter");
                    for (var o = 0; o < e.length; o++) {
                        var a = i[o],
                            s = n[a],
                            l = Vp(s);
                        if (l > 1) {
                            var u = s.shift();
                            1 === s.length && (n[a] = s[0]), this._update && this._update(u, o)
                        } else 1 === l ? (n[a] = null, this._update && this._update(s, o)) : this._remove && this._remove(o)
                    }
                    this._performRestAdd(r, n)
                }, e.prototype._executeMultiple = function () {
                    var e = this._old,
                        t = this._new,
                        n = {},
                        i = {},
                        r = [],
                        o = [];
                    this._initIndexMap(e, n, r, "_oldKeyGetter"), this._initIndexMap(t, i, o, "_newKeyGetter");
                    for (var a = 0; a < r.length; a++) {
                        var s = r[a],
                            l = n[s],
                            u = i[s],
                            c = Vp(l),
                            p = Vp(u);
                        if (c > 1 && 1 === p) this._updateManyToOne && this._updateManyToOne(u, l), i[s] = null;
                        else if (1 === c && p > 1) this._updateOneToMany && this._updateOneToMany(u, l), i[s] = null;
                        else if (1 === c && 1 === p) this._update && this._update(u, l), i[s] = null;
                        else if (c > 1 && p > 1) this._updateManyToMany && this._updateManyToMany(u, l), i[s] = null;
                        else if (c > 1)
                            for (var h = 0; c > h; h++) this._remove && this._remove(l[h]);
                        else this._remove && this._remove(l)
                    }
                    this._performRestAdd(o, i)
                }, e.prototype._performRestAdd = function (e, t) {
                    for (var n = 0; n < e.length; n++) {
                        var i = e[n],
                            r = t[i],
                            o = Vp(r);
                        if (o > 1)
                            for (var a = 0; o > a; a++) this._add && this._add(r[a]);
                        else 1 === o && this._add && this._add(r);
                        t[i] = null
                    }
                }, e.prototype._initIndexMap = function (e, t, n, i) {
                    for (var r = this._diffModeMultiple, o = 0; o < e.length; o++) {
                        var a = "_ec_" + this[i](e[o], o);
                        if (r || (n[o] = a), t) {
                            var s = t[a],
                                l = Vp(s);
                            0 === l ? (t[a] = o, r && n.push(a)) : 1 === l ? t[a] = [s, o] : s.push(o)
                        }
                    }
                }, e
            }(),
            tA = function () {
                function e(e, t) {
                    this._encode = e, this._schema = t
                }
                return e.prototype.get = function () {
                    return {
                        fullDimensions: this._getFullDimensionNames(),
                        encode: this._encode
                    }
                }, e.prototype._getFullDimensionNames = function () {
                    return this._cachedDimNames || (this._cachedDimNames = this._schema ? this._schema.makeOutputDimensionNames() : []), this._cachedDimNames
                }, e
            }(),
            nA = function () {
                function e(e) {
                    this.otherDims = {}, null != e && c(this, e)
                }
                return e
            }(),
            iA = Ui(),
            rA = {
                float: "f",
                int: "i",
                ordinal: "o",
                number: "n",
                time: "t"
            },
            oA = function () {
                function e(e) {
                    this.dimensions = e.dimensions, this._dimOmitted = e.dimensionOmitted, this.source = e.source, this._fullDimCount = e.fullDimensionCount, this._updateDimOmitted(e.dimensionOmitted)
                }
                return e.prototype.isDimensionOmitted = function () {
                    return this._dimOmitted
                }, e.prototype._updateDimOmitted = function (e) {
                    this._dimOmitted = e, e && (this._dimNameMap || (this._dimNameMap = $p(this.source)))
                }, e.prototype.getSourceDimensionIndex = function (e) {
                    return B(this._dimNameMap.get(e), -1)
                }, e.prototype.getSourceDimension = function (e) {
                    var t = this.source.dimensionsDefine;
                    return t ? t[e] : void 0
                }, e.prototype.makeStoreSchema = function () {
                    for (var e = this._fullDimCount, t = iu(this.source), n = !Kp(e), i = "", r = [], o = 0, a = 0; e > o; o++) {
                        var s = void 0,
                            l = void 0,
                            u = void 0,
                            c = this.dimensions[a];
                        if (c && c.storeDimIndex === o) s = t ? c.name : null, l = c.type, u = c.ordinalMeta, a++;
                        else {
                            var p = this.getSourceDimension(o);
                            p && (s = t ? p.name : null, l = p.type)
                        }
                        r.push({
                            property: s,
                            type: l,
                            ordinalMeta: u
                        }), !t || null == s || c && c.isCalculationCoord || (i += n ? s.replace(/\`/g, "`1").replace(/\$/g, "`2") : s), i += "$", i += rA[l] || "f", u && (i += u.uid), i += "$"
                    }
                    var h = this.source,
                        d = [h.seriesLayoutBy, h.startIndex, i].join("$$");
                    return {
                        dimensions: r,
                        hash: d
                    }
                }, e.prototype.makeOutputDimensionNames = function () {
                    for (var e = [], t = 0, n = 0; t < this._fullDimCount; t++) {
                        var i = void 0,
                            r = this.dimensions[n];
                        if (r && r.storeDimIndex === t) r.isCalculationCoord || (i = r.name), n++;
                        else {
                            var o = this.getSourceDimension(t);
                            o && (i = o.name)
                        }
                        e.push(i)
                    }
                    return e
                }, e.prototype.appendCalculationDimension = function (e) {
                    this.dimensions.push(e), e.isCalculationCoord = !0, this._fullDimCount++, this._updateDimOmitted(!0)
                }, e
            }(),
            aA = D,
            sA = y,
            lA = "undefined" == typeof Int32Array ? Array : Int32Array,
            uA = "e\0\0",
            cA = -1,
            pA = ["hasItemOption", "_nameList", "_idList", "_invertedIndicesMap", "_dimSummary", "userOutput", "_rawData", "_dimValueGetter", "_nameDimIdx", "_idDimIdx", "_nameRepeatCount"],
            hA = ["_approximateExtent"],
            dA = function () {
                function e(e, t) {
                    this.type = "list", this._dimOmitted = !1, this._nameList = [], this._idList = [], this._visual = {}, this._layout = {}, this._itemVisuals = [], this._itemLayouts = [], this._graphicEls = [], this._approximateExtent = {}, this._calculationInfo = {}, this.hasItemOption = !1, this.TRANSFERABLE_METHODS = ["cloneShallow", "downSample", "lttbDownSample", "map"], this.CHANGABLE_METHODS = ["filterSelf", "selectRange"], this.DOWNSAMPLE_METHODS = ["downSample", "lttbDownSample"];
                    var n, i = !1;
                    qp(e) ? (n = e.dimensions, this._dimOmitted = e.isDimensionOmitted(), this._schema = e) : (i = !0, n = e), n = n || ["x", "y"];
                    for (var r = {}, o = [], a = {}, s = !1, l = {}, u = 0; u < n.length; u++) {
                        var c = n[u],
                            p = M(c) ? new nA({
                                name: c
                            }) : c instanceof nA ? c : new nA(c),
                            h = p.name;
                        p.type = p.type || "float", p.coordDim || (p.coordDim = h, p.coordDimIndex = 0);
                        var d = p.otherDims = p.otherDims || {};
                        o.push(h), r[h] = p, null != l[h] && (s = !0), p.createInvertedIndices && (a[h] = []), 0 === d.itemName && (this._nameDimIdx = u), 0 === d.itemId && (this._idDimIdx = u), i && (p.storeDimIndex = u)
                    }
                    if (this.dimensions = o, this._dimInfos = r, this._initGetDimensionInfo(s), this.hostModel = t, this._invertedIndicesMap = a, this._dimOmitted) {
                        var f = this._dimIdxToName = Y();
                        m(o, function (e) {
                            f.set(r[e].storeDimIndex, e)
                        })
                    }
                }
                return e.prototype.getDimension = function (e) {
                    var t = this._recognizeDimIndex(e);
                    if (null == t) return e;
                    if (t = e, !this._dimOmitted) return this.dimensions[t];
                    var n = this._dimIdxToName.get(t);
                    if (null != n) return n;
                    var i = this._schema.getSourceDimension(t);
                    return i ? i.name : void 0
                }, e.prototype.getDimensionIndex = function (e) {
                    var t = this._recognizeDimIndex(e);
                    if (null != t) return t;
                    if (null == e) return -1;
                    var n = this._getDimInfo(e);
                    return n ? n.storeDimIndex : this._dimOmitted ? this._schema.getSourceDimensionIndex(e) : -1
                }, e.prototype._recognizeDimIndex = function (e) {
                    return k(e) || null != e && !isNaN(e) && !this._getDimInfo(e) && (!this._dimOmitted || this._schema.getSourceDimensionIndex(e) < 0) ? +e : void 0
                }, e.prototype._getStoreDimIndex = function (e) {
                    var t = this.getDimensionIndex(e);
                    return t
                }, e.prototype.getDimensionInfo = function (e) {
                    return this._getDimInfo(this.getDimension(e))
                }, e.prototype._initGetDimensionInfo = function (e) {
                    var t = this._dimInfos;
                    this._getDimInfo = e ? function (e) {
                        return t.hasOwnProperty(e) ? t[e] : void 0
                    } : function (e) {
                        return t[e]
                    }
                }, e.prototype.getDimensionsOnCoord = function () {
                    return this._dimSummary.dataDimsOnCoord.slice()
                }, e.prototype.mapDimension = function (e, t) {
                    var n = this._dimSummary;
                    if (null == t) return n.encodeFirstDimNotExtra[e];
                    var i = n.encode[e];
                    return i ? i[t] : null
                }, e.prototype.mapDimensionsAll = function (e) {
                    var t = this._dimSummary,
                        n = t.encode[e];
                    return (n || []).slice()
                }, e.prototype.getStore = function () {
                    return this._store
                }, e.prototype.initData = function (e, t, n) {
                    var i, r = this;
                    if (e instanceof SI && (i = e), !i) {
                        var o = this.dimensions,
                            a = ql(e) || g(e) ? new nI(e, o.length) : e;
                        i = new SI;
                        var s = sA(o, function (e) {
                            return {
                                type: r._dimInfos[e].type,
                                property: e
                            }
                        });
                        i.initData(a, s, n)
                    }
                    this._store = i, this._nameList = (t || []).slice(), this._idList = [], this._nameRepeatCount = {}, this._doInit(0, i.count()), this._dimSummary = jp(this, this._schema), this.userOutput = this._dimSummary.userOutput
                }, e.prototype.appendData = function (e) {
                    var t = this._store.appendData(e);
                    this._doInit(t[0], t[1])
                }, e.prototype.appendValues = function (e, t) {
                    var n = this._store.appendValues(e, t.length),
                        i = n.start,
                        r = n.end,
                        o = this._shouldMakeIdFromName();
                    if (this._updateOrdinalMeta(), t)
                        for (var a = i; r > a; a++) {
                            var s = a - i;
                            this._nameList[a] = t[s], o && JD(this, a)
                        }
                }, e.prototype._updateOrdinalMeta = function () {
                    for (var e = this._store, t = this.dimensions, n = 0; n < t.length; n++) {
                        var i = this._dimInfos[t[n]];
                        i.ordinalMeta && e.collectOrdinalMeta(i.storeDimIndex, i.ordinalMeta)
                    }
                }, e.prototype._shouldMakeIdFromName = function () {
                    var e = this._store.getProvider();
                    return null == this._idDimIdx && e.getSource().sourceFormat !== CM && !e.fillStorage
                }, e.prototype._doInit = function (e, t) {
                    if (!(e >= t)) {
                        var n = this._store,
                            i = n.getProvider();
                        this._updateOrdinalMeta();
                        var r = this._nameList,
                            o = this._idList,
                            a = i.getSource().sourceFormat,
                            s = a === wM;
                        if (s && !i.pure)
                            for (var l = [], u = e; t > u; u++) {
                                var c = i.getItem(u, l);
                                if (!this.hasItemOption && Pi(c) && (this.hasItemOption = !0), c) {
                                    var p = c.name;
                                    null == r[u] && null != p && (r[u] = Gi(p, null));
                                    var h = c.id;
                                    null == o[u] && null != h && (o[u] = Gi(h, null))
                                }
                            }
                        if (this._shouldMakeIdFromName())
                            for (u = e; t > u; u++) JD(this, u);
                        YD(this)
                    }
                }, e.prototype.getApproximateExtent = function (e) {
                    return this._approximateExtent[e] || this._store.getDataExtent(this._getStoreDimIndex(e))
                }, e.prototype.setApproximateExtent = function (e, t) {
                    t = this.getDimension(t), this._approximateExtent[t] = e.slice()
                }, e.prototype.getCalculationInfo = function (e) {
                    return this._calculationInfo[e]
                }, e.prototype.setCalculationInfo = function (e, t) {
                    aA(e) ? c(this._calculationInfo, e) : this._calculationInfo[e] = t
                }, e.prototype.getName = function (e) {
                    var t = this.getRawIndex(e),
                        n = this._nameList[t];
                    return null == n && null != this._nameDimIdx && (n = qD(this, this._nameDimIdx, t)), null == n && (n = ""), n
                }, e.prototype._getCategory = function (e, t) {
                    var n = this._store.get(e, t),
                        i = this._store.getOrdinalMeta(e);
                    return i ? i.categories[n] : n
                }, e.prototype.getId = function (e) {
                    return UD(this, this.getRawIndex(e))
                }, e.prototype.count = function () {
                    return this._store.count()
                }, e.prototype.get = function (e, t) {
                    var n = this._store,
                        i = this._dimInfos[e];
                    return i ? n.get(i.storeDimIndex, t) : void 0
                }, e.prototype.getByRawIndex = function (e, t) {
                    var n = this._store,
                        i = this._dimInfos[e];
                    return i ? n.getByRawIndex(i.storeDimIndex, t) : void 0
                }, e.prototype.getIndices = function () {
                    return this._store.getIndices()
                }, e.prototype.getDataExtent = function (e) {
                    return this._store.getDataExtent(this._getStoreDimIndex(e))
                }, e.prototype.getSum = function (e) {
                    return this._store.getSum(this._getStoreDimIndex(e))
                }, e.prototype.getMedian = function (e) {
                    return this._store.getMedian(this._getStoreDimIndex(e))
                }, e.prototype.getValues = function (e, t) {
                    var n = this,
                        i = this._store;
                    return T(e) ? i.getValues(sA(e, function (e) {
                        return n._getStoreDimIndex(e)
                    }), t) : i.getValues(e)
                }, e.prototype.hasValue = function (e) {
                    for (var t = this._dimSummary.dataDimIndicesOnCoord, n = 0, i = t.length; i > n; n++)
                        if (isNaN(this._store.get(t[n], e))) return !1;
                    return !0
                }, e.prototype.indexOfName = function (e) {
                    for (var t = 0, n = this._store.count(); n > t; t++)
                        if (this.getName(t) === e) return t;
                    return -1
                }, e.prototype.getRawIndex = function (e) {
                    return this._store.getRawIndex(e)
                }, e.prototype.indexOfRawIndex = function (e) {
                    return this._store.indexOfRawIndex(e)
                }, e.prototype.rawIndexOf = function (e, t) {
                    var n = e && this._invertedIndicesMap[e],
                        i = n[t];
                    return null == i || isNaN(i) ? cA : i
                }, e.prototype.indicesOfNearest = function (e, t, n) {
                    return this._store.indicesOfNearest(this._getStoreDimIndex(e), t, n)
                }, e.prototype.each = function (e, t, n) {
                    C(e) && (n = t, t = e, e = []);
                    var i = n || this,
                        r = sA(ZD(e), this._getStoreDimIndex, this);
                    this._store.each(r, i ? o_(t, i) : t)
                }, e.prototype.filterSelf = function (e, t, n) {
                    C(e) && (n = t, t = e, e = []);
                    var i = n || this,
                        r = sA(ZD(e), this._getStoreDimIndex, this);
                    return this._store = this._store.filter(r, i ? o_(t, i) : t), this
                }, e.prototype.selectRange = function (e) {
                    var t = this,
                        n = {},
                        i = w(e),
                        r = [];
                    return m(i, function (i) {
                        var o = t._getStoreDimIndex(i);
                        n[o] = e[i], r.push(o)
                    }), this._store = this._store.selectRange(n), this
                }, e.prototype.mapArray = function (e, t, n) {
                    C(e) && (n = t, t = e, e = []), n = n || this;
                    var i = [];
                    return this.each(e, function () {
                        i.push(t && t.apply(this, arguments))
                    }, n), i
                }, e.prototype.map = function (e, t, n, i) {
                    var r = n || i || this,
                        o = sA(ZD(e), this._getStoreDimIndex, this),
                        a = KD(this);
                    return a._store = this._store.map(o, r ? o_(t, r) : t), a
                }, e.prototype.modify = function (e, t, n, i) {
                    var r = n || i || this,
                        o = sA(ZD(e), this._getStoreDimIndex, this);
                    this._store.modify(o, r ? o_(t, r) : t)
                }, e.prototype.downSample = function (e, t, n, i) {
                    var r = KD(this);
                    return r._store = this._store.downSample(this._getStoreDimIndex(e), t, n, i), r
                }, e.prototype.lttbDownSample = function (e, t) {
                    var n = KD(this);
                    return n._store = this._store.lttbDownSample(this._getStoreDimIndex(e), t), n
                }, e.prototype.getRawDataItem = function (e) {
                    return this._store.getRawDataItem(e)
                }, e.prototype.getItemModel = function (e) {
                    var t = this.hostModel,
                        n = this.getRawDataItem(e);
                    return new HC(n, t, t && t.ecModel)
                }, e.prototype.diff = function (e) {
                    var t = this;
                    return new eA(e ? e.getStore().getIndices() : [], this.getStore().getIndices(), function (t) {
                        return UD(e, t)
                    }, function (e) {
                        return UD(t, e)
                    })
                }, e.prototype.getVisual = function (e) {
                    var t = this._visual;
                    return t && t[e]
                }, e.prototype.setVisual = function (e, t) {
                    this._visual = this._visual || {}, aA(e) ? c(this._visual, e) : this._visual[e] = t
                }, e.prototype.getItemVisual = function (e, t) {
                    var n = this._itemVisuals[e],
                        i = n && n[t];
                    return null == i ? this.getVisual(t) : i
                }, e.prototype.hasItemVisual = function () {
                    return this._itemVisuals.length > 0
                }, e.prototype.ensureUniqueItemVisual = function (e, t) {
                    var n = this._itemVisuals,
                        i = n[e];
                    i || (i = n[e] = {});
                    var r = i[t];
                    return null == r && (r = this.getVisual(t), T(r) ? r = r.slice() : aA(r) && (r = c({}, r)), i[t] = r), r
                }, e.prototype.setItemVisual = function (e, t, n) {
                    var i = this._itemVisuals[e] || {};
                    this._itemVisuals[e] = i, aA(t) ? c(i, t) : i[t] = n
                }, e.prototype.clearAllVisual = function () {
                    this._visual = {}, this._itemVisuals = []
                }, e.prototype.setLayout = function (e, t) {
                    aA(e) ? c(this._layout, e) : this._layout[e] = t
                }, e.prototype.getLayout = function (e) {
                    return this._layout[e]
                }, e.prototype.getItemLayout = function (e) {
                    return this._itemLayouts[e]
                }, e.prototype.setItemLayout = function (e, t, n) {
                    this._itemLayouts[e] = n ? c(this._itemLayouts[e] || {}, t) : t
                }, e.prototype.clearItemLayouts = function () {
                    this._itemLayouts.length = 0
                }, e.prototype.setItemGraphicEl = function (e, t) {
                    var n = this.hostModel && this.hostModel.seriesIndex;
                    JS(n, this.dataType, e, t), this._graphicEls[e] = t
                }, e.prototype.getItemGraphicEl = function (e) {
                    return this._graphicEls[e]
                }, e.prototype.eachItemGraphicEl = function (e, t) {
                    m(this._graphicEls, function (n, i) {
                        n && e && e.call(t, n, i)
                    })
                }, e.prototype.cloneShallow = function (t) {
                    return t || (t = new e(this._schema ? this._schema : sA(this.dimensions, this._getDimInfo, this), this.hostModel)), $D(t, this), t._store = this._store, t
                }, e.prototype.wrapMethod = function (e, t) {
                    var n = this[e];
                    C(n) && (this.__wrappedMethods = this.__wrappedMethods || [], this.__wrappedMethods.push(e), this[e] = function () {
                        var e = n.apply(this, arguments);
                        return t.apply(this, [e].concat(H(arguments)))
                    })
                }, e.internalField = (YD = function (e) {
                    var t = e._invertedIndicesMap;
                    m(t, function (n, i) {
                        var r = e._dimInfos[i],
                            o = r.ordinalMeta,
                            a = e._store;
                        if (o) {
                            n = t[i] = new lA(o.categories.length);
                            for (var s = 0; s < n.length; s++) n[s] = cA;
                            for (s = 0; s < a.count(); s++) n[a.get(r.storeDimIndex, s)] = s
                        }
                    })
                }, qD = function (e, t, n) {
                    return Gi(e._getCategory(t, n), null)
                }, UD = function (e, t) {
                    var n = e._idList[t];
                    return null == n && null != e._idDimIdx && (n = qD(e, e._idDimIdx, t)), null == n && (n = uA + t), n
                }, ZD = function (e) {
                    return T(e) || (e = null != e ? [e] : []), e
                }, KD = function (t) {
                    var n = new e(t._schema ? t._schema : sA(t.dimensions, t._getDimInfo, t), t.hostModel);
                    return $D(n, t), n
                }, $D = function (e, t) {
                    m(pA.concat(t.__wrappedMethods || []), function (n) {
                        t.hasOwnProperty(n) && (e[n] = t[n])
                    }), e.__wrappedMethods = t.__wrappedMethods, m(hA, function (n) {
                        e[n] = s(t[n])
                    }), e._calculationInfo = c({}, t._calculationInfo)
                }, void(JD = function (e, t) {
                    var n = e._nameList,
                        i = e._idList,
                        r = e._nameDimIdx,
                        o = e._idDimIdx,
                        a = n[t],
                        s = i[t];
                    if (null == a && null != r && (n[t] = a = qD(e, r, t)), null == s && null != o && (i[t] = s = qD(e, o, t)), null == s && null != a) {
                        var l = e._nameRepeatCount,
                            u = l[a] = (l[a] || 0) + 1;
                        s = a, u > 1 && (s += "__ec__" + u), i[t] = s
                    }
                })), e
            }(),
            fA = function () {
                function e(e) {
                    this.coordSysDims = [], this.axisMap = Y(), this.categoryAxisMap = Y(), this.coordSysName = e
                }
                return e
            }(),
            gA = {
                cartesian2d: function (e, t, n, i) {
                    var r = e.getReferringComponents("xAxis", Db).models[0],
                        o = e.getReferringComponents("yAxis", Db).models[0];
                    t.coordSysDims = ["x", "y"], n.set("x", r), n.set("y", o), rh(r) && (i.set("x", r), t.firstCategoryDimIndex = 0), rh(o) && (i.set("y", o), null == t.firstCategoryDimIndex && (t.firstCategoryDimIndex = 1))
                },
                singleAxis: function (e, t, n, i) {
                    var r = e.getReferringComponents("singleAxis", Db).models[0];
                    t.coordSysDims = ["single"], n.set("single", r), rh(r) && (i.set("single", r), t.firstCategoryDimIndex = 0)
                },
                polar: function (e, t, n, i) {
                    var r = e.getReferringComponents("polar", Db).models[0],
                        o = r.findAxisModel("radiusAxis"),
                        a = r.findAxisModel("angleAxis");
                    t.coordSysDims = ["radius", "angle"], n.set("radius", o), n.set("angle", a), rh(o) && (i.set("radius", o), t.firstCategoryDimIndex = 0), rh(a) && (i.set("angle", a), null == t.firstCategoryDimIndex && (t.firstCategoryDimIndex = 1))
                },
                geo: function (e, t) {
                    t.coordSysDims = ["lng", "lat"]
                },
                parallel: function (e, t, n, i) {
                    var r = e.ecModel,
                        o = r.getComponent("parallel", e.get("parallelIndex")),
                        a = t.coordSysDims = o.dimensions.slice();
                    m(o.parallelAxisIndex, function (e, o) {
                        var s = r.getComponent("parallelAxis", e),
                            l = a[o];
                        n.set(l, s), rh(s) && (i.set(l, s), null == t.firstCategoryDimIndex && (t.firstCategoryDimIndex = o))
                    })
                }
            },
            mA = function () {
                function e(e) {
                    this._setting = e || {}, this._extent = [1 / 0, -1 / 0]
                }
                return e.prototype.getSetting = function (e) {
                    return this._setting[e]
                }, e.prototype.unionExtent = function (e) {
                    var t = this._extent;
                    e[0] < t[0] && (t[0] = e[0]), e[1] > t[1] && (t[1] = e[1])
                }, e.prototype.unionExtentFromData = function (e, t) {
                    this.unionExtent(e.getApproximateExtent(t))
                }, e.prototype.getExtent = function () {
                    return this._extent.slice()
                }, e.prototype.setExtent = function (e, t) {
                    var n = this._extent;
                    isNaN(e) || (n[0] = e), isNaN(t) || (n[1] = t)
                }, e.prototype.isInExtentRange = function (e) {
                    return this._extent[0] <= e && this._extent[1] >= e
                }, e.prototype.isBlank = function () {
                    return this._isBlank
                }, e.prototype.setBlank = function (e) {
                    this._isBlank = e
                }, e
            }();
        cr(mA);
        var yA = 0,
            vA = function () {
                function e(e) {
                    this.categories = e.categories || [], this._needCollect = e.needCollect, this._deduplication = e.deduplication, this.uid = ++yA
                }
                return e.createByAxisModel = function (t) {
                    var n = t.option,
                        i = n.data,
                        r = i && y(i, fh);
                    return new e({
                        categories: r,
                        needCollect: !r,
                        deduplication: !1 !== n.dedplication
                    })
                }, e.prototype.getOrdinal = function (e) {
                    return this._getOrCreateMap().get(e)
                }, e.prototype.parseAndCollect = function (e) {
                    var t, n = this._needCollect;
                    if (!M(e) && !n) return e;
                    if (n && !this._deduplication) return t = this.categories.length, this.categories[t] = e, t;
                    var i = this._getOrCreateMap();
                    return t = i.get(e), null == t && (n ? (t = this.categories.length, this.categories[t] = e, i.set(e, t)) : t = NaN), t
                }, e.prototype._getOrCreateMap = function () {
                    return this._map || (this._map = Y(this.categories))
                }, e
            }(),
            xA = function (e) {
                function n(t) {
                    var n = e.call(this, t) || this;
                    n.type = "ordinal";
                    var i = n.getSetting("ordinalMeta");
                    return i || (i = new vA({})), T(i) && (i = new vA({
                        categories: y(i, function (e) {
                            return D(e) ? e.value : e
                        })
                    })), n._ordinalMeta = i, n._extent = n.getSetting("extent") || [0, i.categories.length - 1], n
                }
                return t(n, e), n.prototype.parse = function (e) {
                    return null == e ? NaN : M(e) ? this._ordinalMeta.getOrdinal(e) : Math.round(e)
                }, n.prototype.contain = function (e) {
                    return e = this.parse(e), wh(e, this._extent) && null != this._ordinalMeta.categories[e]
                }, n.prototype.normalize = function (e) {
                    return e = this._getTickNumber(this.parse(e)), bh(e, this._extent)
                }, n.prototype.scale = function (e) {
                    return e = Math.round(Sh(e, this._extent)), this.getRawOrdinalNumber(e)
                }, n.prototype.getTicks = function () {
                    for (var e = [], t = this._extent, n = t[0]; n <= t[1];) e.push({
                        value: n
                    }), n++;
                    return e
                }, n.prototype.getMinorTicks = function () {}, n.prototype.setSortInfo = function (e) {
                    if (null != e) {
                        for (var t = e.ordinalNumbers, n = this._ordinalNumbersByTick = [], i = this._ticksByOrdinalNumber = [], r = 0, o = this._ordinalMeta.categories.length, a = Math.min(o, t.length); a > r; ++r) {
                            var s = t[r];
                            n[r] = s, i[s] = r
                        }
                        for (var l = 0; o > r; ++r) {
                            for (; null != i[l];) l++;
                            n.push(l), i[l] = r
                        }
                    } else this._ordinalNumbersByTick = this._ticksByOrdinalNumber = null
                }, n.prototype._getTickNumber = function (e) {
                    var t = this._ticksByOrdinalNumber;
                    return t && e >= 0 && e < t.length ? t[e] : e
                }, n.prototype.getRawOrdinalNumber = function (e) {
                    var t = this._ordinalNumbersByTick;
                    return t && e >= 0 && e < t.length ? t[e] : e
                }, n.prototype.getLabel = function (e) {
                    if (!this.isBlank()) {
                        var t = this.getRawOrdinalNumber(e.value),
                            n = this._ordinalMeta.categories[t];
                        return null == n ? "" : n + ""
                    }
                }, n.prototype.count = function () {
                    return this._extent[1] - this._extent[0] + 1
                }, n.prototype.unionExtentFromData = function (e, t) {
                    this.unionExtent(e.getApproximateExtent(t))
                }, n.prototype.isInExtentRange = function (e) {
                    return e = this._getTickNumber(e), this._extent[0] <= e && this._extent[1] >= e
                }, n.prototype.getOrdinalMeta = function () {
                    return this._ordinalMeta
                }, n.prototype.calcNiceTicks = function () {}, n.prototype.calcNiceExtent = function () {}, n.type = "ordinal", n
            }(mA);
        mA.registerClass(xA);
        var _A = oi,
            wA = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = "interval", t._interval = 0, t._intervalPrecision = 2, t
                }
                return t(n, e), n.prototype.parse = function (e) {
                    return e
                }, n.prototype.contain = function (e) {
                    return wh(e, this._extent)
                }, n.prototype.normalize = function (e) {
                    return bh(e, this._extent)
                }, n.prototype.scale = function (e) {
                    return Sh(e, this._extent)
                }, n.prototype.setExtent = function (e, t) {
                    var n = this._extent;
                    isNaN(e) || (n[0] = parseFloat(e)), isNaN(t) || (n[1] = parseFloat(t))
                }, n.prototype.unionExtent = function (e) {
                    var t = this._extent;
                    e[0] < t[0] && (t[0] = e[0]), e[1] > t[1] && (t[1] = e[1]), this.setExtent(t[0], t[1])
                }, n.prototype.getInterval = function () {
                    return this._interval
                }, n.prototype.setInterval = function (e) {
                    this._interval = e, this._niceExtent = this._extent.slice(), this._intervalPrecision = vh(e)
                }, n.prototype.getTicks = function (e) {
                    var t = this._interval,
                        n = this._extent,
                        i = this._niceExtent,
                        r = this._intervalPrecision,
                        o = [];
                    if (!t) return o;
                    var a = 1e4;
                    n[0] < i[0] && o.push(e ? {
                        value: _A(i[0] - t, r)
                    } : {
                        value: n[0]
                    });
                    for (var s = i[0]; s <= i[1] && (o.push({
                            value: s
                        }), s = _A(s + t, r), s !== o[o.length - 1].value);)
                        if (o.length > a) return [];
                    var l = o.length ? o[o.length - 1].value : i[1];
                    return n[1] > l && o.push(e ? {
                        value: _A(l + t, r)
                    } : {
                        value: n[1]
                    }), o
                }, n.prototype.getMinorTicks = function (e) {
                    for (var t = this.getTicks(!0), n = [], i = this.getExtent(), r = 1; r < t.length; r++) {
                        for (var o = t[r], a = t[r - 1], s = 0, l = [], u = o.value - a.value, c = u / e; e - 1 > s;) {
                            var p = _A(a.value + (s + 1) * c);
                            p > i[0] && p < i[1] && l.push(p), s++
                        }
                        n.push(l)
                    }
                    return n
                }, n.prototype.getLabel = function (e, t) {
                    if (null == e) return "";
                    var n = t && t.precision;
                    null == n ? n = si(e.value) || 0 : "auto" === n && (n = this._intervalPrecision);
                    var i = _A(e.value, n, !0);
                    return Ys(i)
                }, n.prototype.calcNiceTicks = function (e, t, n) {
                    e = e || 5;
                    var i = this._extent,
                        r = i[1] - i[0];
                    if (isFinite(r)) {
                        0 > r && (r = -r, i.reverse());
                        var o = mh(i, e, t, n);
                        this._intervalPrecision = o.intervalPrecision, this._interval = o.interval, this._niceExtent = o.niceTickExtent
                    }
                }, n.prototype.calcNiceExtent = function (e) {
                    var t = this._extent;
                    if (t[0] === t[1])
                        if (0 !== t[0]) {
                            var n = Math.abs(t[0]);
                            e.fixMax ? t[0] -= n / 2 : (t[1] += n / 2, t[0] -= n / 2)
                        } else t[1] = 1;
                    var i = t[1] - t[0];
                    isFinite(i) || (t[0] = 0, t[1] = 1), this.calcNiceTicks(e.splitNumber, e.minInterval, e.maxInterval);
                    var r = this._interval;
                    e.fixMin || (t[0] = _A(Math.floor(t[0] / r) * r)), e.fixMax || (t[1] = _A(Math.ceil(t[1] / r) * r))
                }, n.prototype.setNiceExtent = function (e, t) {
                    this._niceExtent = [e, t]
                }, n.type = "interval", n
            }(mA);
        mA.registerClass(wA);
        var bA = "undefined" != typeof Float32Array,
            SA = bA ? Float32Array : Array,
            TA = "__ec_stack_",
            CA = function (e, t, n, i) {
                for (; i > n;) {
                    var r = n + i >>> 1;
                    e[r][1] < t ? n = r + 1 : i = r
                }
                return n
            },
            MA = function (e) {
                function n(t) {
                    var n = e.call(this, t) || this;
                    return n.type = "time", n
                }
                return t(n, e), n.prototype.getLabel = function (e) {
                    var t = this.getSetting("useUTC");
                    return Is(e.value, iM[Ms(Ts(this._minLevelUnit))] || iM.second, t, this.getSetting("locale"))
                }, n.prototype.getFormattedLabel = function (e, t, n) {
                    var i = this.getSetting("useUTC"),
                        r = this.getSetting("locale");
                    return ks(e, t, n, r, i)
                }, n.prototype.getTicks = function () {
                    var e = this._interval,
                        t = this._extent,
                        n = [];
                    if (!e) return n;
                    n.push({
                        value: t[0],
                        level: 0
                    });
                    var i = this.getSetting("useUTC"),
                        r = jh(this._minLevelUnit, this._approxInterval, i, t);
                    return n = n.concat(r), n.push({
                        value: t[1],
                        level: 0
                    }), n
                }, n.prototype.calcNiceExtent = function (e) {
                    var t = this._extent;
                    if (t[0] === t[1] && (t[0] -= QC, t[1] += QC), t[1] === -1 / 0 && 1 / 0 === t[0]) {
                        var n = new Date;
                        t[1] = +new Date(n.getFullYear(), n.getMonth(), n.getDate()), t[0] = t[1] - QC
                    }
                    this.calcNiceTicks(e.splitNumber, e.minInterval, e.maxInterval)
                }, n.prototype.calcNiceTicks = function (e, t, n) {
                    e = e || 10;
                    var i = this._extent,
                        r = i[1] - i[0];
                    this._approxInterval = r / e, null != t && this._approxInterval < t && (this._approxInterval = t), null != n && this._approxInterval > n && (this._approxInterval = n);
                    var o = IA.length,
                        a = Math.min(CA(IA, this._approxInterval, 0, o), o - 1);
                    this._interval = IA[a][1], this._minLevelUnit = IA[Math.max(a - 1, 0)][0]
                }, n.prototype.parse = function (e) {
                    return k(e) ? e : +gi(e)
                }, n.prototype.contain = function (e) {
                    return wh(this.parse(e), this._extent)
                }, n.prototype.normalize = function (e) {
                    return bh(this.parse(e), this._extent)
                }, n.prototype.scale = function (e) {
                    return Sh(e, this._extent)
                }, n.type = "time", n
            }(wA),
            IA = [
                ["second", $C],
                ["minute", KC],
                ["hour", JC],
                ["quarter-day", 6 * JC],
                ["half-day", 12 * JC],
                ["day", 1.2 * QC],
                ["half-week", 3.5 * QC],
                ["week", 7 * QC],
                ["month", 31 * QC],
                ["quarter", 95 * QC],
                ["half-year", eM / 2],
                ["year", eM]
            ];
        mA.registerClass(MA);
        var kA = mA.prototype,
            DA = wA.prototype,
            AA = oi,
            PA = Math.floor,
            LA = Math.ceil,
            NA = Math.pow,
            OA = Math.log,
            EA = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = "log", t.base = 10, t._originalScale = new wA, t._interval = 0, t
                }
                return t(n, e), n.prototype.getTicks = function (e) {
                    var t = this._originalScale,
                        n = this._extent,
                        i = t.getExtent(),
                        r = DA.getTicks.call(this, e);
                    return y(r, function (e) {
                        var t = e.value,
                            r = oi(NA(this.base, t));
                        return r = t === n[0] && this._fixMin ? Xh(r, i[0]) : r, r = t === n[1] && this._fixMax ? Xh(r, i[1]) : r, {
                            value: r
                        }
                    }, this)
                }, n.prototype.setExtent = function (e, t) {
                    var n = OA(this.base);
                    e = OA(Math.max(0, e)) / n, t = OA(Math.max(0, t)) / n, DA.setExtent.call(this, e, t)
                }, n.prototype.getExtent = function () {
                    var e = this.base,
                        t = kA.getExtent.call(this);
                    t[0] = NA(e, t[0]), t[1] = NA(e, t[1]);
                    var n = this._originalScale,
                        i = n.getExtent();
                    return this._fixMin && (t[0] = Xh(t[0], i[0])), this._fixMax && (t[1] = Xh(t[1], i[1])), t
                }, n.prototype.unionExtent = function (e) {
                    this._originalScale.unionExtent(e);
                    var t = this.base;
                    e[0] = OA(e[0]) / OA(t), e[1] = OA(e[1]) / OA(t), kA.unionExtent.call(this, e)
                }, n.prototype.unionExtentFromData = function (e, t) {
                    this.unionExtent(e.getApproximateExtent(t))
                }, n.prototype.calcNiceTicks = function (e) {
                    e = e || 10;
                    var t = this._extent,
                        n = t[1] - t[0];
                    if (!(1 / 0 === n || 0 >= n)) {
                        var i = mi(n),
                            r = e / n * i;
                        for (.5 >= r && (i *= 10); !isNaN(i) && Math.abs(i) < 1 && Math.abs(i) > 0;) i *= 10;
                        var o = [oi(LA(t[0] / i) * i), oi(PA(t[1] / i) * i)];
                        this._interval = i, this._niceExtent = o
                    }
                }, n.prototype.calcNiceExtent = function (e) {
                    DA.calcNiceExtent.call(this, e), this._fixMin = e.fixMin, this._fixMax = e.fixMax
                }, n.prototype.parse = function (e) {
                    return e
                }, n.prototype.contain = function (e) {
                    return e = OA(e) / OA(this.base), wh(e, this._extent)
                }, n.prototype.normalize = function (e) {
                    return e = OA(e) / OA(this.base), bh(e, this._extent)
                }, n.prototype.scale = function (e) {
                    return e = Sh(e, this._extent), NA(this.base, e)
                }, n.type = "log", n
            }(mA),
            RA = EA.prototype;
        RA.getMinorTicks = DA.getMinorTicks, RA.getLabel = DA.getLabel, mA.registerClass(EA);
        var zA = function () {
                function e(e, t, n) {
                    this._prepareParams(e, t, n)
                }
                return e.prototype._prepareParams = function (e, t, n) {
                    n[1] < n[0] && (n = [NaN, NaN]), this._dataMin = n[0], this._dataMax = n[1];
                    var i = this._isOrdinal = "ordinal" === e.type;
                    this._needCrossZero = "interval" === e.type && t.getNeedCrossZero && t.getNeedCrossZero();
                    var r = this._modelMinRaw = t.get("min", !0);
                    C(r) ? this._modelMinNum = Uh(e, r({
                        min: n[0],
                        max: n[1]
                    })) : "dataMin" !== r && (this._modelMinNum = Uh(e, r));
                    var o = this._modelMaxRaw = t.get("max", !0);
                    if (C(o) ? this._modelMaxNum = Uh(e, o({
                            min: n[0],
                            max: n[1]
                        })) : "dataMax" !== o && (this._modelMaxNum = Uh(e, o)), i) this._axisDataLen = t.getCategories().length;
                    else {
                        var a = t.get("boundaryGap"),
                            s = T(a) ? a : [a || 0, a || 0];
                        this._boundaryGapInner = "boolean" == typeof s[0] || "boolean" == typeof s[1] ? [0, 0] : [Hn(s[0], 1), Hn(s[1], 1)]
                    }
                }, e.prototype.calculate = function () {
                    var e = this._isOrdinal,
                        t = this._dataMin,
                        n = this._dataMax,
                        i = this._axisDataLen,
                        r = this._boundaryGapInner,
                        o = e ? null : n - t || Math.abs(t),
                        a = "dataMin" === this._modelMinRaw ? t : this._modelMinNum,
                        s = "dataMax" === this._modelMaxRaw ? n : this._modelMaxNum,
                        l = null != a,
                        u = null != s;
                    null == a && (a = e ? i ? 0 : NaN : t - r[0] * o), null == s && (s = e ? i ? i - 1 : NaN : n + r[1] * o), (null == a || !isFinite(a)) && (a = NaN), (null == s || !isFinite(s)) && (s = NaN);
                    var c = R(a) || R(s) || e && !i;
                    this._needCrossZero && (a > 0 && s > 0 && !l && (a = 0), 0 > a && 0 > s && !u && (s = 0));
                    var p = this._determinedMin,
                        h = this._determinedMax;
                    return null != p && (a = p, l = !0), null != h && (s = h, u = !0), {
                        min: a,
                        max: s,
                        minFixed: l,
                        maxFixed: u,
                        isBlank: c
                    }
                }, e.prototype.modifyDataMinMax = function (e, t) {
                    this[FA[e]] = t
                }, e.prototype.setDeterminedMinMax = function (e, t) {
                    var n = BA[e];
                    this[n] = t
                }, e.prototype.freeze = function () {
                    this.frozen = !0
                }, e
            }(),
            BA = {
                min: "_determinedMin",
                max: "_determinedMax"
            },
            FA = {
                min: "_dataMin",
                max: "_dataMax"
            },
            HA = function () {
                function e() {}
                return e.prototype.getNeedCrossZero = function () {
                    var e = this.option;
                    return !e.scale
                }, e.prototype.getCoordSysModel = function () {}, e
            }(),
            GA = {
                isDimensionStacked: sh,
                enableDataStack: oh,
                getStackedDimension: lh
            },
            VA = (Object.freeze || Object)({
                createList: ad,
                getLayoutRect: nl,
                dataStack: GA,
                createScale: sd,
                mixinAxisModelCommonMethods: ld,
                getECData: KS,
                createTextStyle: ud,
                createDimensions: Jp,
                createSymbol: Dc,
                enableHoverEmphasis: Yo
            }),
            WA = [],
            jA = {
                registerPreprocessor: Ip,
                registerProcessor: kp,
                registerPostInit: Dp,
                registerPostUpdate: Ap,
                registerUpdateLifecycle: Pp,
                registerAction: Lp,
                registerCoordinateSystem: Np,
                registerLayout: Ep,
                registerVisual: Rp,
                registerTransform: XD,
                registerLoading: Bp,
                registerMap: Hp,
                registerImpl: gp,
                PRIORITY: Qk,
                ComponentModel: fM,
                ComponentView: LI,
                SeriesModel: PI,
                ChartView: EI,
                registerComponentModel: function (e) {
                    fM.registerClass(e)
                },
                registerComponentView: function (e) {
                    LI.registerClass(e)
                },
                registerSeriesModel: function (e) {
                    PI.registerClass(e)
                },
                registerChartView: function (e) {
                    EI.registerClass(e)
                },
                registerSubTypeDefaulter: function (e, t) {
                    fM.registerSubTypeDefaulter(e, t)
                },
                registerPainter: function (e, t) {
                    ti(e, t)
                }
            },
            XA = 1e-8,
            YA = [],
            UA = function () {
                function e(e) {
                    this.name = e
                }
                return e.prototype.setCenter = function (e) {
                    this._center = e
                }, e.prototype.getCenter = function () {
                    var e = this._center;
                    return e || (e = this._center = this.calcCenter()), e
                }, e
            }(),
            qA = function () {
                function e(e, t) {
                    this.type = "polygon", this.exterior = e, this.interiors = t
                }
                return e
            }(),
            ZA = function () {
                function e(e) {
                    this.type = "linestring", this.points = e
                }
                return e
            }(),
            $A = function (e) {
                function n(t, n, i) {
                    var r = e.call(this, t) || this;
                    return r.type = "geoJSON", r.geometries = n, r._center = i && [i[0], i[1]], r
                }
                return t(n, e), n.prototype.calcCenter = function () {
                    for (var e, t = this.geometries, n = 0, i = 0; i < t.length; i++) {
                        var r = t[i],
                            o = r.exterior,
                            a = o && o.length;
                        a > n && (e = r, n = a)
                    }
                    if (e) return gd(e.exterior);
                    var s = this.getBoundingRect();
                    return [s.x + s.width / 2, s.y + s.height / 2]
                }, n.prototype.getBoundingRect = function (e) {
                    var t = this._rect;
                    if (t && !e) return t;
                    var n = [1 / 0, 1 / 0],
                        i = [-1 / 0, -1 / 0],
                        r = this.geometries;
                    return m(r, function (t) {
                        "polygon" === t.type ? fd(t.exterior, n, i, e) : m(t.points, function (t) {
                            fd(t, n, i, e)
                        })
                    }), isFinite(n[0]) && isFinite(n[1]) && isFinite(i[0]) && isFinite(i[1]) || (n[0] = n[1] = i[0] = i[1] = 0), t = new F_(n[0], n[1], i[0] - n[0], i[1] - n[1]), e || (this._rect = t), t
                }, n.prototype.contain = function (e) {
                    var t = this.getBoundingRect(),
                        n = this.geometries;
                    if (!t.contain(e[0], e[1])) return !1;
                    e: for (var i = 0, r = n.length; r > i; i++) {
                        var o = n[i];
                        if ("polygon" === o.type) {
                            var a = o.exterior,
                                s = o.interiors;
                            if (hd(a, e[0], e[1])) {
                                for (var l = 0; l < (s ? s.length : 0); l++)
                                    if (hd(s[l], e[0], e[1])) continue e;
                                return !0
                            }
                        }
                    }
                    return !1
                }, n.prototype.transformTo = function (e, t, n, i) {
                    var r = this.getBoundingRect(),
                        o = r.width / r.height;
                    n ? i || (i = n / o) : n = o * i;
                    for (var a = new F_(e, t, n, i), s = r.calculateTransform(a), l = this.geometries, u = 0; u < l.length; u++) {
                        var c = l[u];
                        "polygon" === c.type ? (dd(c.exterior, s), m(c.interiors, function (e) {
                            dd(e, s)
                        })) : m(c.points, function (e) {
                            dd(e, s)
                        })
                    }
                    r = this._rect, r.copy(a), this._center = [r.x + r.width / 2, r.y + r.height / 2]
                }, n.prototype.cloneShallow = function (e) {
                    null == e && (e = this.name);
                    var t = new n(e, this.geometries, this._center);
                    return t._rect = this._rect, t.transformTo = null, t
                }, n
            }(UA),
            KA = function (e) {
                function n(t, n) {
                    var i = e.call(this, t) || this;
                    return i.type = "geoSVG", i._elOnlyForCalculate = n, i
                }
                return t(n, e), n.prototype.calcCenter = function () {
                    for (var e = this._elOnlyForCalculate, t = e.getBoundingRect(), n = [t.x + t.width / 2, t.y + t.height / 2], i = Be(YA), r = e; r && !r.isGeoSVGGraphicRoot;) He(i, r.getLocalTransform(), i), r = r.parent;
                    return je(i, i), me(n, n, i), n
                }, n
            }(UA),
            JA = (Object.freeze || Object)({
                linearMap: ii,
                round: oi,
                asc: ai,
                getPrecision: si,
                getPrecisionSafe: li,
                getPixelPrecision: ui,
                getPercentWithPrecision: ci,
                MAX_SAFE_INTEGER: Sb,
                remRadian: di,
                isRadianAroundZero: fi,
                parseDate: gi,
                quantity: mi,
                quantityExponent: yi,
                nice: vi,
                quantile: xi,
                reformIntervals: _i,
                isNumeric: bi,
                numericToNumber: wi
            }),
            QA = (Object.freeze || Object)({
                parse: gi,
                format: Is
            }),
            eP = (Object.freeze || Object)({
                extendShape: Pa,
                extendPath: La,
                makePath: Ea,
                makeImage: Ra,
                mergePath: bC,
                resizePath: Ba,
                createIcon: Za,
                updateProps: Ta,
                initProps: Ca,
                getTransform: Ga,
                clipPointsByRect: Ua,
                clipRectByRect: qa,
                registerShape: Na,
                getShapeClass: Oa,
                Group: gb,
                Image: FS,
                Text: US,
                Circle: AT,
                Ellipse: LT,
                Sector: XT,
                Ring: UT,
                Polygon: ZT,
                Polyline: KT,
                Rect: WS,
                Line: eC,
                BezierCurve: iC,
                Arc: oC,
                IncrementalDisplayable: mC,
                CompoundPath: aC,
                LinearGradient: lC,
                RadialGradient: uC,
                BoundingRect: F_
            }),
            tP = (Object.freeze || Object)({
                addCommas: Ys,
                toCamelCase: Us,
                normalizeCssArray: aM,
                encodeHTML: Me,
                formatTpl: Zs,
                getTooltipMarker: $s,
                formatTime: Ks,
                capitalFirst: Js,
                truncateText: mr,
                getTextRect: Xs
            }),
            nP = (Object.freeze || Object)({
                map: y,
                each: m,
                indexOf: h,
                inherits: d,
                reduce: v,
                filter: x,
                bind: o_,
                curry: S,
                isArray: T,
                isString: M,
                isObject: D,
                isFunction: C,
                extend: c,
                defaults: p,
                clone: s,
                merge: l
            }),
            iP = Ui(),
            rP = [0, 1],
            oP = function () {
                function e(e, t, n) {
                    this.onBand = !1, this.inverse = !1, this.dim = e, this.scale = t, this._extent = n || [0, 0]
                }
                return e.prototype.contain = function (e) {
                    var t = this._extent,
                        n = Math.min(t[0], t[1]),
                        i = Math.max(t[0], t[1]);
                    return e >= n && i >= e
                }, e.prototype.containData = function (e) {
                    return this.scale.contain(e)
                }, e.prototype.getExtent = function () {
                    return this._extent.slice()
                }, e.prototype.getPixelPrecision = function (e) {
                    return ui(e || this.scale.getExtent(), this._extent)
                }, e.prototype.setExtent = function (e, t) {
                    var n = this._extent;
                    n[0] = e, n[1] = t
                }, e.prototype.dataToCoord = function (e, t) {
                    var n = this._extent,
                        i = this.scale;
                    return e = i.normalize(e), this.onBand && "ordinal" === i.type && (n = n.slice(), Od(n, i.count())), ii(e, rP, n, t)
                }, e.prototype.coordToData = function (e, t) {
                    var n = this._extent,
                        i = this.scale;
                    this.onBand && "ordinal" === i.type && (n = n.slice(), Od(n, i.count()));
                    var r = ii(e, n, rP, t);
                    return this.scale.scale(r)
                }, e.prototype.pointToData = function () {}, e.prototype.getTicksCoords = function (e) {
                    e = e || {};
                    var t = e.tickModel || this.getTickModel(),
                        n = wd(this, t),
                        i = n.ticks,
                        r = y(i, function (e) {
                            return {
                                coord: this.dataToCoord("ordinal" === this.scale.type ? this.scale.getRawOrdinalNumber(e) : e),
                                tickValue: e
                            }
                        }, this),
                        o = t.get("alignWithLabel");
                    return Ed(this, r, o, e.clamp), r
                }, e.prototype.getMinorTicksCoords = function () {
                    if ("ordinal" === this.scale.type) return [];
                    var e = this.model.getModel("minorTick"),
                        t = e.get("splitNumber");
                    t > 0 && 100 > t || (t = 5);
                    var n = this.scale.getMinorTicks(t),
                        i = y(n, function (e) {
                            return y(e, function (e) {
                                return {
                                    coord: this.dataToCoord(e),
                                    tickValue: e
                                }
                            }, this)
                        }, this);
                    return i
                }, e.prototype.getViewLabels = function () {
                    return _d(this).labels
                }, e.prototype.getLabelModel = function () {
                    return this.model.getModel("axisLabel")
                }, e.prototype.getTickModel = function () {
                    return this.model.getModel("axisTick")
                }, e.prototype.getBandWidth = function () {
                    var e = this._extent,
                        t = this.scale.getExtent(),
                        n = t[1] - t[0] + (this.onBand ? 1 : 0);
                    0 === n && (n = 1);
                    var i = Math.abs(e[1] - e[0]);
                    return Math.abs(i) / n
                }, e.prototype.calculateCategoryInterval = function () {
                    return Ad(this)
                }, e
            }(),
            aP = 2 * Math.PI,
            sP = SS.CMD,
            lP = ["top", "right", "bottom", "left"],
            uP = [],
            cP = new A_,
            pP = new A_,
            hP = new A_,
            dP = new A_,
            fP = new A_,
            gP = [],
            mP = new A_,
            yP = ["align", "verticalAlign", "width", "height", "fontSize"],
            vP = new ab,
            xP = Ui(),
            _P = Ui(),
            wP = ["x", "y", "rotation"],
            bP = function () {
                function e() {
                    this._labelList = [], this._chartViewList = []
                }
                return e.prototype.clearLabels = function () {
                    this._labelList = [], this._chartViewList = []
                }, e.prototype._addLabel = function (e, t, n, i, r) {
                    var o = i.style,
                        a = i.__hostTarget,
                        s = a.textConfig || {},
                        l = i.getComputedTransform(),
                        u = i.getBoundingRect().plain();
                    F_.applyTransform(u, u, l), l ? vP.setLocalTransform(l) : (vP.x = vP.y = vP.rotation = vP.originX = vP.originY = 0, vP.scaleX = vP.scaleY = 1);
                    var c, p = i.__hostTarget;
                    if (p) {
                        c = p.getBoundingRect().plain();
                        var h = p.getComputedTransform();
                        F_.applyTransform(c, c, h)
                    }
                    var d = c && p.getTextGuideLine();
                    this._labelList.push({
                        label: i,
                        labelLine: d,
                        seriesModel: n,
                        dataIndex: e,
                        dataType: t,
                        layoutOption: r,
                        computedLayoutOption: null,
                        rect: u,
                        hostRect: c,
                        priority: c ? c.width * c.height : 0,
                        defaultAttr: {
                            ignore: i.ignore,
                            labelGuideIgnore: d && d.ignore,
                            x: vP.x,
                            y: vP.y,
                            scaleX: vP.scaleX,
                            scaleY: vP.scaleY,
                            rotation: vP.rotation,
                            style: {
                                x: o.x,
                                y: o.y,
                                align: o.align,
                                verticalAlign: o.verticalAlign,
                                width: o.width,
                                height: o.height,
                                fontSize: o.fontSize
                            },
                            cursor: i.cursor,
                            attachedPos: s.position,
                            attachedRot: s.rotation
                        }
                    })
                }, e.prototype.addLabelsOfSeries = function (e) {
                    var t = this;
                    this._chartViewList.push(e);
                    var n = e.__model,
                        i = n.get("labelLayout");
                    (C(i) || w(i).length) && e.group.traverse(function (e) {
                        if (e.ignore) return !0;
                        var r = e.getTextContent(),
                            o = KS(e);
                        r && !r.disableLabelLayout && t._addLabel(o.dataIndex, o.dataType, n, r, i)
                    })
                }, e.prototype.updateLayoutConfig = function (e) {
                    function t(e, t) {
                        return function () {
                            Yd(e, t)
                        }
                    }
                    for (var n = e.getWidth(), i = e.getHeight(), r = 0; r < this._labelList.length; r++) {
                        var o = this._labelList[r],
                            a = o.label,
                            s = a.__hostTarget,
                            l = o.defaultAttr,
                            u = void 0;
                        u = C(o.layoutOption) ? o.layoutOption(af(o, s)) : o.layoutOption, u = u || {}, o.computedLayoutOption = u;
                        var c = Math.PI / 180;
                        s && s.setTextConfig({
                            local: !1,
                            position: null != u.x || null != u.y ? null : l.attachedPos,
                            rotation: null != u.rotate ? u.rotate * c : l.attachedRot,
                            offset: [u.dx || 0, u.dy || 0]
                        });
                        var p = !1;
                        if (null != u.x ? (a.x = ri(u.x, n), a.setStyle("x", 0), p = !0) : (a.x = l.x, a.setStyle("x", l.style.x)), null != u.y ? (a.y = ri(u.y, i), a.setStyle("y", 0), p = !0) : (a.y = l.y, a.setStyle("y", l.style.y)), u.labelLinePoints) {
                            var h = s.getTextGuideLine();
                            h && (h.setShape({
                                points: u.labelLinePoints
                            }), p = !1)
                        }
                        var d = xP(a);
                        d.needsUpdateLabelLine = p, a.rotation = null != u.rotate ? u.rotate * c : l.rotation, a.scaleX = l.scaleX, a.scaleY = l.scaleY;
                        for (var f = 0; f < yP.length; f++) {
                            var g = yP[f];
                            a.setStyle(g, null != u[g] ? u[g] : l.style[g])
                        }
                        if (u.draggable) {
                            if (a.draggable = !0, a.cursor = "move", s) {
                                var m = o.seriesModel;
                                if (null != o.dataIndex) {
                                    var y = o.seriesModel.getData(o.dataType);
                                    m = y.getItemModel(o.dataIndex)
                                }
                                a.on("drag", t(s, m.getModel("labelLine")))
                            }
                        } else a.off("drag"), a.cursor = l.cursor
                    }
                }, e.prototype.layout = function (e) {
                    var t = e.getWidth(),
                        n = e.getHeight(),
                        i = Qd(this._labelList),
                        r = x(i, function (e) {
                            return "shiftX" === e.layoutOption.moveOverlap
                        }),
                        o = x(i, function (e) {
                            return "shiftY" === e.layoutOption.moveOverlap
                        });
                    tf(r, 0, t), nf(o, 0, n);
                    var a = x(i, function (e) {
                        return e.layoutOption.hideOverlap
                    });
                    rf(a)
                }, e.prototype.processLabelsOverall = function () {
                    var e = this;
                    m(this._chartViewList, function (t) {
                        var n = t.__model,
                            i = t.ignoreLabelLineUpdate,
                            r = n.isAnimationEnabled();
                        t.group.traverse(function (t) {
                            if (t.ignore && !t.forceLabelAnimation) return !0;
                            var o = !i,
                                a = t.getTextContent();
                            !o && a && (o = xP(a).needsUpdateLabelLine), o && e._updateLabelLine(t, n), r && e._animateLabels(t, n)
                        })
                    })
                }, e.prototype._updateLabelLine = function (e, t) {
                    var n = e.getTextContent(),
                        i = KS(e),
                        r = i.dataIndex;
                    if (n && null != r) {
                        var o = t.getData(i.dataType),
                            a = o.getItemModel(r),
                            s = {},
                            l = o.getItemVisual(r, "style"),
                            u = o.getVisual("drawType");
                        s.stroke = l[u];
                        var c = a.getModel("labelLine");
                        Kd(e, Jd(a), s), Yd(e, c)
                    }
                }, e.prototype._animateLabels = function (e, t) {
                    var n = e.getTextContent(),
                        i = e.getTextGuideLine();
                    if (n && (e.forceLabelAnimation || !n.ignore && !n.invisible && !e.disableLabelAnimation && !Ma(e))) {
                        var r = xP(n),
                            o = r.oldLayout,
                            a = KS(e),
                            s = a.dataIndex,
                            l = {
                                x: n.x,
                                y: n.y,
                                rotation: n.rotation
                            },
                            u = t.getData(a.dataType);
                        if (o) {
                            n.attr(o);
                            var c = e.prevStates;
                            c && (h(c, "select") >= 0 && n.attr(r.oldLayoutSelect), h(c, "emphasis") >= 0 && n.attr(r.oldLayoutEmphasis)), Ta(n, l, t, s)
                        } else if (n.attr(l), !DC(n).valueAnimation) {
                            var p = B(n.style.opacity, 1);
                            n.style.opacity = 0, Ca(n, {
                                style: {
                                    opacity: p
                                }
                            }, t, s)
                        }
                        if (r.oldLayout = l, n.states.select) {
                            var d = r.oldLayoutSelect = {};
                            sf(d, l, wP), sf(d, n.states.select, wP)
                        }
                        if (n.states.emphasis) {
                            var f = r.oldLayoutEmphasis = {};
                            sf(f, l, wP), sf(f, n.states.emphasis, wP)
                        }
                        fs(n, s, u, t, t)
                    }
                    if (i && !i.ignore && !i.invisible) {
                        r = _P(i), o = r.oldLayout;
                        var g = {
                            points: i.shape.points
                        };
                        o ? (i.attr({
                            shape: o
                        }), Ta(i, {
                            shape: g
                        }, t)) : (i.setShape(g), i.style.strokePercent = 0, Ca(i, {
                            style: {
                                strokePercent: 1
                            }
                        }, t)), r.oldLayout = g
                    }
                }, e
            }(),
            SP = Ui();
        cd(lf);
        var TP = function (e) {
                function n(t, n, i) {
                    var r, o = e.call(this) || this;
                    o.motionBlur = !1, o.lastFrameAlpha = .7, o.dpr = 1, o.virtual = !1, o.config = {}, o.incremental = !1, o.zlevel = 0, o.maxRepaintRectCount = 5, o.__dirty = !0, o.__firstTimePaint = !0, o.__used = !1, o.__drawIndex = 0, o.__startIndex = 0, o.__endIndex = 0, o.__prevStartIndex = null, o.__prevEndIndex = null, i = i || Zw, "string" == typeof t ? r = uf(t, n, i) : D(t) && (r = t, t = r.id), o.id = t, o.dom = r;
                    var a = r.style;
                    return a && (Z(r), r.onselectstart = function () {
                        return !1
                    }, a.padding = "0", a.margin = "0", a.borderWidth = "0"), o.painter = n, o.dpr = i, o
                }
                return t(n, e), n.prototype.getElementCount = function () {
                    return this.__endIndex - this.__startIndex
                }, n.prototype.afterBrush = function () {
                    this.__prevStartIndex = this.__startIndex, this.__prevEndIndex = this.__endIndex
                }, n.prototype.initContext = function () {
                    this.ctx = this.dom.getContext("2d"), this.ctx.dpr = this.dpr
                }, n.prototype.setUnpainted = function () {
                    this.__firstTimePaint = !0
                }, n.prototype.createBackBuffer = function () {
                    var e = this.dpr;
                    this.domBack = uf("back-" + this.id, this.painter, e), this.ctxBack = this.domBack.getContext("2d"), 1 !== e && this.ctxBack.scale(e, e)
                }, n.prototype.createRepaintRects = function (e, t, n, i) {
                    function r(e) {
                        if (e.isFinite() && !e.isZero())
                            if (0 === o.length) {
                                var t = new F_(0, 0, 0, 0);
                                t.copy(e), o.push(t)
                            } else {
                                for (var n = !1, i = 1 / 0, r = 0, u = 0; u < o.length; ++u) {
                                    var c = o[u];
                                    if (c.intersect(e)) {
                                        var p = new F_(0, 0, 0, 0);
                                        p.copy(c), p.union(e), o[u] = p, n = !0;
                                        break
                                    }
                                    if (s) {
                                        l.copy(e), l.union(c);
                                        var h = e.width * e.height,
                                            d = c.width * c.height,
                                            f = l.width * l.height,
                                            g = f - h - d;
                                        i > g && (i = g, r = u)
                                    }
                                }
                                if (s && (o[r].union(e), n = !0), !n) {
                                    t = new F_(0, 0, 0, 0);
                                    t.copy(e), o.push(t)
                                }
                                s || (s = o.length >= a)
                            }
                    }
                    if (this.__firstTimePaint) return this.__firstTimePaint = !1, null;
                    for (var o = [], a = this.maxRepaintRectCount, s = !1, l = new F_(0, 0, 0, 0), u = this.__startIndex; u < this.__endIndex; ++u) {
                        var c = e[u];
                        if (c) {
                            var p = c.shouldBePainted(n, i, !0, !0),
                                h = c.__isRendered && (c.__dirty & Z_ || !p) ? c.getPrevPaintRect() : null;
                            h && r(h);
                            var d = p && (c.__dirty & Z_ || !c.__isRendered) ? c.getPaintRect() : null;
                            d && r(d)
                        }
                    }
                    for (u = this.__prevStartIndex; u < this.__prevEndIndex; ++u) {
                        c = t[u], p = c.shouldBePainted(n, i, !0, !0);
                        if (c && (!p || !c.__zr) && c.__isRendered) {
                            h = c.getPrevPaintRect();
                            h && r(h)
                        }
                    }
                    var f;
                    do {
                        f = !1;
                        for (u = 0; u < o.length;)
                            if (o[u].isZero()) o.splice(u, 1);
                            else {
                                for (var g = u + 1; g < o.length;) o[u].intersect(o[g]) ? (f = !0, o[u].union(o[g]), o.splice(g, 1)) : g++;
                                u++
                            }
                    } while (f);
                    return this._paintRects = o, o
                }, n.prototype.debugGetPaintRects = function () {
                    return (this._paintRects || []).slice()
                }, n.prototype.resize = function (e, t) {
                    var n = this.dpr,
                        i = this.dom,
                        r = i.style,
                        o = this.domBack;
                    r && (r.width = e + "px", r.height = t + "px"), i.width = e * n, i.height = t * n, o && (o.width = e * n, o.height = t * n, 1 !== n && this.ctxBack.scale(n, n))
                }, n.prototype.clear = function (e, t, n) {
                    function i(e, n, i, r) {
                        if (o.clearRect(e, n, i, r), t && "transparent" !== t) {
                            var a = void 0;
                            N(t) ? (a = t.__canvasGradient || Ec(o, t, {
                                x: 0,
                                y: 0,
                                width: i,
                                height: r
                            }), t.__canvasGradient = a) : O(t) && (t.scaleX = t.scaleX || c, t.scaleY = t.scaleY || c, a = Yc(o, t, {
                                dirty: function () {
                                    p.setUnpainted(), p.__painter.refresh()
                                }
                            })), o.save(), o.fillStyle = a || t, o.fillRect(e, n, i, r), o.restore()
                        }
                        l && (o.save(), o.globalAlpha = u, o.drawImage(h, e, n, i, r), o.restore())
                    }
                    var r = this.dom,
                        o = this.ctx,
                        a = r.width,
                        s = r.height;
                    t = t || this.clearColor;
                    var l = this.motionBlur && !e,
                        u = this.lastFrameAlpha,
                        c = this.dpr,
                        p = this;
                    l && (this.domBack || this.createBackBuffer(), this.ctxBack.globalCompositeOperation = "copy", this.ctxBack.drawImage(r, 0, 0, a / c, s / c));
                    var h = this.domBack;
                    !n || l ? i(0, 0, a, s) : n.length && m(n, function (e) {
                        i(e.x * c, e.y * c, e.width * c, e.height * c)
                    })
                }, n
            }(y_),
            CP = 1e5,
            MP = 314159,
            IP = .01,
            kP = .001,
            DP = function () {
                function e(e, t, n) {
                    this.type = "canvas", this._zlevelList = [], this._prevDisplayList = [], this._layers = {}, this._layerConfig = {}, this._needsManuallyCompositing = !1, this.type = "canvas";
                    var i = !e.nodeName || "CANVAS" === e.nodeName.toUpperCase();
                    this._opts = n = c({}, n || {}), this.dpr = n.devicePixelRatio || Zw, this._singleCanvas = i, this.root = e;
                    var r = e.style;
                    r && (Z(e), e.innerHTML = ""), this.storage = t;
                    var o = this._zlevelList;
                    this._prevDisplayList = [];
                    var a = this._layers;
                    if (i) {
                        var s = e,
                            l = s.width,
                            u = s.height;
                        null != n.width && (l = n.width), null != n.height && (u = n.height), this.dpr = n.devicePixelRatio || 1, s.width = l * this.dpr, s.height = u * this.dpr, this._width = l, this._height = u;
                        var p = new TP(s, this, this.dpr);
                        p.__builtin__ = !0, p.initContext(), a[MP] = p, p.zlevel = MP, o.push(MP), this._domRoot = e
                    } else {
                        this._width = Bc(e, 0, n), this._height = Bc(e, 1, n);
                        var h = this._domRoot = pf(this._width, this._height);
                        e.appendChild(h)
                    }
                }
                return e.prototype.getType = function () {
                    return "canvas"
                }, e.prototype.isSingleCanvas = function () {
                    return this._singleCanvas
                }, e.prototype.getViewportRoot = function () {
                    return this._domRoot
                }, e.prototype.getViewportRootOffset = function () {
                    var e = this.getViewportRoot();
                    return e ? {
                        offsetLeft: e.offsetLeft || 0,
                        offsetTop: e.offsetTop || 0
                    } : void 0
                }, e.prototype.refresh = function (e) {
                    var t = this.storage.getDisplayList(!0),
                        n = this._prevDisplayList,
                        i = this._zlevelList;
                    this._redrawId = Math.random(), this._paintList(t, n, e, this._redrawId);
                    for (var r = 0; r < i.length; r++) {
                        var o = i[r],
                            a = this._layers[o];
                        if (!a.__builtin__ && a.refresh) {
                            var s = 0 === r ? this._backgroundColor : null;
                            a.refresh(s)
                        }
                    }
                    return this._opts.useDirtyRect && (this._prevDisplayList = t.slice()), this
                }, e.prototype.refreshHover = function () {
                    this._paintHoverList(this.storage.getDisplayList(!1))
                }, e.prototype._paintHoverList = function (e) {
                    var t = e.length,
                        n = this._hoverlayer;
                    if (n && n.clear(), t) {
                        for (var i, r = {
                                inHover: !0,
                                viewWidth: this._width,
                                viewHeight: this._height
                            }, o = 0; t > o; o++) {
                            var a = e[o];
                            a.__inHover && (n || (n = this._hoverlayer = this.getLayer(CP)), i || (i = n.ctx, i.save()), ap(i, a, r, o === t - 1))
                        }
                        i && i.restore()
                    }
                }, e.prototype.getHoverLayer = function () {
                    return this.getLayer(CP)
                }, e.prototype.paintOne = function (e, t) {
                    op(e, t)
                }, e.prototype._paintList = function (e, t, n, i) {
                    if (this._redrawId === i) {
                        n = n || !1, this._updateLayerStatus(e);
                        var r = this._doPaintList(e, t, n),
                            o = r.finished,
                            a = r.needsRefreshHover;
                        if (this._needsManuallyCompositing && this._compositeManually(), a && this._paintHoverList(e), o) this.eachLayer(function (e) {
                            e.afterBrush && e.afterBrush()
                        });
                        else {
                            var s = this;
                            ew(function () {
                                s._paintList(e, t, n, i)
                            })
                        }
                    }
                }, e.prototype._compositeManually = function () {
                    var e = this.getLayer(MP).ctx,
                        t = this._domRoot.width,
                        n = this._domRoot.height;
                    e.clearRect(0, 0, t, n), this.eachBuiltinLayer(function (i) {
                        i.virtual && e.drawImage(i.dom, 0, 0, t, n)
                    })
                }, e.prototype._doPaintList = function (e, t, n) {
                    for (var i = this, r = [], o = this._opts.useDirtyRect, a = 0; a < this._zlevelList.length; a++) {
                        var s = this._zlevelList[a],
                            l = this._layers[s];
                        l.__builtin__ && l !== this._hoverlayer && (l.__dirty || n) && r.push(l)
                    }
                    for (var u = !0, c = !1, p = function (a) {
                            var s = r[a],
                                l = s.ctx,
                                p = o && s.createRepaintRects(e, t, h._width, h._height),
                                d = n ? s.__startIndex : s.__drawIndex,
                                f = !n && s.incremental && Date.now,
                                g = f && Date.now(),
                                m = s.zlevel === h._zlevelList[0] ? h._backgroundColor : null;
                            if (s.__startIndex === s.__endIndex) s.clear(!1, m, p);
                            else if (d === s.__startIndex) {
                                var y = e[d];
                                y.incremental && y.notClear && !n || s.clear(!1, m, p)
                            } - 1 === d && (console.error("For some unknown reason. drawIndex is -1"), d = s.__startIndex);
                            var v, x = function (t) {
                                var n = {
                                    inHover: !1,
                                    allClipped: !1,
                                    prevEl: null,
                                    viewWidth: i._width,
                                    viewHeight: i._height
                                };
                                for (v = d; v < s.__endIndex; v++) {
                                    var r = e[v];
                                    if (r.__inHover && (c = !0), i._doPaintEl(r, s, o, t, n, v === s.__endIndex - 1), f) {
                                        var a = Date.now() - g;
                                        if (a > 15) break
                                    }
                                }
                                n.prevElClipPaths && l.restore()
                            };
                            if (p)
                                if (0 === p.length) v = s.__endIndex;
                                else
                                    for (var _ = h.dpr, w = 0; w < p.length; ++w) {
                                        var b = p[w];
                                        l.save(), l.beginPath(), l.rect(b.x * _, b.y * _, b.width * _, b.height * _), l.clip(), x(b), l.restore()
                                    } else l.save(), x(), l.restore();
                            s.__drawIndex = v, s.__drawIndex < s.__endIndex && (u = !1)
                        }, h = this, d = 0; d < r.length; d++) p(d);
                    return zx.wxa && m(this._layers, function (e) {
                        e && e.ctx && e.ctx.draw && e.ctx.draw()
                    }), {
                        finished: u,
                        needsRefreshHover: c
                    }
                }, e.prototype._doPaintEl = function (e, t, n, i, r, o) {
                    var a = t.ctx;
                    if (n) {
                        var s = e.getPaintRect();
                        (!i || s && s.intersect(i)) && (ap(a, e, r, o), e.setPrevPaintRect(s))
                    } else ap(a, e, r, o)
                }, e.prototype.getLayer = function (e, t) {
                    this._singleCanvas && !this._needsManuallyCompositing && (e = MP);
                    var n = this._layers[e];
                    return n || (n = new TP("zr_" + e, this, this.dpr), n.zlevel = e, n.__builtin__ = !0, this._layerConfig[e] ? l(n, this._layerConfig[e], !0) : this._layerConfig[e - IP] && l(n, this._layerConfig[e - IP], !0), t && (n.virtual = t), this.insertLayer(e, n), n.initContext()), n
                }, e.prototype.insertLayer = function (e, t) {
                    var n = this._layers,
                        i = this._zlevelList,
                        r = i.length,
                        o = this._domRoot,
                        a = null,
                        s = -1;
                    if (!n[e] && cf(t)) {
                        if (r > 0 && e > i[0]) {
                            for (s = 0; r - 1 > s && !(i[s] < e && i[s + 1] > e); s++);
                            a = n[i[s]]
                        }
                        if (i.splice(s + 1, 0, e), n[e] = t, !t.virtual)
                            if (a) {
                                var l = a.dom;
                                l.nextSibling ? o.insertBefore(t.dom, l.nextSibling) : o.appendChild(t.dom)
                            } else o.firstChild ? o.insertBefore(t.dom, o.firstChild) : o.appendChild(t.dom);
                        t.__painter = this
                    }
                }, e.prototype.eachLayer = function (e, t) {
                    for (var n = this._zlevelList, i = 0; i < n.length; i++) {
                        var r = n[i];
                        e.call(t, this._layers[r], r)
                    }
                }, e.prototype.eachBuiltinLayer = function (e, t) {
                    for (var n = this._zlevelList, i = 0; i < n.length; i++) {
                        var r = n[i],
                            o = this._layers[r];
                        o.__builtin__ && e.call(t, o, r)
                    }
                }, e.prototype.eachOtherLayer = function (e, t) {
                    for (var n = this._zlevelList, i = 0; i < n.length; i++) {
                        var r = n[i],
                            o = this._layers[r];
                        o.__builtin__ || e.call(t, o, r)
                    }
                }, e.prototype.getLayers = function () {
                    return this._layers
                }, e.prototype._updateLayerStatus = function (e) {
                    function t(e) {
                        s && (s.__endIndex !== e && (s.__dirty = !0), s.__endIndex = e)
                    }
                    if (this.eachBuiltinLayer(function (e) {
                            e.__dirty = e.__used = !1
                        }), this._singleCanvas)
                        for (var n = 1; n < e.length; n++) {
                            var i = e[n];
                            if (i.zlevel !== e[n - 1].zlevel || i.incremental) {
                                this._needsManuallyCompositing = !0;
                                break
                            }
                        }
                    var r, o, s = null,
                        l = 0;
                    for (o = 0; o < e.length; o++) {
                        i = e[o];
                        var u = i.zlevel,
                            c = void 0;
                        r !== u && (r = u, l = 0), i.incremental ? (c = this.getLayer(u + kP, this._needsManuallyCompositing), c.incremental = !0, l = 1) : c = this.getLayer(u + (l > 0 ? IP : 0), this._needsManuallyCompositing), c.__builtin__ || a("ZLevel " + u + " has been used by unkown layer " + c.id), c !== s && (c.__used = !0, c.__startIndex !== o && (c.__dirty = !0), c.__startIndex = o, c.__drawIndex = c.incremental ? -1 : o, t(o), s = c), i.__dirty & Z_ && !i.__inHover && (c.__dirty = !0, c.incremental && c.__drawIndex < 0 && (c.__drawIndex = o))
                    }
                    t(o), this.eachBuiltinLayer(function (e) {
                        !e.__used && e.getElementCount() > 0 && (e.__dirty = !0, e.__startIndex = e.__endIndex = e.__drawIndex = 0), e.__dirty && e.__drawIndex < 0 && (e.__drawIndex = e.__startIndex)
                    })
                }, e.prototype.clear = function () {
                    return this.eachBuiltinLayer(this._clearLayer), this
                }, e.prototype._clearLayer = function (e) {
                    e.clear()
                }, e.prototype.setBackgroundColor = function (e) {
                    this._backgroundColor = e, m(this._layers, function (e) {
                        e.setUnpainted()
                    })
                }, e.prototype.configLayer = function (e, t) {
                    if (t) {
                        var n = this._layerConfig;
                        n[e] ? l(n[e], t, !0) : n[e] = t;
                        for (var i = 0; i < this._zlevelList.length; i++) {
                            var r = this._zlevelList[i];
                            if (r === e || r === e + IP) {
                                var o = this._layers[r];
                                l(o, n[e], !0)
                            }
                        }
                    }
                }, e.prototype.delLayer = function (e) {
                    var t = this._layers,
                        n = this._zlevelList,
                        i = t[e];
                    i && (i.dom.parentNode.removeChild(i.dom), delete t[e], n.splice(h(n, e), 1))
                }, e.prototype.resize = function (e, t) {
                    if (this._domRoot.style) {
                        var n = this._domRoot;
                        n.style.display = "none";
                        var i = this._opts,
                            r = this.root;
                        if (null != e && (i.width = e), null != t && (i.height = t), e = Bc(r, 0, i), t = Bc(r, 1, i), n.style.display = "", this._width !== e || t !== this._height) {
                            for (var o in n.style.width = e + "px", n.style.height = t + "px", this._layers) this._layers.hasOwnProperty(o) && this._layers[o].resize(e, t);
                            this.refresh(!0)
                        }
                        this._width = e, this._height = t
                    } else {
                        if (null == e || null == t) return;
                        this._width = e, this._height = t, this.getLayer(MP).resize(e, t)
                    }
                    return this
                }, e.prototype.clearLayer = function (e) {
                    var t = this._layers[e];
                    t && t.clear()
                }, e.prototype.dispose = function () {
                    this.root.innerHTML = "", this.root = this.storage = this._domRoot = this._layers = null
                }, e.prototype.getRenderedCanvas = function (e) {
                    if (e = e || {}, this._singleCanvas && !this._compositeManually) return this._layers[MP].dom;
                    var t = new TP("image", this, e.pixelRatio || this.dpr);
                    t.initContext(), t.clear(!1, e.backgroundColor || this._backgroundColor);
                    var n = t.ctx;
                    if (e.pixelRatio <= this.dpr) {
                        this.refresh();
                        var i = t.dom.width,
                            r = t.dom.height;
                        this.eachLayer(function (e) {
                            e.__builtin__ ? n.drawImage(e.dom, 0, 0, i, r) : e.renderToCanvas && (n.save(), e.renderToCanvas(n), n.restore())
                        })
                    } else
                        for (var o = {
                                inHover: !1,
                                viewWidth: this._width,
                                viewHeight: this._height
                            }, a = this.storage.getDisplayList(!0), s = 0, l = a.length; l > s; s++) {
                            var u = a[s];
                            ap(n, u, o, s === l - 1)
                        }
                    return t.dom
                }, e.prototype.getWidth = function () {
                    return this._width
                }, e.prototype.getHeight = function () {
                    return this._height
                }, e
            }(),
            AP = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = "dataset", t
                }
                return t(n, e), n.prototype.init = function (t, n, i) {
                    e.prototype.init.call(this, t, n, i), this._sourceManager = new TI(this), Cu(this)
                }, n.prototype.mergeOption = function (t, n) {
                    e.prototype.mergeOption.call(this, t, n), Cu(this)
                }, n.prototype.optionUpdated = function () {
                    this._sourceManager.dirty()
                }, n.prototype.getSourceManager = function () {
                    return this._sourceManager
                }, n.type = "dataset", n.defaultOption = {
                    seriesLayoutBy: IM
                }, n
            }(fM),
            PP = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = "dataset", t
                }
                return t(n, e), n.type = "dataset", n
            }(LI);
        cd([hf, df]), cd(lf);
        var LP = {
                average: function (e) {
                    for (var t = 0, n = 0, i = 0; i < e.length; i++) isNaN(e[i]) || (t += e[i], n++);
                    return 0 === n ? NaN : t / n
                },
                sum: function (e) {
                    for (var t = 0, n = 0; n < e.length; n++) t += e[n] || 0;
                    return t
                },
                max: function (e) {
                    for (var t = -1 / 0, n = 0; n < e.length; n++) e[n] > t && (t = e[n]);
                    return isFinite(t) ? t : NaN
                },
                min: function (e) {
                    for (var t = 1 / 0, n = 0; n < e.length; n++) e[n] < t && (t = e[n]);
                    return isFinite(t) ? t : NaN
                },
                nearest: function (e) {
                    return e[0]
                }
            },
            NP = function (e) {
                return Math.round(e.length / 2)
            },
            OP = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t
                }
                return t(n, e), n.prototype.getInitialData = function () {
                    return ph(null, this, {
                        useEncodeDefaulter: !0
                    })
                }, n.prototype.getMarkerPosition = function (e) {
                    var t = this.coordinateSystem;
                    if (t && t.clampData) {
                        var n = t.dataToPoint(t.clampData(e)),
                            i = this.getData(),
                            r = i.getLayout("offset"),
                            o = i.getLayout("size"),
                            a = t.getBaseAxis().isHorizontal() ? 0 : 1;
                        return n[a] += r + o / 2, n
                    }
                    return [NaN, NaN]
                }, n.type = "series.__base_bar__", n.defaultOption = {
                    z: 2,
                    coordinateSystem: "cartesian2d",
                    legendHoverLink: !0,
                    barMinHeight: 0,
                    barMinAngle: 0,
                    large: !1,
                    largeThreshold: 400,
                    progressive: 3e3,
                    progressiveChunkMode: "mod"
                }, n
            }(PI);
        PI.registerClass(OP);
        var EP = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t
                }
                return t(n, e), n.prototype.getInitialData = function () {
                    return ph(null, this, {
                        useEncodeDefaulter: !0,
                        createInvertedIndices: !!this.get("realtimeSort", !0) || null
                    })
                }, n.prototype.getProgressive = function () {
                    return !!this.get("large") && this.get("progressive")
                }, n.prototype.getProgressiveThreshold = function () {
                    var e = this.get("progressiveThreshold"),
                        t = this.get("largeThreshold");
                    return t > e && (e = t), e
                }, n.prototype.brushSelector = function (e, t, n) {
                    return n.rect(t.getItemLayout(e))
                }, n.type = "series.bar", n.dependencies = ["grid", "polar"], n.defaultOption = vs(OP.defaultOption, {
                    clip: !0,
                    roundCap: !1,
                    showBackground: !1,
                    backgroundStyle: {
                        color: "rgba(180, 180, 180, 0.2)",
                        borderColor: null,
                        borderWidth: 0,
                        borderType: "solid",
                        borderRadius: 0,
                        shadowBlur: 0,
                        shadowColor: null,
                        shadowOffsetX: 0,
                        shadowOffsetY: 0,
                        opacity: 1
                    },
                    select: {
                        itemStyle: {
                            borderColor: "#212121"
                        }
                    },
                    realtimeSort: !1
                }), n
            }(OP),
            RP = function () {
                function e() {
                    this.cx = 0, this.cy = 0, this.r0 = 0, this.r = 0, this.startAngle = 0, this.endAngle = 2 * Math.PI, this.clockwise = !0
                }
                return e
            }(),
            zP = function (e) {
                function n(t) {
                    var n = e.call(this, t) || this;
                    return n.type = "sausage", n
                }
                return t(n, e), n.prototype.getDefaultShape = function () {
                    return new RP
                }, n.prototype.buildPath = function (e, t) {
                    var n = t.cx,
                        i = t.cy,
                        r = Math.max(t.r0 || 0, 0),
                        o = Math.max(t.r, 0),
                        a = .5 * (o - r),
                        s = r + a,
                        l = t.startAngle,
                        u = t.endAngle,
                        c = t.clockwise,
                        p = 2 * Math.PI,
                        h = c ? p > u - l : p > l - u;
                    h || (l = u - (c ? p : -p));
                    var d = Math.cos(l),
                        f = Math.sin(l),
                        g = Math.cos(u),
                        m = Math.sin(u);
                    h ? (e.moveTo(d * r + n, f * r + i), e.arc(d * s + n, f * s + i, a, -Math.PI + l, l, !c)) : e.moveTo(d * o + n, f * o + i), e.arc(n, i, o, l, u, !c), e.arc(g * s + n, m * s + i, a, u - 2 * Math.PI, u - Math.PI, !c), 0 !== r && e.arc(n, i, r, u, l, c)
                }, n
            }(OS),
            BP = Math.max,
            FP = Math.min,
            HP = function (e) {
                function n() {
                    var t = e.call(this) || this;
                    return t.type = n.type, t._isFirstFrame = !0, t
                }
                return t(n, e), n.prototype.render = function (e, t, n, i) {
                    this._model = e, this._removeOnRenderedListener(n), this._updateDrawMode(e);
                    var r = e.get("coordinateSystem");
                    ("cartesian2d" === r || "polar" === r) && (this._progressiveEls = null, this._isLargeDraw ? this._renderLarge(e, t, n) : this._renderNormal(e, t, n, i))
                }, n.prototype.incrementalPrepareRender = function (e) {
                    this._clear(), this._updateDrawMode(e), this._updateLargeClip(e)
                }, n.prototype.incrementalRender = function (e, t) {
                    this._progressiveEls = [], this._incrementalRenderLarge(e, t)
                }, n.prototype.eachRendered = function (e) {
                    ns(this._progressiveEls || this.group, e)
                }, n.prototype._updateDrawMode = function (e) {
                    var t = e.pipelineContext.large;
                    (null == this._isLargeDraw || t !== this._isLargeDraw) && (this._isLargeDraw = t, this._clear())
                }, n.prototype._renderNormal = function (e, t, n, i) {
                    function r(e) {
                        var t = YP[u.type](s, e),
                            n = Rf(u, o, t);
                        return n.useStyle(y.getItemStyle()), "cartesian2d" === u.type && n.setShape("r", v), x[e] = n, n
                    }
                    var o, a = this.group,
                        s = e.getData(),
                        l = this._data,
                        u = e.coordinateSystem,
                        c = u.getBaseAxis();
                    "cartesian2d" === u.type ? o = c.isHorizontal() : "polar" === u.type && (o = "angle" === c.dim);
                    var p = e.isAnimationEnabled() ? e : null,
                        h = Mf(e, u);
                    h && this._enableRealtimeSort(h, s, n);
                    var d = e.get("clip", !0) || h,
                        f = Cf(u, s);
                    a.removeClipPath();
                    var g = e.get("roundCap", !0),
                        m = e.get("showBackground", !0),
                        y = e.getModel("backgroundStyle"),
                        v = y.get("borderRadius") || 0,
                        x = [],
                        _ = this._backgroundEls,
                        w = i && i.isInitSort,
                        b = i && "changeAxisOrder" === i.type;
                    s.diff(l).add(function (t) {
                        var n = s.getItemModel(t),
                            i = YP[u.type](s, t, n);
                        if (m && r(t), s.hasValue(t) && XP[u.type](i)) {
                            var l = !1;
                            d && (l = GP[u.type](f, i));
                            var y = VP[u.type](e, s, t, i, o, p, c.model, !1, g);
                            h && (y.forceLabelAnimation = !0), Pf(y, s, t, n, i, e, o, "polar" === u.type), w ? y.attr({
                                shape: i
                            }) : h ? If(h, p, y, i, t, o, !1, !1) : Ca(y, {
                                shape: i
                            }, e, t), s.setItemGraphicEl(t, y), a.add(y), y.ignore = l
                        }
                    }).update(function (t, n) {
                        var i = s.getItemModel(t),
                            S = YP[u.type](s, t, i);
                        if (m) {
                            var T = void 0;
                            0 === _.length ? T = r(n) : (T = _[n], T.useStyle(y.getItemStyle()), "cartesian2d" === u.type && T.setShape("r", v), x[t] = T);
                            var C = YP[u.type](s, t),
                                M = Ef(o, C, u);
                            Ta(T, {
                                shape: M
                            }, p, t)
                        }
                        var I = l.getItemGraphicEl(n);
                        if (s.hasValue(t) && XP[u.type](S)) {
                            var k = !1;
                            if (d && (k = GP[u.type](f, S), k && a.remove(I)), I ? Aa(I) : I = VP[u.type](e, s, t, S, o, p, c.model, !!I, g), h && (I.forceLabelAnimation = !0), b) {
                                var D = I.getTextContent();
                                if (D) {
                                    var A = DC(D);
                                    null != A.prevValue && (A.prevValue = A.value)
                                }
                            } else Pf(I, s, t, i, S, e, o, "polar" === u.type);
                            w ? I.attr({
                                shape: S
                            }) : h ? If(h, p, I, S, t, o, !0, b) : Ta(I, {
                                shape: S
                            }, e, t, null), s.setItemGraphicEl(t, I), I.ignore = k, a.add(I)
                        } else a.remove(I)
                    }).remove(function (t) {
                        var n = l.getItemGraphicEl(t);
                        n && Da(n, e, t)
                    }).execute();
                    var S = this._backgroundGroup || (this._backgroundGroup = new gb);
                    S.removeAll();
                    for (var T = 0; T < x.length; ++T) S.add(x[T]);
                    a.add(S), this._backgroundEls = x, this._data = s
                }, n.prototype._renderLarge = function (e) {
                    this._clear(), Nf(e, this.group), this._updateLargeClip(e)
                }, n.prototype._incrementalRenderLarge = function (e, t) {
                    this._removeBackground(), Nf(t, this.group, this._progressiveEls, !0)
                }, n.prototype._updateLargeClip = function (e) {
                    var t = e.get("clip", !0) && yf(e.coordinateSystem, !1, e),
                        n = this.group;
                    t ? n.setClipPath(t) : n.removeClipPath()
                }, n.prototype._enableRealtimeSort = function (e, t, n) {
                    var i = this;
                    if (t.count()) {
                        var r = e.baseAxis;
                        if (this._isFirstFrame) this._dispatchInitSort(t, e, n), this._isFirstFrame = !1;
                        else {
                            var o = function (e) {
                                var n = t.getItemGraphicEl(e),
                                    i = n && n.shape;
                                return i && Math.abs(r.isHorizontal() ? i.height : i.width) || 0
                            };
                            this._onRendered = function () {
                                i._updateSortWithinSameData(t, o, r, n)
                            }, n.getZr().on("rendered", this._onRendered)
                        }
                    }
                }, n.prototype._dataSort = function (e, t, n) {
                    var i = [];
                    return e.each(e.mapDimension(t.dim), function (e, t) {
                        var r = n(t);
                        r = null == r ? NaN : r, i.push({
                            dataIndex: t,
                            mappedValue: r,
                            ordinalNumber: e
                        })
                    }), i.sort(function (e, t) {
                        return t.mappedValue - e.mappedValue
                    }), {
                        ordinalNumbers: y(i, function (e) {
                            return e.ordinalNumber
                        })
                    }
                }, n.prototype._isOrderChangedWithinSameData = function (e, t, n) {
                    for (var i = n.scale, r = e.mapDimension(n.dim), o = Number.MAX_VALUE, a = 0, s = i.getOrdinalMeta().categories.length; s > a; ++a) {
                        var l = e.rawIndexOf(r, i.getRawOrdinalNumber(a)),
                            u = 0 > l ? Number.MIN_VALUE : t(e.indexOfRawIndex(l));
                        if (u > o) return !0;
                        o = u
                    }
                    return !1
                }, n.prototype._isOrderDifferentInView = function (e, t) {
                    for (var n = t.scale, i = n.getExtent(), r = Math.max(0, i[0]), o = Math.min(i[1], n.getOrdinalMeta().categories.length - 1); o >= r; ++r)
                        if (e.ordinalNumbers[r] !== n.getRawOrdinalNumber(r)) return !0
                }, n.prototype._updateSortWithinSameData = function (e, t, n, i) {
                    if (this._isOrderChangedWithinSameData(e, t, n)) {
                        var r = this._dataSort(e, n, t);
                        this._isOrderDifferentInView(r, n) && (this._removeOnRenderedListener(i), i.dispatchAction({
                            type: "changeAxisOrder",
                            componentType: n.dim + "Axis",
                            axisId: n.index,
                            sortInfo: r
                        }))
                    }
                }, n.prototype._dispatchInitSort = function (e, t, n) {
                    var i = t.baseAxis,
                        r = this._dataSort(e, i, function (n) {
                            return e.get(e.mapDimension(t.otherAxis.dim), n)
                        });
                    n.dispatchAction({
                        type: "changeAxisOrder",
                        componentType: i.dim + "Axis",
                        isInitSort: !0,
                        axisId: i.index,
                        sortInfo: r
                    })
                }, n.prototype.remove = function (e, t) {
                    this._clear(this._model), this._removeOnRenderedListener(t)
                }, n.prototype.dispose = function (e, t) {
                    this._removeOnRenderedListener(t)
                }, n.prototype._removeOnRenderedListener = function (e) {
                    this._onRendered && (e.getZr().off("rendered", this._onRendered), this._onRendered = null)
                }, n.prototype._clear = function (e) {
                    var t = this.group,
                        n = this._data;
                    e && e.isAnimationEnabled() && n && !this._isLargeDraw ? (this._removeBackground(), this._backgroundEls = [], n.eachItemGraphicEl(function (t) {
                        Da(t, e, KS(t).dataIndex)
                    })) : t.removeAll(), this._data = null, this._isFirstFrame = !0
                }, n.prototype._removeBackground = function () {
                    this.group.remove(this._backgroundGroup), this._backgroundGroup = null
                }, n.type = "bar", n
            }(EI),
            GP = {
                cartesian2d: function (e, t) {
                    var n = t.width < 0 ? -1 : 1,
                        i = t.height < 0 ? -1 : 1;
                    0 > n && (t.x += t.width, t.width = -t.width), 0 > i && (t.y += t.height, t.height = -t.height);
                    var r = e.x + e.width,
                        o = e.y + e.height,
                        a = BP(t.x, e.x),
                        s = FP(t.x + t.width, r),
                        l = BP(t.y, e.y),
                        u = FP(t.y + t.height, o),
                        c = a > s,
                        p = l > u;
                    return t.x = c && a > r ? s : a, t.y = p && l > o ? u : l, t.width = c ? 0 : s - a, t.height = p ? 0 : u - l, 0 > n && (t.x += t.width, t.width = -t.width), 0 > i && (t.y += t.height, t.height = -t.height), c || p
                },
                polar: function (e, t) {
                    var n = t.r0 <= t.r ? 1 : -1;
                    if (0 > n) {
                        var i = t.r;
                        t.r = t.r0, t.r0 = i
                    }
                    var r = FP(t.r, e.r),
                        o = BP(t.r0, e.r0);
                    t.r = r, t.r0 = o;
                    var a = 0 > r - o;
                    if (0 > n) {
                        i = t.r;
                        t.r = t.r0, t.r0 = i
                    }
                    return a
                }
            },
            VP = {
                cartesian2d: function (e, t, n, i, r, o) {
                    var a = new WS({
                        shape: c({}, i),
                        z2: 1
                    });
                    if (a.__dataIndex = n, a.name = "item", o) {
                        var s = a.shape,
                            l = r ? "height" : "width";
                        s[l] = 0
                    }
                    return a
                },
                polar: function (e, t, n, i, r, o, a, s, l) {
                    var u = !r && l ? zP : XT,
                        c = new u({
                            shape: i,
                            z2: 1
                        });
                    c.name = "item";
                    var p = Af(r);
                    if (c.calculateTextPosition = wf(p, {
                            isRoundCap: u === zP
                        }), o) {
                        var h = c.shape,
                            d = r ? "r" : "endAngle",
                            f = {};
                        h[d] = r ? 0 : i.startAngle, f[d] = i[d], (s ? Ta : Ca)(c, {
                            shape: f
                        }, o)
                    }
                    return c
                }
            },
            WP = ["x", "y", "width", "height"],
            jP = ["cx", "cy", "r", "startAngle", "endAngle"],
            XP = {
                cartesian2d: function (e) {
                    return !kf(e, WP)
                },
                polar: function (e) {
                    return !kf(e, jP)
                }
            },
            YP = {
                cartesian2d: function (e, t, n) {
                    var i = e.getItemLayout(t),
                        r = n ? Lf(n, i) : 0,
                        o = i.width > 0 ? 1 : -1,
                        a = i.height > 0 ? 1 : -1;
                    return {
                        x: i.x + o * r / 2,
                        y: i.y + a * r / 2,
                        width: i.width - o * r,
                        height: i.height - a * r
                    }
                },
                polar: function (e, t) {
                    var n = e.getItemLayout(t);
                    return {
                        cx: n.cx,
                        cy: n.cy,
                        r0: n.r0,
                        r: n.r,
                        startAngle: n.startAngle,
                        endAngle: n.endAngle,
                        clockwise: n.clockwise
                    }
                }
            },
            UP = function () {
                function e() {}
                return e
            }(),
            qP = function (e) {
                function n(t) {
                    var n = e.call(this, t) || this;
                    return n.type = "largeBar", n
                }
                return t(n, e), n.prototype.getDefaultShape = function () {
                    return new UP
                }, n.prototype.buildPath = function (e, t) {
                    for (var n = t.points, i = this.baseDimIdx, r = 1 - this.baseDimIdx, o = [], a = [], s = this.barWidth, l = 0; l < n.length; l += 3) a[i] = s, a[r] = n[l + 2], o[i] = n[l + i], o[r] = n[l + r], e.rect(o[0], o[1], a[0], a[1])
                }, n
            }(OS),
            ZP = ac(function (e) {
                var t = this,
                    n = Of(t, e.offsetX, e.offsetY);
                KS(t).dataIndex = n >= 0 ? n : null
            }, 30, !1);
        cd(zf);
        var $P = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t.hasSymbolVisual = !0, t
                }
                return t(n, e), n.prototype.getInitialData = function () {
                    return ph(null, this, {
                        useEncodeDefaulter: !0
                    })
                }, n.prototype.getLegendIcon = function (e) {
                    var t = new gb,
                        n = Dc("line", 0, e.itemHeight / 2, e.itemWidth, 0, e.lineStyle.stroke, !1);
                    t.add(n), n.setStyle(e.lineStyle);
                    var i = this.getData().getVisual("symbol"),
                        r = this.getData().getVisual("symbolRotate"),
                        o = "none" === i ? "circle" : i,
                        a = .8 * e.itemHeight,
                        s = Dc(o, (e.itemWidth - a) / 2, (e.itemHeight - a) / 2, a, a, e.itemStyle.fill);
                    t.add(s), s.setStyle(e.itemStyle);
                    var l = "inherit" === e.iconRotate ? r : e.iconRotate || 0;
                    return s.rotation = l * Math.PI / 180, s.setOrigin([e.itemWidth / 2, e.itemHeight / 2]), o.indexOf("empty") > -1 && (s.style.stroke = s.style.fill, s.style.fill = "#fff", s.style.lineWidth = 2), t
                }, n.type = "series.line", n.dependencies = ["grid", "polar"], n.defaultOption = {
                    z: 3,
                    coordinateSystem: "cartesian2d",
                    legendHoverLink: !0,
                    clip: !0,
                    label: {
                        position: "top"
                    },
                    endLabel: {
                        show: !1,
                        valueAnimation: !0,
                        distance: 8
                    },
                    lineStyle: {
                        width: 2,
                        type: "solid"
                    },
                    emphasis: {
                        scale: !0
                    },
                    step: !1,
                    smooth: !1,
                    smoothMonotone: null,
                    symbol: "emptyCircle",
                    symbolSize: 4,
                    symbolRotate: null,
                    showSymbol: !0,
                    showAllSymbol: "auto",
                    connectNulls: !1,
                    sampling: "none",
                    animationEasing: "linear",
                    progressive: 0,
                    hoverLayerThreshold: 1 / 0,
                    universalTransition: {
                        divideShape: "clone"
                    },
                    triggerLineEvent: !1
                }, n
            }(PI),
            KP = function (e) {
                function n(t, n, i, r) {
                    var o = e.call(this) || this;
                    return o.updateData(t, n, i, r), o
                }
                return t(n, e), n.prototype._createSymbol = function (e, t, n, i, r) {
                    this.removeAll();
                    var o = Dc(e, -1, -1, 2, 2, null, r);
                    o.attr({
                        z2: 100,
                        culling: !0,
                        scaleX: i[0] / 2,
                        scaleY: i[1] / 2
                    }), o.drift = Bf, this._symbolType = e, this.add(o)
                }, n.prototype.stopSymbolAnimation = function (e) {
                    this.childAt(0).stopAnimation(null, e)
                }, n.prototype.getSymbolType = function () {
                    return this._symbolType
                }, n.prototype.getSymbolPath = function () {
                    return this.childAt(0)
                }, n.prototype.highlight = function () {
                    Do(this.childAt(0))
                }, n.prototype.downplay = function () {
                    Ao(this.childAt(0))
                }, n.prototype.setZ = function (e, t) {
                    var n = this.childAt(0);
                    n.zlevel = e, n.z = t
                }, n.prototype.setDraggable = function (e, t) {
                    var n = this.childAt(0);
                    n.draggable = e, n.cursor = !t && e ? "move" : n.cursor
                }, n.prototype.updateData = function (e, t, i, r) {
                    this.silent = !1;
                    var o = e.getItemVisual(t, "symbol") || "circle",
                        a = e.hostModel,
                        s = n.getSymbolSize(e, t),
                        l = o !== this._symbolType,
                        u = r && r.disableAnimation;
                    if (l) {
                        var c = e.getItemVisual(t, "symbolKeepAspect");
                        this._createSymbol(o, e, t, s, c)
                    } else {
                        var p = this.childAt(0);
                        p.silent = !1;
                        var h = {
                            scaleX: s[0] / 2,
                            scaleY: s[1] / 2
                        };
                        u ? p.attr(h) : Ta(p, h, a, t), Aa(p)
                    }
                    if (this._updateCommon(e, t, s, i, r), l) {
                        p = this.childAt(0);
                        if (!u) {
                            h = {
                                scaleX: this._sizeX,
                                scaleY: this._sizeY,
                                style: {
                                    opacity: p.style.opacity
                                }
                            };
                            p.scaleX = p.scaleY = 0, p.style.opacity = 0, Ca(p, h, a, t)
                        }
                    }
                    u && this.childAt(0).stopAnimation("leave")
                }, n.prototype._updateCommon = function (e, t, n, i, r) {
                    function o(t) {
                        return I ? e.getName(t) : xf(e, t)
                    }
                    var a, s, l, u, p, h, d, f, g, m = this.childAt(0),
                        y = e.hostModel;
                    if (i && (a = i.emphasisItemStyle, s = i.blurItemStyle, l = i.selectItemStyle, u = i.focus, p = i.blurScope, d = i.labelStatesModels, f = i.hoverScale, g = i.cursorStyle, h = i.emphasisDisabled), !i || e.hasItemOption) {
                        var v = i && i.itemModel ? i.itemModel : e.getItemModel(t),
                            x = v.getModel("emphasis");
                        a = x.getModel("itemStyle").getItemStyle(), l = v.getModel(["select", "itemStyle"]).getItemStyle(), s = v.getModel(["blur", "itemStyle"]).getItemStyle(), u = x.get("focus"), p = x.get("blurScope"), h = x.get("disabled"), d = as(v), f = x.getShallow("scale"), g = v.getShallow("cursor")
                    }
                    var _ = e.getItemVisual(t, "symbolRotate");
                    m.attr("rotation", (_ || 0) * Math.PI / 180 || 0);
                    var w = Pc(e.getItemVisual(t, "symbolOffset"), n);
                    w && (m.x = w[0], m.y = w[1]), g && m.attr("cursor", g);
                    var b = e.getItemVisual(t, "style"),
                        S = b.fill;
                    if (m instanceof FS) {
                        var T = m.style;
                        m.useStyle(c({
                            image: T.image,
                            x: T.x,
                            y: T.y,
                            width: T.width,
                            height: T.height
                        }, b))
                    } else m.useStyle(m.__isEmptyBrush ? c({}, b) : b), m.style.decal = null, m.setColor(S, r && r.symbolInnerColor), m.style.strokeNoScale = !0;
                    var C = e.getItemVisual(t, "liftZ"),
                        M = this._z2;
                    null != C ? null == M && (this._z2 = m.z2, m.z2 += C) : null != M && (m.z2 = M, this._z2 = null);
                    var I = r && r.useNameLabel;
                    os(m, d, {
                        labelFetcher: y,
                        labelDataIndex: t,
                        defaultText: o,
                        inheritColor: S,
                        defaultOpacity: b.opacity
                    }), this._sizeX = n[0] / 2, this._sizeY = n[1] / 2;
                    var k = m.ensureState("emphasis");
                    k.style = a, m.ensureState("select").style = l, m.ensureState("blur").style = s;
                    var D = null == f || !0 === f ? Math.max(1.1, 3 / this._sizeY) : isFinite(f) && f > 0 ? +f : 1;
                    k.scaleX = this._sizeX * D, k.scaleY = this._sizeY * D, this.setSymbolScale(1), qo(this, u, p, h)
                }, n.prototype.setSymbolScale = function (e) {
                    this.scaleX = this.scaleY = e
                }, n.prototype.fadeOut = function (e, t, n) {
                    var i = this.childAt(0),
                        r = KS(this).dataIndex,
                        o = n && n.animation;
                    if (this.silent = i.silent = !0, n && n.fadeLabel) {
                        var a = i.getTextContent();
                        a && Ia(a, {
                            style: {
                                opacity: 0
                            }
                        }, t, {
                            dataIndex: r,
                            removeOpt: o,
                            cb: function () {
                                i.removeTextContent()
                            }
                        })
                    } else i.removeTextContent();
                    Ia(i, {
                        style: {
                            opacity: 0
                        },
                        scaleX: 0,
                        scaleY: 0
                    }, t, {
                        dataIndex: r,
                        cb: e,
                        removeOpt: o
                    })
                }, n.getSymbolSize = function (e, t) {
                    return Ac(e.getItemVisual(t, "symbolSize"))
                }, n
            }(gb),
            JP = function () {
                function e(e) {
                    this.group = new gb, this._SymbolCtor = e || KP
                }
                return e.prototype.updateData = function (e, t) {
                    this._progressiveEls = null, t = Hf(t);
                    var n = this.group,
                        i = e.hostModel,
                        r = this._data,
                        o = this._SymbolCtor,
                        a = t.disableAnimation,
                        s = Gf(e),
                        l = {
                            disableAnimation: a
                        },
                        u = t.getSymbolPoint || function (t) {
                            return e.getItemLayout(t)
                        };
                    r || n.removeAll(), e.diff(r).add(function (i) {
                        var r = u(i);
                        if (Ff(e, r, i, t)) {
                            var a = new o(e, i, s, l);
                            a.setPosition(r), e.setItemGraphicEl(i, a), n.add(a)
                        }
                    }).update(function (c, p) {
                        var h = r.getItemGraphicEl(p),
                            d = u(c);
                        if (Ff(e, d, c, t)) {
                            var f = e.getItemVisual(c, "symbol") || "circle",
                                g = h && h.getSymbolType && h.getSymbolType();
                            if (!h || g && g !== f) n.remove(h), h = new o(e, c, s, l), h.setPosition(d);
                            else {
                                h.updateData(e, c, s, l);
                                var m = {
                                    x: d[0],
                                    y: d[1]
                                };
                                a ? h.attr(m) : Ta(h, m, i)
                            }
                            n.add(h), e.setItemGraphicEl(c, h)
                        } else n.remove(h)
                    }).remove(function (e) {
                        var t = r.getItemGraphicEl(e);
                        t && t.fadeOut(function () {
                            n.remove(t)
                        }, i)
                    }).execute(), this._getSymbolPoint = u, this._data = e
                }, e.prototype.updateLayout = function () {
                    var e = this,
                        t = this._data;
                    t && t.eachItemGraphicEl(function (t, n) {
                        var i = e._getSymbolPoint(n);
                        t.setPosition(i), t.markRedraw()
                    })
                }, e.prototype.incrementalPrepareUpdate = function (e) {
                    this._seriesScope = Gf(e), this._data = null, this.group.removeAll()
                }, e.prototype.incrementalUpdate = function (e, t, n) {
                    function i(e) {
                        e.isGroup || (e.incremental = !0, e.ensureState("emphasis").hoverLayer = !0)
                    }
                    this._progressiveEls = [], n = Hf(n);
                    for (var r = e.start; r < e.end; r++) {
                        var o = t.getItemLayout(r);
                        if (Ff(t, o, r, n)) {
                            var a = new this._SymbolCtor(t, r, this._seriesScope);
                            a.traverse(i), a.setPosition(o), this.group.add(a), t.setItemGraphicEl(r, a), this._progressiveEls.push(a)
                        }
                    }
                }, e.prototype.eachRendered = function (e) {
                    ns(this._progressiveEls || this.group, e)
                }, e.prototype.remove = function (e) {
                    var t = this.group,
                        n = this._data;
                    n && e ? n.eachItemGraphicEl(function (e) {
                        e.fadeOut(function () {
                            t.remove(e)
                        }, n.hostModel)
                    }) : t.removeAll()
                }, e
            }(),
            QP = Math.min,
            eL = Math.max,
            tL = function () {
                function e() {
                    this.smooth = 0, this.smoothConstraint = !0
                }
                return e
            }(),
            nL = function (e) {
                function n(t) {
                    var n = e.call(this, t) || this;
                    return n.type = "ec-polyline", n
                }
                return t(n, e), n.prototype.getDefaultStyle = function () {
                    return {
                        stroke: "#000",
                        fill: null
                    }
                }, n.prototype.getDefaultShape = function () {
                    return new tL
                }, n.prototype.buildPath = function (e, t) {
                    var n = t.points,
                        i = 0,
                        r = n.length / 2;
                    if (t.connectNulls) {
                        for (; r > 0 && Uf(n[2 * r - 2], n[2 * r - 1]); r--);
                        for (; r > i && Uf(n[2 * i], n[2 * i + 1]); i++);
                    }
                    for (; r > i;) i += qf(e, n, i, r, r, 1, t.smooth, t.smoothMonotone, t.connectNulls) + 1
                }, n.prototype.getPointOn = function (e, t) {
                    this.path || (this.createPathProxy(), this.buildPath(this.path, this.shape));
                    for (var n, i, r = this.path, o = r.data, a = SS.CMD, s = "x" === t, l = [], u = 0; u < o.length;) {
                        var c = o[u++],
                            p = void 0,
                            h = void 0,
                            d = void 0,
                            f = void 0,
                            g = void 0,
                            m = void 0,
                            y = void 0;
                        switch (c) {
                            case a.M:
                                n = o[u++], i = o[u++];
                                break;
                            case a.L:
                                if (p = o[u++], h = o[u++], y = s ? (e - n) / (p - n) : (e - i) / (h - i), 1 >= y && y >= 0) {
                                    var v = s ? (h - i) * y + i : (p - n) * y + n;
                                    return s ? [e, v] : [v, e]
                                }
                                n = p, i = h;
                                break;
                            case a.C:
                                p = o[u++], h = o[u++], d = o[u++], f = o[u++], g = o[u++], m = o[u++];
                                var x = s ? pt(n, p, d, g, e, l) : pt(i, h, f, m, e, l);
                                if (x > 0)
                                    for (var _ = 0; x > _; _++) {
                                        var w = l[_];
                                        if (1 >= w && w >= 0) {
                                            v = s ? ut(i, h, f, m, w) : ut(n, p, d, g, w);
                                            return s ? [e, v] : [v, e]
                                        }
                                    }
                                n = g, i = m
                        }
                    }
                }, n
            }(OS),
            iL = function (e) {
                function n() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return t(n, e), n
            }(tL),
            rL = function (e) {
                function n(t) {
                    var n = e.call(this, t) || this;
                    return n.type = "ec-polygon", n
                }
                return t(n, e), n.prototype.getDefaultShape = function () {
                    return new iL
                }, n.prototype.buildPath = function (e, t) {
                    var n = t.points,
                        i = t.stackedOnPoints,
                        r = 0,
                        o = n.length / 2,
                        a = t.smoothMonotone;
                    if (t.connectNulls) {
                        for (; o > 0 && Uf(n[2 * o - 2], n[2 * o - 1]); o--);
                        for (; o > r && Uf(n[2 * r], n[2 * r + 1]); r++);
                    }
                    for (; o > r;) {
                        var s = qf(e, n, r, o, o, 1, t.smooth, a, t.connectNulls);
                        qf(e, i, r + s - 1, s, o, -1, t.stackedOnSmooth, a, t.connectNulls), r += s + 1, e.closePath()
                    }
                }, n
            }(OS),
            oL = function (e) {
                function n() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return t(n, e), n.prototype.init = function () {
                        var e = new gb,
                            t = new JP;
                        this.group.add(t.group), this._symbolDraw = t, this._lineGroup = e
                    },
                    n.prototype.render = function (e, t, n) {
                        var i = this,
                            r = e.coordinateSystem,
                            o = this.group,
                            a = e.getData(),
                            s = e.getModel("lineStyle"),
                            l = e.getModel("areaStyle"),
                            u = a.getLayout("points") || [],
                            c = "polar" === r.type,
                            h = this._coordSys,
                            d = this._symbolDraw,
                            f = this._polyline,
                            g = this._polygon,
                            m = this._lineGroup,
                            y = e.get("animation"),
                            v = !l.isEmpty(),
                            x = l.get("origin"),
                            _ = Vf(r, a, x),
                            w = v && Qf(r, a, _),
                            b = e.get("showSymbol"),
                            S = e.get("connectNulls"),
                            T = b && !c && ig(e, a, r),
                            C = this._data;
                        C && C.eachItemGraphicEl(function (e, t) {
                            e.__temp && (o.remove(e), C.setItemGraphicEl(t, null))
                        }), b || d.remove(), o.add(m);
                        var M, I = !c && e.get("step");
                        r && r.getArea && e.get("clip", !0) && (M = r.getArea(), null != M.width ? (M.x -= .1, M.y -= .1, M.width += .2, M.height += .2) : M.r0 && (M.r0 -= .5, M.r += .5)), this._clipShapeForSymbol = M;
                        var k = ng(a, r, n) || a.getVisual("style")[a.getVisual("drawType")];
                        if (f && h.type === r.type && I === this._step) {
                            v && !g ? g = this._newPolygon(u, w) : g && !v && (m.remove(g), g = this._polygon = null), c || this._initOrUpdateEndLabel(e, r, Qs(k));
                            var D = m.getClipPath();
                            if (D) {
                                var A = cg(this, r, !1, e);
                                Ca(D, {
                                    shape: A.shape
                                }, e)
                            } else m.setClipPath(cg(this, r, !0, e));
                            b && d.updateData(a, {
                                isIgnore: T,
                                clipShape: M,
                                disableAnimation: !0,
                                getSymbolPoint: function (e) {
                                    return [u[2 * e], u[2 * e + 1]]
                                }
                            }), Zf(this._stackedOnPoints, w) && Zf(this._points, u) || (y ? this._doUpdateAnimation(a, w, r, n, I, x, S) : (I && (u = eg(u, r, I, S), w && (w = eg(w, r, I, S))), f.setShape({
                                points: u
                            }), g && g.setShape({
                                points: u,
                                stackedOnPoints: w
                            })))
                        } else b && d.updateData(a, {
                            isIgnore: T,
                            clipShape: M,
                            disableAnimation: !0,
                            getSymbolPoint: function (e) {
                                return [u[2 * e], u[2 * e + 1]]
                            }
                        }), y && this._initSymbolLabelAnimation(a, r, M), I && (u = eg(u, r, I, S), w && (w = eg(w, r, I, S))), f = this._newPolyline(u), v ? g = this._newPolygon(u, w) : g && (m.remove(g), g = this._polygon = null), c || this._initOrUpdateEndLabel(e, r, Qs(k)), m.setClipPath(cg(this, r, !0, e));
                        var P = e.getModel("emphasis"),
                            L = P.get("focus"),
                            N = P.get("blurScope"),
                            O = P.get("disabled");
                        if (f.useStyle(p(s.getLineStyle(), {
                                fill: "none",
                                stroke: k,
                                lineJoin: "bevel"
                            })), $o(f, e, "lineStyle"), f.style.lineWidth > 0 && "bolder" === e.get(["emphasis", "lineStyle", "width"])) {
                            var E = f.getState("emphasis").style;
                            E.lineWidth = +f.style.lineWidth + 1
                        }
                        KS(f).seriesIndex = e.seriesIndex, qo(f, L, N, O);
                        var R = Jf(e.get("smooth")),
                            z = e.get("smoothMonotone");
                        if (f.setShape({
                                smooth: R,
                                smoothMonotone: z,
                                connectNulls: S
                            }), g) {
                            var B = a.getCalculationInfo("stackedOnSeries"),
                                F = 0;
                            g.useStyle(p(l.getAreaStyle(), {
                                fill: k,
                                opacity: .7,
                                lineJoin: "bevel",
                                decal: a.getVisual("style").decal
                            })), B && (F = Jf(B.get("smooth"))), g.setShape({
                                smooth: R,
                                stackedOnSmooth: F,
                                smoothMonotone: z,
                                connectNulls: S
                            }), $o(g, e, "areaStyle"), KS(g).seriesIndex = e.seriesIndex, qo(g, L, N, O)
                        }
                        var H = function (e) {
                            i._changePolyState(e)
                        };
                        a.eachItemGraphicEl(function (e) {
                            e && (e.onHoverStateChange = H)
                        }), this._polyline.onHoverStateChange = H, this._data = a, this._coordSys = r, this._stackedOnPoints = w, this._points = u, this._step = I, this._valueOrigin = x, e.get("triggerLineEvent") && (this.packEventData(e, f), g && this.packEventData(e, g))
                    }, n.prototype.packEventData = function (e, t) {
                        KS(t).eventData = {
                            componentType: "series",
                            componentSubType: "line",
                            componentIndex: e.componentIndex,
                            seriesIndex: e.seriesIndex,
                            seriesName: e.name,
                            seriesType: "line"
                        }
                    }, n.prototype.highlight = function (e, t, n, i) {
                        var r = e.getData(),
                            o = Yi(r, i);
                        if (this._changePolyState("emphasis"), !(o instanceof Array) && null != o && o >= 0) {
                            var a = r.getLayout("points"),
                                s = r.getItemGraphicEl(o);
                            if (!s) {
                                var l = a[2 * o],
                                    u = a[2 * o + 1];
                                if (isNaN(l) || isNaN(u)) return;
                                if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(l, u)) return;
                                var c = e.get("zlevel") || 0,
                                    p = e.get("z") || 0;
                                s = new KP(r, o), s.x = l, s.y = u, s.setZ(c, p);
                                var h = s.getSymbolPath().getTextContent();
                                h && (h.zlevel = c, h.z = p, h.z2 = this._polyline.z2 + 1), s.__temp = !0, r.setItemGraphicEl(o, s), s.stopSymbolAnimation(!0), this.group.add(s)
                            }
                            s.highlight()
                        } else EI.prototype.highlight.call(this, e, t, n, i)
                    }, n.prototype.downplay = function (e, t, n, i) {
                        var r = e.getData(),
                            o = Yi(r, i);
                        if (this._changePolyState("normal"), null != o && o >= 0) {
                            var a = r.getItemGraphicEl(o);
                            a && (a.__temp ? (r.setItemGraphicEl(o, null), this.group.remove(a)) : a.downplay())
                        } else EI.prototype.downplay.call(this, e, t, n, i)
                    }, n.prototype._changePolyState = function (e) {
                        var t = this._polygon;
                        _o(this._polyline, e), t && _o(t, e)
                    }, n.prototype._newPolyline = function (e) {
                        var t = this._polyline;
                        return t && this._lineGroup.remove(t), t = new nL({
                            shape: {
                                points: e
                            },
                            segmentIgnoreThreshold: 2,
                            z2: 10
                        }), this._lineGroup.add(t), this._polyline = t, t
                    }, n.prototype._newPolygon = function (e, t) {
                        var n = this._polygon;
                        return n && this._lineGroup.remove(n), n = new rL({
                            shape: {
                                points: e,
                                stackedOnPoints: t
                            },
                            segmentIgnoreThreshold: 2
                        }), this._lineGroup.add(n), this._polygon = n, n
                    }, n.prototype._initSymbolLabelAnimation = function (e, t, n) {
                        var i, r, o = t.getBaseAxis(),
                            a = o.inverse;
                        "cartesian2d" === t.type ? (i = o.isHorizontal(), r = !1) : "polar" === t.type && (i = "angle" === o.dim, r = !0);
                        var s = e.hostModel,
                            l = s.get("animationDuration");
                        C(l) && (l = l(null));
                        var u = s.get("animationDelay") || 0,
                            c = C(u) ? u(null) : u;
                        e.eachItemGraphicEl(function (e, o) {
                            var s = e;
                            if (s) {
                                var p = [e.x, e.y],
                                    h = void 0,
                                    d = void 0,
                                    f = void 0;
                                if (n)
                                    if (r) {
                                        var g = n,
                                            m = t.pointToCoord(p);
                                        i ? (h = g.startAngle, d = g.endAngle, f = -m[1] / 180 * Math.PI) : (h = g.r0, d = g.r, f = m[0])
                                    } else {
                                        var y = n;
                                        i ? (h = y.x, d = y.x + y.width, f = e.x) : (h = y.y + y.height, d = y.y, f = e.y)
                                    } var v = d === h ? 0 : (f - h) / (d - h);
                                a && (v = 1 - v);
                                var x = C(u) ? u(o) : l * v + c,
                                    _ = s.getSymbolPath(),
                                    w = _.getTextContent();
                                s.attr({
                                    scaleX: 0,
                                    scaleY: 0
                                }), s.animateTo({
                                    scaleX: 1,
                                    scaleY: 1
                                }, {
                                    duration: 200,
                                    setToFinal: !0,
                                    delay: x
                                }), w && w.animateFrom({
                                    style: {
                                        opacity: 0
                                    }
                                }, {
                                    duration: 300,
                                    delay: x
                                }), _.disableLabelAnimation = !0
                            }
                        })
                    }, n.prototype._initOrUpdateEndLabel = function (e, t, n) {
                        var i = e.getModel("endLabel");
                        if (ug(e)) {
                            var r = e.getData(),
                                o = this._polyline,
                                a = r.getLayout("points");
                            if (!a) return o.removeTextContent(), void(this._endLabel = null);
                            var s = this._endLabel;
                            s || (s = this._endLabel = new US({
                                z2: 200
                            }), s.ignoreClip = !0, o.setTextContent(this._endLabel), o.disableLabelAnimation = !0);
                            var l = ag(a);
                            l >= 0 && (os(o, as(e, "endLabel"), {
                                inheritColor: n,
                                labelFetcher: e,
                                labelDataIndex: l,
                                defaultText: function (e, t, n) {
                                    return null != n ? _f(r, n) : xf(r, e)
                                },
                                enableTextSetter: !0
                            }, pg(i, t)), o.textConfig.position = null)
                        } else this._endLabel && (this._polyline.removeTextContent(), this._endLabel = null)
                    }, n.prototype._endLabelOnDuring = function (e, t, n, i, r, o, a) {
                        var s = this._endLabel,
                            l = this._polyline;
                        if (s) {
                            1 > e && null == i.originalX && (i.originalX = s.x, i.originalY = s.y);
                            var u = n.getLayout("points"),
                                c = n.hostModel,
                                p = c.get("connectNulls"),
                                h = o.get("precision"),
                                d = o.get("distance") || 0,
                                f = a.getBaseAxis(),
                                g = f.isHorizontal(),
                                m = f.inverse,
                                y = t.shape,
                                v = m ? g ? y.x : y.y + y.height : g ? y.x + y.width : y.y,
                                x = (g ? d : 0) * (m ? -1 : 1),
                                _ = (g ? 0 : -d) * (m ? -1 : 1),
                                w = g ? "x" : "y",
                                b = lg(u, v, w),
                                S = b.range,
                                T = S[1] - S[0],
                                C = void 0;
                            if (T >= 1) {
                                if (T > 1 && !p) {
                                    var M = sg(u, S[0]);
                                    s.attr({
                                        x: M[0] + x,
                                        y: M[1] + _
                                    }), r && (C = c.getRawValue(S[0]))
                                } else {
                                    M = l.getPointOn(v, w);
                                    M && s.attr({
                                        x: M[0] + x,
                                        y: M[1] + _
                                    });
                                    var I = c.getRawValue(S[0]),
                                        k = c.getRawValue(S[1]);
                                    r && (C = er(n, h, I, k, b.t))
                                }
                                i.lastFrameIndex = S[0]
                            } else {
                                var D = 1 === e || i.lastFrameIndex > 0 ? S[0] : 0;
                                M = sg(u, D);
                                r && (C = c.getRawValue(D)), s.attr({
                                    x: M[0] + x,
                                    y: M[1] + _
                                })
                            }
                            r && DC(s).setLabelText(C)
                        }
                    }, n.prototype._doUpdateAnimation = function (e, t, n, i, r, o, a) {
                        var s = this._polyline,
                            l = this._polygon,
                            u = e.hostModel,
                            c = Yf(this._data, e, this._stackedOnPoints, t, this._coordSys, n, this._valueOrigin, o),
                            p = c.current,
                            h = c.stackedOnCurrent,
                            d = c.next,
                            f = c.stackedOnNext;
                        if (r && (p = eg(c.current, n, r, a), h = eg(c.stackedOnCurrent, n, r, a), d = eg(c.next, n, r, a), f = eg(c.stackedOnNext, n, r, a)), Kf(p, d) > 3e3 || l && Kf(h, f) > 3e3) return s.stopAnimation(), s.setShape({
                            points: d
                        }), void(l && (l.stopAnimation(), l.setShape({
                            points: d,
                            stackedOnPoints: f
                        })));
                        s.shape.__points = c.current, s.shape.points = p;
                        var g = {
                            shape: {
                                points: d
                            }
                        };
                        c.current !== p && (g.shape.__points = c.next), s.stopAnimation(), Ta(s, g, u), l && (l.setShape({
                            points: p,
                            stackedOnPoints: h
                        }), l.stopAnimation(), Ta(l, {
                            shape: {
                                stackedOnPoints: f
                            }
                        }, u), s.shape.points !== l.shape.points && (l.shape.points = s.shape.points));
                        for (var m = [], y = c.status, v = 0; v < y.length; v++) {
                            var x = y[v].cmd;
                            if ("=" === x) {
                                var _ = e.getItemGraphicEl(y[v].idx1);
                                _ && m.push({
                                    el: _,
                                    ptIdx: v
                                })
                            }
                        }
                        s.animators && s.animators.length && s.animators[0].during(function () {
                            l && l.dirtyShape();
                            for (var e = s.shape.__points, t = 0; t < m.length; t++) {
                                var n = m[t].el,
                                    i = 2 * m[t].ptIdx;
                                n.x = e[i], n.y = e[i + 1], n.markRedraw()
                            }
                        })
                    }, n.prototype.remove = function () {
                        var e = this.group,
                            t = this._data;
                        this._lineGroup.removeAll(), this._symbolDraw.remove(!0), t && t.eachItemGraphicEl(function (n, i) {
                            n.__temp && (e.remove(n), t.setItemGraphicEl(i, null))
                        }), this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null
                    }, n.type = "line", n
            }(EI);
        cd(dg);
        var aL = 2 * Math.PI,
            sL = Math.PI / 180,
            lL = Math.PI / 180,
            uL = function (e) {
                function n(t, n, i) {
                    var r = e.call(this) || this;
                    r.z2 = 2;
                    var o = new US;
                    return r.setTextContent(o), r.updateData(t, n, i, !0), r
                }
                return t(n, e), n.prototype.updateData = function (e, t, n, i) {
                    var r = this,
                        o = e.hostModel,
                        a = e.getItemModel(t),
                        s = a.getModel("emphasis"),
                        l = e.getItemLayout(t),
                        u = c(Sg(a.getModel("itemStyle"), l, !0), l);
                    if (isNaN(u.startAngle)) r.setShape(u);
                    else {
                        if (i) {
                            r.setShape(u);
                            var p = o.getShallow("animationType");
                            o.ecModel.ssr ? (Ca(r, {
                                scaleX: 0,
                                scaleY: 0
                            }, o, {
                                dataIndex: t,
                                isFrom: !0
                            }), r.originX = u.cx, r.originY = u.cy) : "scale" === p ? (r.shape.r = l.r0, Ca(r, {
                                shape: {
                                    r: l.r
                                }
                            }, o, t)) : null != n ? (r.setShape({
                                startAngle: n,
                                endAngle: n
                            }), Ca(r, {
                                shape: {
                                    startAngle: l.startAngle,
                                    endAngle: l.endAngle
                                }
                            }, o, t)) : (r.shape.endAngle = l.startAngle, Ta(r, {
                                shape: {
                                    endAngle: l.endAngle
                                }
                            }, o, t))
                        } else Aa(r), Ta(r, {
                            shape: u
                        }, o, t);
                        r.useStyle(e.getItemVisual(t, "style")), $o(r, a);
                        var h = (l.startAngle + l.endAngle) / 2,
                            d = o.get("selectedOffset"),
                            f = Math.cos(h) * d,
                            g = Math.sin(h) * d,
                            m = a.getShallow("cursor");
                        m && r.attr("cursor", m), this._updateLabel(o, e, t), r.ensureState("emphasis").shape = c({
                            r: l.r + (s.get("scale") && s.get("scaleSize") || 0)
                        }, Sg(s.getModel("itemStyle"), l)), c(r.ensureState("select"), {
                            x: f,
                            y: g,
                            shape: Sg(a.getModel(["select", "itemStyle"]), l)
                        }), c(r.ensureState("blur"), {
                            shape: Sg(a.getModel(["blur", "itemStyle"]), l)
                        });
                        var y = r.getTextGuideLine(),
                            v = r.getTextContent();
                        y && c(y.ensureState("select"), {
                            x: f,
                            y: g
                        }), c(v.ensureState("select"), {
                            x: f,
                            y: g
                        }), qo(this, s.get("focus"), s.get("blurScope"), s.get("disabled"))
                    }
                }, n.prototype._updateLabel = function (e, t, n) {
                    var i = this,
                        r = t.getItemModel(n),
                        o = r.getModel("labelLine"),
                        a = t.getItemVisual(n, "style"),
                        s = a && a.fill,
                        l = a && a.opacity;
                    os(i, as(r), {
                        labelFetcher: t.hostModel,
                        labelDataIndex: n,
                        inheritColor: s,
                        defaultOpacity: l,
                        defaultText: e.getFormattedLabel(n, "normal") || t.getName(n)
                    });
                    var u = i.getTextContent();
                    i.setTextConfig({
                        position: null,
                        rotation: null
                    }), u.attr({
                        z2: 10
                    });
                    var c = e.get(["label", "position"]);
                    if ("outside" !== c && "outer" !== c) i.removeTextGuideLine();
                    else {
                        var p = this.getTextGuideLine();
                        p || (p = new KT, this.setTextGuideLine(p)), Kd(this, Jd(r), {
                            stroke: s,
                            opacity: F(o.get(["lineStyle", "opacity"]), l, 1)
                        })
                    }
                }, n
            }(XT),
            cL = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.ignoreLabelLineUpdate = !0, t
                }
                return t(n, e), n.prototype.render = function (e, t, n) {
                    var i, r = e.getData(),
                        o = this._data,
                        a = this.group;
                    if (!o && r.count() > 0) {
                        for (var s = r.getItemLayout(0), l = 1; isNaN(s && s.startAngle) && l < r.count(); ++l) s = r.getItemLayout(l);
                        s && (i = s.startAngle)
                    }
                    if (this._emptyCircleSector && a.remove(this._emptyCircleSector), 0 === r.count() && e.get("showEmptyCircle")) {
                        var u = new XT({
                            shape: gg(e, n)
                        });
                        u.useStyle(e.getModel("emptyCircleStyle").getItemStyle()), this._emptyCircleSector = u, a.add(u)
                    }
                    r.diff(o).add(function (e) {
                        var t = new uL(r, e, i);
                        r.setItemGraphicEl(e, t), a.add(t)
                    }).update(function (e, t) {
                        var n = o.getItemGraphicEl(t);
                        n.updateData(r, e, i), n.off("click"), a.add(n), r.setItemGraphicEl(e, n)
                    }).remove(function (t) {
                        var n = o.getItemGraphicEl(t);
                        Da(n, e, t)
                    }).execute(), bg(e), "expansion" !== e.get("animationTypeUpdate") && (this._data = r)
                }, n.prototype.dispose = function () {}, n.prototype.containPoint = function (e, t) {
                    var n = t.getData(),
                        i = n.getItemLayout(0);
                    if (i) {
                        var r = e[0] - i.cx,
                            o = e[1] - i.cy,
                            a = Math.sqrt(r * r + o * o);
                        return a <= i.r && a >= i.r0
                    }
                }, n.type = "pie", n
            }(EI),
            pL = function () {
                function e(e, t) {
                    this._getDataWithEncodedVisual = e, this._getRawData = t
                }
                return e.prototype.getAllNames = function () {
                    var e = this._getRawData();
                    return e.mapArray(e.getName)
                }, e.prototype.containName = function (e) {
                    var t = this._getRawData();
                    return t.indexOfName(e) >= 0
                }, e.prototype.indexOfName = function (e) {
                    var t = this._getDataWithEncodedVisual();
                    return t.indexOfName(e)
                }, e.prototype.getItemVisual = function (e, t) {
                    var n = this._getDataWithEncodedVisual();
                    return n.getItemVisual(e, t)
                }, e
            }(),
            hL = function (e) {
                function n() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return t(n, e), n.prototype.init = function (t) {
                    e.prototype.init.apply(this, arguments), this.legendVisualProvider = new pL(o_(this.getData, this), o_(this.getRawData, this)), this._defaultLabelLine(t)
                }, n.prototype.mergeOption = function () {
                    e.prototype.mergeOption.apply(this, arguments)
                }, n.prototype.getInitialData = function () {
                    var e = Tg(this, {
                            coordDimensions: ["value"],
                            encodeDefaulter: S(cl, this)
                        }),
                        t = [];
                    return e.each(e.mapDimension("value"), function (e) {
                        t.push(e)
                    }), this.seats = pi(t, e.hostModel.get("percentPrecision")), e
                }, n.prototype.getDataParams = function (t) {
                    var n = e.prototype.getDataParams.call(this, t);
                    return n.percent = this.seats[t], n.$vars.push("percent"), n
                }, n.prototype._defaultLabelLine = function (e) {
                    Di(e, "labelLine", ["show"]);
                    var t = e.labelLine,
                        n = e.emphasis.labelLine;
                    t.show = t.show && e.label.show, n.show = n.show && e.emphasis.label.show
                }, n.type = "series.pie", n.defaultOption = {
                    z: 2,
                    legendHoverLink: !0,
                    colorBy: "data",
                    center: ["50%", "50%"],
                    radius: [0, "75%"],
                    clockwise: !0,
                    startAngle: 90,
                    minAngle: 0,
                    minShowLabelAngle: 0,
                    selectedOffset: 10,
                    percentPrecision: 2,
                    stillShowZeroSum: !0,
                    left: 0,
                    top: 0,
                    right: 0,
                    bottom: 0,
                    width: null,
                    height: null,
                    label: {
                        rotate: 0,
                        show: !0,
                        overflow: "truncate",
                        position: "outer",
                        alignTo: "none",
                        edgeDistance: "25%",
                        bleedMargin: 10,
                        distanceToLabelLine: 5
                    },
                    labelLine: {
                        show: !0,
                        length: 15,
                        length2: 15,
                        smooth: !1,
                        minTurnAngle: 90,
                        maxSurfaceAngle: 90,
                        lineStyle: {
                            width: 1,
                            type: "solid"
                        }
                    },
                    itemStyle: {
                        borderWidth: 1,
                        borderJoin: "round"
                    },
                    showEmptyCircle: !0,
                    emptyCircleStyle: {
                        color: "lightgray",
                        opacity: 1
                    },
                    labelLayout: {
                        hideOverlap: !0
                    },
                    emphasis: {
                        scale: !0,
                        scaleSize: 5
                    },
                    avoidLabelOverlap: !0,
                    animationType: "expansion",
                    animationDuration: 1e3,
                    animationTypeUpdate: "transition",
                    animationEasingUpdate: "cubicInOut",
                    animationDurationUpdate: 500,
                    animationEasing: "cubicInOut"
                }, n
            }(PI);
        cd(Mg);
        var dL = "\0_ec_interaction_mutex";
        Lp({
            type: "takeGlobalCursor",
            event: "globalCursorTaken",
            update: "update"
        }, K);
        for (var fL, gL = function (e) {
                function n(t) {
                    var n = e.call(this) || this;
                    n._zr = t;
                    var i = o_(n._mousedownHandler, n),
                        r = o_(n._mousemoveHandler, n),
                        o = o_(n._mouseupHandler, n),
                        a = o_(n._mousewheelHandler, n),
                        l = o_(n._pinchHandler, n);
                    return n.enable = function (e, n) {
                        this.disable(), this._opt = p(s(n) || {}, {
                            zoomOnMouseWheel: !0,
                            moveOnMouseMove: !0,
                            moveOnMouseWheel: !1,
                            preventDefaultMouseMove: !0
                        }), null == e && (e = !0), (!0 === e || "move" === e || "pan" === e) && (t.on("mousedown", i), t.on("mousemove", r), t.on("mouseup", o)), (!0 === e || "scale" === e || "zoom" === e) && (t.on("mousewheel", a), t.on("pinch", l))
                    }, n.disable = function () {
                        t.off("mousedown", i), t.off("mousemove", r), t.off("mouseup", o), t.off("mousewheel", a), t.off("pinch", l)
                    }, n
                }
                return t(n, e), n.prototype.isDragging = function () {
                    return this._dragging
                }, n.prototype.isPinching = function () {
                    return this._pinching
                }, n.prototype.setPointerChecker = function (e) {
                    this.pointerChecker = e
                }, n.prototype.dispose = function () {
                    this.disable()
                }, n.prototype._mousedownHandler = function (e) {
                    if (!Oe(e)) {
                        for (var t = e.target; t;) {
                            if (t.draggable) return;
                            t = t.__hostTarget || t.parent
                        }
                        var n = e.offsetX,
                            i = e.offsetY;
                        this.pointerChecker && this.pointerChecker(e, n, i) && (this._x = n, this._y = i, this._dragging = !0)
                    }
                }, n.prototype._mousemoveHandler = function (e) {
                    if (this._dragging && Pg("moveOnMouseMove", e, this._opt) && "pinch" !== e.gestureEvent && !Ig(this._zr, "globalPan")) {
                        var t = e.offsetX,
                            n = e.offsetY,
                            i = this._x,
                            r = this._y,
                            o = t - i,
                            a = n - r;
                        this._x = t, this._y = n, this._opt.preventDefaultMouseMove && M_(e.event), Ag(this, "pan", "moveOnMouseMove", e, {
                            dx: o,
                            dy: a,
                            oldX: i,
                            oldY: r,
                            newX: t,
                            newY: n,
                            isAvailableBehavior: null
                        })
                    }
                }, n.prototype._mouseupHandler = function (e) {
                    Oe(e) || (this._dragging = !1)
                }, n.prototype._mousewheelHandler = function (e) {
                    var t = Pg("zoomOnMouseWheel", e, this._opt),
                        n = Pg("moveOnMouseWheel", e, this._opt),
                        i = e.wheelDelta,
                        r = Math.abs(i),
                        o = e.offsetX,
                        a = e.offsetY;
                    if (0 !== i && (t || n)) {
                        if (t) {
                            var s = r > 3 ? 1.4 : r > 1 ? 1.2 : 1.1,
                                l = i > 0 ? s : 1 / s;
                            Dg(this, "zoom", "zoomOnMouseWheel", e, {
                                scale: l,
                                originX: o,
                                originY: a,
                                isAvailableBehavior: null
                            })
                        }
                        if (n) {
                            var u = Math.abs(i),
                                c = (i > 0 ? 1 : -1) * (u > 3 ? .4 : u > 1 ? .15 : .05);
                            Dg(this, "scrollMove", "moveOnMouseWheel", e, {
                                scrollDelta: c,
                                originX: o,
                                originY: a,
                                isAvailableBehavior: null
                            })
                        }
                    }
                }, n.prototype._pinchHandler = function (e) {
                    if (!Ig(this._zr, "globalPan")) {
                        var t = e.pinchScale > 1 ? 1.1 : 1 / 1.1;
                        Dg(this, "zoom", null, e, {
                            scale: t,
                            originX: e.pinchX,
                            originY: e.pinchY,
                            isAvailableBehavior: null
                        })
                    }
                }, n
            }(y_), mL = {
                axisPointer: 1,
                tooltip: 1,
                brush: 1
            }, yL = {
                fill: "fill",
                stroke: "stroke",
                "stroke-width": "lineWidth",
                opacity: "opacity",
                "fill-opacity": "fillOpacity",
                "stroke-opacity": "strokeOpacity",
                "stroke-dasharray": "lineDash",
                "stroke-dashoffset": "lineDashOffset",
                "stroke-linecap": "lineCap",
                "stroke-linejoin": "lineJoin",
                "stroke-miterlimit": "miterLimit",
                "font-family": "fontFamily",
                "font-size": "fontSize",
                "font-style": "fontStyle",
                "font-weight": "fontWeight",
                "text-anchor": "textAlign",
                visibility: "visibility",
                display: "display"
            }, vL = w(yL), xL = {
                "alignment-baseline": "textBaseline",
                "stop-color": "stopColor"
            }, _L = w(xL), wL = function () {
                function e() {
                    this._defs = {}, this._root = null
                }
                return e.prototype.parse = function (e, t) {
                    t = t || {};
                    var n = Eg(e);
                    this._defsUsePending = [];
                    var i = new gb;
                    this._root = i;
                    var r, o, a = [],
                        s = n.getAttribute("viewBox") || "",
                        l = parseFloat(n.getAttribute("width") || t.width),
                        u = parseFloat(n.getAttribute("height") || t.height);
                    isNaN(l) && (l = null), isNaN(u) && (u = null), Hg(n, i, null, !0, !1);
                    for (var c = n.firstChild; c;) this._parseNode(c, i, a, null, !1, !1), c = c.nextSibling;
                    if (Wg(this._defs, this._defsUsePending), this._defsUsePending = [], s) {
                        var p = jg(s);
                        p.length >= 4 && (r = {
                            x: parseFloat(p[0] || 0),
                            y: parseFloat(p[1] || 0),
                            width: parseFloat(p[2]),
                            height: parseFloat(p[3])
                        })
                    }
                    if (r && null != l && null != u && (o = qg(r, {
                            x: 0,
                            y: 0,
                            width: l,
                            height: u
                        }), !t.ignoreViewBox)) {
                        var h = i;
                        i = new gb, i.add(h), h.scaleX = h.scaleY = o.scale, h.x = o.x, h.y = o.y
                    }
                    return t.ignoreRootClip || null == l || null == u || i.setClipPath(new WS({
                        shape: {
                            x: 0,
                            y: 0,
                            width: l,
                            height: u
                        }
                    })), {
                        root: i,
                        width: l,
                        height: u,
                        viewBoxRect: r,
                        viewBoxTransform: o,
                        named: a
                    }
                }, e.prototype._parseNode = function (e, t, n, i, r, o) {
                    var a, s = e.nodeName.toLowerCase(),
                        l = i;
                    if ("defs" === s && (r = !0), "text" === s && (o = !0), "defs" === s || "switch" === s) a = t;
                    else {
                        if (!r) {
                            var u = fL[s];
                            if (u && $(fL, s)) {
                                a = u.call(this, e, t);
                                var c = e.getAttribute("name");
                                if (c) {
                                    var p = {
                                        name: c,
                                        namedFrom: null,
                                        svgNodeTagLower: s,
                                        el: a
                                    };
                                    n.push(p), "g" === s && (l = p)
                                } else i && n.push({
                                    name: i.name,
                                    namedFrom: i,
                                    svgNodeTagLower: s,
                                    el: a
                                });
                                t.add(a)
                            }
                        }
                        var h = bL[s];
                        if (h && $(bL, s)) {
                            var d = h.call(this, e),
                                f = e.getAttribute("id");
                            f && (this._defs[f] = d)
                        }
                    }
                    if (a && a.isGroup)
                        for (var g = e.firstChild; g;) 1 === g.nodeType ? this._parseNode(g, a, n, l, r, o) : 3 === g.nodeType && o && this._parseText(g, a), g = g.nextSibling
                }, e.prototype._parseText = function (e, t) {
                    var n = new RS({
                        style: {
                            text: e.textContent
                        },
                        silent: !0,
                        x: this._textX || 0,
                        y: this._textY || 0
                    });
                    Bg(t, n), Hg(e, n, this._defsUsePending, !1, !1), Gg(n, t);
                    var i = n.style,
                        r = i.fontSize;
                    r && 9 > r && (i.fontSize = 9, n.scaleX *= r / 9, n.scaleY *= r / 9);
                    var o = (i.fontSize || i.fontFamily) && [i.fontStyle, i.fontWeight, (i.fontSize || 12) + "px", i.fontFamily || "sans-serif"].join(" ");
                    i.font = o;
                    var a = n.getBoundingRect();
                    return this._textX += a.width, t.add(n), n
                }, e.internalField = void(fL = {
                    g: function (e, t) {
                        var n = new gb;
                        return Bg(t, n), Hg(e, n, this._defsUsePending, !1, !1), n
                    },
                    rect: function (e, t) {
                        var n = new WS;
                        return Bg(t, n), Hg(e, n, this._defsUsePending, !1, !1), n.setShape({
                            x: parseFloat(e.getAttribute("x") || "0"),
                            y: parseFloat(e.getAttribute("y") || "0"),
                            width: parseFloat(e.getAttribute("width") || "0"),
                            height: parseFloat(e.getAttribute("height") || "0")
                        }), n.silent = !0, n
                    },
                    circle: function (e, t) {
                        var n = new AT;
                        return Bg(t, n), Hg(e, n, this._defsUsePending, !1, !1), n.setShape({
                            cx: parseFloat(e.getAttribute("cx") || "0"),
                            cy: parseFloat(e.getAttribute("cy") || "0"),
                            r: parseFloat(e.getAttribute("r") || "0")
                        }), n.silent = !0, n
                    },
                    line: function (e, t) {
                        var n = new eC;
                        return Bg(t, n), Hg(e, n, this._defsUsePending, !1, !1), n.setShape({
                            x1: parseFloat(e.getAttribute("x1") || "0"),
                            y1: parseFloat(e.getAttribute("y1") || "0"),
                            x2: parseFloat(e.getAttribute("x2") || "0"),
                            y2: parseFloat(e.getAttribute("y2") || "0")
                        }), n.silent = !0, n
                    },
                    ellipse: function (e, t) {
                        var n = new LT;
                        return Bg(t, n), Hg(e, n, this._defsUsePending, !1, !1), n.setShape({
                            cx: parseFloat(e.getAttribute("cx") || "0"),
                            cy: parseFloat(e.getAttribute("cy") || "0"),
                            rx: parseFloat(e.getAttribute("rx") || "0"),
                            ry: parseFloat(e.getAttribute("ry") || "0")
                        }), n.silent = !0, n
                    },
                    polygon: function (e, t) {
                        var n, i = e.getAttribute("points");
                        i && (n = Fg(i));
                        var r = new ZT({
                            shape: {
                                points: n || []
                            },
                            silent: !0
                        });
                        return Bg(t, r), Hg(e, r, this._defsUsePending, !1, !1), r
                    },
                    polyline: function (e, t) {
                        var n, i = e.getAttribute("points");
                        i && (n = Fg(i));
                        var r = new KT({
                            shape: {
                                points: n || []
                            },
                            silent: !0
                        });
                        return Bg(t, r), Hg(e, r, this._defsUsePending, !1, !1), r
                    },
                    image: function (e, t) {
                        var n = new FS;
                        return Bg(t, n), Hg(e, n, this._defsUsePending, !1, !1), n.setStyle({
                            image: e.getAttribute("xlink:href") || e.getAttribute("href"),
                            x: +e.getAttribute("x"),
                            y: +e.getAttribute("y"),
                            width: +e.getAttribute("width"),
                            height: +e.getAttribute("height")
                        }), n.silent = !0, n
                    },
                    text: function (e, t) {
                        var n = e.getAttribute("x") || "0",
                            i = e.getAttribute("y") || "0",
                            r = e.getAttribute("dx") || "0",
                            o = e.getAttribute("dy") || "0";
                        this._textX = parseFloat(n) + parseFloat(r), this._textY = parseFloat(i) + parseFloat(o);
                        var a = new gb;
                        return Bg(t, a), Hg(e, a, this._defsUsePending, !1, !0), a
                    },
                    tspan: function (e, t) {
                        var n = e.getAttribute("x"),
                            i = e.getAttribute("y");
                        null != n && (this._textX = parseFloat(n)), null != i && (this._textY = parseFloat(i));
                        var r = e.getAttribute("dx") || "0",
                            o = e.getAttribute("dy") || "0",
                            a = new gb;
                        return Bg(t, a), Hg(e, a, this._defsUsePending, !1, !0), this._textX += parseFloat(r), this._textY += parseFloat(o), a
                    },
                    path: function (e, t) {
                        var n = e.getAttribute("d") || "",
                            i = ha(n);
                        return Bg(t, i), Hg(e, i, this._defsUsePending, !1, !1), i.silent = !0, i
                    }
                }), e
            }(), bL = {
                lineargradient: function (e) {
                    var t = parseInt(e.getAttribute("x1") || "0", 10),
                        n = parseInt(e.getAttribute("y1") || "0", 10),
                        i = parseInt(e.getAttribute("x2") || "10", 10),
                        r = parseInt(e.getAttribute("y2") || "0", 10),
                        o = new lC(t, n, i, r);
                    return Rg(e, o), zg(e, o), o
                },
                radialgradient: function (e) {
                    var t = parseInt(e.getAttribute("cx") || "0", 10),
                        n = parseInt(e.getAttribute("cy") || "0", 10),
                        i = parseInt(e.getAttribute("r") || "0", 10),
                        r = new uC(t, n, i);
                    return Rg(e, r), zg(e, r), r
                }
            }, SL = /^url\(\s*#(.*?)\)/, TL = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g, CL = /(translate|scale|rotate|skewX|skewY|matrix)\(([\-\s0-9\.eE,]*)\)/g, ML = Math.PI / 180, IL = /([^\s:;]+)\s*:\s*([^:;]+)/g, kL = Y(["rect", "circle", "line", "ellipse", "polygon", "polyline", "path", "text", "tspan", "g"]), DL = function () {
                function e(e, t) {
                    this.type = "geoSVG", this._usedGraphicMap = Y(), this._freedGraphics = [], this._mapName = e, this._parsedXML = Eg(t)
                }
                return e.prototype.load = function () {
                    var e = this._firstGraphic;
                    if (!e) {
                        e = this._firstGraphic = this._buildGraphic(this._parsedXML), this._freedGraphics.push(e), this._boundingRect = this._firstGraphic.boundingRect.clone();
                        var t = Kg(e.named),
                            n = t.regions,
                            i = t.regionsMap;
                        this._regions = n, this._regionsMap = i
                    }
                    return {
                        boundingRect: this._boundingRect,
                        regions: this._regions,
                        regionsMap: this._regionsMap
                    }
                }, e.prototype._buildGraphic = function (e) {
                    var t, n;
                    try {
                        t = e && Zg(e, {
                            ignoreViewBox: !0,
                            ignoreRootClip: !0
                        }) || {}, n = t.root, V(null != n)
                    } catch (e) {
                        throw new Error("Invalid svg format\n" + e.message)
                    }
                    var i = new gb;
                    i.add(n), i.isGeoSVGGraphicRoot = !0;
                    var r = t.width,
                        o = t.height,
                        a = t.viewBoxRect,
                        s = this._boundingRect;
                    if (!s) {
                        var l = void 0,
                            u = void 0,
                            c = void 0,
                            p = void 0;
                        if (null != r ? (l = 0, c = r) : a && (l = a.x, c = a.width), null != o ? (u = 0, p = o) : a && (u = a.y, p = a.height), null == l || null == u) {
                            var h = n.getBoundingRect();
                            null == l && (l = h.x, c = h.width), null == u && (u = h.y, p = h.height)
                        }
                        s = this._boundingRect = new F_(l, u, c, p)
                    }
                    if (a) {
                        var d = qg(a, s);
                        n.scaleX = n.scaleY = d.scale, n.x = d.x, n.y = d.y
                    }
                    i.setClipPath(new WS({
                        shape: s.plain()
                    }));
                    var f = [];
                    return m(t.named, function (e) {
                        null != kL.get(e.svgNodeTagLower) && (f.push(e), $g(e.el))
                    }), {
                        root: i,
                        boundingRect: s,
                        named: f
                    }
                }, e.prototype.useGraphic = function (e) {
                    var t = this._usedGraphicMap,
                        n = t.get(e);
                    return n || (n = this._freedGraphics.pop() || this._buildGraphic(this._parsedXML), t.set(e, n), n)
                }, e.prototype.freeGraphic = function (e) {
                    var t = this._usedGraphicMap,
                        n = t.get(e);
                    n && (t.removeKey(e), this._freedGraphics.push(n))
                }, e
            }(), AL = [126, 25], PL = "南海诸岛", LL = [
                [
                    [0, 3.5],
                    [7, 11.2],
                    [15, 11.9],
                    [30, 7],
                    [42, .7],
                    [52, .7],
                    [56, 7.7],
                    [59, .7],
                    [64, .7],
                    [64, 0],
                    [5, 0],
                    [0, 3.5]
                ],
                [
                    [13, 16.1],
                    [19, 14.7],
                    [16, 21.7],
                    [11, 23.1],
                    [13, 16.1]
                ],
                [
                    [12, 32.2],
                    [14, 38.5],
                    [15, 38.5],
                    [13, 32.2],
                    [12, 32.2]
                ],
                [
                    [16, 47.6],
                    [12, 53.2],
                    [13, 53.2],
                    [18, 47.6],
                    [16, 47.6]
                ],
                [
                    [6, 64.4],
                    [8, 70],
                    [9, 70],
                    [8, 64.4],
                    [6, 64.4]
                ],
                [
                    [23, 82.6],
                    [29, 79.8],
                    [30, 79.8],
                    [25, 82.6],
                    [23, 82.6]
                ],
                [
                    [37, 70.7],
                    [43, 62.3],
                    [44, 62.3],
                    [39, 70.7],
                    [37, 70.7]
                ],
                [
                    [48, 51.1],
                    [51, 45.5],
                    [53, 45.5],
                    [50, 51.1],
                    [48, 51.1]
                ],
                [
                    [51, 35],
                    [51, 28.7],
                    [53, 28.7],
                    [53, 35],
                    [51, 35]
                ],
                [
                    [52, 22.4],
                    [55, 17.5],
                    [56, 17.5],
                    [53, 22.4],
                    [52, 22.4]
                ],
                [
                    [58, 12.6],
                    [62, 7],
                    [63, 7],
                    [60, 12.6],
                    [58, 12.6]
                ],
                [
                    [0, 3.5],
                    [0, 93.1],
                    [64, 93.1],
                    [64, 0],
                    [63, 0],
                    [63, 92.4],
                    [1, 92.4],
                    [1, 3.5],
                    [0, 3.5]
                ]
            ], NL = 0; NL < LL.length; NL++)
            for (var OL = 0; OL < LL[NL].length; OL++) LL[NL][OL][0] /= 10.5, LL[NL][OL][1] /= -14, LL[NL][OL][0] += AL[0], LL[NL][OL][1] += AL[1];
        var EL = {
                "南海诸岛": [32, 80],
                "广东": [0, -10],
                "香港": [10, 5],
                "澳门": [-10, 10],
                "天津": [5, 5]
            },
            RL = [
                [
                    [123.45165252685547, 25.73527164402261],
                    [123.49731445312499, 25.73527164402261],
                    [123.49731445312499, 25.750734064600884],
                    [123.45165252685547, 25.750734064600884],
                    [123.45165252685547, 25.73527164402261]
                ]
            ],
            zL = "name",
            BL = function () {
                function e(e, t, n) {
                    this.type = "geoJSON", this._parsedMap = Y(), this._mapName = e, this._specialAreas = n, this._geoJSON = nm(t)
                }
                return e.prototype.load = function (e, t) {
                    t = t || zL;
                    var n = this._parsedMap.get(t);
                    if (!n) {
                        var i = this._parseToRegions(t);
                        n = this._parsedMap.set(t, {
                            regions: i,
                            boundingRect: tm(i)
                        })
                    }
                    var r = Y(),
                        o = [];
                    return m(n.regions, function (t) {
                        var n = t.name;
                        e && $(e, n) && (t = t.cloneShallow(n = e[n])), o.push(t), r.set(n, t)
                    }), {
                        regions: o,
                        boundingRect: n.boundingRect || new F_(0, 0, 0, 0),
                        regionsMap: r
                    }
                }, e.prototype._parseToRegions = function (e) {
                    var t, n = this._mapName,
                        i = this._geoJSON;
                    try {
                        t = i ? xd(i, e) : []
                    } catch (e) {
                        throw new Error("Invalid geoJson format\n" + e.message)
                    }
                    return Jg(n, t), m(t, function (e) {
                        var t = e.name;
                        Qg(n, e), em(n, e);
                        var i = this._specialAreas && this._specialAreas[t];
                        i && e.transformTo(i.left, i.top, i.width, i.height)
                    }, this), t
                }, e.prototype.getMapForUser = function () {
                    return {
                        geoJson: this._geoJSON,
                        geoJSON: this._geoJSON,
                        specialAreas: this._specialAreas
                    }
                }, e
            }(),
            FL = Y(),
            HL = {
                registerMap: function (e, t, n) {
                    if (t.svg) {
                        var i = new DL(e, t.svg);
                        FL.set(e, i)
                    } else {
                        var r = t.geoJson || t.geoJSON;
                        r && !t.features ? n = t.specialAreas : r = t;
                        i = new BL(e, r, n);
                        FL.set(e, i)
                    }
                },
                getGeoResource: function (e) {
                    return FL.get(e)
                },
                getMapForUser: function (e) {
                    var t = FL.get(e);
                    return t && "geoJSON" === t.type && t.getMapForUser()
                },
                load: function (e, t, n) {
                    var i = FL.get(e);
                    if (i) return i.load(t, n)
                }
            },
            GL = ["rect", "circle", "line", "ellipse", "polygon", "polyline", "path"],
            VL = Y(GL),
            WL = Y(GL.concat(["g"])),
            jL = Y(GL.concat(["g"])),
            XL = Ui(),
            YL = function () {
                function e(e) {
                    var t = new gb;
                    this.uid = gs("ec_map_draw"), this._controller = new gL(e.getZr()), this._controllerHost = {
                        target: t
                    }, this.group = t, t.add(this._regionsGroup = new gb), t.add(this._svgGroup = new gb)
                }
                return e.prototype.draw = function (e, t, n, i, r) {
                    var o = "geo" === e.mainType,
                        a = e.getData && e.getData();
                    o && t.eachComponent({
                        mainType: "series",
                        subType: "map"
                    }, function (t) {
                        a || t.getHostGeoModel() !== e || (a = t.getData())
                    });
                    var s = e.coordinateSystem,
                        l = this._regionsGroup,
                        u = this.group,
                        c = s.getTransformInfo(),
                        p = c.raw,
                        h = c.roam,
                        d = !l.childAt(0) || r;
                    d ? (u.x = h.x, u.y = h.y, u.scaleX = h.scaleX, u.scaleY = h.scaleY, u.dirty()) : Ta(u, h, e);
                    var f = a && a.getVisual("visualMeta") && a.getVisual("visualMeta").length > 0,
                        g = {
                            api: n,
                            geo: s,
                            mapOrGeoModel: e,
                            data: a,
                            isVisualEncodedByVisualMap: f,
                            isGeo: o,
                            transformInfoRaw: p
                        };
                    "geoJSON" === s.resourceType ? this._buildGeoJSON(g) : "geoSVG" === s.resourceType && this._buildSVG(g), this._updateController(e, t, n), this._updateMapSelectHandler(e, l, n, i)
                }, e.prototype._buildGeoJSON = function (e) {
                    function t(e, t) {
                        return t && (e = t(e)), e && [e[0] * s.scaleX + s.x, e[1] * s.scaleY + s.y]
                    }

                    function n(e) {
                        for (var n = [], i = !p && c && c.project, r = 0; r < e.length; ++r) {
                            var o = t(e[r], i);
                            o && n.push(o)
                        }
                        return n
                    }

                    function i(e) {
                        return {
                            shape: {
                                points: n(e)
                            }
                        }
                    }
                    var r = this._regionsGroupByName = Y(),
                        o = Y(),
                        a = this._regionsGroup,
                        s = e.transformInfoRaw,
                        l = e.mapOrGeoModel,
                        u = e.data,
                        c = e.geo.projection,
                        p = c && c.stream;
                    a.removeAll(), m(e.geo.regions, function (n) {
                        function s(t, n) {
                            if (t.length) {
                                var i = new aC({
                                    culling: !0,
                                    segmentIgnoreThreshold: 1,
                                    shape: {
                                        paths: t
                                    }
                                });
                                d.add(i), om(e, i, g, y), am(e, i, h, y, l, g, _), n && (rm(i), m(i.states, rm))
                            }
                        }
                        var h = n.name,
                            d = r.get(h),
                            f = o.get(h) || {},
                            g = f.dataIdx,
                            y = f.regionModel;
                        d || (d = r.set(h, new gb), a.add(d), g = u ? u.indexOfName(h) : null, y = e.isGeo ? l.getRegionModel(h) : u ? u.getItemModel(g) : null, o.set(h, {
                            dataIdx: g,
                            regionModel: y
                        }));
                        var v = [],
                            x = [];
                        m(n.geometries, function (e) {
                            if ("polygon" === e.type) {
                                var t = [e.exterior].concat(e.interiors || []);
                                p && (t = cm(t, p)), m(t, function (e) {
                                    v.push(new ZT(i(e)))
                                })
                            } else {
                                var n = e.points;
                                p && (n = cm(n, p, !0)), m(n, function (e) {
                                    x.push(new KT(i(e)))
                                })
                            }
                        });
                        var _ = t(n.getCenter(), c && c.project);
                        s(v), s(x, !0)
                    }), r.each(function (t, n) {
                        var i = o.get(n),
                            r = i.dataIdx,
                            a = i.regionModel;
                        sm(e, t, n, a, l, r), lm(e, t, n, a, l), um(e, t, n, a, l)
                    }, this)
                }, e.prototype._buildSVG = function (e) {
                    var t = e.geo.map,
                        n = e.transformInfoRaw;
                    this._svgGroup.x = n.x, this._svgGroup.y = n.y, this._svgGroup.scaleX = n.scaleX, this._svgGroup.scaleY = n.scaleY, this._svgResourceChanged(t) && (this._freeSVG(), this._useSVG(t));
                    var i = this._svgDispatcherMap = Y(),
                        r = !1;
                    m(this._svgGraphicRecord.named, function (t) {
                        var n = t.name,
                            o = e.mapOrGeoModel,
                            a = e.data,
                            s = t.svgNodeTagLower,
                            l = t.el,
                            u = a ? a.indexOfName(n) : null,
                            c = o.getRegionModel(n);
                        if (null != VL.get(s) && l instanceof qb && om(e, l, u, c), l instanceof qb && (l.culling = !0), l.z2EmphasisLift = 0, !t.namedFrom && (null != jL.get(s) && am(e, l, n, c, o, u, null), sm(e, l, n, c, o, u), lm(e, l, n, c, o), null != WL.get(s))) {
                            var p = um(e, l, n, c, o);
                            "self" === p && (r = !0);
                            var h = i.get(n) || i.set(n, []);
                            h.push(l)
                        }
                    }, this), this._enableBlurEntireSVG(r, e)
                }, e.prototype._enableBlurEntireSVG = function (e, t) {
                    if (e && t.isGeo) {
                        var n = t.mapOrGeoModel.getModel(["blur", "itemStyle"]).getItemStyle(),
                            i = n.opacity;
                        this._svgGraphicRecord.root.traverse(function (e) {
                            if (!e.isGroup) {
                                Mo(e);
                                var t = e.ensureState("blur").style || {};
                                null == t.opacity && null != i && (t.opacity = i), e.ensureState("emphasis")
                            }
                        })
                    }
                }, e.prototype.remove = function () {
                    this._regionsGroup.removeAll(), this._regionsGroupByName = null, this._svgGroup.removeAll(), this._freeSVG(), this._controller.dispose(), this._controllerHost = null
                }, e.prototype.findHighDownDispatchers = function (e, t) {
                    if (null == e) return [];
                    var n = t.coordinateSystem;
                    if ("geoJSON" === n.resourceType) {
                        var i = this._regionsGroupByName;
                        if (i) {
                            var r = i.get(e);
                            return r ? [r] : []
                        }
                    } else if ("geoSVG" === n.resourceType) return this._svgDispatcherMap && this._svgDispatcherMap.get(e) || []
                }, e.prototype._svgResourceChanged = function (e) {
                    return this._svgMapName !== e
                }, e.prototype._useSVG = function (e) {
                    var t = HL.getGeoResource(e);
                    if (t && "geoSVG" === t.type) {
                        var n = t.useGraphic(this.uid);
                        this._svgGroup.add(n.root), this._svgGraphicRecord = n, this._svgMapName = e
                    }
                }, e.prototype._freeSVG = function () {
                    var e = this._svgMapName;
                    if (null != e) {
                        var t = HL.getGeoResource(e);
                        t && "geoSVG" === t.type && t.freeGraphic(this.uid), this._svgGraphicRecord = null, this._svgDispatcherMap = null, this._svgGroup.removeAll(), this._svgMapName = null
                    }
                }, e.prototype._updateController = function (e, t, n) {
                    function i() {
                        var t = {
                            type: "geoRoam",
                            componentType: s
                        };
                        return t[s + "Id"] = e.id, t
                    }
                    var r = e.coordinateSystem,
                        o = this._controller,
                        a = this._controllerHost;
                    a.zoomLimit = e.get("scaleLimit"), a.zoom = r.getZoom(), o.enable(e.get("roam") || !1);
                    var s = e.mainType;
                    o.off("pan").on("pan", function (e) {
                        this._mouseDownFlag = !1, Lg(a, e.dx, e.dy), n.dispatchAction(c(i(), {
                            dx: e.dx,
                            dy: e.dy,
                            animation: {
                                duration: 0
                            }
                        }))
                    }, this), o.off("zoom").on("zoom", function (e) {
                        this._mouseDownFlag = !1, Ng(a, e.scale, e.originX, e.originY), n.dispatchAction(c(i(), {
                            zoom: e.scale,
                            originX: e.originX,
                            originY: e.originY,
                            animation: {
                                duration: 0
                            }
                        }))
                    }, this), o.setPointerChecker(function (t, i, o) {
                        return r.containPoint([i, o]) && !Og(t, n, e)
                    })
                }, e.prototype.resetForLabelLayout = function () {
                    this.group.traverse(function (e) {
                        var t = e.getTextContent();
                        t && (t.ignore = XL(t).ignore)
                    })
                }, e.prototype._updateMapSelectHandler = function (e, t) {
                    var n = this;
                    t.off("mousedown"), t.off("click"), e.get("selectedMode") && (t.on("mousedown", function () {
                        n._mouseDownFlag = !0
                    }), t.on("click", function () {
                        n._mouseDownFlag && (n._mouseDownFlag = !1)
                    }))
                }, e
            }(),
            UL = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t
                }
                return t(n, e), n.prototype.render = function (e, t, n, i) {
                    if (!i || "mapToggleSelect" !== i.type || i.from !== this.uid) {
                        var r = this.group;
                        if (r.removeAll(), !e.getHostGeoModel()) {
                            if (this._mapDraw && i && "geoRoam" === i.type && this._mapDraw.resetForLabelLayout(), i && "geoRoam" === i.type && "series" === i.componentType && i.seriesId === e.id) {
                                var o = this._mapDraw;
                                o && r.add(o.group)
                            } else if (e.needsDrawMap) {
                                o = this._mapDraw || new YL(n);
                                r.add(o.group), o.draw(e, t, n, this, i), this._mapDraw = o
                            } else this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
                            e.get("showLegendSymbol") && t.getComponent("legend") && this._renderSymbols(e, t, n)
                        }
                    }
                }, n.prototype.remove = function () {
                    this._mapDraw && this._mapDraw.remove(), this._mapDraw = null, this.group.removeAll()
                }, n.prototype.dispose = function () {
                    this._mapDraw && this._mapDraw.remove(), this._mapDraw = null
                }, n.prototype._renderSymbols = function (e) {
                    var t = e.originalData,
                        n = this.group;
                    t.each(t.mapDimension("value"), function (i, r) {
                        if (!isNaN(i)) {
                            var o = t.getItemLayout(r);
                            if (o && o.point) {
                                var a = o.point,
                                    s = o.offset,
                                    l = new AT({
                                        style: {
                                            fill: e.getData().getVisual("style").fill
                                        },
                                        shape: {
                                            cx: a[0] + 9 * s,
                                            cy: a[1],
                                            r: 3
                                        },
                                        silent: !0,
                                        z2: 8 + (s ? 0 : lT + 1)
                                    });
                                if (!s) {
                                    var u = e.mainSeries.getData(),
                                        c = t.getName(r),
                                        p = u.indexOfName(c),
                                        h = t.getItemModel(r),
                                        d = h.getModel("label"),
                                        f = u.getItemGraphicEl(p);
                                    os(l, as(h), {
                                        labelFetcher: {
                                            getFormattedLabel: function (t, n) {
                                                return e.getFormattedLabel(p, n)
                                            }
                                        },
                                        defaultText: c
                                    }), l.disableLabelAnimation = !0, d.get("position") || l.setTextConfig({
                                        position: "bottom"
                                    }), f.onHoverStateChange = function (e) {
                                        _o(l, e)
                                    }
                                }
                                n.add(l)
                            }
                        }
                    })
                }, n.type = "map", n
            }(EI),
            qL = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t.needsDrawMap = !1, t.seriesGroup = [], t.getTooltipPosition = function (e) {
                        if (null != e) {
                            var t = this.getData().getName(e),
                                n = this.coordinateSystem,
                                i = n.getRegion(t);
                            return i && n.dataToPoint(i.getCenter())
                        }
                    }, t
                }
                return t(n, e), n.prototype.getInitialData = function () {
                    for (var e = Tg(this, {
                            coordDimensions: ["value"],
                            encodeDefaulter: S(cl, this)
                        }), t = Y(), n = [], i = 0, r = e.count(); r > i; i++) {
                        var o = e.getName(i);
                        t.set(o, !0)
                    }
                    var a = HL.load(this.getMapType(), this.option.nameMap, this.option.nameProperty);
                    return m(a.regions, function (e) {
                        var i = e.name;
                        t.get(i) || n.push(i)
                    }), e.appendValues([], n), e
                }, n.prototype.getHostGeoModel = function () {
                    var e = this.option.geoIndex;
                    return null != e ? this.ecModel.getComponent("geo", e) : null
                }, n.prototype.getMapType = function () {
                    return (this.getHostGeoModel() || this).option.map
                }, n.prototype.getRawValue = function (e) {
                    var t = this.getData();
                    return t.get(t.mapDimension("value"), e)
                }, n.prototype.getRegionModel = function (e) {
                    var t = this.getData();
                    return t.getItemModel(t.indexOfName(e))
                }, n.prototype.formatTooltip = function (e) {
                    for (var t = this.getData(), n = this.getRawValue(e), i = t.getName(e), r = this.seriesGroup, o = [], a = 0; a < r.length; a++) {
                        var s = r[a].originalData.indexOfName(i),
                            l = t.mapDimension("value");
                        isNaN(r[a].originalData.get(l, s)) || o.push(r[a].name)
                    }
                    return Du("section", {
                        header: o.join(", "),
                        noHeader: !o.length,
                        blocks: [Du("nameValue", {
                            name: i,
                            value: n
                        })]
                    })
                }, n.prototype.setZoom = function (e) {
                    this.option.zoom = e
                }, n.prototype.setCenter = function (e) {
                    this.option.center = e
                }, n.prototype.getLegendIcon = function (e) {
                    var t = e.icon || "roundRect",
                        n = Dc(t, 0, 0, e.itemWidth, e.itemHeight, e.itemStyle.fill);
                    return n.setStyle(e.itemStyle), n.style.stroke = "none", t.indexOf("empty") > -1 && (n.style.stroke = n.style.fill, n.style.fill = "#fff", n.style.lineWidth = 2), n
                }, n.type = "series.map", n.dependencies = ["geo"], n.layoutMode = "box", n.defaultOption = {
                    z: 2,
                    coordinateSystem: "geo",
                    map: "",
                    left: "center",
                    top: "center",
                    aspectScale: null,
                    showLegendSymbol: !0,
                    boundingCoords: null,
                    center: null,
                    zoom: 1,
                    scaleLimit: null,
                    selectedMode: !0,
                    label: {
                        show: !1,
                        color: "#000"
                    },
                    itemStyle: {
                        borderWidth: .5,
                        borderColor: "#444",
                        areaColor: "#eee"
                    },
                    emphasis: {
                        label: {
                            show: !0,
                            color: "rgb(100,0,0)"
                        },
                        itemStyle: {
                            areaColor: "rgba(255,215,0,0.8)"
                        }
                    },
                    select: {
                        label: {
                            show: !0,
                            color: "rgb(100,0,0)"
                        },
                        itemStyle: {
                            color: "rgba(255,215,0,0.8)"
                        }
                    },
                    nameProperty: "name"
                }, n
            }(PI),
            ZL = me,
            $L = function (e) {
                function n(t) {
                    var n = e.call(this) || this;
                    return n.type = "view", n.dimensions = ["x", "y"], n._roamTransformable = new ab, n._rawTransformable = new ab, n.name = t, n
                }
                return t(n, e), n.prototype.setBoundingRect = function (e, t, n, i) {
                    return this._rect = new F_(e, t, n, i), this._rect
                }, n.prototype.getBoundingRect = function () {
                    return this._rect
                }, n.prototype.setViewRect = function (e, t, n, i) {
                    this._transformTo(e, t, n, i), this._viewRect = new F_(e, t, n, i)
                }, n.prototype._transformTo = function (e, t, n, i) {
                    var r = this.getBoundingRect(),
                        o = this._rawTransformable;
                    o.transform = r.calculateTransform(new F_(e, t, n, i));
                    var a = o.parent;
                    o.parent = null, o.decomposeTransform(), o.parent = a, this._updateTransform()
                }, n.prototype.setCenter = function (e, t) {
                    e && (this._center = [ri(e[0], t.getWidth()), ri(e[1], t.getHeight())], this._updateCenterAndZoom())
                }, n.prototype.setZoom = function (e) {
                    e = e || 1;
                    var t = this.zoomLimit;
                    t && (null != t.max && (e = Math.min(t.max, e)), null != t.min && (e = Math.max(t.min, e))), this._zoom = e, this._updateCenterAndZoom()
                }, n.prototype.getDefaultCenter = function () {
                    var e = this.getBoundingRect(),
                        t = e.x + e.width / 2,
                        n = e.y + e.height / 2;
                    return [t, n]
                }, n.prototype.getCenter = function () {
                    return this._center || this.getDefaultCenter()
                }, n.prototype.getZoom = function () {
                    return this._zoom || 1
                }, n.prototype.getRoamTransform = function () {
                    return this._roamTransformable.getLocalTransform()
                }, n.prototype._updateCenterAndZoom = function () {
                    var e = this._rawTransformable.getLocalTransform(),
                        t = this._roamTransformable,
                        n = this.getDefaultCenter(),
                        i = this.getCenter(),
                        r = this.getZoom();
                    i = me([], i, e), n = me([], n, e), t.originX = i[0], t.originY = i[1], t.x = n[0] - i[0], t.y = n[1] - i[1], t.scaleX = t.scaleY = r, this._updateTransform()
                }, n.prototype._updateTransform = function () {
                    var e = this._roamTransformable,
                        t = this._rawTransformable;
                    t.parent = e, e.updateTransform(), t.updateTransform(), Fe(this.transform || (this.transform = []), t.transform || ze()), this._rawTransform = t.getLocalTransform(), this.invTransform = this.invTransform || [], je(this.invTransform, this.transform), this.decomposeTransform()
                }, n.prototype.getTransformInfo = function () {
                    var e = this._rawTransformable,
                        t = this._roamTransformable,
                        n = new ab;
                    return n.transform = t.transform, n.decomposeTransform(), {
                        roam: {
                            x: n.x,
                            y: n.y,
                            scaleX: n.scaleX,
                            scaleY: n.scaleY
                        },
                        raw: {
                            x: e.x,
                            y: e.y,
                            scaleX: e.scaleX,
                            scaleY: e.scaleY
                        }
                    }
                }, n.prototype.getViewRect = function () {
                    return this._viewRect
                }, n.prototype.getViewRectAfterRoam = function () {
                    var e = this.getBoundingRect().clone();
                    return e.applyTransform(this.transform), e
                }, n.prototype.dataToPoint = function (e, t, n) {
                    var i = t ? this._rawTransform : this.transform;
                    return n = n || [], i ? ZL(n, e, i) : Q(n, e)
                }, n.prototype.pointToData = function (e) {
                    var t = this.invTransform;
                    return t ? ZL([], e, t) : [e[0], e[1]]
                }, n.prototype.convertToPixel = function (e, t, n) {
                    var i = fm(t);
                    return i === this ? i.dataToPoint(n) : null
                }, n.prototype.convertFromPixel = function (e, t, n) {
                    var i = fm(t);
                    return i === this ? i.pointToData(n) : null
                }, n.prototype.containPoint = function (e) {
                    return this.getViewRectAfterRoam().contain(e[0], e[1])
                }, n.dimensions = ["x", "y"], n
            }(ab),
            KL = {
                geoJSON: {
                    aspectScale: .75,
                    invertLongitute: !0
                },
                geoSVG: {
                    aspectScale: 1,
                    invertLongitute: !1
                }
            },
            JL = ["lng", "lat"],
            QL = function (e) {
                function n(t, n, i) {
                    var r = e.call(this, t) || this;
                    r.dimensions = JL, r.type = "geo", r._nameCoordMap = Y(), r.map = n;
                    var o, a = i.projection,
                        s = HL.load(n, i.nameMap, i.nameProperty),
                        l = HL.getGeoResource(n),
                        u = (r.resourceType = l ? l.type : null, r.regions = s.regions),
                        c = KL[l.type];
                    if (r._regionsMap = s.regionsMap, r.regions = s.regions, r.projection = a, a)
                        for (var p = 0; p < u.length; p++) {
                            var h = u[p].getBoundingRect(a);
                            o = o || h.clone(), o.union(h)
                        } else o = s.boundingRect;
                    return r.setBoundingRect(o.x, o.y, o.width, o.height), r.aspectScale = a ? 1 : B(i.aspectScale, c.aspectScale), r._invertLongitute = !a && c.invertLongitute, r
                }
                return t(n, e), n.prototype._transformTo = function (e, t, n, i) {
                    var r = this.getBoundingRect(),
                        o = this._invertLongitute;
                    r = r.clone(), o && (r.y = -r.y - r.height);
                    var a = this._rawTransformable;
                    a.transform = r.calculateTransform(new F_(e, t, n, i));
                    var s = a.parent;
                    a.parent = null, a.decomposeTransform(), a.parent = s, o && (a.scaleY = -a.scaleY), this._updateTransform()
                }, n.prototype.getRegion = function (e) {
                    return this._regionsMap.get(e)
                }, n.prototype.getRegionByCoord = function (e) {
                    for (var t = this.regions, n = 0; n < t.length; n++) {
                        var i = t[n];
                        if ("geoJSON" === i.type && i.contain(e)) return t[n]
                    }
                }, n.prototype.addGeoCoord = function (e, t) {
                    this._nameCoordMap.set(e, t)
                }, n.prototype.getGeoCoord = function (e) {
                    var t = this._regionsMap.get(e);
                    return this._nameCoordMap.get(e) || t && t.getCenter()
                }, n.prototype.dataToPoint = function (e, t, n) {
                    if (M(e) && (e = this.getGeoCoord(e)), e) {
                        var i = this.projection;
                        return i && (e = i.project(e)), e && this.projectedToPoint(e, t, n)
                    }
                }, n.prototype.pointToData = function (e) {
                    var t = this.projection;
                    return t && (e = t.unproject(e)), e && this.pointToProjected(e)
                }, n.prototype.pointToProjected = function (t) {
                    return e.prototype.pointToData.call(this, t)
                }, n.prototype.projectedToPoint = function (t, n, i) {
                    return e.prototype.dataToPoint.call(this, t, n, i)
                }, n.prototype.convertToPixel = function (e, t, n) {
                    var i = gm(t);
                    return i === this ? i.dataToPoint(n) : null
                }, n.prototype.convertFromPixel = function (e, t, n) {
                    var i = gm(t);
                    return i === this ? i.pointToData(n) : null
                }, n
            }($L);
        f(QL, $L);
        var eN = function () {
                function e() {
                    this.dimensions = JL
                }
                return e.prototype.create = function (e, t) {
                    function n(e) {
                        return {
                            nameProperty: e.get("nameProperty"),
                            aspectScale: e.get("aspectScale"),
                            projection: e.get("projection")
                        }
                    }
                    var i = [];
                    e.eachComponent("geo", function (e, r) {
                        var o = e.get("map"),
                            a = new QL(o + r, o, c({
                                nameMap: e.get("nameMap")
                            }, n(e)));
                        a.zoomLimit = e.get("scaleLimit"), i.push(a), e.coordinateSystem = a, a.model = e, a.resize = mm, a.resize(e, t)
                    }), e.eachSeries(function (e) {
                        var t = e.get("coordinateSystem");
                        if ("geo" === t) {
                            var n = e.get("geoIndex") || 0;
                            e.coordinateSystem = i[n]
                        }
                    });
                    var r = {};
                    return e.eachSeriesByType("map", function (e) {
                        if (!e.getHostGeoModel()) {
                            var t = e.getMapType();
                            r[t] = r[t] || [], r[t].push(e)
                        }
                    }), m(r, function (e, r) {
                        var o = y(e, function (e) {
                                return e.get("nameMap")
                            }),
                            a = new QL(r, r, c({
                                nameMap: u(o)
                            }, n(e[0])));
                        a.zoomLimit = z.apply(null, y(e, function (e) {
                            return e.get("scaleLimit")
                        })), i.push(a), a.resize = mm, a.resize(e[0], t), m(e, function (e) {
                            e.coordinateSystem = a, ym(a, e)
                        })
                    }), i
                }, e.prototype.getFilledRegions = function (e, t, n, i) {
                    for (var r = (e || []).slice(), o = Y(), a = 0; a < r.length; a++) o.set(r[a].name, r[a]);
                    var s = HL.load(t, n, i);
                    return m(s.regions, function (e) {
                        var t = e.name;
                        !o.get(t) && r.push({
                            name: t
                        })
                    }), r
                }, e
            }(),
            tN = new eN,
            nN = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t
                }
                return t(n, e), n.prototype.init = function (e, t, n) {
                    var i = HL.getGeoResource(e.map);
                    if (i && "geoJSON" === i.type) {
                        var r = e.itemStyle = e.itemStyle || {};
                        "color" in r || (r.color = "#eee")
                    }
                    this.mergeDefaultAndTheme(e, n), Di(e, "label", ["show"])
                }, n.prototype.optionUpdated = function () {
                    var e = this,
                        t = this.option;
                    t.regions = tN.getFilledRegions(t.regions, t.map, t.nameMap, t.nameProperty);
                    var n = {};
                    this._optionModelMap = v(t.regions || [], function (t, i) {
                        var r = i.name;
                        return r && (t.set(r, new HC(i, e, e.ecModel)), i.selected && (n[r] = !0)), t
                    }, Y()), t.selectedMap || (t.selectedMap = n)
                }, n.prototype.getRegionModel = function (e) {
                    return this._optionModelMap.get(e) || new HC(null, this, this.ecModel)
                }, n.prototype.getFormattedLabel = function (e, t) {
                    var n = this.getRegionModel(e),
                        i = n.get("normal" === t ? ["label", "formatter"] : ["emphasis", "label", "formatter"]),
                        r = {
                            name: e
                        };
                    return C(i) ? (r.status = t, i(r)) : M(i) ? i.replace("{a}", null != e ? e : "") : void 0
                }, n.prototype.setZoom = function (e) {
                    this.option.zoom = e
                }, n.prototype.setCenter = function (e) {
                    this.option.center = e
                }, n.prototype.select = function (e) {
                    var t = this.option,
                        n = t.selectedMode;
                    if (n) {
                        "multiple" !== n && (t.selectedMap = null);
                        var i = t.selectedMap || (t.selectedMap = {});
                        i[e] = !0
                    }
                }, n.prototype.unSelect = function (e) {
                    var t = this.option.selectedMap;
                    t && (t[e] = !1)
                }, n.prototype.toggleSelected = function (e) {
                    this[this.isSelected(e) ? "unSelect" : "select"](e)
                }, n.prototype.isSelected = function (e) {
                    var t = this.option.selectedMap;
                    return !(!t || !t[e])
                }, n.type = "geo", n.layoutMode = "box", n.defaultOption = {
                    z: 0,
                    show: !0,
                    left: "center",
                    top: "center",
                    aspectScale: null,
                    silent: !1,
                    map: "",
                    boundingCoords: null,
                    center: null,
                    zoom: 1,
                    scaleLimit: null,
                    label: {
                        show: !1,
                        color: "#000"
                    },
                    itemStyle: {
                        borderWidth: .5,
                        borderColor: "#444"
                    },
                    emphasis: {
                        label: {
                            show: !0,
                            color: "rgb(100,0,0)"
                        },
                        itemStyle: {
                            color: "rgba(255,215,0,0.8)"
                        }
                    },
                    select: {
                        label: {
                            show: !0,
                            color: "rgb(100,0,0)"
                        },
                        itemStyle: {
                            color: "rgba(255,215,0,0.8)"
                        }
                    },
                    regions: []
                }, n
            }(fM),
            iN = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t.focusBlurEnabled = !0, t
                }
                return t(n, e), n.prototype.init = function (e, t) {
                    this._api = t
                }, n.prototype.render = function (e, t, n, i) {
                    if (this._model = e, !e.get("show")) return this._mapDraw && this._mapDraw.remove(), void(this._mapDraw = null);
                    this._mapDraw || (this._mapDraw = new YL(n));
                    var r = this._mapDraw;
                    r.draw(e, t, n, this, i), r.group.on("click", this._handleRegionClick, this), r.group.silent = e.get("silent"), this.group.add(r.group), this.updateSelectStatus(e, t, n)
                }, n.prototype._handleRegionClick = function (e) {
                    var t;
                    Ic(e.target, function (e) {
                        return null != (t = KS(e).eventData)
                    }, !0), t && this._api.dispatchAction({
                        type: "geoToggleSelect",
                        geoId: this._model.id,
                        name: t.name
                    })
                }, n.prototype.updateSelectStatus = function (e, t, n) {
                    var i = this;
                    this._mapDraw.group.traverse(function (e) {
                        var t = KS(e).eventData;
                        return t ? (i._model.isSelected(t.name) ? n.enterSelect(e) : n.leaveSelect(e), !0) : void 0
                    })
                }, n.prototype.findHighDownDispatchers = function (e) {
                    return this._mapDraw && this._mapDraw.findHighDownDispatchers(e, this._model)
                }, n.prototype.dispose = function () {
                    this._mapDraw && this._mapDraw.remove()
                }, n.type = "geo", n
            }(LI);
        cd(bm);
        var rN = eC.prototype,
            oN = iC.prototype,
            aN = function () {
                function e() {
                    this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.percent = 1
                }
                return e
            }(),
            sN = (function (e) {
                function n() {
                    return null !== e && e.apply(this, arguments) || this
                }
                t(n, e)
            }(aN), function (e) {
                function n(t) {
                    var n = e.call(this, t) || this;
                    return n.type = "ec-line", n
                }
                return t(n, e), n.prototype.getDefaultStyle = function () {
                    return {
                        stroke: "#000",
                        fill: null
                    }
                }, n.prototype.getDefaultShape = function () {
                    return new aN
                }, n.prototype.buildPath = function (e, t) {
                    Sm(t) ? rN.buildPath.call(this, e, t) : oN.buildPath.call(this, e, t)
                }, n.prototype.pointAt = function (e) {
                    return Sm(this.shape) ? rN.pointAt.call(this, e) : oN.pointAt.call(this, e)
                }, n.prototype.tangentAt = function (e) {
                    var t = this.shape,
                        n = Sm(t) ? [t.x2 - t.x1, t.y2 - t.y1] : oN.tangentAt.call(this, e);
                    return pe(n, n)
                }, n
            }(OS)),
            lN = ["fromSymbol", "toSymbol"],
            uN = function (e) {
                function n(t, n, i) {
                    var r = e.call(this) || this;
                    return r._createLine(t, n, i), r
                }
                return t(n, e), n.prototype._createLine = function (e, t, n) {
                    var i = e.hostModel,
                        r = e.getItemLayout(t),
                        o = Mm(r);
                    o.shape.percent = 0, Ca(o, {
                        shape: {
                            percent: 1
                        }
                    }, i, t), this.add(o), m(lN, function (n) {
                        var i = Cm(n, e, t);
                        this.add(i), this[Tm(n)] = e.getItemVisual(t, n)
                    }, this), this._updateCommonStl(e, t, n)
                }, n.prototype.updateData = function (e, t, n) {
                    var i = e.hostModel,
                        r = this.childOfName("line"),
                        o = e.getItemLayout(t),
                        a = {
                            shape: {}
                        };
                    Im(a.shape, o), Ta(r, a, i, t), m(lN, function (n) {
                        var i = e.getItemVisual(t, n),
                            r = Tm(n);
                        if (this[r] !== i) {
                            this.remove(this.childOfName(n));
                            var o = Cm(n, e, t);
                            this.add(o)
                        }
                        this[r] = i
                    }, this), this._updateCommonStl(e, t, n)
                }, n.prototype.getLinePath = function () {
                    return this.childAt(0)
                }, n.prototype._updateCommonStl = function (e, t, n) {
                    var i = e.hostModel,
                        r = this.childOfName("line"),
                        o = n && n.emphasisLineStyle,
                        a = n && n.blurLineStyle,
                        s = n && n.selectLineStyle,
                        l = n && n.labelStatesModels,
                        u = n && n.emphasisDisabled,
                        c = n && n.focus,
                        p = n && n.blurScope;
                    if (!n || e.hasItemOption) {
                        var h = e.getItemModel(t),
                            d = h.getModel("emphasis");
                        o = d.getModel("lineStyle").getLineStyle(), a = h.getModel(["blur", "lineStyle"]).getLineStyle(), s = h.getModel(["select", "lineStyle"]).getLineStyle(), u = d.get("disabled"), c = d.get("focus"), p = d.get("blurScope"), l = as(h)
                    }
                    var f = e.getItemVisual(t, "style"),
                        g = f.stroke;
                    r.useStyle(f), r.style.fill = null, r.style.strokeNoScale = !0, r.ensureState("emphasis").style = o, r.ensureState("blur").style = a, r.ensureState("select").style = s, m(lN, function (e) {
                        var t = this.childOfName(e);
                        if (t) {
                            t.setColor(g), t.style.opacity = f.opacity;
                            for (var n = 0; n < aT.length; n++) {
                                var i = aT[n],
                                    o = r.getState(i);
                                if (o) {
                                    var a = o.style || {},
                                        s = t.ensureState(i),
                                        l = s.style || (s.style = {});
                                    null != a.stroke && (l[t.__isEmptyBrush ? "stroke" : "fill"] = a.stroke), null != a.opacity && (l.opacity = a.opacity)
                                }
                            }
                            t.markRedraw()
                        }
                    }, this);
                    var y = i.getRawValue(t);
                    os(this, l, {
                        labelDataIndex: t,
                        labelFetcher: {
                            getFormattedLabel: function (t, n) {
                                return i.getFormattedLabel(t, n, e.dataType)
                            }
                        },
                        inheritColor: g || "#000",
                        defaultOpacity: f.opacity,
                        defaultText: (null == y ? e.getName(t) : isFinite(y) ? oi(y) : y) + ""
                    });
                    var v = this.getTextContent();
                    if (v) {
                        var x = l.normal;
                        v.__align = v.style.align, v.__verticalAlign = v.style.verticalAlign, v.__position = x.get("position") || "middle";
                        var _ = x.get("distance");
                        T(_) || (_ = [_, _]), v.__labelDistance = _
                    }
                    this.setTextConfig({
                        position: null,
                        local: !0,
                        inside: !1
                    }), qo(this, c, p, u)
                }, n.prototype.highlight = function () {
                    Do(this)
                }, n.prototype.downplay = function () {
                    Ao(this)
                }, n.prototype.updateLayout = function (e, t) {
                    this.setLinePoints(e.getItemLayout(t))
                }, n.prototype.setLinePoints = function (e) {
                    var t = this.childOfName("line");
                    Im(t.shape, e), t.dirty()
                }, n.prototype.beforeUpdate = function () {
                    function e(e, t) {
                        var n = e.__specifiedRotation;
                        if (null == n) {
                            var i = s.tangentAt(t);
                            e.attr("rotation", (1 === t ? -1 : 1) * Math.PI / 2 - Math.atan2(i[1], i[0]))
                        } else e.attr("rotation", n)
                    }
                    var t = this,
                        n = t.childOfName("fromSymbol"),
                        i = t.childOfName("toSymbol"),
                        r = t.getTextContent();
                    if (n || i || r && !r.ignore) {
                        for (var o = 1, a = this.parent; a;) a.scaleX && (o /= a.scaleX), a = a.parent;
                        var s = t.childOfName("line");
                        if (this.__dirty || s.__dirty) {
                            var l = s.shape.percent,
                                u = s.pointAt(0),
                                c = s.pointAt(l),
                                p = re([], c, u);
                            if (pe(p, p), n && (n.setPosition(u), e(n, 0), n.scaleX = n.scaleY = o * l, n.markRedraw()), i && (i.setPosition(c), e(i, 1), i.scaleX = i.scaleY = o * l, i.markRedraw()), r && !r.ignore) {
                                r.x = r.y = 0, r.originX = r.originY = 0;
                                var h = void 0,
                                    d = void 0,
                                    f = r.__labelDistance,
                                    g = f[0] * o,
                                    m = f[1] * o,
                                    y = l / 2,
                                    v = s.tangentAt(y),
                                    x = [v[1], -v[0]],
                                    _ = s.pointAt(y);
                                x[1] > 0 && (x[0] = -x[0], x[1] = -x[1]);
                                var w = v[0] < 0 ? -1 : 1;
                                if ("start" !== r.__position && "end" !== r.__position) {
                                    var b = -Math.atan2(v[1], v[0]);
                                    c[0] < u[0] && (b = Math.PI + b), r.rotation = b
                                }
                                var S = void 0;
                                switch (r.__position) {
                                    case "insideStartTop":
                                    case "insideMiddleTop":
                                    case "insideEndTop":
                                    case "middle":
                                        S = -m, d = "bottom";
                                        break;
                                    case "insideStartBottom":
                                    case "insideMiddleBottom":
                                    case "insideEndBottom":
                                        S = m, d = "top";
                                        break;
                                    default:
                                        S = 0, d = "middle"
                                }
                                switch (r.__position) {
                                    case "end":
                                        r.x = p[0] * g + c[0], r.y = p[1] * m + c[1], h = p[0] > .8 ? "left" : p[0] < -.8 ? "right" : "center", d = p[1] > .8 ? "top" : p[1] < -.8 ? "bottom" : "middle";
                                        break;
                                    case "start":
                                        r.x = -p[0] * g + u[0], r.y = -p[1] * m + u[1], h = p[0] > .8 ? "right" : p[0] < -.8 ? "left" : "center", d = p[1] > .8 ? "bottom" : p[1] < -.8 ? "top" : "middle";
                                        break;
                                    case "insideStartTop":
                                    case "insideStart":
                                    case "insideStartBottom":
                                        r.x = g * w + u[0], r.y = u[1] + S, h = v[0] < 0 ? "right" : "left", r.originX = -g * w, r.originY = -S;
                                        break;
                                    case "insideMiddleTop":
                                    case "insideMiddle":
                                    case "insideMiddleBottom":
                                    case "middle":
                                        r.x = _[0], r.y = _[1] + S, h = "center", r.originY = -S;
                                        break;
                                    case "insideEndTop":
                                    case "insideEnd":
                                    case "insideEndBottom":
                                        r.x = -g * w + c[0], r.y = c[1] + S, h = v[0] >= 0 ? "right" : "left", r.originX = g * w, r.originY = -S
                                }
                                r.scaleX = r.scaleY = o, r.setStyle({
                                    verticalAlign: r.__verticalAlign || d,
                                    align: r.__align || h
                                })
                            }
                        }
                    }
                }, n
            }(gb),
            cN = function () {
                function e(e) {
                    this.group = new gb, this._LineCtor = e || uN
                }
                return e.prototype.updateData = function (e) {
                    var t = this;
                    this._progressiveEls = null;
                    var n = this,
                        i = n.group,
                        r = n._lineData;
                    n._lineData = e, r || i.removeAll();
                    var o = Dm(e);
                    e.diff(r).add(function (n) {
                        t._doAdd(e, n, o)
                    }).update(function (n, i) {
                        t._doUpdate(r, e, i, n, o)
                    }).remove(function (e) {
                        i.remove(r.getItemGraphicEl(e))
                    }).execute()
                }, e.prototype.updateLayout = function () {
                    var e = this._lineData;
                    e && e.eachItemGraphicEl(function (t, n) {
                        t.updateLayout(e, n)
                    }, this)
                }, e.prototype.incrementalPrepareUpdate = function (e) {
                    this._seriesScope = Dm(e), this._lineData = null, this.group.removeAll()
                }, e.prototype.incrementalUpdate = function (e, t) {
                    function n(e) {
                        e.isGroup || km(e) || (e.incremental = !0, e.ensureState("emphasis").hoverLayer = !0)
                    }
                    this._progressiveEls = [];
                    for (var i = e.start; i < e.end; i++) {
                        var r = t.getItemLayout(i);
                        if (Pm(r)) {
                            var o = new this._LineCtor(t, i, this._seriesScope);
                            o.traverse(n), this.group.add(o), t.setItemGraphicEl(i, o), this._progressiveEls.push(o)
                        }
                    }
                }, e.prototype.remove = function () {
                    this.group.removeAll()
                }, e.prototype.eachRendered = function (e) {
                    ns(this._progressiveEls || this.group, e)
                }, e.prototype._doAdd = function (e, t, n) {
                    var i = e.getItemLayout(t);
                    if (Pm(i)) {
                        var r = new this._LineCtor(e, t, n);
                        e.setItemGraphicEl(t, r), this.group.add(r)
                    }
                }, e.prototype._doUpdate = function (e, t, n, i, r) {
                    var o = e.getItemGraphicEl(n);
                    return Pm(t.getItemLayout(i)) ? (o ? o.updateData(t, i, r) : o = new this._LineCtor(t, i, r), t.setItemGraphicEl(i, o), void this.group.add(o)) : void this.group.remove(o)
                }, e
            }(),
            pN = function (e) {
                function n(t, n, i) {
                    var r = e.call(this) || this;
                    return r.add(r.createLine(t, n, i)), r._updateEffectSymbol(t, n), r
                }
                return t(n, e), n.prototype.createLine = function (e, t, n) {
                    return new uN(e, t, n)
                }, n.prototype._updateEffectSymbol = function (e, t) {
                    var n = e.getItemModel(t),
                        i = n.getModel("effect"),
                        r = i.get("symbolSize"),
                        o = i.get("symbol");
                    T(r) || (r = [r, r]);
                    var a = e.getItemVisual(t, "style"),
                        s = i.get("color") || a && a.stroke,
                        l = this.childAt(1);
                    this._symbolType !== o && (this.remove(l), l = Dc(o, -.5, -.5, 1, 1, s), l.z2 = 100, l.culling = !0, this.add(l)), l && (l.setStyle("shadowColor", s), l.setStyle(i.getItemStyle(["color"])), l.scaleX = r[0], l.scaleY = r[1], l.setColor(s), this._symbolType = o, this._symbolScale = r, this._updateEffectAnimation(e, i, t))
                }, n.prototype._updateEffectAnimation = function (e, t, n) {
                    var i = this.childAt(1);
                    if (i) {
                        var r = e.getItemLayout(n),
                            o = 1e3 * t.get("period"),
                            a = t.get("loop"),
                            s = t.get("roundTrip"),
                            l = t.get("constantSpeed"),
                            u = z(t.get("delay"), function (t) {
                                return t / e.count() * o / 3
                            });
                        if (i.ignore = !0, this._updateAnimationPoints(i, r), l > 0 && (o = this._getLineLength(i) / l * 1e3), o !== this._period || a !== this._loop || s !== this._roundTrip) {
                            i.stopAnimation();
                            var c = void 0;
                            c = C(u) ? u(n) : u, i.__t > 0 && (c = -o * i.__t), this._animateSymbol(i, o, c, a, s)
                        }
                        this._period = o, this._loop = a, this._roundTrip = s
                    }
                }, n.prototype._animateSymbol = function (e, t, n, i, r) {
                    if (t > 0) {
                        e.__t = 0;
                        var o = this,
                            a = e.animate("", i).when(r ? 2 * t : t, {
                                __t: r ? 2 : 1
                            }).delay(n).during(function () {
                                o._updateSymbolPosition(e)
                            });
                        i || a.done(function () {
                            o.remove(e)
                        }), a.start()
                    }
                }, n.prototype._getLineLength = function (e) {
                    return h_(e.__p1, e.__cp1) + h_(e.__cp1, e.__p2)
                }, n.prototype._updateAnimationPoints = function (e, t) {
                    e.__p1 = t[0], e.__p2 = t[1], e.__cp1 = t[2] || [(t[0][0] + t[1][0]) / 2, (t[0][1] + t[1][1]) / 2]
                }, n.prototype.updateData = function (e, t, n) {
                    this.childAt(0).updateData(e, t, n), this._updateEffectSymbol(e, t)
                }, n.prototype._updateSymbolPosition = function (e) {
                    var t = e.__p1,
                        n = e.__p2,
                        i = e.__cp1,
                        r = e.__t < 1 ? e.__t : 2 - e.__t,
                        o = [e.x, e.y],
                        a = o.slice(),
                        s = mt,
                        l = yt;
                    o[0] = s(t[0], i[0], n[0], r), o[1] = s(t[1], i[1], n[1], r);
                    var u = e.__t < 1 ? l(t[0], i[0], n[0], r) : l(n[0], i[0], t[0], 1 - r),
                        c = e.__t < 1 ? l(t[1], i[1], n[1], r) : l(n[1], i[1], t[1], 1 - r);
                    e.rotation = -Math.atan2(c, u) - Math.PI / 2, ("line" === this._symbolType || "rect" === this._symbolType || "roundRect" === this._symbolType) && (void 0 !== e.__lastT && e.__lastT < e.__t ? (e.scaleY = 1.05 * h_(a, o), 1 === r && (o[0] = a[0] + (o[0] - a[0]) / 2, o[1] = a[1] + (o[1] - a[1]) / 2)) : e.scaleY = 1 === e.__lastT ? 2 * h_(t, o) : this._symbolScale[1]), e.__lastT = e.__t, e.ignore = !1, e.x = o[0], e.y = o[1]
                }, n.prototype.updateLayout = function (e, t) {
                    this.childAt(0).updateLayout(e, t);
                    var n = e.getItemModel(t).getModel("effect");
                    this._updateEffectAnimation(e, n, t)
                }, n
            }(gb),
            hN = function (e) {
                function n(t, n, i) {
                    var r = e.call(this) || this;
                    return r._createPolyline(t, n, i), r
                }
                return t(n, e), n.prototype._createPolyline = function (e, t, n) {
                    var i = e.getItemLayout(t),
                        r = new KT({
                            shape: {
                                points: i
                            }
                        });
                    this.add(r), this._updateCommonStl(e, t, n)
                }, n.prototype.updateData = function (e, t, n) {
                    var i = e.hostModel,
                        r = this.childAt(0),
                        o = {
                            shape: {
                                points: e.getItemLayout(t)
                            }
                        };
                    Ta(r, o, i, t), this._updateCommonStl(e, t, n)
                }, n.prototype._updateCommonStl = function (e, t, n) {
                    var i = this.childAt(0),
                        r = e.getItemModel(t),
                        o = n && n.emphasisLineStyle,
                        a = n && n.focus,
                        s = n && n.blurScope,
                        l = n && n.emphasisDisabled;
                    if (!n || e.hasItemOption) {
                        var u = r.getModel("emphasis");
                        o = u.getModel("lineStyle").getLineStyle(), l = u.get("disabled"), a = u.get("focus"), s = u.get("blurScope")
                    }
                    i.useStyle(e.getItemVisual(t, "style")), i.style.fill = null, i.style.strokeNoScale = !0;
                    var c = i.ensureState("emphasis");
                    c.style = o, qo(this, a, s, l)
                }, n.prototype.updateLayout = function (e, t) {
                    var n = this.childAt(0);
                    n.setShape("points", e.getItemLayout(t))
                }, n
            }(gb),
            dN = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t._lastFrame = 0, t._lastFramePercent = 0, t
                }
                return t(n, e), n.prototype.createLine = function (e, t, n) {
                    return new hN(e, t, n)
                }, n.prototype._updateAnimationPoints = function (e, t) {
                    this._points = t;
                    for (var n = [0], i = 0, r = 1; r < t.length; r++) {
                        var o = t[r - 1],
                            a = t[r];
                        i += h_(o, a), n.push(i)
                    }
                    if (0 !== i) {
                        for (r = 0; r < n.length; r++) n[r] /= i;
                        this._offsets = n, this._length = i
                    } else this._length = 0
                }, n.prototype._getLineLength = function () {
                    return this._length
                }, n.prototype._updateSymbolPosition = function (e) {
                    var t = e.__t < 1 ? e.__t : 2 - e.__t,
                        n = this._points,
                        i = this._offsets,
                        r = n.length;
                    if (i) {
                        var o, a = this._lastFrame;
                        if (t < this._lastFramePercent) {
                            var s = Math.min(a + 1, r - 1);
                            for (o = s; o >= 0 && !(i[o] <= t); o--);
                            o = Math.min(o, r - 2)
                        } else {
                            for (o = a; r > o && !(i[o] > t); o++);
                            o = Math.min(o - 1, r - 2)
                        }
                        var l = (t - i[o]) / (i[o + 1] - i[o]),
                            u = n[o],
                            c = n[o + 1];
                        e.x = u[0] * (1 - l) + l * c[0], e.y = u[1] * (1 - l) + l * c[1];
                        var p = e.__t < 1 ? c[0] - u[0] : u[0] - c[0],
                            h = e.__t < 1 ? c[1] - u[1] : u[1] - c[1];
                        e.rotation = -Math.atan2(h, p) - Math.PI / 2, this._lastFrame = o, this._lastFramePercent = t, e.ignore = !1
                    }
                }, n
            }(pN),
            fN = function () {
                function e() {
                    this.polyline = !1, this.curveness = 0, this.segs = []
                }
                return e
            }(),
            gN = function (e) {
                function n(t) {
                    var n = e.call(this, t) || this;
                    return n._off = 0, n.hoverDataIdx = -1, n
                }
                return t(n, e), n.prototype.reset = function () {
                    this.notClear = !1, this._off = 0
                }, n.prototype.getDefaultStyle = function () {
                    return {
                        stroke: "#000",
                        fill: null
                    }
                }, n.prototype.getDefaultShape = function () {
                    return new fN
                }, n.prototype.buildPath = function (e, t) {
                    var n, i = t.segs,
                        r = t.curveness;
                    if (t.polyline)
                        for (n = this._off; n < i.length;) {
                            var o = i[n++];
                            if (o > 0) {
                                e.moveTo(i[n++], i[n++]);
                                for (var a = 1; o > a; a++) e.lineTo(i[n++], i[n++])
                            }
                        } else
                            for (n = this._off; n < i.length;) {
                                var s = i[n++],
                                    l = i[n++],
                                    u = i[n++],
                                    c = i[n++];
                                if (e.moveTo(s, l), r > 0) {
                                    var p = (s + u) / 2 - (l - c) * r,
                                        h = (l + c) / 2 - (u - s) * r;
                                    e.quadraticCurveTo(p, h, u, c)
                                } else e.lineTo(u, c)
                            }
                    this.incremental && (this._off = n, this.notClear = !0)
                }, n.prototype.findDataIndex = function (e, t) {
                    var n = this.shape,
                        i = n.segs,
                        r = n.curveness,
                        o = this.style.lineWidth;
                    if (n.polyline)
                        for (var a = 0, s = 0; s < i.length;) {
                            var l = i[s++];
                            if (l > 0)
                                for (var u = i[s++], c = i[s++], p = 1; l > p; p++) {
                                    var h = i[s++],
                                        d = i[s++];
                                    if (Nr(u, c, h, d, o, e, t)) return a
                                }
                            a++
                        } else
                            for (a = 0, s = 0; s < i.length;) {
                                u = i[s++], c = i[s++], h = i[s++], d = i[s++];
                                if (r > 0) {
                                    var f = (u + h) / 2 - (c - d) * r,
                                        g = (c + d) / 2 - (h - u) * r;
                                    if (Er(u, c, f, g, h, d, o, e, t)) return a
                                } else if (Nr(u, c, h, d, o, e, t)) return a;
                                a++
                            }
                    return -1
                }, n.prototype.contain = function (e, t) {
                    var n = this.transformCoordToLocal(e, t),
                        i = this.getBoundingRect();
                    if (e = n[0], t = n[1], i.contain(e, t)) {
                        var r = this.hoverDataIdx = this.findDataIndex(e, t);
                        return r >= 0
                    }
                    return this.hoverDataIdx = -1, !1
                }, n.prototype.getBoundingRect = function () {
                    var e = this._rect;
                    if (!e) {
                        for (var t = this.shape, n = t.segs, i = 1 / 0, r = 1 / 0, o = -1 / 0, a = -1 / 0, s = 0; s < n.length;) {
                            var l = n[s++],
                                u = n[s++];
                            i = Math.min(l, i), o = Math.max(l, o), r = Math.min(u, r), a = Math.max(u, a)
                        }
                        e = this._rect = new F_(i, r, o, a)
                    }
                    return e
                }, n
            }(OS),
            mN = function () {
                function e() {
                    this.group = new gb
                }
                return e.prototype.updateData = function (e) {
                    this._clear();
                    var t = this._create();
                    t.setShape({
                        segs: e.getLayout("linesPoints")
                    }), this._setCommon(t, e)
                }, e.prototype.incrementalPrepareUpdate = function () {
                    this.group.removeAll(), this._clear()
                }, e.prototype.incrementalUpdate = function (e, t) {
                    var n = this._newAdded[0],
                        i = t.getLayout("linesPoints"),
                        r = n && n.shape.segs;
                    if (r && r.length < 2e4) {
                        var o = r.length,
                            a = new Float32Array(o + i.length);
                        a.set(r), a.set(i, o), n.setShape({
                            segs: a
                        })
                    } else {
                        this._newAdded = [];
                        var s = this._create();
                        s.incremental = !0, s.setShape({
                            segs: i
                        }), this._setCommon(s, t), s.__startIndex = e.start
                    }
                }, e.prototype.remove = function () {
                    this._clear()
                }, e.prototype.eachRendered = function (e) {
                    this._newAdded[0] && e(this._newAdded[0])
                }, e.prototype._create = function () {
                    var e = new gN({
                        cursor: "default",
                        ignoreCoarsePointer: !0
                    });
                    return this._newAdded.push(e), this.group.add(e), e
                }, e.prototype._setCommon = function (e, t) {
                    var n = t.hostModel;
                    e.setShape({
                        polyline: n.get("polyline"),
                        curveness: n.get(["lineStyle", "curveness"])
                    }), e.useStyle(n.getModel("lineStyle").getLineStyle()), e.style.strokeNoScale = !0;
                    var i = t.getVisual("style");
                    i && i.stroke && e.setStyle("stroke", i.stroke), e.setStyle("fill", null);
                    var r = KS(e);
                    r.seriesIndex = n.seriesIndex, e.on("mousemove", function () {
                        r.dataIndex = null;
                        var t = e.hoverDataIdx;
                        t > 0 && (r.dataIndex = t + e.__startIndex)
                    })
                }, e.prototype._clear = function () {
                    this._newAdded = [], this.group.removeAll()
                }, e
            }(),
            yN = {
                seriesType: "lines",
                plan: tc(),
                reset: function (e) {
                    var t = e.coordinateSystem;
                    if (t) {
                        var n = e.get("polyline"),
                            i = e.pipelineContext.large;
                        return {
                            progress: function (r, o) {
                                var a = [];
                                if (i) {
                                    var s = void 0,
                                        l = r.end - r.start;
                                    if (n) {
                                        for (var u = 0, c = r.start; c < r.end; c++) u += e.getLineCoordsCount(c);
                                        s = new Float32Array(l + 2 * u)
                                    } else s = new Float32Array(4 * l);
                                    var p = 0,
                                        h = [];
                                    for (c = r.start; c < r.end; c++) {
                                        var d = e.getLineCoords(c, a);
                                        n && (s[p++] = d);
                                        for (var f = 0; d > f; f++) h = t.dataToPoint(a[f], !1, h), s[p++] = h[0], s[p++] = h[1]
                                    }
                                    o.setLayout("linesPoints", s)
                                } else
                                    for (c = r.start; c < r.end; c++) {
                                        var g = o.getItemModel(c),
                                            m = (d = e.getLineCoords(c, a), []);
                                        if (n)
                                            for (var y = 0; d > y; y++) m.push(t.dataToPoint(a[y]));
                                        else {
                                            m[0] = t.dataToPoint(a[0]), m[1] = t.dataToPoint(a[1]);
                                            var v = g.get(["lineStyle", "curveness"]); + v && (m[2] = [(m[0][0] + m[1][0]) / 2 - (m[0][1] - m[1][1]) * v, (m[0][1] + m[1][1]) / 2 - (m[1][0] - m[0][0]) * v])
                                        }
                                        o.setItemLayout(c, m)
                                    }
                            }
                        }
                    }
                }
            },
            vN = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t
                }
                return t(n, e), n.prototype.render = function (e, t, n) {
                    var i = e.getData(),
                        r = this._updateLineDraw(i, e),
                        o = e.get("zlevel"),
                        a = e.get(["effect", "trailLength"]),
                        s = n.getZr(),
                        l = "svg" === s.painter.getType();
                    l || s.painter.getLayer(o).clear(!0), null == this._lastZlevel || l || s.configLayer(this._lastZlevel, {
                        motionBlur: !1
                    }), this._showEffect(e) && a > 0 && (l || s.configLayer(o, {
                        motionBlur: !0,
                        lastFrameAlpha: Math.max(Math.min(a / 10 + .9, 1), 0)
                    })), r.updateData(i);
                    var u = e.get("clip", !0) && yf(e.coordinateSystem, !1, e);
                    u ? this.group.setClipPath(u) : this.group.removeClipPath(), this._lastZlevel = o, this._finished = !0
                }, n.prototype.incrementalPrepareRender = function (e, t, n) {
                    var i = e.getData(),
                        r = this._updateLineDraw(i, e);
                    r.incrementalPrepareUpdate(i), this._clearLayer(n), this._finished = !1
                }, n.prototype.incrementalRender = function (e, t) {
                    this._lineDraw.incrementalUpdate(e, t.getData()), this._finished = e.end === t.getData().count()
                }, n.prototype.eachRendered = function (e) {
                    this._lineDraw && this._lineDraw.eachRendered(e)
                }, n.prototype.updateTransform = function (e, t, n) {
                    var i = e.getData(),
                        r = e.pipelineContext;
                    if (!this._finished || r.large || r.progressiveRender) return {
                        update: !0
                    };
                    var o = yN.reset(e, t, n);
                    o.progress && o.progress({
                        start: 0,
                        end: i.count(),
                        count: i.count()
                    }, i), this._lineDraw.updateLayout(), this._clearLayer(n)
                }, n.prototype._updateLineDraw = function (e, t) {
                    var n = this._lineDraw,
                        i = this._showEffect(t),
                        r = !!t.get("polyline"),
                        o = t.pipelineContext,
                        a = o.large;
                    return n && i === this._hasEffet && r === this._isPolyline && a === this._isLargeDraw || (n && n.remove(), n = this._lineDraw = a ? new mN : new cN(r ? i ? dN : hN : i ? pN : uN), this._hasEffet = i, this._isPolyline = r, this._isLargeDraw = a), this.group.add(n.group), n
                }, n.prototype._showEffect = function (e) {
                    return !!e.get(["effect", "show"])
                }, n.prototype._clearLayer = function (e) {
                    var t = e.getZr(),
                        n = "svg" === t.painter.getType();
                    n || null == this._lastZlevel || t.painter.getLayer(this._lastZlevel).clear(!0)
                }, n.prototype.remove = function (e, t) {
                    this._lineDraw && this._lineDraw.remove(), this._lineDraw = null, this._clearLayer(t)
                }, n.prototype.dispose = function (e, t) {
                    this.remove(e, t)
                }, n.type = "lines", n
            }(EI),
            xN = "undefined" == typeof Uint32Array ? Array : Uint32Array,
            _N = "undefined" == typeof Float64Array ? Array : Float64Array,
            wN = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t.visualStyleAccessPath = "lineStyle", t.visualDrawType = "stroke", t
                }
                return t(n, e), n.prototype.init = function (t) {
                    t.data = t.data || [], Lm(t);
                    var n = this._processFlatCoordsArray(t.data);
                    this._flatCoords = n.flatCoords, this._flatCoordsOffset = n.flatCoordsOffset, n.flatCoords && (t.data = new Float32Array(n.count)), e.prototype.init.apply(this, arguments)
                }, n.prototype.mergeOption = function (t) {
                    if (Lm(t), t.data) {
                        var n = this._processFlatCoordsArray(t.data);
                        this._flatCoords = n.flatCoords, this._flatCoordsOffset = n.flatCoordsOffset, n.flatCoords && (t.data = new Float32Array(n.count))
                    }
                    e.prototype.mergeOption.apply(this, arguments)
                }, n.prototype.appendData = function (e) {
                    var t = this._processFlatCoordsArray(e.data);
                    t.flatCoords && (this._flatCoords ? (this._flatCoords = U(this._flatCoords, t.flatCoords), this._flatCoordsOffset = U(this._flatCoordsOffset, t.flatCoordsOffset)) : (this._flatCoords = t.flatCoords, this._flatCoordsOffset = t.flatCoordsOffset), e.data = new Float32Array(t.count)), this.getRawData().appendData(e.data)
                }, n.prototype._getCoordsFromItemModel = function (e) {
                    var t = this.getData().getItemModel(e),
                        n = t.option instanceof Array ? t.option : t.getShallow("coords");
                    return n
                }, n.prototype.getLineCoordsCount = function (e) {
                    return this._flatCoordsOffset ? this._flatCoordsOffset[2 * e + 1] : this._getCoordsFromItemModel(e).length
                }, n.prototype.getLineCoords = function (e, t) {
                    if (this._flatCoordsOffset) {
                        for (var n = this._flatCoordsOffset[2 * e], i = this._flatCoordsOffset[2 * e + 1], r = 0; i > r; r++) t[r] = t[r] || [], t[r][0] = this._flatCoords[n + 2 * r], t[r][1] = this._flatCoords[n + 2 * r + 1];
                        return i
                    }
                    var o = this._getCoordsFromItemModel(e);
                    for (r = 0; r < o.length; r++) t[r] = t[r] || [], t[r][0] = o[r][0], t[r][1] = o[r][1];
                    return o.length
                }, n.prototype._processFlatCoordsArray = function (e) {
                    var t = 0;
                    if (this._flatCoords && (t = this._flatCoords.length), k(e[0])) {
                        for (var n = e.length, i = new xN(n), r = new _N(n), o = 0, a = 0, s = 0, l = 0; n > l;) {
                            s++;
                            var u = e[l++];
                            i[a++] = o + t, i[a++] = u;
                            for (var c = 0; u > c; c++) {
                                var p = e[l++],
                                    h = e[l++];
                                r[o++] = p, r[o++] = h
                            }
                        }
                        return {
                            flatCoordsOffset: new Uint32Array(i.buffer, 0, a),
                            flatCoords: r,
                            count: s
                        }
                    }
                    return {
                        flatCoordsOffset: null,
                        flatCoords: null,
                        count: e.length
                    }
                }, n.prototype.getInitialData = function (e) {
                    var t = new dA(["value"], this);
                    return t.hasItemOption = !1, t.initData(e.data, [], function (e, n, i, r) {
                        if (e instanceof Array) return NaN;
                        t.hasItemOption = !0;
                        var o = e.value;
                        return null != o ? o instanceof Array ? o[r] : o : void 0
                    }), t
                }, n.prototype.formatTooltip = function (e) {
                    var t = this.getData(),
                        n = t.getItemModel(e),
                        i = n.get("name");
                    if (i) return i;
                    var r = n.get("fromName"),
                        o = n.get("toName"),
                        a = [];
                    return null != r && a.push(r), null != o && a.push(o), Du("nameValue", {
                        name: a.join(" > ")
                    })
                }, n.prototype.preventIncremental = function () {
                    return !!this.get(["effect", "show"])
                }, n.prototype.getProgressive = function () {
                    var e = this.option.progressive;
                    return null == e ? this.option.large ? 1e4 : this.get("progressive") : e
                }, n.prototype.getProgressiveThreshold = function () {
                    var e = this.option.progressiveThreshold;
                    return null == e ? this.option.large ? 2e4 : this.get("progressiveThreshold") : e
                }, n.prototype.getZLevelKey = function () {
                    var e = this.getModel("effect"),
                        t = e.get("trailLength");
                    return this.getData().count() > this.getProgressiveThreshold() ? this.id : e.get("show") && t > 0 ? t + "" : ""
                }, n.type = "series.lines", n.dependencies = ["grid", "polar", "geo", "calendar"], n.defaultOption = {
                    coordinateSystem: "geo",
                    z: 2,
                    legendHoverLink: !0,
                    xAxisIndex: 0,
                    yAxisIndex: 0,
                    symbol: ["none", "none"],
                    symbolSize: [10, 10],
                    geoIndex: 0,
                    effect: {
                        show: !1,
                        period: 4,
                        constantSpeed: 0,
                        symbol: "circle",
                        symbolSize: 3,
                        loop: !0,
                        trailLength: .2
                    },
                    large: !1,
                    largeThreshold: 2e3,
                    polyline: !1,
                    clip: !0,
                    label: {
                        show: !1,
                        position: "end"
                    },
                    lineStyle: {
                        opacity: .5
                    }
                }, n
            }(PI),
            bN = {
                seriesType: "lines",
                reset: function (e) {
                    function t(e, t) {
                        var n = e.getItemModel(t),
                            i = Nm(n.getShallow("symbol", !0)),
                            r = Nm(n.getShallow("symbolSize", !0));
                        i[0] && e.setItemVisual(t, "fromSymbol", i[0]), i[1] && e.setItemVisual(t, "toSymbol", i[1]), r[0] && e.setItemVisual(t, "fromSymbolSize", r[0]), r[1] && e.setItemVisual(t, "toSymbolSize", r[1])
                    }
                    var n = Nm(e.get("symbol")),
                        i = Nm(e.get("symbolSize")),
                        r = e.getData();
                    return r.setVisual("fromSymbol", n && n[0]), r.setVisual("toSymbol", n && n[1]), r.setVisual("fromSymbolSize", i && i[0]), r.setVisual("toSymbolSize", i && i[1]), {
                        dataEach: r.hasItemOption ? t : null
                    }
                }
            };
        cd(Om);
        var SN = function (e) {
                function n() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return t(n, e), n.type = "grid", n.dependencies = ["xAxis", "yAxis"], n.layoutMode = "box", n.defaultOption = {
                    show: !1,
                    z: 0,
                    left: "10%",
                    top: 60,
                    right: "10%",
                    bottom: 70,
                    containLabel: !1,
                    backgroundColor: "rgba(0,0,0,0)",
                    borderWidth: 1,
                    borderColor: "#ccc"
                }, n
            }(fM),
            TN = function (e) {
                function n() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return t(n, e), n.prototype.getCoordSysModel = function () {
                    return this.getReferringComponents("grid", Db).models[0]
                }, n.type = "cartesian2dAxis", n
            }(fM);
        f(TN, HA);
        var CN = {
                show: !0,
                z: 0,
                inverse: !1,
                name: "",
                nameLocation: "end",
                nameRotate: null,
                nameTruncate: {
                    maxWidth: null,
                    ellipsis: "...",
                    placeholder: "."
                },
                nameTextStyle: {},
                nameGap: 15,
                silent: !1,
                triggerEvent: !1,
                tooltip: {
                    show: !1
                },
                axisPointer: {},
                axisLine: {
                    show: !0,
                    onZero: !0,
                    onZeroAxisIndex: null,
                    lineStyle: {
                        color: "#6E7079",
                        width: 1,
                        type: "solid"
                    },
                    symbol: ["none", "none"],
                    symbolSize: [10, 15]
                },
                axisTick: {
                    show: !0,
                    inside: !1,
                    length: 5,
                    lineStyle: {
                        width: 1
                    }
                },
                axisLabel: {
                    show: !0,
                    inside: !1,
                    rotate: 0,
                    showMinLabel: null,
                    showMaxLabel: null,
                    margin: 8,
                    fontSize: 12
                },
                splitLine: {
                    show: !0,
                    lineStyle: {
                        color: ["#E0E6F1"],
                        width: 1,
                        type: "solid"
                    }
                },
                splitArea: {
                    show: !1,
                    areaStyle: {
                        color: ["rgba(250,250,250,0.2)", "rgba(210,219,238,0.2)"]
                    }
                }
            },
            MN = l({
                boundaryGap: !0,
                deduplication: null,
                splitLine: {
                    show: !1
                },
                axisTick: {
                    alignWithLabel: !1,
                    interval: "auto"
                },
                axisLabel: {
                    interval: "auto"
                }
            }, CN),
            IN = l({
                boundaryGap: [0, 0],
                axisLine: {
                    show: "auto"
                },
                axisTick: {
                    show: "auto"
                },
                splitNumber: 5,
                minorTick: {
                    show: !1,
                    splitNumber: 5,
                    length: 3,
                    lineStyle: {}
                },
                minorSplitLine: {
                    show: !1,
                    lineStyle: {
                        color: "#F4F7FD",
                        width: 1
                    }
                }
            }, CN),
            kN = l({
                splitNumber: 6,
                axisLabel: {
                    showMinLabel: !1,
                    showMaxLabel: !1,
                    rich: {
                        primary: {
                            fontWeight: "bold"
                        }
                    }
                },
                splitLine: {
                    show: !1
                }
            }, IN),
            DN = p({
                logBase: 10
            }, IN),
            AN = {
                category: MN,
                value: IN,
                time: kN,
                log: DN
            },
            PN = {
                value: 1,
                category: 1,
                time: 1,
                log: 1
            },
            LN = function () {
                function e(e) {
                    this.type = "cartesian", this._dimList = [], this._axes = {}, this.name = e || ""
                }
                return e.prototype.getAxis = function (e) {
                    return this._axes[e]
                }, e.prototype.getAxes = function () {
                    return y(this._dimList, function (e) {
                        return this._axes[e]
                    }, this)
                }, e.prototype.getAxesByScale = function (e) {
                    return e = e.toLowerCase(), x(this.getAxes(), function (t) {
                        return t.scale.type === e
                    })
                }, e.prototype.addAxis = function (e) {
                    var t = e.dim;
                    this._axes[t] = e, this._dimList.push(t)
                }, e
            }(),
            NN = ["x", "y"],
            ON = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = "cartesian2d", t.dimensions = NN, t
                }
                return t(n, e), n.prototype.calcAffineTransform = function () {
                    this._transform = this._invTransform = null;
                    var e = this.getAxis("x").scale,
                        t = this.getAxis("y").scale;
                    if (zm(e) && zm(t)) {
                        var n = e.getExtent(),
                            i = t.getExtent(),
                            r = this.dataToPoint([n[0], i[0]]),
                            o = this.dataToPoint([n[1], i[1]]),
                            a = n[1] - n[0],
                            s = i[1] - i[0];
                        if (a && s) {
                            var l = (o[0] - r[0]) / a,
                                u = (o[1] - r[1]) / s,
                                c = r[0] - n[0] * l,
                                p = r[1] - i[0] * u,
                                h = this._transform = [l, 0, 0, u, c, p];
                            this._invTransform = je([], h)
                        }
                    }
                }, n.prototype.getBaseAxis = function () {
                    return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAxis("x")
                }, n.prototype.containPoint = function (e) {
                    var t = this.getAxis("x"),
                        n = this.getAxis("y");
                    return t.contain(t.toLocalCoord(e[0])) && n.contain(n.toLocalCoord(e[1]))
                }, n.prototype.containData = function (e) {
                    return this.getAxis("x").containData(e[0]) && this.getAxis("y").containData(e[1])
                }, n.prototype.containZone = function (e, t) {
                    var n = this.dataToPoint(e),
                        i = this.dataToPoint(t),
                        r = this.getArea(),
                        o = new F_(n[0], n[1], i[0] - n[0], i[1] - n[1]);
                    return r.intersect(o)
                }, n.prototype.dataToPoint = function (e, t, n) {
                    n = n || [];
                    var i = e[0],
                        r = e[1];
                    if (this._transform && null != i && isFinite(i) && null != r && isFinite(r)) return me(n, e, this._transform);
                    var o = this.getAxis("x"),
                        a = this.getAxis("y");
                    return n[0] = o.toGlobalCoord(o.dataToCoord(i, t)), n[1] = a.toGlobalCoord(a.dataToCoord(r, t)), n
                }, n.prototype.clampData = function (e, t) {
                    var n = this.getAxis("x").scale,
                        i = this.getAxis("y").scale,
                        r = n.getExtent(),
                        o = i.getExtent(),
                        a = n.parse(e[0]),
                        s = i.parse(e[1]);
                    return t = t || [], t[0] = Math.min(Math.max(Math.min(r[0], r[1]), a), Math.max(r[0], r[1])), t[1] = Math.min(Math.max(Math.min(o[0], o[1]), s), Math.max(o[0], o[1])), t
                }, n.prototype.pointToData = function (e, t) {
                    var n = [];
                    if (this._invTransform) return me(n, e, this._invTransform);
                    var i = this.getAxis("x"),
                        r = this.getAxis("y");
                    return n[0] = i.coordToData(i.toLocalCoord(e[0]), t), n[1] = r.coordToData(r.toLocalCoord(e[1]), t), n
                }, n.prototype.getOtherAxis = function (e) {
                    return this.getAxis("x" === e.dim ? "y" : "x")
                }, n.prototype.getArea = function () {
                    var e = this.getAxis("x").getGlobalExtent(),
                        t = this.getAxis("y").getGlobalExtent(),
                        n = Math.min(e[0], e[1]),
                        i = Math.min(t[0], t[1]),
                        r = Math.max(e[0], e[1]) - n,
                        o = Math.max(t[0], t[1]) - i;
                    return new F_(n, i, r, o)
                }, n
            }(LN),
            EN = function (e) {
                function n(t, n, i, r, o) {
                    var a = e.call(this, t, n, i) || this;
                    return a.index = 0, a.type = r || "value", a.position = o || "bottom", a
                }
                return t(n, e), n.prototype.isHorizontal = function () {
                    var e = this.position;
                    return "top" === e || "bottom" === e
                }, n.prototype.getGlobalExtent = function (e) {
                    var t = this.getExtent();
                    return t[0] = this.toGlobalCoord(t[0]), t[1] = this.toGlobalCoord(t[1]), e && t[0] > t[1] && t.reverse(), t
                }, n.prototype.pointToData = function (e, t) {
                    return this.coordToData(this.toLocalCoord(e["x" === this.dim ? 0 : 1]), t)
                }, n.prototype.setCategorySortInfo = function (e) {
                    return "category" === this.type && (this.model.option.categorySortInfo = e, void this.scale.setSortInfo(e))
                }, n
            }(oP),
            RN = Math.log,
            zN = function () {
                function e(e, t, n) {
                    this.type = "grid", this._coordsMap = {}, this._coordsList = [], this._axesMap = {}, this._axesList = [], this.axisPointerEnabled = !0, this.dimensions = NN, this._initCartesian(e, t, n), this.model = e
                }
                return e.prototype.getRect = function () {
                    return this._rect
                }, e.prototype.update = function (e, t) {
                    function n(e) {
                        var t, n = w(e),
                            i = n.length;
                        if (i) {
                            for (var r = [], o = i - 1; o >= 0; o--) {
                                var a = +n[o],
                                    s = e[a],
                                    l = s.model,
                                    u = s.scale;
                                gh(u) && l.get("alignTicks") && null == l.get("interval") ? r.push(s) : ($h(u, l), gh(u) && (t = s))
                            }
                            r.length && (t || (t = r.pop(), $h(t.scale, t.model)), m(r, function (e) {
                                Gm(e.scale, e.model, t.scale)
                            }))
                        }
                    }
                    var i = this._axesMap;
                    this._updateScale(e, this.model), n(i.x), n(i.y);
                    var r = {};
                    m(i.x, function (e) {
                        Wm(i, "y", e, r)
                    }), m(i.y, function (e) {
                        Wm(i, "x", e, r)
                    }), this.resize(this.model, t)
                }, e.prototype.resize = function (e, t, n) {
                    function i() {
                        m(s, function (e) {
                            var t = e.isHorizontal(),
                                n = t ? [0, a.width] : [0, a.height],
                                i = e.inverse ? 1 : 0;
                            e.setExtent(n[i], n[1 - i]), Xm(e, t ? a.x : a.y)
                        })
                    }
                    var r = e.getBoxLayoutParams(),
                        o = !n && e.get("containLabel"),
                        a = nl(r, {
                            width: t.getWidth(),
                            height: t.getHeight()
                        });
                    this._rect = a;
                    var s = this._axesList;
                    i(), o && (m(s, function (e) {
                        if (!e.model.get(["axisLabel", "inside"])) {
                            var t = td(e);
                            if (t) {
                                var n = e.isHorizontal() ? "height" : "width",
                                    i = e.model.get(["axisLabel", "margin"]);
                                a[n] -= t[n] + i, "top" === e.position ? a.y += t.height + i : "left" === e.position && (a.x += t.width + i)
                            }
                        }
                    }), i()), m(this._coordsList, function (e) {
                        e.calcAffineTransform()
                    })
                }, e.prototype.getAxis = function (e, t) {
                    var n = this._axesMap[e];
                    return null != n ? n[t || 0] : void 0
                }, e.prototype.getAxes = function () {
                    return this._axesList.slice()
                }, e.prototype.getCartesian = function (e, t) {
                    if (null != e && null != t) {
                        var n = "x" + e + "y" + t;
                        return this._coordsMap[n]
                    }
                    D(e) && (t = e.yAxisIndex, e = e.xAxisIndex);
                    for (var i = 0, r = this._coordsList; i < r.length; i++)
                        if (r[i].getAxis("x").index === e || r[i].getAxis("y").index === t) return r[i]
                }, e.prototype.getCartesians = function () {
                    return this._coordsList.slice()
                }, e.prototype.convertToPixel = function (e, t, n) {
                    var i = this._findConvertTarget(t);
                    return i.cartesian ? i.cartesian.dataToPoint(n) : i.axis ? i.axis.toGlobalCoord(i.axis.dataToCoord(n)) : null
                }, e.prototype.convertFromPixel = function (e, t, n) {
                    var i = this._findConvertTarget(t);
                    return i.cartesian ? i.cartesian.pointToData(n) : i.axis ? i.axis.coordToData(i.axis.toLocalCoord(n)) : null
                }, e.prototype._findConvertTarget = function (e) {
                    var t, n, i = e.seriesModel,
                        r = e.xAxisModel || i && i.getReferringComponents("xAxis", Db).models[0],
                        o = e.yAxisModel || i && i.getReferringComponents("yAxis", Db).models[0],
                        a = e.gridModel,
                        s = this._coordsList;
                    if (i) t = i.coordinateSystem, h(s, t) < 0 && (t = null);
                    else if (r && o) t = this.getCartesian(r.componentIndex, o.componentIndex);
                    else if (r) n = this.getAxis("x", r.componentIndex);
                    else if (o) n = this.getAxis("y", o.componentIndex);
                    else if (a) {
                        var l = a.coordinateSystem;
                        l === this && (t = this._coordsList[0])
                    }
                    return {
                        cartesian: t,
                        axis: n
                    }
                }, e.prototype.containPoint = function (e) {
                    var t = this._coordsList[0];
                    return t ? t.containPoint(e) : void 0
                }, e.prototype._initCartesian = function (e, t) {
                    function n(t) {
                        return function (n, i) {
                            if (Vm(n, e)) {
                                var l = n.get("position");
                                "x" === t ? "top" !== l && "bottom" !== l && (l = o.bottom ? "top" : "bottom") : "left" !== l && "right" !== l && (l = o.left ? "right" : "left"), o[l] = !0;
                                var u = new EN(t, Kh(n), [0, 0], n.get("type"), l),
                                    c = "category" === u.type;
                                u.onBand = c && n.get("boundaryGap"), u.inverse = n.get("inverse"), n.axis = u, u.model = n, u.grid = r, u.index = i, r._axesList.push(u), a[t][i] = u, s[t]++
                            }
                        }
                    }
                    var i = this,
                        r = this,
                        o = {
                            left: !1,
                            right: !1,
                            top: !1,
                            bottom: !1
                        },
                        a = {
                            x: {},
                            y: {}
                        },
                        s = {
                            x: 0,
                            y: 0
                        };
                    return t.eachComponent("xAxis", n("x"), this), t.eachComponent("yAxis", n("y"), this), s.x && s.y ? (this._axesMap = a, void m(a.x, function (t, n) {
                        m(a.y, function (r, o) {
                            var a = "x" + n + "y" + o,
                                s = new ON(a);
                            s.master = i, s.model = e, i._coordsMap[a] = s, i._coordsList.push(s), s.addAxis(t), s.addAxis(r)
                        })
                    })) : (this._axesMap = {}, void(this._axesList = []))
                }, e.prototype._updateScale = function (e, t) {
                    function n(e, t) {
                        m(od(e, t.dim), function (n) {
                            t.scale.unionExtentFromData(e, n)
                        })
                    }
                    m(this._axesList, function (e) {
                        if (e.scale.setExtent(1 / 0, -1 / 0), "category" === e.type) {
                            var t = e.model.get("categorySortInfo");
                            e.scale.setSortInfo(t)
                        }
                    }), e.eachSeries(function (e) {
                        if (Fm(e)) {
                            var i = Hm(e),
                                r = i.xAxisModel,
                                o = i.yAxisModel;
                            if (!Vm(r, t) || !Vm(o, t)) return;
                            var a = this.getCartesian(r.componentIndex, o.componentIndex),
                                s = e.getData(),
                                l = a.getAxis("x"),
                                u = a.getAxis("y");
                            n(s, l), n(s, u)
                        }
                    }, this)
                }, e.prototype.getTooltipAxes = function (e) {
                    var t = [],
                        n = [];
                    return m(this.getCartesians(), function (i) {
                        var r = null != e && "auto" !== e ? i.getAxis(e) : i.getBaseAxis(),
                            o = i.getOtherAxis(r);
                        h(t, r) < 0 && t.push(r), h(n, o) < 0 && n.push(o)
                    }), {
                        baseAxes: t,
                        otherAxes: n
                    }
                }, e.create = function (t, n) {
                    var i = [];
                    return t.eachComponent("grid", function (r, o) {
                        var a = new e(r, t, n);
                        a.name = "grid_" + o, a.resize(r, n, !0), r.coordinateSystem = a, i.push(a)
                    }), t.eachSeries(function (e) {
                        if (Fm(e)) {
                            var t = Hm(e),
                                n = t.xAxisModel,
                                i = t.yAxisModel,
                                r = n.getCoordSysModel(),
                                o = r.coordinateSystem;
                            e.coordinateSystem = o.getCartesian(n.componentIndex, i.componentIndex)
                        }
                    }), i
                }, e.dimensions = NN, e
            }(),
            BN = Math.PI,
            FN = function () {
                function e(e, t) {
                    this.group = new gb, this.opt = t, this.axisModel = e, p(t, {
                        labelOffset: 0,
                        nameDirection: 1,
                        tickDirection: 1,
                        labelDirection: 1,
                        silent: !0,
                        handleAutoShown: function () {
                            return !0
                        }
                    });
                    var n = new gb({
                        x: t.position[0],
                        y: t.position[1],
                        rotation: t.rotation
                    });
                    n.updateTransform(), this._transformGroup = n
                }
                return e.prototype.hasBuilder = function (e) {
                    return !!HN[e]
                }, e.prototype.add = function (e) {
                    HN[e](this.opt, this.axisModel, this.group, this._transformGroup)
                }, e.prototype.getGroup = function () {
                    return this.group
                }, e.innerTextLayout = function (e, t, n) {
                    var i, r, o = di(t - e);
                    return fi(o) ? (r = n > 0 ? "top" : "bottom", i = "center") : fi(o - BN) ? (r = n > 0 ? "bottom" : "top", i = "center") : (r = "middle", i = o > 0 && BN > o ? n > 0 ? "right" : "left" : n > 0 ? "left" : "right"), {
                        rotation: o,
                        textAlign: i,
                        textVerticalAlign: r
                    }
                }, e.makeAxisEventDataBase = function (e) {
                    var t = {
                        componentType: e.mainType,
                        componentIndex: e.componentIndex
                    };
                    return t[e.mainType + "Index"] = e.componentIndex, t
                }, e.isLabelSilent = function (e) {
                    var t = e.get("tooltip");
                    return e.get("silent") || !(e.get("triggerEvent") || t && t.show)
                }, e
            }(),
            HN = {
                axisLine: function (e, t, n, i) {
                    var r = t.get(["axisLine", "show"]);
                    if ("auto" === r && e.handleAutoShown && (r = e.handleAutoShown("axisLine")), r) {
                        var o = t.axis.getExtent(),
                            a = i.transform,
                            s = [o[0], 0],
                            l = [o[1], 0],
                            u = s[0] > l[0];
                        a && (me(s, s, a), me(l, l, a));
                        var p = c({
                                lineCap: "round"
                            }, t.getModel(["axisLine", "lineStyle"]).getLineStyle()),
                            h = new eC({
                                shape: {
                                    x1: s[0],
                                    y1: s[1],
                                    x2: l[0],
                                    y2: l[1]
                                },
                                style: p,
                                strokeContainThreshold: e.strokeContainThreshold || 5,
                                silent: !0,
                                z2: 1
                            });
                        Fa(h.shape, h.style.lineWidth), h.anid = "line", n.add(h);
                        var d = t.get(["axisLine", "symbol"]);
                        if (null != d) {
                            var f = t.get(["axisLine", "symbolSize"]);
                            M(d) && (d = [d, d]), (M(f) || k(f)) && (f = [f, f]);
                            var g = Pc(t.get(["axisLine", "symbolOffset"]) || 0, f),
                                y = f[0],
                                v = f[1];
                            m([{
                                rotate: e.rotation + Math.PI / 2,
                                offset: g[0],
                                r: 0
                            }, {
                                rotate: e.rotation - Math.PI / 2,
                                offset: g[1],
                                r: Math.sqrt((s[0] - l[0]) * (s[0] - l[0]) + (s[1] - l[1]) * (s[1] - l[1]))
                            }], function (t, i) {
                                if ("none" !== d[i] && null != d[i]) {
                                    var r = Dc(d[i], -y / 2, -v / 2, y, v, p.stroke, !0),
                                        o = t.r + t.offset,
                                        a = u ? l : s;
                                    r.attr({
                                        rotation: t.rotate,
                                        x: a[0] + o * Math.cos(e.rotation),
                                        y: a[1] - o * Math.sin(e.rotation),
                                        silent: !0,
                                        z2: 11
                                    }), n.add(r)
                                }
                            })
                        }
                    }
                },
                axisTickLabel: function (e, t, n, i) {
                    var r = Jm(n, i, t, e),
                        o = ey(n, i, t, e);
                    if (Um(t, o, r), Qm(n, i, t, e.tickDirection), t.get(["axisLabel", "hideOverlap"])) {
                        var a = Qd(y(o, function (e) {
                            return {
                                label: e,
                                priority: e.z2,
                                defaultAttr: {
                                    ignore: e.ignore
                                }
                            }
                        }));
                        rf(a)
                    }
                },
                axisName: function (e, t, n, i) {
                    var r = z(e.axisName, t.get("name"));
                    if (r) {
                        var o, a, s = t.get("nameLocation"),
                            l = e.nameDirection,
                            u = t.getModel("nameTextStyle"),
                            c = t.get("nameGap") || 0,
                            p = t.axis.getExtent(),
                            h = p[0] > p[1] ? -1 : 1,
                            d = ["start" === s ? p[0] - h * c : "end" === s ? p[1] + h * c : (p[0] + p[1]) / 2, $m(s) ? e.labelOffset + l * c : 0],
                            f = t.get("nameRotate");
                        null != f && (f = f * BN / 180), $m(s) ? o = FN.innerTextLayout(e.rotation, null != f ? f : e.rotation, l) : (o = Ym(e.rotation, s, f || 0, p), a = e.axisNameAvailableWidth, null != a && (a = Math.abs(a / Math.sin(o.rotation)), !isFinite(a) && (a = null)));
                        var g = u.getFont(),
                            m = t.get("nameTruncate", !0) || {},
                            y = m.ellipsis,
                            v = z(e.nameTruncateMaxWidth, m.maxWidth, a),
                            x = new US({
                                x: d[0],
                                y: d[1],
                                rotation: o.rotation,
                                silent: FN.isLabelSilent(t),
                                style: ss(u, {
                                    text: r,
                                    font: g,
                                    overflow: "truncate",
                                    width: v,
                                    ellipsis: y,
                                    fill: u.getTextColor() || t.get(["axisLine", "lineStyle", "color"]),
                                    align: u.get("align") || o.textAlign,
                                    verticalAlign: u.get("verticalAlign") || o.textVerticalAlign
                                }),
                                z2: 1
                            });
                        if (es({
                                el: x,
                                componentModel: t,
                                itemName: r
                            }), x.__fullText = r, x.anid = "name", t.get("triggerEvent")) {
                            var _ = FN.makeAxisEventDataBase(t);
                            _.targetType = "axisName", _.name = r, KS(x).eventData = _
                        }
                        i.add(x), x.updateTransform(), n.add(x), x.decomposeTransform()
                    }
                }
            },
            GN = {},
            VN = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t
                }
                return t(n, e), n.prototype.render = function (t, n, i) {
                    this.axisPointerClass && sy(t), e.prototype.render.apply(this, arguments), this._doUpdateAxisPointerClass(t, i, !0)
                }, n.prototype.updateAxisPointer = function (e, t, n) {
                    this._doUpdateAxisPointerClass(e, n, !1)
                }, n.prototype.remove = function (e, t) {
                    var n = this._axisPointer;
                    n && n.remove(t)
                }, n.prototype.dispose = function (t, n) {
                    this._disposeAxisPointer(n), e.prototype.dispose.apply(this, arguments)
                }, n.prototype._doUpdateAxisPointerClass = function (e, t, i) {
                    var r = n.getAxisPointerClass(this.axisPointerClass);
                    if (r) {
                        var o = uy(e);
                        o ? (this._axisPointer || (this._axisPointer = new r)).render(e, o, t, i) : this._disposeAxisPointer(t)
                    }
                }, n.prototype._disposeAxisPointer = function (e) {
                    this._axisPointer && this._axisPointer.dispose(e), this._axisPointer = null
                }, n.registerAxisPointerClass = function (e, t) {
                    GN[e] = t
                }, n.getAxisPointerClass = function (e) {
                    return e && GN[e]
                }, n.type = "axis", n
            }(LI),
            WN = Ui(),
            jN = ["axisLine", "axisTickLabel", "axisName"],
            XN = ["splitArea", "splitLine", "minorSplitLine"],
            YN = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t.axisPointerClass = "CartesianAxisPointer", t
                }
                return t(n, e), n.prototype.render = function (t, n, i, r) {
                    this.group.removeAll();
                    var o = this._axisGroup;
                    if (this._axisGroup = new gb, this.group.add(this._axisGroup), t.get("show")) {
                        var a = t.getCoordSysModel(),
                            s = Bm(a, t),
                            l = new FN(t, c({
                                handleAutoShown: function () {
                                    for (var e = a.coordinateSystem.getCartesians(), n = 0; n < e.length; n++)
                                        if (gh(e[n].getOtherAxis(t.axis).scale)) return !0;
                                    return !1
                                }
                            }, s));
                        m(jN, l.add, l), this._axisGroup.add(l.getGroup()), m(XN, function (e) {
                            t.get([e, "show"]) && UN[e](this, this._axisGroup, t, a)
                        }, this);
                        var u = r && "changeAxisOrder" === r.type && r.isInitSort;
                        u || Ya(o, this._axisGroup, t), e.prototype.render.call(this, t, n, i, r)
                    }
                }, n.prototype.remove = function () {
                    dy(this)
                }, n.type = "cartesianAxis", n
            }(VN),
            UN = {
                splitLine: function (e, t, n, i) {
                    var r = n.axis;
                    if (!r.scale.isBlank()) {
                        var o = n.getModel("splitLine"),
                            a = o.getModel("lineStyle"),
                            s = a.get("color");
                        s = T(s) ? s : [s];
                        for (var l = i.coordinateSystem.getRect(), u = r.isHorizontal(), c = 0, h = r.getTicksCoords({
                                tickModel: o
                            }), d = [], f = [], g = a.getLineStyle(), m = 0; m < h.length; m++) {
                            var y = r.toGlobalCoord(h[m].coord);
                            u ? (d[0] = y, d[1] = l.y, f[0] = y, f[1] = l.y + l.height) : (d[0] = l.x, d[1] = y, f[0] = l.x + l.width, f[1] = y);
                            var v = c++ % s.length,
                                x = h[m].tickValue,
                                _ = new eC({
                                    anid: null != x ? "line_" + h[m].tickValue : null,
                                    autoBatch: !0,
                                    shape: {
                                        x1: d[0],
                                        y1: d[1],
                                        x2: f[0],
                                        y2: f[1]
                                    },
                                    style: p({
                                        stroke: s[v]
                                    }, g),
                                    silent: !0
                                });
                            Fa(_.shape, g.lineWidth), t.add(_)
                        }
                    }
                },
                minorSplitLine: function (e, t, n, i) {
                    var r = n.axis,
                        o = n.getModel("minorSplitLine"),
                        a = o.getModel("lineStyle"),
                        s = i.coordinateSystem.getRect(),
                        l = r.isHorizontal(),
                        u = r.getMinorTicksCoords();
                    if (u.length)
                        for (var c = [], p = [], h = a.getLineStyle(), d = 0; d < u.length; d++)
                            for (var f = 0; f < u[d].length; f++) {
                                var g = r.toGlobalCoord(u[d][f].coord);
                                l ? (c[0] = g, c[1] = s.y, p[0] = g, p[1] = s.y + s.height) : (c[0] = s.x, c[1] = g, p[0] = s.x + s.width, p[1] = g);
                                var m = new eC({
                                    anid: "minor_line_" + u[d][f].tickValue,
                                    autoBatch: !0,
                                    shape: {
                                        x1: c[0],
                                        y1: c[1],
                                        x2: p[0],
                                        y2: p[1]
                                    },
                                    style: h,
                                    silent: !0
                                });
                                Fa(m.shape, h.lineWidth), t.add(m)
                            }
                },
                splitArea: function (e, t, n, i) {
                    hy(e, t, n, i)
                }
            },
            qN = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t
                }
                return t(n, e), n.type = "xAxis", n
            }(YN),
            ZN = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = qN.type, t
                }
                return t(n, e), n.type = "yAxis", n
            }(YN),
            $N = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = "grid", t
                }
                return t(n, e), n.prototype.render = function (e) {
                    this.group.removeAll(), e.get("show") && this.group.add(new WS({
                        shape: e.coordinateSystem.getRect(),
                        style: p({
                            fill: e.get("backgroundColor")
                        }, e.getItemStyle()),
                        silent: !0,
                        z2: -1
                    }))
                }, n.type = "grid", n
            }(LI),
            KN = {
                offset: 0
            };
        cd(fy), cd(wm);
        var JN = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t.layoutMode = {
                        type: "box",
                        ignoreSize: !0
                    }, t
                }
                return t(n, e), n.type = "title", n.defaultOption = {
                    z: 6,
                    show: !0,
                    text: "",
                    target: "blank",
                    subtext: "",
                    subtarget: "blank",
                    left: 0,
                    top: 0,
                    backgroundColor: "rgba(0,0,0,0)",
                    borderColor: "#ccc",
                    borderWidth: 0,
                    padding: 5,
                    itemGap: 10,
                    textStyle: {
                        fontSize: 18,
                        fontWeight: "bold",
                        color: "#464646"
                    },
                    subtextStyle: {
                        fontSize: 12,
                        color: "#6E7079"
                    }
                }, n
            }(fM),
            QN = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t
                }
                return t(n, e), n.prototype.render = function (e, t, n) {
                    if (this.group.removeAll(), e.get("show")) {
                        var i = this.group,
                            r = e.getModel("textStyle"),
                            o = e.getModel("subtextStyle"),
                            a = e.get("textAlign"),
                            s = B(e.get("textBaseline"), e.get("textVerticalAlign")),
                            l = new US({
                                style: ss(r, {
                                    text: e.get("text"),
                                    fill: r.getTextColor()
                                }, {
                                    disableBox: !0
                                }),
                                z2: 10
                            }),
                            u = l.getBoundingRect(),
                            c = e.get("subtext"),
                            p = new US({
                                style: ss(o, {
                                    text: c,
                                    fill: o.getTextColor(),
                                    y: u.height + e.get("itemGap"),
                                    verticalAlign: "top"
                                }, {
                                    disableBox: !0
                                }),
                                z2: 10
                            }),
                            h = e.get("link"),
                            d = e.get("sublink"),
                            f = e.get("triggerEvent", !0);
                        l.silent = !h && !f, p.silent = !d && !f, h && l.on("click", function () {
                            el(h, "_" + e.get("target"))
                        }), d && p.on("click", function () {
                            el(d, "_" + e.get("subtarget"))
                        }), KS(l).eventData = KS(p).eventData = f ? {
                            componentType: "title",
                            componentIndex: e.componentIndex
                        } : null, i.add(l), c && i.add(p);
                        var g = i.getBoundingRect(),
                            m = e.getBoxLayoutParams();
                        m.width = g.width, m.height = g.height;
                        var y = nl(m, {
                            width: n.getWidth(),
                            height: n.getHeight()
                        }, e.get("padding"));
                        a || (a = e.get("left") || e.get("right"), "middle" === a && (a = "center"), "right" === a ? y.x += y.width : "center" === a && (y.x += y.width / 2)), s || (s = e.get("top") || e.get("bottom"), "center" === s && (s = "middle"), "bottom" === s ? y.y += y.height : "middle" === s && (y.y += y.height / 2), s = s || "top"), i.x = y.x, i.y = y.y, i.markRedraw();
                        var v = {
                            align: a,
                            verticalAlign: s
                        };
                        l.setStyle(v), p.setStyle(v), g = i.getBoundingRect();
                        var x = y.margin,
                            _ = e.getItemStyle(["color", "opacity"]);
                        _.fill = e.get("backgroundColor");
                        var w = new WS({
                            shape: {
                                x: g.x - x[3],
                                y: g.y - x[0],
                                width: g.width + x[1] + x[3],
                                height: g.height + x[0] + x[2],
                                r: e.get("borderRadius")
                            },
                            style: _,
                            subPixelOptimize: !0,
                            silent: !0
                        });
                        i.add(w)
                    }
                }, n.type = "title", n
            }(LI);
        cd(gy);
        var eO = function (e, t) {
                return "all" === t ? {
                    type: "all",
                    title: e.getLocaleModel().get(["legend", "selector", "all"])
                } : "inverse" === t ? {
                    type: "inverse",
                    title: e.getLocaleModel().get(["legend", "selector", "inverse"])
                } : void 0
            },
            tO = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t.layoutMode = {
                        type: "box",
                        ignoreSize: !0
                    }, t
                }
                return t(n, e), n.prototype.init = function (e, t, n) {
                    this.mergeDefaultAndTheme(e, n), e.selected = e.selected || {}, this._updateSelector(e)
                }, n.prototype.mergeOption = function (t, n) {
                    e.prototype.mergeOption.call(this, t, n), this._updateSelector(t)
                }, n.prototype._updateSelector = function (e) {
                    var t = e.selector,
                        n = this.ecModel;
                    !0 === t && (t = e.selector = ["all", "inverse"]), T(t) && m(t, function (e, i) {
                        M(e) && (e = {
                            type: e
                        }), t[i] = l(e, eO(n, e.type))
                    })
                }, n.prototype.optionUpdated = function () {
                    this._updateData(this.ecModel);
                    var e = this._data;
                    if (e[0] && "single" === this.get("selectedMode")) {
                        for (var t = !1, n = 0; n < e.length; n++) {
                            var i = e[n].get("name");
                            if (this.isSelected(i)) {
                                this.select(i), t = !0;
                                break
                            }
                        }!t && this.select(e[0].get("name"))
                    }
                }, n.prototype._updateData = function (e) {
                    var t = [],
                        n = [];
                    e.eachRawSeries(function (i) {
                        var r, o = i.name;
                        if (n.push(o), i.legendVisualProvider) {
                            var a = i.legendVisualProvider,
                                s = a.getAllNames();
                            e.isSeriesFiltered(i) || (n = n.concat(s)), s.length ? t = t.concat(s) : r = !0
                        } else r = !0;
                        r && Vi(i) && t.push(i.name)
                    }), this._availableNames = n;
                    var i = this.get("data") || t,
                        r = y(i, function (e) {
                            return (M(e) || k(e)) && (e = {
                                name: e
                            }), new HC(e, this, this.ecModel)
                        }, this);
                    this._data = r
                }, n.prototype.getData = function () {
                    return this._data
                }, n.prototype.select = function (e) {
                    var t = this.option.selected,
                        n = this.get("selectedMode");
                    if ("single" === n) {
                        var i = this._data;
                        m(i, function (e) {
                            t[e.get("name")] = !1
                        })
                    }
                    t[e] = !0
                }, n.prototype.unSelect = function (e) {
                    "single" !== this.get("selectedMode") && (this.option.selected[e] = !1)
                }, n.prototype.toggleSelected = function (e) {
                    var t = this.option.selected;
                    t.hasOwnProperty(e) || (t[e] = !0), this[t[e] ? "unSelect" : "select"](e)
                }, n.prototype.allSelect = function () {
                    var e = this._data,
                        t = this.option.selected;
                    m(e, function (e) {
                        t[e.get("name", !0)] = !0
                    })
                }, n.prototype.inverseSelect = function () {
                    var e = this._data,
                        t = this.option.selected;
                    m(e, function (e) {
                        var n = e.get("name", !0);
                        t.hasOwnProperty(n) || (t[n] = !0), t[n] = !t[n]
                    })
                }, n.prototype.isSelected = function (e) {
                    var t = this.option.selected;
                    return !(t.hasOwnProperty(e) && !t[e]) && h(this._availableNames, e) >= 0
                }, n.prototype.getOrient = function () {
                    return "vertical" === this.get("orient") ? {
                        index: 1,
                        name: "vertical"
                    } : {
                        index: 0,
                        name: "horizontal"
                    }
                }, n.type = "legend.plain", n.dependencies = ["series"], n.defaultOption = {
                    z: 4,
                    show: !0,
                    orient: "horizontal",
                    left: "center",
                    top: 0,
                    align: "auto",
                    backgroundColor: "rgba(0,0,0,0)",
                    borderColor: "#ccc",
                    borderRadius: 0,
                    borderWidth: 0,
                    padding: 5,
                    itemGap: 10,
                    itemWidth: 25,
                    itemHeight: 14,
                    symbolRotate: "inherit",
                    symbolKeepAspect: !0,
                    inactiveColor: "#ccc",
                    inactiveBorderColor: "#ccc",
                    inactiveBorderWidth: "auto",
                    itemStyle: {
                        color: "inherit",
                        opacity: "inherit",
                        borderColor: "inherit",
                        borderWidth: "auto",
                        borderCap: "inherit",
                        borderJoin: "inherit",
                        borderDashOffset: "inherit",
                        borderMiterLimit: "inherit"
                    },
                    lineStyle: {
                        width: "auto",
                        color: "inherit",
                        inactiveColor: "#ccc",
                        inactiveWidth: 2,
                        opacity: "inherit",
                        type: "inherit",
                        cap: "inherit",
                        join: "inherit",
                        dashOffset: "inherit",
                        miterLimit: "inherit"
                    },
                    textStyle: {
                        color: "#333"
                    },
                    selectedMode: !0,
                    selector: !1,
                    selectorLabel: {
                        show: !0,
                        borderRadius: 10,
                        padding: [3, 5, 3, 5],
                        fontSize: 12,
                        fontFamily: "sans-serif",
                        color: "#666",
                        borderWidth: 1,
                        borderColor: "#666"
                    },
                    emphasis: {
                        selectorLabel: {
                            show: !0,
                            color: "#eee",
                            backgroundColor: "#666"
                        }
                    },
                    selectorPosition: "auto",
                    selectorItemGap: 7,
                    selectorButtonGap: 10,
                    tooltip: {
                        show: !1
                    }
                }, n
            }(fM),
            nO = S,
            iO = m,
            rO = gb,
            oO = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t.newlineDisabled = !1, t
                }
                return t(n, e), n.prototype.init = function () {
                    this.group.add(this._contentGroup = new rO), this.group.add(this._selectorGroup = new rO), this._isFirstRender = !0
                }, n.prototype.getContentGroup = function () {
                    return this._contentGroup
                }, n.prototype.getSelectorGroup = function () {
                    return this._selectorGroup
                }, n.prototype.render = function (e, t, n) {
                    var i = this._isFirstRender;
                    if (this._isFirstRender = !1, this.resetInner(), e.get("show", !0)) {
                        var r = e.get("align"),
                            o = e.get("orient");
                        r && "auto" !== r || (r = "right" === e.get("left") && "vertical" === o ? "right" : "left");
                        var a = e.get("selector", !0),
                            s = e.get("selectorPosition", !0);
                        !a || s && "auto" !== s || (s = "horizontal" === o ? "end" : "start"), this.renderInner(r, e, t, n, a, o, s);
                        var l = e.getBoxLayoutParams(),
                            u = {
                                width: n.getWidth(),
                                height: n.getHeight()
                            },
                            c = e.get("padding"),
                            h = nl(l, u, c),
                            d = this.layoutInner(e, r, h, i, a, s),
                            f = nl(p({
                                width: d.width,
                                height: d.height
                            }, l), u, c);
                        this.group.x = f.x - d.x, this.group.y = f.y - d.y, this.group.markRedraw(), this.group.add(this._backgroundEl = my(d, e))
                    }
                }, n.prototype.resetInner = function () {
                    this.getContentGroup().removeAll(), this._backgroundEl && this.group.remove(this._backgroundEl), this.getSelectorGroup().removeAll()
                }, n.prototype.renderInner = function (e, t, n, i, r, o, a) {
                    var s = this.getContentGroup(),
                        l = Y(),
                        u = t.get("selectedMode"),
                        p = [];
                    n.eachRawSeries(function (e) {
                        !e.get("legendHoverLink") && p.push(e.id)
                    }), iO(t.getData(), function (r, o) {
                        var a = r.get("name");
                        if (!this.newlineDisabled && ("" === a || "\n" === a)) {
                            var h = new rO;
                            return h.newline = !0, void s.add(h)
                        }
                        var d = n.getSeriesByName(a)[0];
                        if (!l.get(a))
                            if (d) {
                                var f = d.getData(),
                                    g = f.getVisual("legendLineStyle") || {},
                                    m = f.getVisual("legendIcon"),
                                    y = f.getVisual("style"),
                                    v = this._createItem(d, a, o, r, t, e, g, y, m, u, i);
                                v.on("click", nO(xy, a, null, i, p)).on("mouseover", nO(wy, d.name, null, i, p)).on("mouseout", nO(by, d.name, null, i, p)), l.set(a, !0)
                            } else n.eachRawSeries(function (n) {
                                if (!l.get(a) && n.legendVisualProvider) {
                                    var s = n.legendVisualProvider;
                                    if (!s.containName(a)) return;
                                    var h = s.indexOfName(a),
                                        d = s.getItemVisual(h, "style"),
                                        f = s.getItemVisual(h, "legendIcon"),
                                        g = Ot(d.fill);
                                    g && 0 === g[3] && (g[3] = .2, d = c(c({}, d), {
                                        fill: Wt(g, "rgba")
                                    }));
                                    var m = this._createItem(n, a, o, r, t, e, {}, d, f, u, i);
                                    m.on("click", nO(xy, null, a, i, p)).on("mouseover", nO(wy, null, a, i, p)).on("mouseout", nO(by, null, a, i, p)), l.set(a, !0)
                                }
                            }, this)
                    }, this), r && this._createSelector(r, t, i, o, a)
                }, n.prototype._createSelector = function (e, t, n) {
                    var i = this.getSelectorGroup();
                    iO(e, function (e) {
                        var r = e.type,
                            o = new US({
                                style: {
                                    x: 0,
                                    y: 0,
                                    align: "center",
                                    verticalAlign: "middle"
                                },
                                onclick: function () {
                                    n.dispatchAction({
                                        type: "all" === r ? "legendAllSelect" : "legendInverseSelect"
                                    })
                                }
                            });
                        i.add(o);
                        var a = t.getModel("selectorLabel"),
                            s = t.getModel(["emphasis", "selectorLabel"]);
                        os(o, {
                            normal: a,
                            emphasis: s
                        }, {
                            defaultText: e.title
                        }), Yo(o)
                    })
                }, n.prototype._createItem = function (e, t, n, i, r, o, a, s, l, u, c) {
                    var p = e.visualDrawType,
                        h = r.get("itemWidth"),
                        d = r.get("itemHeight"),
                        f = r.isSelected(t),
                        g = i.get("symbolRotate"),
                        m = i.get("symbolKeepAspect"),
                        y = i.get("icon");
                    l = y || l || "roundRect";
                    var v = yy(l, i, a, s, p, f, c),
                        x = new rO,
                        _ = i.getModel("textStyle");
                    if (!C(e.getLegendIcon) || y && "inherit" !== y) {
                        var w = "inherit" === y && e.getData().getVisual("symbol") ? "inherit" === g ? e.getData().getVisual("symbolRotate") : g : 0;
                        x.add(vy({
                            itemWidth: h,
                            itemHeight: d,
                            icon: l,
                            iconRotate: w,
                            itemStyle: v.itemStyle,
                            lineStyle: v.lineStyle,
                            symbolKeepAspect: m
                        }))
                    } else x.add(e.getLegendIcon({
                        itemWidth: h,
                        itemHeight: d,
                        icon: l,
                        iconRotate: g,
                        itemStyle: v.itemStyle,
                        lineStyle: v.lineStyle,
                        symbolKeepAspect: m
                    }));
                    var b = "left" === o ? h + 5 : -5,
                        S = o,
                        T = r.get("formatter"),
                        I = t;
                    M(T) && T ? I = T.replace("{name}", null != t ? t : "") : C(T) && (I = T(t));
                    var k = i.get("inactiveColor");
                    x.add(new US({
                        style: ss(_, {
                            text: I,
                            x: b,
                            y: d / 2,
                            fill: f ? _.getTextColor() : k,
                            align: S,
                            verticalAlign: "middle"
                        })
                    }));
                    var D = new WS({
                            shape: x.getBoundingRect(),
                            invisible: !0
                        }),
                        A = i.getModel("tooltip");
                    return A.get("show") && es({
                        el: D,
                        componentModel: r,
                        itemName: t,
                        itemTooltipOption: A.option
                    }), x.add(D), x.eachChild(function (e) {
                        e.silent = !0
                    }), D.silent = !u, this.getContentGroup().add(x), Yo(x), x.__legendDataIndex = n, x
                }, n.prototype.layoutInner = function (e, t, n, i, r, o) {
                    var a = this.getContentGroup(),
                        s = this.getSelectorGroup();
                    hM(e.get("orient"), a, e.get("itemGap"), n.width, n.height);
                    var l = a.getBoundingRect(),
                        u = [-l.x, -l.y];
                    if (s.markRedraw(), a.markRedraw(), r) {
                        hM("horizontal", s, e.get("selectorItemGap", !0));
                        var c = s.getBoundingRect(),
                            p = [-c.x, -c.y],
                            h = e.get("selectorButtonGap", !0),
                            d = e.getOrient().index,
                            f = 0 === d ? "width" : "height",
                            g = 0 === d ? "height" : "width",
                            m = 0 === d ? "y" : "x";
                        "end" === o ? p[d] += l[f] + h : u[d] += c[f] + h, p[1 - d] += l[g] / 2 - c[g] / 2, s.x = p[0], s.y = p[1], a.x = u[0], a.y = u[1];
                        var y = {
                            x: 0,
                            y: 0
                        };
                        return y[f] = l[f] + h + c[f], y[g] = Math.max(l[g], c[g]), y[m] = Math.min(0, c[m] + p[1 - d]), y
                    }
                    return a.x = u[0], a.y = u[1], this.group.getBoundingRect()
                }, n.prototype.remove = function () {
                    this.getContentGroup().removeAll(), this._isFirstRender = !0
                }, n.type = "legend.plain", n
            }(LI),
            aO = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t
                }
                return t(n, e), n.prototype.setScrollDataIndex = function (e) {
                    this.option.scrollDataIndex = e
                }, n.prototype.init = function (t, n, i) {
                    var r = ol(t);
                    e.prototype.init.call(this, t, n, i), Iy(this, t, r)
                }, n.prototype.mergeOption = function (t, n) {
                    e.prototype.mergeOption.call(this, t, n), Iy(this, this.option, t)
                }, n.type = "legend.scroll", n.defaultOption = vs(tO.defaultOption, {
                    scrollDataIndex: 0,
                    pageButtonItemGap: 5,
                    pageButtonGap: null,
                    pageButtonPosition: "end",
                    pageFormatter: "{current}/{total}",
                    pageIcons: {
                        horizontal: ["M0,0L12,-10L12,10z", "M0,0L-12,-10L-12,10z"],
                        vertical: ["M0,0L20,0L10,-20z", "M0,0L20,0L10,20z"]
                    },
                    pageIconColor: "#2f4554",
                    pageIconInactiveColor: "#aaa",
                    pageIconSize: 15,
                    pageTextStyle: {
                        color: "#333"
                    },
                    animationDurationUpdate: 800
                }), n
            }(tO),
            sO = gb,
            lO = ["width", "height"],
            uO = ["x", "y"],
            cO = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t.newlineDisabled = !0, t._currentIndex = 0, t
                }
                return t(n, e), n.prototype.init = function () {
                    e.prototype.init.call(this), this.group.add(this._containerGroup = new sO), this._containerGroup.add(this.getContentGroup()), this.group.add(this._controllerGroup = new sO)
                }, n.prototype.resetInner = function () {
                    e.prototype.resetInner.call(this), this._controllerGroup.removeAll(), this._containerGroup.removeClipPath(), this._containerGroup.__rectSize = null
                }, n.prototype.renderInner = function (t, n, i, r, o, a, s) {
                    function l(e, t) {
                        var i = e + "DataIndex",
                            o = Za(n.get("pageIcons", !0)[n.getOrient().name][t], {
                                onclick: o_(u._pageGo, u, i, n, r)
                            }, {
                                x: -h[0] / 2,
                                y: -h[1] / 2,
                                width: h[0],
                                height: h[1]
                            });
                        o.name = e, c.add(o)
                    }
                    var u = this;
                    e.prototype.renderInner.call(this, t, n, i, r, o, a, s);
                    var c = this._controllerGroup,
                        p = n.get("pageIconSize", !0),
                        h = T(p) ? p : [p, p];
                    l("pagePrev", 0);
                    var d = n.getModel("pageTextStyle");
                    c.add(new US({
                        name: "pageText",
                        style: {
                            text: "xx/xx",
                            fill: d.getTextColor(),
                            font: d.getFont(),
                            verticalAlign: "middle",
                            align: "center"
                        },
                        silent: !0
                    })), l("pageNext", 1)
                }, n.prototype.layoutInner = function (e, t, n, i, r, o) {
                    var a = this.getSelectorGroup(),
                        l = e.getOrient().index,
                        u = lO[l],
                        c = uO[l],
                        p = lO[1 - l],
                        h = uO[1 - l];
                    r && hM("horizontal", a, e.get("selectorItemGap", !0));
                    var d = e.get("selectorButtonGap", !0),
                        f = a.getBoundingRect(),
                        g = [-f.x, -f.y],
                        m = s(n);
                    r && (m[u] = n[u] - f[u] - d);
                    var y = this._layoutContentAndController(e, i, m, l, u, p, h, c);
                    if (r) {
                        if ("end" === o) g[l] += y[u] + d;
                        else {
                            var v = f[u] + d;
                            g[l] -= v, y[c] -= v
                        }
                        y[u] += f[u] + d, g[1 - l] += y[h] + y[p] / 2 - f[p] / 2, y[p] = Math.max(y[p], f[p]), y[h] = Math.min(y[h], f[h] + g[1 - l]), a.x = g[0], a.y = g[1], a.markRedraw()
                    }
                    return y
                }, n.prototype._layoutContentAndController = function (e, t, n, i, r, o, a, s) {
                    var l = this.getContentGroup(),
                        u = this._containerGroup,
                        c = this._controllerGroup;
                    hM(e.get("orient"), l, e.get("itemGap"), i ? n.width : null, i ? null : n.height), hM("horizontal", c, e.get("pageButtonItemGap", !0));
                    var p = l.getBoundingRect(),
                        h = c.getBoundingRect(),
                        d = this._showController = p[r] > n[r],
                        f = [-p.x, -p.y];
                    t || (f[i] = l[s]);
                    var g = [0, 0],
                        m = [-h.x, -h.y],
                        y = B(e.get("pageButtonGap", !0), e.get("itemGap", !0));
                    if (d) {
                        var v = e.get("pageButtonPosition", !0);
                        "end" === v ? m[i] += n[r] - h[r] : g[i] += h[r] + y
                    }
                    m[1 - i] += p[o] / 2 - h[o] / 2, l.setPosition(f), u.setPosition(g), c.setPosition(m);
                    var x = {
                        x: 0,
                        y: 0
                    };
                    if (x[r] = d ? n[r] : p[r], x[o] = Math.max(p[o], h[o]), x[a] = Math.min(0, h[a] + m[1 - i]), u.__rectSize = n[r], d) {
                        var _ = {
                            x: 0,
                            y: 0
                        };
                        _[r] = Math.max(n[r] - h[r] - y, 0), _[o] = x[o], u.setClipPath(new WS({
                            shape: _
                        })), u.__rectSize = _[r]
                    } else c.eachChild(function (e) {
                        e.attr({
                            invisible: !0,
                            silent: !0
                        })
                    });
                    var w = this._getPageInfo(e);
                    return null != w.pageIndex && Ta(l, {
                        x: w.contentPosition[0],
                        y: w.contentPosition[1]
                    }, d ? e : null), this._updatePageInfoView(e, w), x
                }, n.prototype._pageGo = function (e, t, n) {
                    var i = this._getPageInfo(t)[e];
                    null != i && n.dispatchAction({
                        type: "legendScroll",
                        scrollDataIndex: i,
                        legendId: t.id
                    })
                }, n.prototype._updatePageInfoView = function (e, t) {
                    var n = this._controllerGroup;
                    m(["pagePrev", "pageNext"], function (i) {
                        var r = i + "DataIndex",
                            o = null != t[r],
                            a = n.childOfName(i);
                        a && (a.setStyle("fill", o ? e.get("pageIconColor", !0) : e.get("pageIconInactiveColor", !0)), a.cursor = o ? "pointer" : "default")
                    });
                    var i = n.childOfName("pageText"),
                        r = e.get("pageFormatter"),
                        o = t.pageIndex,
                        a = null != o ? o + 1 : 0,
                        s = t.pageCount;
                    i && r && i.setStyle("text", M(r) ? r.replace("{current}", null == a ? "" : a + "").replace("{total}", null == s ? "" : s + "") : r({
                        current: a,
                        total: s
                    }))
                }, n.prototype._getPageInfo = function (e) {
                    function t(e) {
                        if (e) {
                            var t = e.getBoundingRect(),
                                n = t[l] + e[l];
                            return {
                                s: n,
                                e: n + t[s],
                                i: e.__legendDataIndex
                            }
                        }
                    }

                    function n(e, t) {
                        return e.e >= t && e.s <= t + o
                    }
                    var i = e.get("scrollDataIndex", !0),
                        r = this.getContentGroup(),
                        o = this._containerGroup.__rectSize,
                        a = e.getOrient().index,
                        s = lO[a],
                        l = uO[a],
                        u = this._findTargetItemIndex(i),
                        c = r.children(),
                        p = c[u],
                        h = c.length,
                        d = h ? 1 : 0,
                        f = {
                            contentPosition: [r.x, r.y],
                            pageCount: d,
                            pageIndex: d - 1,
                            pagePrevDataIndex: null,
                            pageNextDataIndex: null
                        };
                    if (!p) return f;
                    var g = t(p);
                    f.contentPosition[a] = -g.s;
                    for (var m = u + 1, y = g, v = g, x = null; h >= m; ++m) x = t(c[m]), (!x && v.e > y.s + o || x && !n(x, y.s)) && (y = v.i > y.i ? v : x, y && (null == f.pageNextDataIndex && (f.pageNextDataIndex = y.i), ++f.pageCount)), v = x;
                    for (m = u - 1, y = g, v = g, x = null; m >= -1; --m) x = t(c[m]), x && n(v, x.s) || !(y.i < v.i) || (v = y, null == f.pagePrevDataIndex && (f.pagePrevDataIndex = y.i), ++f.pageCount, ++f.pageIndex), y = x;
                    return f
                }, n.prototype._findTargetItemIndex = function (e) {
                    if (!this._showController) return 0;
                    var t, n, i = this.getContentGroup();
                    return i.eachChild(function (i, r) {
                        var o = i.__legendDataIndex;
                        null == n && null != o && (n = r), o === e && (t = r)
                    }), null != t ? t : n
                }, n.type = "legend.scroll", n
            }(oO);
        cd(Dy);
        var pO = Ui(),
            hO = s,
            dO = o_,
            fO = function () {
                function e() {
                    this._dragging = !1, this.animationThreshold = 15
                }
                return e.prototype.render = function (e, t, n, i) {
                    var r = t.get("value"),
                        o = t.get("status");
                    if (this._axisModel = e, this._axisPointerModel = t, this._api = n, i || this._lastValue !== r || this._lastStatus !== o) {
                        this._lastValue = r, this._lastStatus = o;
                        var a = this._group,
                            s = this._handle;
                        if (!o || "hide" === o) return a && a.hide(), void(s && s.hide());
                        a && a.show(), s && s.show();
                        var l = {};
                        this.makeElOption(l, r, e, t, n);
                        var u = l.graphicKey;
                        u !== this._lastGraphicKey && this.clear(n), this._lastGraphicKey = u;
                        var c = this._moveAnimation = this.determineAnimation(e, t);
                        if (a) {
                            var p = S(Ay, t, c);
                            this.updatePointerEl(a, l, p), this.updateLabelEl(a, l, p, t)
                        } else a = this._group = new gb, this.createPointerEl(a, l, e, t), this.createLabelEl(a, l, e, t), n.getZr().add(a);
                        Oy(a, t, !0), this._renderHandle(r)
                    }
                }, e.prototype.remove = function (e) {
                    this.clear(e)
                }, e.prototype.dispose = function (e) {
                    this.clear(e)
                }, e.prototype.determineAnimation = function (e, t) {
                    var n = t.get("animation"),
                        i = e.axis,
                        r = "category" === i.type,
                        o = t.get("snap");
                    if (!o && !r) return !1;
                    if ("auto" === n || null == n) {
                        var a = this.animationThreshold;
                        if (r && i.getBandWidth() > a) return !0;
                        if (o) {
                            var s = ly(e).seriesDataCount,
                                l = i.getExtent();
                            return Math.abs(l[0] - l[1]) / s > a
                        }
                        return !1
                    }
                    return !0 === n
                }, e.prototype.makeElOption = function () {}, e.prototype.createPointerEl = function (e, t) {
                    var n = t.pointer;
                    if (n) {
                        var i = pO(e).pointerEl = new TC[n.type](hO(t.pointer));
                        e.add(i)
                    }
                }, e.prototype.createLabelEl = function (e, t, n, i) {
                    if (t.label) {
                        var r = pO(e).labelEl = new US(hO(t.label));
                        e.add(r), Ly(r, i)
                    }
                }, e.prototype.updatePointerEl = function (e, t, n) {
                    var i = pO(e).pointerEl;
                    i && t.pointer && (i.setStyle(t.pointer.style), n(i, {
                        shape: t.pointer.shape
                    }))
                }, e.prototype.updateLabelEl = function (e, t, n, i) {
                    var r = pO(e).labelEl;
                    r && (r.setStyle(t.label.style), n(r, {
                        x: t.label.x,
                        y: t.label.y
                    }), Ly(r, i))
                }, e.prototype._renderHandle = function (e) {
                    if (!this._dragging && this.updateHandleTransform) {
                        var t, n = this._axisPointerModel,
                            i = this._api.getZr(),
                            r = this._handle,
                            o = n.getModel("handle"),
                            a = n.get("status");
                        if (!o.get("show") || !a || "hide" === a) return r && i.remove(r), void(this._handle = null);
                        this._handle || (t = !0, r = this._handle = Za(o.get("icon"), {
                            cursor: "move",
                            draggable: !0,
                            onmousemove: function (e) {
                                M_(e.event)
                            },
                            onmousedown: dO(this._onHandleDragMove, this, 0, 0),
                            drift: dO(this._onHandleDragMove, this),
                            ondragend: dO(this._onHandleDragEnd, this)
                        }), i.add(r)), Oy(r, n, !1), r.setStyle(o.getItemStyle(null, ["color", "borderColor", "borderWidth", "opacity", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"]));
                        var s = o.get("size");
                        T(s) || (s = [s, s]), r.scaleX = s[0] / 2, r.scaleY = s[1] / 2, sc(this, "_doDispatchAxisPointer", o.get("throttle") || 0, "fixRate"), this._moveHandleToValue(e, t)
                    }
                }, e.prototype._moveHandleToValue = function (e, t) {
                    Ay(this._axisPointerModel, !t && this._moveAnimation, this._handle, Ny(this.getHandleTransform(e, this._axisModel, this._axisPointerModel)))
                }, e.prototype._onHandleDragMove = function (e, t) {
                    var n = this._handle;
                    if (n) {
                        this._dragging = !0;
                        var i = this.updateHandleTransform(Ny(n), [e, t], this._axisModel, this._axisPointerModel);
                        this._payloadInfo = i, n.stopAnimation(), n.attr(Ny(i)), pO(n).lastProp = null, this._doDispatchAxisPointer()
                    }
                }, e.prototype._doDispatchAxisPointer = function () {
                    var e = this._handle;
                    if (e) {
                        var t = this._payloadInfo,
                            n = this._axisModel;
                        this._api.dispatchAction({
                            type: "updateAxisPointer",
                            x: t.cursorPoint[0],
                            y: t.cursorPoint[1],
                            tooltipOption: t.tooltipOption,
                            axesInfo: [{
                                axisDim: n.axis.dim,
                                axisIndex: n.componentIndex
                            }]
                        })
                    }
                }, e.prototype._onHandleDragEnd = function () {
                    this._dragging = !1;
                    var e = this._handle;
                    if (e) {
                        var t = this._axisPointerModel.get("value");
                        this._moveHandleToValue(t), this._api.dispatchAction({
                            type: "hideTip"
                        })
                    }
                }, e.prototype.clear = function (e) {
                    this._lastValue = null, this._lastStatus = null;
                    var t = e.getZr(),
                        n = this._group,
                        i = this._handle;
                    t && n && (this._lastGraphicKey = null, n && t.remove(n), i && t.remove(i), this._group = null, this._handle = null, this._payloadInfo = null), lc(this, "_doDispatchAxisPointer")
                }, e.prototype.doClear = function () {}, e.prototype.buildLabel = function (e, t, n) {
                    return n = n || 0, {
                        x: e[n],
                        y: e[1 - n],
                        width: t[n],
                        height: t[1 - n]
                    }
                }, e
            }(),
            gO = function (e) {
                function n() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return t(n, e), n.prototype.makeElOption = function (e, t, n, i, r) {
                    var o = n.axis,
                        a = o.grid,
                        s = i.get("type"),
                        l = Wy(a, o).getOtherAxis(o).getGlobalExtent(),
                        u = o.toGlobalCoord(o.dataToCoord(t, !0));
                    if (s && "none" !== s) {
                        var c = Ey(i),
                            p = mO[s](o, u, l);
                        p.style = c, e.graphicKey = p.type, e.pointer = p
                    }
                    var h = Bm(a.model, n);
                    Hy(t, e, h, n, i, r)
                }, n.prototype.getHandleTransform = function (e, t, n) {
                    var i = Bm(t.axis.grid.model, t, {
                        labelInside: !1
                    });
                    i.labelMargin = n.get(["handle", "margin"]);
                    var r = Fy(t.axis, e, i);
                    return {
                        x: r[0],
                        y: r[1],
                        rotation: i.rotation + (i.labelDirection < 0 ? Math.PI : 0)
                    }
                }, n.prototype.updateHandleTransform = function (e, t, n) {
                    var i = n.axis,
                        r = i.grid,
                        o = i.getGlobalExtent(!0),
                        a = Wy(r, i).getOtherAxis(i).getGlobalExtent(),
                        s = "x" === i.dim ? 0 : 1,
                        l = [e.x, e.y];
                    l[s] += t[s], l[s] = Math.min(o[1], l[s]), l[s] = Math.max(o[0], l[s]);
                    var u = (a[1] + a[0]) / 2,
                        c = [u, u];
                    c[s] = l[s];
                    var p = [{
                        verticalAlign: "middle"
                    }, {
                        align: "center"
                    }];
                    return {
                        x: l[0],
                        y: l[1],
                        rotation: e.rotation,
                        cursorPoint: c,
                        tooltipOption: p[s]
                    }
                }, n
            }(fO),
            mO = {
                line: function (e, t, n) {
                    var i = Gy([t, n[0]], [t, n[1]], jy(e));
                    return {
                        type: "Line",
                        subPixelOptimize: !0,
                        shape: i
                    }
                },
                shadow: function (e, t, n) {
                    var i = Math.max(1, e.getBandWidth()),
                        r = n[1] - n[0];
                    return {
                        type: "Rect",
                        shape: Vy([t - i / 2, n[0]], [i, r], jy(e))
                    }
                }
            },
            yO = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t
                }
                return t(n, e), n.type = "axisPointer", n.defaultOption = {
                    show: "auto",
                    z: 50,
                    type: "line",
                    snap: !1,
                    triggerTooltip: !0,
                    value: null,
                    status: null,
                    link: [],
                    animation: null,
                    animationDurationUpdate: 200,
                    lineStyle: {
                        color: "#B9BEC9",
                        width: 1,
                        type: "dashed"
                    },
                    shadowStyle: {
                        color: "rgba(210,219,238,0.2)"
                    },
                    label: {
                        show: !0,
                        formatter: null,
                        precision: "auto",
                        margin: 3,
                        color: "#fff",
                        padding: [5, 7, 5, 7],
                        backgroundColor: "auto",
                        borderColor: null,
                        borderWidth: 0,
                        borderRadius: 3
                    },
                    handle: {
                        show: !1,
                        icon: "M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z",
                        size: 45,
                        margin: 50,
                        color: "#333",
                        shadowBlur: 3,
                        shadowColor: "#aaa",
                        shadowOffsetX: 0,
                        shadowOffsetY: 2,
                        throttle: 40
                    }
                }, n
            }(fM),
            vO = Ui(),
            xO = m,
            _O = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t
                }
                return t(n, e), n.prototype.render = function (e, t, n) {
                    var i = t.getComponent("tooltip"),
                        r = e.get("triggerOn") || i && i.get("triggerOn") || "mousemove|click";
                    Xy("axisPointer", n, function (e, t, n) {
                        "none" !== r && ("leave" === e || r.indexOf(e) >= 0) && n({
                            type: "updateAxisPointer",
                            currTrigger: e,
                            x: t && t.offsetX,
                            y: t && t.offsetY
                        })
                    })
                }, n.prototype.remove = function (e, t) {
                    Ky("axisPointer", t)
                }, n.prototype.dispose = function (e, t) {
                    Ky("axisPointer", t)
                }, n.type = "axisPointer", n
            }(LI),
            wO = Ui(),
            bO = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t
                }
                return t(n, e), n.type = "tooltip", n.dependencies = ["axisPointer"], n.defaultOption = {
                    z: 60,
                    show: !0,
                    showContent: !0,
                    trigger: "item",
                    triggerOn: "mousemove|click",
                    alwaysShowContent: !1,
                    displayMode: "single",
                    renderMode: "auto",
                    confine: null,
                    showDelay: 0,
                    hideDelay: 100,
                    transitionDuration: .4,
                    enterable: !1,
                    backgroundColor: "#fff",
                    shadowBlur: 10,
                    shadowColor: "rgba(0, 0, 0, .2)",
                    shadowOffsetX: 1,
                    shadowOffsetY: 2,
                    borderRadius: 4,
                    borderWidth: 1,
                    padding: null,
                    extraCssText: "",
                    axisPointer: {
                        type: "line",
                        axis: "auto",
                        animation: "auto",
                        animationDurationUpdate: 200,
                        animationEasingUpdate: "exponentialOut",
                        crossStyle: {
                            color: "#999",
                            width: 1,
                            type: "dashed",
                            textStyle: {}
                        }
                    },
                    textStyle: {
                        color: "#666",
                        fontSize: 14
                    }
                }, n
            }(fM),
            SO = hv(["transform", "webkitTransform", "OTransform", "MozTransform", "msTransform"]),
            TO = hv(["webkitTransition", "transition", "OTransition", "MozTransition", "msTransition"]),
            CO = dv(TO, "transition"),
            MO = dv(SO, "transform"),
            IO = "position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;" + (zx.transform3dSupported ? "will-change:transform;" : ""),
            kO = function () {
                function e(e, t, n) {
                    if (this._show = !1, this._styleCoord = [0, 0, 0, 0], this._enterable = !0, this._firstShow = !0, this._longHide = !0, zx.wxa) return null;
                    var i = document.createElement("div");
                    i.domBelongToZr = !0, this.el = i;
                    var r = this._zr = t.getZr(),
                        o = this._appendToBody = n && n.appendToBody;
                    wv(this._styleCoord, r, o, t.getWidth() / 2, t.getHeight() / 2), o ? document.body.appendChild(i) : e.appendChild(i), this._container = e;
                    var a = this;
                    i.onmouseenter = function () {
                        a._enterable && (clearTimeout(a._hideTimeout), a._show = !0), a._inContent = !0
                    }, i.onmousemove = function (e) {
                        if (e = e || window.event, !a._enterable) {
                            var t = r.handler,
                                n = r.painter.getViewportRoot();
                            Ae(n, e, !0), t.dispatch("mousemove", e)
                        }
                    }, i.onmouseleave = function () {
                        a._inContent = !1, a._enterable && a._show && a.hideLater(a._hideDelay)
                    }
                }
                return e.prototype.update = function (e) {
                    var t = this._container,
                        n = fv(t, "position"),
                        i = t.style;
                    "absolute" !== i.position && "absolute" !== n && (i.position = "relative");
                    var r = e.get("alwaysShowContent");
                    r && this._moveIfResized(), this.el.className = e.get("className") || ""
                }, e.prototype.show = function (e, t) {
                    clearTimeout(this._hideTimeout), clearTimeout(this._longHideTimeout);
                    var n = this.el,
                        i = n.style,
                        r = this._styleCoord;
                    n.innerHTML ? i.cssText = IO + _v(e, !this._firstShow, this._longHide) + vv(r[0], r[1], !0) + "border-color:" + Qs(t) + ";" + (e.get("extraCssText") || "") + ";pointer-events:" + (this._enterable ? "auto" : "none") : i.display = "none", this._show = !0, this._firstShow = !1, this._longHide = !1
                }, e.prototype.setContent = function (e, t, n, i, r) {
                    var o = this.el;
                    if (null != e) {
                        var a = "";
                        if (M(r) && "item" === n.get("trigger") && !pv(n) && (a = mv(n, i, r)), M(e)) o.innerHTML = e + a;
                        else if (e) {
                            o.innerHTML = "", T(e) || (e = [e]);
                            for (var s = 0; s < e.length; s++) L(e[s]) && e[s].parentNode !== o && o.appendChild(e[s]);
                            if (a && o.childNodes.length) {
                                var l = document.createElement("div");
                                l.innerHTML = a, o.appendChild(l)
                            }
                        }
                    } else o.innerHTML = ""
                }, e.prototype.setEnterable = function (e) {
                    this._enterable = e
                }, e.prototype.getSize = function () {
                    var e = this.el;
                    return [e.offsetWidth, e.offsetHeight]
                }, e.prototype.moveTo = function (e, t) {
                    var n = this._styleCoord;
                    if (wv(n, this._zr, this._appendToBody, e, t), null != n[0] && null != n[1]) {
                        var i = this.el.style,
                            r = vv(n[0], n[1]);
                        m(r, function (e) {
                            i[e[0]] = e[1]
                        })
                    }
                }, e.prototype._moveIfResized = function () {
                    var e = this._styleCoord[2],
                        t = this._styleCoord[3];
                    this.moveTo(e * this._zr.getWidth(), t * this._zr.getHeight())
                }, e.prototype.hide = function () {
                    var e = this,
                        t = this.el.style;
                    t.visibility = "hidden", t.opacity = "0", zx.transform3dSupported && (t.willChange = ""), this._show = !1, this._longHideTimeout = setTimeout(function () {
                        return e._longHide = !0
                    }, 500)
                }, e.prototype.hideLater = function (e) {
                    !this._show || this._inContent && this._enterable || (e ? (this._hideDelay = e, this._show = !1, this._hideTimeout = setTimeout(o_(this.hide, this), e)) : this.hide())
                }, e.prototype.isShow = function () {
                    return this._show
                }, e.prototype.dispose = function () {
                    this.el.parentNode.removeChild(this.el)
                }, e
            }(),
            DO = function () {
                function e(e) {
                    this._show = !1, this._styleCoord = [0, 0, 0, 0], this._enterable = !0, this._zr = e.getZr(), Tv(this._styleCoord, this._zr, e.getWidth() / 2, e.getHeight() / 2)
                }
                return e.prototype.update = function (e) {
                    var t = e.get("alwaysShowContent");
                    t && this._moveIfResized()
                }, e.prototype.show = function () {
                    this._hideTimeout && clearTimeout(this._hideTimeout), this.el.show(), this._show = !0
                }, e.prototype.setContent = function (e, t, n, i) {
                    var r = this;
                    D(e) && Mi(""), this.el && this._zr.remove(this.el);
                    var o = n.getModel("textStyle");
                    this.el = new US({
                        style: {
                            rich: t.richTextStyles,
                            text: e,
                            lineHeight: 22,
                            borderWidth: 1,
                            borderColor: i,
                            textShadowColor: o.get("textShadowColor"),
                            fill: n.get(["textStyle", "color"]),
                            padding: Wu(n, "richText"),
                            verticalAlign: "top",
                            align: "left"
                        },
                        z: n.get("z")
                    }), m(["backgroundColor", "borderRadius", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"], function (e) {
                        r.el.style[e] = n.get(e)
                    }), m(["textShadowBlur", "textShadowOffsetX", "textShadowOffsetY"], function (e) {
                        r.el.style[e] = o.get(e) || 0
                    }), this._zr.add(this.el);
                    var a = this;
                    this.el.on("mouseover", function () {
                        a._enterable && (clearTimeout(a._hideTimeout), a._show = !0), a._inContent = !0
                    }), this.el.on("mouseout", function () {
                        a._enterable && a._show && a.hideLater(a._hideDelay), a._inContent = !1
                    })
                }, e.prototype.setEnterable = function (e) {
                    this._enterable = e
                }, e.prototype.getSize = function () {
                    var e = this.el,
                        t = this.el.getBoundingRect(),
                        n = Sv(e.style);
                    return [t.width + n.left + n.right, t.height + n.top + n.bottom]
                }, e.prototype.moveTo = function (e, t) {
                    var n = this.el;
                    if (n) {
                        var i = this._styleCoord;
                        Tv(i, this._zr, e, t), e = i[0], t = i[1];
                        var r = n.style,
                            o = bv(r.borderWidth || 0),
                            a = Sv(r);
                        n.x = e + o + a.left, n.y = t + o + a.top, n.markRedraw()
                    }
                }, e.prototype._moveIfResized = function () {
                    var e = this._styleCoord[2],
                        t = this._styleCoord[3];
                    this.moveTo(e * this._zr.getWidth(), t * this._zr.getHeight())
                }, e.prototype.hide = function () {
                    this.el && this.el.hide(), this._show = !1
                }, e.prototype.hideLater = function (e) {
                    !this._show || this._inContent && this._enterable || (e ? (this._hideDelay = e, this._show = !1, this._hideTimeout = setTimeout(o_(this.hide, this), e)) : this.hide())
                }, e.prototype.isShow = function () {
                    return this._show
                }, e.prototype.dispose = function () {
                    this._zr.remove(this.el)
                }, e
            }(),
            AO = new WS({
                shape: {
                    x: -1,
                    y: -1,
                    width: 2,
                    height: 2
                }
            }),
            PO = function (e) {
                function n() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.type = n.type, t
                }
                return t(n, e), n.prototype.init = function (e, t) {
                    if (!zx.node && t.getDom()) {
                        var n = e.getComponent("tooltip"),
                            i = this._renderMode = Qi(n.get("renderMode"));
                        this._tooltipContent = "richText" === i ? new DO(t) : new kO(t.getDom(), t, {
                            appendToBody: n.get("appendToBody", !0)
                        })
                    }
                }, n.prototype.render = function (e, t, n) {
                    if (!zx.node && n.getDom()) {
                        this.group.removeAll(), this._tooltipModel = e, this._ecModel = t, this._api = n, this._alwaysShowContent = e.get("alwaysShowContent");
                        var i = this._tooltipContent;
                        i.update(e), i.setEnterable(e.get("enterable")), this._initGlobalListener(), this._keepShow(), "richText" !== this._renderMode && e.get("transitionDuration") ? sc(this, "_updatePosition", 50, "fixRate") : lc(this, "_updatePosition")
                    }
                }, n.prototype._initGlobalListener = function () {
                    var e = this._tooltipModel,
                        t = e.get("triggerOn");
                    Xy("itemTooltip", this._api, o_(function (e, n, i) {
                        "none" !== t && (t.indexOf(e) >= 0 ? this._tryShow(n, i) : "leave" === e && this._hide(i))
                    }, this))
                }, n.prototype._keepShow = function () {
                    var e = this._tooltipModel,
                        t = this._ecModel,
                        n = this._api,
                        i = e.get("triggerOn");
                    if (null != this._lastX && null != this._lastY && "none" !== i && "click" !== i) {
                        var r = this;
                        clearTimeout(this._refreshUpdateTimeout), this._refreshUpdateTimeout = setTimeout(function () {
                            !n.isDisposed() && r.manuallyShowTip(e, t, n, {
                                x: r._lastX,
                                y: r._lastY,
                                dataByCoordSys: r._lastDataByCoordSys
                            })
                        })
                    }
                }, n.prototype.manuallyShowTip = function (e, t, n, i) {
                    if (i.from !== this.uid && !zx.node && n.getDom()) {
                        var r = Mv(i, n);
                        this._ticket = "";
                        var o = i.dataByCoordSys,
                            a = Pv(i, t, n);
                        if (a) {
                            var s = a.el.getBoundingRect().clone();
                            s.applyTransform(a.el.transform), this._tryShow({
                                offsetX: s.x + s.width / 2,
                                offsetY: s.y + s.height / 2,
                                target: a.el,
                                position: i.position,
                                positionDefault: "bottom"
                            }, r)
                        } else if (i.tooltip && null != i.x && null != i.y) {
                            var l = AO;
                            l.x = i.x, l.y = i.y, l.update(), KS(l).tooltipConfig = {
                                name: null,
                                option: i.tooltip
                            }, this._tryShow({
                                offsetX: i.x,
                                offsetY: i.y,
                                target: l
                            }, r)
                        } else if (o) this._tryShow({
                            offsetX: i.x,
                            offsetY: i.y,
                            position: i.position,
                            dataByCoordSys: o,
                            tooltipOption: i.tooltipOption
                        }, r);
                        else if (null != i.seriesIndex) {
                            if (this._manuallyAxisShowTip(e, t, n, i)) return;
                            var u = Jy(i, t),
                                c = u.point[0],
                                p = u.point[1];
                            null != c && null != p && this._tryShow({
                                offsetX: c,
                                offsetY: p,
                                target: u.el,
                                position: i.position,
                                positionDefault: "bottom"
                            }, r)
                        } else null != i.x && null != i.y && (n.dispatchAction({
                            type: "updateAxisPointer",
                            x: i.x,
                            y: i.y
                        }), this._tryShow({
                            offsetX: i.x,
                            offsetY: i.y,
                            position: i.position,
                            target: n.getZr().findHover(i.x, i.y).target
                        }, r))
                    }
                }, n.prototype.manuallyHideTip = function (e, t, n, i) {
                    var r = this._tooltipContent;
                    !this._alwaysShowContent && this._tooltipModel && r.hideLater(this._tooltipModel.get("hideDelay")), this._lastX = this._lastY = this._lastDataByCoordSys = null, i.from !== this.uid && this._hide(Mv(i, n))
                }, n.prototype._manuallyAxisShowTip = function (e, t, n, i) {
                    var r = i.seriesIndex,
                        o = i.dataIndex,
                        a = t.getComponent("axisPointer").coordSysAxesInfo;
                    if (null != r && null != o && null != a) {
                        var s = t.getSeriesByIndex(r);
                        if (s) {
                            var l = s.getData(),
                                u = Cv([l.getItemModel(o), s, (s.coordinateSystem || {}).model], this._tooltipModel);
                            if ("axis" === u.get("trigger")) return n.dispatchAction({
                                type: "updateAxisPointer",
                                seriesIndex: r,
                                dataIndex: o,
                                position: i.position
                            }), !0
                        }
                    }
                }, n.prototype._tryShow = function (e, t) {
                    var n = e.target,
                        i = this._tooltipModel;
                    if (i) {
                        this._lastX = e.offsetX, this._lastY = e.offsetY;
                        var r = e.dataByCoordSys;
                        if (r && r.length) this._showAxisTooltip(r, e);
                        else if (n) {
                            var o, a;
                            this._lastDataByCoordSys = null, Ic(n, function (e) {
                                return null != KS(e).dataIndex ? (o = e, !0) : null != KS(e).tooltipConfig ? (a = e, !0) : void 0
                            }, !0), o ? this._showSeriesItemTooltip(e, o, t) : a ? this._showComponentItemTooltip(e, a, t) : this._hide(t)
                        } else this._lastDataByCoordSys = null, this._hide(t)
                    }
                }, n.prototype._showOrMove = function (e, t) {
                    var n = e.get("showDelay");
                    t = o_(t, this), clearTimeout(this._showTimout), n > 0 ? this._showTimout = setTimeout(t, n) : t()
                }, n.prototype._showAxisTooltip = function (e, t) {
                    var n = this._ecModel,
                        i = this._tooltipModel,
                        r = [t.offsetX, t.offsetY],
                        o = Cv([t.tooltipOption], i),
                        a = this._renderMode,
                        s = [],
                        l = Du("section", {
                            blocks: [],
                            noHeader: !0
                        }),
                        u = [],
                        p = new kI;
                    m(e, function (e) {
                        m(e.dataByAxis, function (e) {
                            var t = n.getComponent(e.axisDim + "Axis", e.axisIndex),
                                r = e.value;
                            if (t && null != r) {
                                var o = By(r, t.axis, n, e.seriesDataIndices, e.valueLabelOpt),
                                    h = Du("section", {
                                        header: o,
                                        noHeader: !W(o),
                                        sortBlocks: !0,
                                        blocks: []
                                    });
                                l.blocks.push(h), m(e.seriesDataIndices, function (l) {
                                    var d = n.getSeriesByIndex(l.seriesIndex),
                                        f = l.dataIndexInside,
                                        g = d.getDataParams(f);
                                    if (!(g.dataIndex < 0)) {
                                        g.axisDim = e.axisDim, g.axisIndex = e.axisIndex, g.axisType = e.axisType, g.axisId = e.axisId, g.axisValue = ed(t.axis, {
                                            value: r
                                        }), g.axisValueLabel = o, g.marker = p.makeTooltipMarker("item", Qs(g.color), a);
                                        var m = uu(d.formatTooltip(f, !0, null)),
                                            y = m.frag;
                                        if (y) {
                                            var v = Cv([d], i).get("valueFormatter");
                                            h.blocks.push(v ? c({
                                                valueFormatter: v
                                            }, y) : y)
                                        }
                                        m.text && u.push(m.text), s.push(g)
                                    }
                                })
                            }
                        })
                    }), l.blocks.reverse(), u.reverse();
                    var h = t.position,
                        d = o.get("order"),
                        f = Eu(l, p, a, d, n.get("useUTC"), o.get("textStyle"));
                    f && u.unshift(f);
                    var g = "richText" === a ? "\n\n" : "<br/>",
                        y = u.join(g);
                    this._showOrMove(o, function () {
                        this._updateContentNotChangedOnAxis(e, s) ? this._updatePosition(o, h, r[0], r[1], this._tooltipContent, s) : this._showTooltipContent(o, y, s, Math.random() + "", r[0], r[1], h, null, p)
                    })
                }, n.prototype._showSeriesItemTooltip = function (e, t, n) {
                    var i = this._ecModel,
                        r = KS(t),
                        o = r.seriesIndex,
                        a = i.getSeriesByIndex(o),
                        s = r.dataModel || a,
                        l = r.dataIndex,
                        u = r.dataType,
                        p = s.getData(u),
                        h = this._renderMode,
                        d = e.positionDefault,
                        f = Cv([p.getItemModel(l), s, a && (a.coordinateSystem || {}).model], this._tooltipModel, d ? {
                            position: d
                        } : null),
                        g = f.get("trigger");
                    if (null == g || "item" === g) {
                        var m = s.getDataParams(l, u),
                            y = new kI;
                        m.marker = y.makeTooltipMarker("item", Qs(m.color), h);
                        var v = uu(s.formatTooltip(l, !1, u)),
                            x = f.get("order"),
                            _ = f.get("valueFormatter"),
                            w = v.frag,
                            b = w ? Eu(_ ? c({
                                valueFormatter: _
                            }, w) : w, y, h, x, i.get("useUTC"), f.get("textStyle")) : v.text,
                            S = "item_" + s.name + "_" + l;
                        this._showOrMove(f, function () {
                            this._showTooltipContent(f, b, m, S, e.offsetX, e.offsetY, e.position, e.target, y)
                        }), n({
                            type: "showTip",
                            dataIndexInside: l,
                            dataIndex: p.getRawIndex(l),
                            seriesIndex: o,
                            from: this.uid
                        })
                    }
                }, n.prototype._showComponentItemTooltip = function (e, t, n) {
                    var i = KS(t),
                        r = i.tooltipConfig,
                        o = r.option || {};
                    if (M(o)) {
                        var a = o;
                        o = {
                            content: a,
                            formatter: a
                        }
                    }
                    var l = [o],
                        u = this._ecModel.getComponent(i.componentMainType, i.componentIndex);
                    u && l.push(u), l.push({
                        formatter: o.content
                    });
                    var c = e.positionDefault,
                        p = Cv(l, this._tooltipModel, c ? {
                            position: c
                        } : null),
                        h = p.get("content"),
                        d = Math.random() + "",
                        f = new kI;
                    this._showOrMove(p, function () {
                        var n = s(p.get("formatterParams") || {});
                        this._showTooltipContent(p, h, n, d, e.offsetX, e.offsetY, e.position, t, f)
                    }), n({
                        type: "showTip",
                        from: this.uid
                    })
                }, n.prototype._showTooltipContent = function (e, t, n, i, r, o, a, s, l) {
                    if (this._ticket = "", e.get("showContent") && e.get("show")) {
                        var u = this._tooltipContent;
                        u.setEnterable(e.get("enterable"));
                        var c = e.get("formatter");
                        a = a || e.get("position");
                        var p = t,
                            h = this._getNearestPoint([r, o], n, e.get("trigger"), e.get("borderColor")),
                            d = h.color;
                        if (c)
                            if (M(c)) {
                                var f = e.ecModel.get("useUTC"),
                                    g = T(n) ? n[0] : n,
                                    m = g && g.axisType && g.axisType.indexOf("time") >= 0;
                                p = c, m && (p = Is(g.axisValue, p, f)), p = Zs(p, n, !0)
                            } else if (C(c)) {
                            var y = o_(function (t, i) {
                                t === this._ticket && (u.setContent(i, l, e, d, a), this._updatePosition(e, a, r, o, u, n, s))
                            }, this);
                            this._ticket = i, p = c(n, i, y)
                        } else p = c;
                        u.setContent(p, l, e, d, a), u.show(e, d), this._updatePosition(e, a, r, o, u, n, s)
                    }
                }, n.prototype._getNearestPoint = function (e, t, n, i) {
                    return "axis" === n || T(t) ? {
                        color: i || ("html" === this._renderMode ? "#fff" : "none")
                    } : T(t) ? void 0 : {
                        color: i || t.color || t.borderColor
                    }
                }, n.prototype._updatePosition = function (e, t, n, i, r, o, a) {
                    var s = this._api.getWidth(),
                        l = this._api.getHeight();
                    t = t || e.get("position");
                    var u = r.getSize(),
                        c = e.get("align"),
                        p = e.get("verticalAlign"),
                        h = a && a.getBoundingRect().clone();
                    if (a && h.applyTransform(a.transform), C(t) && (t = t([n, i], o, r.el, h, {
                            viewSize: [s, l],
                            contentSize: u.slice()
                        })), T(t)) n = ri(t[0], s), i = ri(t[1], l);
                    else if (D(t)) {
                        var d = t;
                        d.width = u[0], d.height = u[1];
                        var f = nl(d, {
                            width: s,
                            height: l
                        });
                        n = f.x, i = f.y, c = null, p = null
                    } else if (M(t) && a) {
                        var g = Dv(t, h, u, e.get("borderWidth"));
                        n = g[0], i = g[1]
                    } else {
                        g = Iv(n, i, r, s, l, c ? null : 20, p ? null : 20);
                        n = g[0], i = g[1]
                    }
                    if (c && (n -= Av(c) ? u[0] / 2 : "right" === c ? u[0] : 0), p && (i -= Av(p) ? u[1] / 2 : "bottom" === p ? u[1] : 0), pv(e)) {
                        g = kv(n, i, r, s, l);
                        n = g[0], i = g[1]
                    }
                    r.moveTo(n, i)
                }, n.prototype._updateContentNotChangedOnAxis = function (e, t) {
                    var n = this._lastDataByCoordSys,
                        i = this._cbParamsList,
                        r = !!n && n.length === e.length;
                    return r && m(n, function (n, o) {
                        var a = n.dataByAxis || [],
                            s = e[o] || {},
                            l = s.dataByAxis || [];
                        r = r && a.length === l.length, r && m(a, function (e, n) {
                            var o = l[n] || {},
                                a = e.seriesDataIndices || [],
                                s = o.seriesDataIndices || [];
                            r = r && e.value === o.value && e.axisType === o.axisType && e.axisId === o.axisId && a.length === s.length, r && m(a, function (e, t) {
                                var n = s[t];
                                r = r && e.seriesIndex === n.seriesIndex && e.dataIndex === n.dataIndex
                            }), i && m(e.seriesDataIndices, function (e) {
                                var n = e.seriesIndex,
                                    o = t[n],
                                    a = i[n];
                                o && a && a.data !== o.data && (r = !1)
                            })
                        })
                    }), this._lastDataByCoordSys = e, this._cbParamsList = t, !!r
                }, n.prototype._hide = function (e) {
                    this._lastDataByCoordSys = null, e({
                        type: "hideTip",
                        from: this.uid
                    })
                }, n.prototype.dispose = function (e, t) {
                    !zx.node && t.getDom() && (lc(this, "_updatePosition"), this._tooltipContent.dispose(), Ky("itemTooltip", t))
                }, n.type = "tooltip", n
            }(LI);
        cd(Lv);
        var LO = Math.sin,
            NO = Math.cos,
            OO = Math.PI,
            EO = 2 * Math.PI,
            RO = 180 / OO,
            zO = function () {
                function e() {}
                return e.prototype.reset = function (e) {
                    this._start = !0, this._d = [], this._str = "", this._p = Math.pow(10, e || 4)
                }, e.prototype.moveTo = function (e, t) {
                    this._add("M", e, t)
                }, e.prototype.lineTo = function (e, t) {
                    this._add("L", e, t)
                }, e.prototype.bezierCurveTo = function (e, t, n, i, r, o) {
                    this._add("C", e, t, n, i, r, o)
                }, e.prototype.quadraticCurveTo = function (e, t, n, i) {
                    this._add("Q", e, t, n, i)
                }, e.prototype.arc = function (e, t, n, i, r, o) {
                    this.ellipse(e, t, n, n, 0, i, r, o)
                }, e.prototype.ellipse = function (e, t, n, i, r, o, a, s) {
                    var l = a - o,
                        u = !s,
                        c = Math.abs(l),
                        p = Ut(c - EO) || (u ? l >= EO : -l >= EO),
                        h = l > 0 ? l % EO : l % EO + EO,
                        d = !1;
                    d = !!p || !Ut(c) && h >= OO == !!u;
                    var f = e + n * NO(o),
                        g = t + i * LO(o);
                    this._start && this._add("M", f, g);
                    var m = Math.round(r * RO);
                    if (p) {
                        var y = 1 / this._p,
                            v = (u ? 1 : -1) * (EO - y);
                        this._add("A", n, i, m, 1, +u, e + n * NO(o + v), t + i * LO(o + v)), y > .01 && this._add("A", n, i, m, 0, +u, f, g)
                    } else {
                        var x = e + n * NO(a),
                            _ = t + i * LO(a);
                        this._add("A", n, i, m, +d, +u, x, _)
                    }
                }, e.prototype.rect = function (e, t, n, i) {
                    this._add("M", e, t), this._add("l", n, 0), this._add("l", 0, i), this._add("l", -n, 0), this._add("Z")
                }, e.prototype.closePath = function () {
                    this._d.length > 0 && this._add("Z")
                }, e.prototype._add = function (e) {
                    for (var t = [], n = this._p, i = 1; i < arguments.length; i++) {
                        var r = arguments[i];
                        if (isNaN(r)) return void(this._invalid = !0);
                        t.push(Math.round(r * n) / n)
                    }
                    this._d.push(e + t.join(" ")), this._start = "Z" === e
                }, e.prototype.generateStr = function () {
                    this._str = this._invalid ? "" : this._d.join(""), this._d = []
                }, e.prototype.getStr = function () {
                    return this._str
                }, e
            }(),
            BO = "none",
            FO = Math.round,
            HO = ["lineCap", "miterLimit", "lineJoin"],
            GO = y(HO, function (e) {
                return "stroke-" + e.toLowerCase()
            }),
            VO = "http://www.w3.org/2000/svg",
            WO = "http://www.w3.org/1999/xlink",
            jO = "http://www.w3.org/2000/xmlns/",
            XO = "http://www.w3.org/XML/1998/namespace",
            YO = {
                cubicIn: "0.32,0,0.67,0",
                cubicOut: "0.33,1,0.68,1",
                cubicInOut: "0.65,0,0.35,1",
                quadraticIn: "0.11,0,0.5,0",
                quadraticOut: "0.5,1,0.89,1",
                quadraticInOut: "0.45,0,0.55,1",
                quarticIn: "0.5,0,0.75,0",
                quarticOut: "0.25,1,0.5,1",
                quarticInOut: "0.76,0,0.24,1",
                quinticIn: "0.64,0,0.78,0",
                quinticOut: "0.22,1,0.36,1",
                quinticInOut: "0.83,0,0.17,1",
                sinusoidalIn: "0.12,0,0.39,0",
                sinusoidalOut: "0.61,1,0.88,1",
                sinusoidalInOut: "0.37,0,0.63,1",
                exponentialIn: "0.7,0,0.84,0",
                exponentialOut: "0.16,1,0.3,1",
                exponentialInOut: "0.87,0,0.13,1",
                circularIn: "0.55,0,1,0.45",
                circularOut: "0,0.55,0.45,1",
                circularInOut: "0.85,0,0.15,1"
            },
            UO = "transform-origin",
            qO = {
                fill: "fill",
                opacity: "opacity",
                lineWidth: "stroke-width",
                lineDashOffset: "stroke-dashoffset"
            },
            ZO = Math.round,
            $O = {
                circle: [rx(["cx", "cy", "r"])],
                polyline: [nx, ix],
                polygon: [nx, ix]
            },
            KO = 58,
            JO = 120,
            QO = zv("", ""),
            eE = 0,
            tE = function () {
                function e(e, t, n) {
                    if (this.type = "svg", this.refreshHover = Nx("refreshHover"), this.configLayer = Nx("configLayer"), this.storage = t, this._opts = n = c({}, n), this.root = e, this._id = "zr" + eE++, this._oldVNode = Wv(n.width, n.height), e && !n.ssr) {
                        var i = this._viewport = document.createElement("div");
                        i.style.cssText = "position:relative;overflow:hidden";
                        var r = this._svgDom = this._oldVNode.elm = Rv("svg");
                        Dx(null, this._oldVNode), i.appendChild(r), e.appendChild(i)
                    }
                    this.resize(n.width, n.height)
                }
                return e.prototype.getType = function () {
                    return this.type
                }, e.prototype.getViewportRoot = function () {
                    return this._viewport
                }, e.prototype.getViewportRootOffset = function () {
                    var e = this.getViewportRoot();
                    return e ? {
                        offsetLeft: e.offsetLeft || 0,
                        offsetTop: e.offsetTop || 0
                    } : void 0
                }, e.prototype.getSvgDom = function () {
                    return this._svgDom
                }, e.prototype.refresh = function () {
                    if (this.root) {
                        var e = this.renderToVNode({
                            willUpdate: !0
                        });
                        e.attrs.style = "position:absolute;left:0;top:0;user-select:none", Lx(this._oldVNode, e), this._oldVNode = e
                    }
                }, e.prototype.renderOneToVNode = function (e) {
                    return ux(e, Vv(this._id))
                }, e.prototype.renderToVNode = function (e) {
                    e = e || {};
                    var t = this.storage.getDisplayList(!0),
                        n = this._backgroundColor,
                        i = this._width,
                        r = this._height,
                        o = Vv(this._id);
                    o.animation = e.animation, o.willUpdate = e.willUpdate, o.compress = e.compress;
                    var a = [];
                    if (n && "none" !== n) {
                        var s = Yt(n),
                            l = s.color,
                            u = s.opacity;
                        this._bgVNode = zv("rect", "bg", {
                            width: i,
                            height: r,
                            x: "0",
                            y: "0",
                            id: "0",
                            fill: l,
                            "fill-opacity": u
                        }), a.push(this._bgVNode)
                    } else this._bgVNode = null;
                    var c = e.compress ? null : this._mainVNode = zv("g", "main", {}, []);
                    this._paintList(t, o, c ? c.children : a), c && a.push(c);
                    var p = y(w(o.defs), function (e) {
                        return o.defs[e]
                    });
                    if (p.length && a.push(zv("defs", "defs", {}, p)), e.animation) {
                        var h = Gv(o.cssNodes, o.cssAnims, {
                            newline: !0
                        });
                        if (h) {
                            var d = zv("style", "stl", {}, [], h);
                            a.push(d)
                        }
                    }
                    return Wv(i, r, a, e.useViewBox)
                }, e.prototype.renderToString = function (e) {
                    return e = e || {}, Hv(this.renderToVNode({
                        animation: B(e.cssAnimation, !0),
                        willUpdate: !1,
                        compress: !0,
                        useViewBox: B(e.useViewBox, !0)
                    }), {
                        newline: !0
                    })
                }, e.prototype.setBackgroundColor = function (e) {
                    this._backgroundColor = e;
                    var t = this._bgVNode;
                    if (t && t.elm) {
                        var n = Yt(e),
                            i = n.color,
                            r = n.opacity;
                        t.elm.setAttribute("fill", i), 1 > r && t.elm.setAttribute("fill-opacity", r)
                    }
                }, e.prototype.getSvgRoot = function () {
                    return this._mainVNode && this._mainVNode.elm
                }, e.prototype._paintList = function (e, t, n) {
                    for (var i, r, o = e.length, a = [], s = 0, l = 0, u = 0; o > u; u++) {
                        var c = e[u];
                        if (!c.invisible) {
                            var p = c.__clipPaths,
                                h = p && p.length || 0,
                                d = r && r.length || 0,
                                f = void 0;
                            for (f = Math.max(h - 1, d - 1); f >= 0 && (!p || !r || p[f] !== r[f]); f--);
                            for (var g = d - 1; g > f; g--) s--, i = a[s - 1];
                            for (var m = f + 1; h > m; m++) {
                                var y = {};
                                dx(p[m], y, t);
                                var v = zv("g", "clip-g-" + l++, y, []);
                                (i ? i.children : n).push(v), a[s++] = v, i = v
                            }
                            r = p;
                            var x = ux(c, t);
                            x && (i ? i.children : n).push(x)
                        }
                    }
                }, e.prototype.resize = function (e, t) {
                    var n = this._opts,
                        i = this.root,
                        r = this._viewport;
                    if (null != e && (n.width = e), null != t && (n.height = t), i && r && (r.style.display = "none", e = Bc(i, 0, n), t = Bc(i, 1, n), r.style.display = ""), this._width !== e || this._height !== t) {
                        if (this._width = e, this._height = t, r) {
                            var o = r.style;
                            o.width = e + "px", o.height = t + "px"
                        }
                        var a = this._svgDom;
                        a && (a.setAttribute("width", e), a.setAttribute("height", t))
                    }
                }, e.prototype.getWidth = function () {
                    return this._width
                }, e.prototype.getHeight = function () {
                    return this._height
                }, e.prototype.dispose = function () {
                    this.root && (this.root.innerHTML = ""), this._svgDom = this._viewport = this.storage = this._oldVNode = this._bgVNode = this._mainVNode = null
                }, e.prototype.clear = function () {
                    this._svgDom && (this._svgDom.innerHTML = null), this._oldVNode = null
                }, e.prototype.toDataURL = function (e) {
                    var t = encodeURIComponent(this.renderToString()),
                        n = "data:image/svg+xml;";
                    return e ? (t = Cw(t), t && n + "base64," + t) : n + "charset=UTF-8," + t
                }, e
            }();
        ti("svg", tE), e.version = Ek, e.dependencies = Rk, e.PRIORITY = Qk, e.init = _p,
            e.connect = wp, e.disConnect = bp, e.disconnect = WD, e.dispose = Sp, e.getInstanceByDom = Tp, e.getInstanceById = Cp, e.registerTheme = Mp, e.registerPreprocessor = Ip, e.registerProcessor = kp, e.registerPostInit = Dp, e.registerPostUpdate = Ap, e.registerUpdateLifecycle = Pp, e.registerAction = Lp, e.registerCoordinateSystem = Np, e.getCoordinateSystemDimensions = Op, e.registerLayout = Ep, e.registerVisual = Rp, e.registerLoading = Bp, e.setCanvasCreator = Fp, e.registerMap = Hp, e.getMap = Gp, e.registerTransform = XD, e.dataTool = QD, e.registerLocale = xs, e.zrender = _b, e.matrix = D_, e.vector = f_, e.zrUtil = u_, e.color = ww, e.helper = VA, e.number = JA, e.time = QA, e.graphic = eP, e.format = tP, e.util = nP, e.List = dA, e.ComponentModel = fM, e.ComponentView = LI, e.SeriesModel = PI, e.ChartView = EI, e.extendComponentModel = Rd, e.extendComponentView = zd, e.extendSeriesModel = Bd, e.extendChartView = Fd, e.throttle = ac, e.use = cd, e.setPlatformAPI = r, e.parseGeoJSON = xd, e.parseGeoJson = xd, e.env = zx, e.Model = HC, e.Axis = oP, e.innerDrawElementOnCanvas = op
    }),
    function (e, t) {
        "function" == typeof define && define.amd ? define(["exports", "echarts"], t) : "object" == typeof exports && "string" != typeof exports.nodeName ? t(exports, require("echarts")) : t({}, e.echarts)
    }(this, function (e, t) {
        var n = function (e) {
            "undefined" != typeof console && console && console.error && console.error(e)
        };
        t ? t.registerMap ? t.registerMap("world", {
            type: "FeatureCollection",
            crs: {
                type: "name",
                properties: {
                    name: "urn:ogc:def:crs:OGC:1.3:CRS84"
                }
            },
            features: [{
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [47.97822265625001, 7.9970703125],
                            [46.97822265625001, 7.9970703125],
                            [43.98378906250002, 9.008837890624989],
                            [43.482519531250006, 9.379492187499991],
                            [43.181640625, 9.879980468749991],
                            [42.84160156250002, 10.203076171874997],
                            [42.65644531250001, 10.6],
                            [42.92275390625002, 10.999316406249989],
                            [43.24599609375002, 11.499804687499989],
                            [43.85273437500001, 10.784277343749991],
                            [44.38652343750002, 10.430224609374989],
                            [44.94296875, 10.43671875],
                            [45.81669921875002, 10.835888671874997],
                            [46.565039062500006, 10.745996093749994],
                            [47.40498046875001, 11.174023437499997],
                            [48.01923828125001, 11.139355468749997],
                            [48.57255859375002, 11.320507812499997],
                            [48.938574218750006, 11.258447265624994],
                            [50.11005859375001, 11.529296875],
                            [50.79228515625002, 11.983691406249989],
                            [51.2548828125, 11.830712890624994],
                            [51.08427734375002, 11.335644531249997],
                            [51.140625, 10.656884765624994],
                            [51.031835937500006, 10.444775390624997],
                            [51.19296875, 10.554638671874997],
                            [51.390234375, 10.422607421875],
                            [50.93007812500002, 10.33554687499999],
                            [50.825, 9.428173828124997],
                            [50.10283203125002, 8.199804687499991],
                            [49.85205078125, 7.962548828124994],
                            [49.234960937500006, 6.77734375],
                            [49.04931640625, 6.173632812499989],
                            [47.97529296875001, 4.497021484374997],
                            [46.87880859375002, 3.28564453125],
                            [46.05117187500002, 2.475146484374989],
                            [44.92021484375002, 1.81015625],
                            [43.71757812500002, .857861328124997],
                            [41.97988281250002, -.973046875],
                            [41.53271484375, -1.6953125],
                            [41.521875, -1.572265625],
                            [41.42695312500001, -1.449511718750003],
                            [41.24980468750002, -1.220507812500003],
                            [40.97871093750001, -.870312500000011],
                            [40.964453125, 2.814648437499997],
                            [41.341796875, 3.20166015625],
                            [41.61347656250001, 3.590478515624994],
                            [41.88398437500001, 3.977734375],
                            [41.91533203125002, 4.031298828124989],
                            [42.02412109375001, 4.137939453125],
                            [42.85664062500001, 4.32421875],
                            [43.12568359375001, 4.644482421874997],
                            [43.58349609375, 4.85498046875],
                            [43.988867187500006, 4.950537109374991],
                            [44.940527343750006, 4.912011718749994],
                            [47.97822265625001, 7.9970703125]
                        ]
                    ]
                },
                properties: {
                    name: "Somalia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [9.579979133936737, 47.05856388629306],
                            [9.409458596647225, 47.02019676540292],
                            [9.46249431093294, 47.09010747968864],
                            [9.46249431093294, 47.19858962254578],
                            [9.527658197470123, 47.27026989773668],
                            [9.579979133936737, 47.05856388629306]
                        ]
                    ]
                },
                properties: {
                    name: "Liechtenstein",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-8.683349609375, 27.77800740805682],
                            [-13.038761787013554, 27.81190166624856],
                            [-12.948925781249926, 27.914160156250034],
                            [-11.552685546874955, 28.31010742187496],
                            [-10.486474609374994, 29.06494140625],
                            [-10.200585937499994, 29.380371093750057],
                            [-9.667089843749949, 30.10927734375005],
                            [-9.652929687499977, 30.447558593750045],
                            [-9.875488281249943, 30.717919921874966],
                            [-9.80869140624992, 31.42460937499996],
                            [-9.347460937499932, 32.086376953124955],
                            [-9.245849609375, 32.572460937499955],
                            [-8.512841796874994, 33.25244140625003],
                            [-6.900976562499949, 33.96904296874999],
                            [-6.353125, 34.77607421875001],
                            [-5.924804687499943, 35.78579101562502],
                            [-5.277832031249943, 35.90273437500002],
                            [-5.252685546874972, 35.61474609374997],
                            [-4.628320312499966, 35.206396484375006],
                            [-4.329980468749937, 35.161474609375006],
                            [-3.693261718749994, 35.27998046874998],
                            [-3.394726562499926, 35.21181640625005],
                            [-2.972216796874989, 35.40727539062499],
                            [-2.839941406249949, 35.127832031249994],
                            [-2.731396484374955, 35.13520507812498],
                            [-2.636816406249977, 35.11269531250002],
                            [-2.423730468749994, 35.12348632812498],
                            [-2.219628906249966, 35.10419921874998],
                            [-1.795605468749926, 34.751904296874955],
                            [-1.67919921875, 33.31865234375002],
                            [-1.550732421874955, 33.073583984375006],
                            [-1.510009765625, 32.877636718749955],
                            [-1.45, 32.784814453124966],
                            [-1.352148437499977, 32.70336914062497],
                            [-1.29638671875, 32.67568359375002],
                            [-1.188232421875, 32.608496093750006],
                            [-1.111035156249983, 32.55229492187502],
                            [-1.065527343749949, 32.46831054687496],
                            [-1.16259765625, 32.399169921875],
                            [-1.275341796874983, 32.089013671874966],
                            [-2.863427734374937, 32.07470703124997],
                            [-2.930859374999926, 32.04252929687499],
                            [-2.988232421874983, 31.874218749999983],
                            [-3.01738281249996, 31.834277343750017],
                            [-3.439794921874949, 31.704541015624983],
                            [-3.604589843749949, 31.686767578125],
                            [-3.700244140624989, 31.70009765625005],
                            [-3.768164062499977, 31.689550781250034],
                            [-3.837109374999983, 31.512353515624994],
                            [-3.833398437499937, 31.197802734375045],
                            [-3.626904296874955, 31.000927734374983],
                            [-4.148779296874977, 30.8095703125],
                            [-4.322851562500006, 30.698876953124994],
                            [-4.52915039062492, 30.62553710937499],
                            [-4.778515624999926, 30.552392578124994],
                            [-4.968261718749943, 30.465380859375045],
                            [-5.061914062499937, 30.326416015625057],
                            [-5.180126953124955, 30.166162109374994],
                            [-5.293652343749983, 30.058642578125045],
                            [-5.44877929687496, 29.956933593750023],
                            [-6.00429687499999, 29.83125],
                            [-6.479736328124943, 29.82036132812499],
                            [-6.520556640624989, 29.659863281249983],
                            [-6.59775390624992, 29.578955078125006],
                            [-6.635351562499949, 29.568798828124983],
                            [-6.755126953125, 29.583837890625034],
                            [-6.855566406249949, 29.601611328125017],
                            [-7.142431640624949, 29.61958007812504],
                            [-7.427685546874983, 29.425],
                            [-7.485742187499994, 29.392236328124994],
                            [-8.659912109375, 28.718603515625063],
                            [-8.683349609375, 27.900390625],
                            [-8.683349609375, 27.77800740805682]
                        ]
                    ]
                },
                properties: {
                    name: "Morocco",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-13.038761787013554, 27.81190166624856],
                            [-8.683349609375, 27.77800740805682],
                            [-8.683349609375, 27.65644531250004],
                            [-8.817822265624955, 27.65644531250004],
                            [-8.817822265624951, 27.656445312499997],
                            [-8.683349609375, 27.656445312499997],
                            [-8.683349609375, 27.2859375],
                            [-8.682861328125, 26.921337890624997],
                            [-8.6826171875, 26.72314453125],
                            [-8.682324218749983, 26.497705078124994],
                            [-8.68212890625, 26.273193359375],
                            [-8.68212890625, 26.10947265625],
                            [-8.682226562499977, 25.995507812499994],
                            [-12.016308593749983, 25.995410156250003],
                            [-12.016308593749983, 25.740136718749994],
                            [-12.016308593749983, 25.331689453124994],
                            [-12.016308593749983, 25.059375],
                            [-12.016308593749983, 24.923242187499994],
                            [-12.016308593749983, 24.378662109375],
                            [-12.016308593749983, 23.97021484375],
                            [-12.0234375, 23.467578125],
                            [-12.372900390624977, 23.318017578124994],
                            [-12.559375, 23.290820312500003],
                            [-12.620410156249989, 23.27133789062499],
                            [-13.031494140625, 23.000244140625],
                            [-13.153271484374983, 22.820507812499997],
                            [-13.12702845982141, 22.703770926339278],
                            [-13.136540684091575, 22.708182548616723],
                            [-13.094335937499977, 22.495996093749994],
                            [-13.051220703124983, 21.854785156250003],
                            [-13.041748046875, 21.713818359374997],
                            [-13.0322265625, 21.572070312500003],
                            [-13.025097656249983, 21.466796875],
                            [-13.016210937499977, 21.333935546874997],
                            [-15.231201171875, 21.331298828125],
                            [-16.964550781249983, 21.329248046874994],
                            [-17.06396484375, 20.89882812499999],
                            [-17.048046874999983, 20.80615234375],
                            [-17.098779296874994, 20.856884765624997],
                            [-16.930859374999983, 21.9],
                            [-16.35874023437495, 22.594531250000045],
                            [-16.21025390624999, 23.097900390625],
                            [-15.789257812499926, 23.792871093750023],
                            [-15.980712890624943, 23.670312500000023],
                            [-15.899316406249966, 23.844433593749955],
                            [-14.904296875000028, 24.719775390625017],
                            [-14.794921874999943, 25.404150390625006],
                            [-14.413867187499932, 26.25371093749999],
                            [-13.57578125, 26.735107421875],
                            [-13.175976562499983, 27.655712890624983],
                            [-13.038761787013554, 27.81190166624856]
                        ],
                        [
                            [-8.774365234374983, 27.460546875],
                            [-8.794873046874983, 27.120703125000034],
                            [-8.794873046874983, 27.120703125],
                            [-8.774365234374983, 27.460546875]
                        ]
                    ]
                },
                properties: {
                    name: "W. Sahara",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [21.5625, 42.247509765625],
                            [21.560839843750017, 42.24765625],
                            [21.389550781250023, 42.21982421875],
                            [21.28662109375, 42.100390625],
                            [21.05976562500001, 42.171289062499994],
                            [20.778125, 42.071044921875],
                            [20.725, 41.87353515625],
                            [20.566210937500017, 41.873681640624994],
                            [20.485449218750006, 42.223388671875],
                            [20.06396484375, 42.54726562499999],
                            [20.054296875, 42.760058593749996],
                            [20.344335937500006, 42.827929687499996],
                            [20.40996305279786, 42.84373166741877],
                            [20.344335937500063, 42.82792968750002],
                            [19.670996093750006, 43.163964843749994],
                            [19.21875, 43.449951171875],
                            [19.196484375000068, 43.48500976562502],
                            [19.19160156250004, 43.52104492187499],
                            [19.19433593749997, 43.533300781250006],
                            [19.495117187500057, 43.642871093750045],
                            [19.245019531249994, 43.96503906250004],
                            [19.583789062500017, 44.04345703125003],
                            [19.118457031250074, 44.359960937500006],
                            [19.348632812500057, 44.88090820312502],
                            [19.007128906250045, 44.86918945312502],
                            [19.062890625000023, 45.13720703125],
                            [19.4, 45.2125],
                            [19.004687500000074, 45.39951171875006],
                            [19.064257812500045, 45.51499023437506],
                            [18.839062499999983, 45.83574218750002],
                            [18.905371093750006, 45.931738281250034],
                            [19.421289062500023, 46.064453125],
                            [19.61347656250001, 46.169189453125],
                            [19.84443359375001, 46.145898437499966],
                            [19.934082031250057, 46.161474609375034],
                            [20.161425781250017, 46.14189453124996],
                            [20.210156250000068, 46.12602539062502],
                            [20.241796875000034, 46.10859375000001],
                            [20.301367187500006, 46.05068359375002],
                            [20.35859375000004, 45.975488281249994],
                            [20.581152343749977, 45.86948242187506],
                            [20.65273437499999, 45.779394531250006],
                            [20.709277343750074, 45.735253906249994],
                            [20.727832031250017, 45.73740234374998],
                            [20.746875, 45.74897460937501],
                            [20.76015625000005, 45.75810546875002],
                            [20.775, 45.74980468750002],
                            [20.794042968750006, 45.467871093750034],
                            [21.431445312500017, 45.192529296874994],
                            [21.465429687500006, 45.171875],
                            [21.357031250000034, 44.99077148437502],
                            [21.532324218750063, 44.900683593750045],
                            [21.519921875000023, 44.88081054687498],
                            [21.442187500000074, 44.87338867187498],
                            [21.384375, 44.87006835937501],
                            [21.357910156250057, 44.86181640625003],
                            [21.36005859375004, 44.82666015624997],
                            [21.52314453125004, 44.79008789062499],
                            [21.63613281250005, 44.71044921875],
                            [21.909277343750034, 44.666113281250034],
                            [22.026953125, 44.61987304687503],
                            [22.093066406250074, 44.541943359374955],
                            [22.200976562500017, 44.560693359374966],
                            [22.350683593750063, 44.676123046875034],
                            [22.497656249999977, 44.70625],
                            [22.64208984375, 44.65097656249998],
                            [22.720898437499983, 44.605517578125045],
                            [22.734375, 44.56992187499998],
                            [22.700781250000063, 44.55551757812498],
                            [22.620117187500057, 44.562353515625034],
                            [22.554003906250017, 44.54033203124999],
                            [22.49453125000005, 44.43544921875002],
                            [22.687890625000023, 44.248291015625],
                            [22.42080078125005, 44.00742187500006],
                            [22.399023437500063, 43.96953125],
                            [22.36542968750004, 43.86210937500002],
                            [22.36962890625003, 43.78129882812499],
                            [22.55458984375005, 43.45449218750002],
                            [22.767578125, 43.35415039062502],
                            [22.81972656250005, 43.300732421874955],
                            [22.85957031250001, 43.252343749999966],
                            [22.97685546874999, 43.18798828125],
                            [22.799902343750006, 42.985742187499994],
                            [22.706152343750006, 42.88393554687505],
                            [22.466796875, 42.842480468749955],
                            [22.53242187500004, 42.48120117187497],
                            [22.523535156250006, 42.440966796875045],
                            [22.44570312500005, 42.35913085937497],
                            [22.42207031250004, 42.32885742187503],
                            [22.344042968750045, 42.31396484375003],
                            [22.23974609375003, 42.303110028468716],
                            [21.81464843750001, 42.303125],
                            [21.5625, 42.24750976562498],
                            [21.5625, 42.247509765625]
                        ]
                    ]
                },
                properties: {
                    name: "Serbia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [74.54140625000002, 37.02216796875],
                            [74.03886718750002, 36.825732421874996],
                            [73.116796875, 36.868554687499994],
                            [72.24980468750002, 36.734716796875],
                            [71.23291015625, 36.12177734375],
                            [71.18505859375, 36.04208984375],
                            [71.57197265625001, 35.546826171875],
                            [71.62050781250002, 35.183007812499994],
                            [70.965625, 34.53037109375],
                            [71.095703125, 34.369433593749996],
                            [71.05156250000002, 34.049707031249994],
                            [70.65400390625001, 33.952294921874994],
                            [69.8896484375, 34.007275390625],
                            [70.26113281250002, 33.289013671875],
                            [69.5015625, 33.020068359374996],
                            [69.24140625000001, 32.433544921875],
                            [69.279296875, 31.936816406249996],
                            [68.86894531250002, 31.634228515624997],
                            [68.59765625, 31.802978515625],
                            [68.16103515625002, 31.802978515625],
                            [67.57822265625, 31.506494140624994],
                            [67.737890625, 31.343945312499997],
                            [67.45283203125001, 31.234619140625],
                            [66.82929687500001, 31.263671875],
                            [66.346875, 30.802783203124996],
                            [66.23125, 29.86572265625],
                            [65.09550781250002, 29.559472656249994],
                            [64.39375, 29.544335937499994],
                            [64.09873046875, 29.391943359375],
                            [63.56757812500001, 29.497998046874997],
                            [62.4765625, 29.408349609374994],
                            [62.0009765625, 29.530419921874994],
                            [61.22441406250002, 29.749414062499994],
                            [60.843359375, 29.858691406249996],
                            [61.331640625, 30.363720703124997],
                            [61.55947265625002, 30.599365234375],
                            [61.7841796875, 30.831933593749994],
                            [61.81083984375002, 30.91328125],
                            [61.81425781250002, 31.072558593749996],
                            [61.75507812500001, 31.285302734374994],
                            [61.66015625, 31.382421875],
                            [61.34648437500002, 31.421630859375],
                            [61.11074218750002, 31.451123046874997],
                            [60.854101562500006, 31.483251953125],
                            [60.82070312500002, 31.495166015624996],
                            [60.791601562500006, 31.660595703124997],
                            [60.804296875, 31.73447265625],
                            [60.7875, 31.877197265625],
                            [60.78994140625002, 31.987109375],
                            [60.827246093750006, 32.16796875],
                            [60.82929687500001, 32.249414062499994],
                            [60.71044921875, 32.6],
                            [60.57656250000002, 32.994873046875],
                            [60.560546875, 33.137841796874994],
                            [60.9169921875, 33.505224609375],
                            [60.573828125, 33.588330078125],
                            [60.4859375, 33.7119140625],
                            [60.48574218750002, 34.094775390624996],
                            [60.642675781250006, 34.307177734374996],
                            [60.88945312500002, 34.31943359375],
                            [60.80390625000001, 34.418017578124996],
                            [60.76259765625002, 34.475244140624994],
                            [60.73613281250002, 34.491796875],
                            [60.72626953125001, 34.51826171875],
                            [60.73945312500001, 34.544726562499996],
                            [60.80234375, 34.554638671875],
                            [60.8453125, 34.587695312499996],
                            [60.91474609375001, 34.633984375],
                            [60.951171875, 34.653857421874996],
                            [61.080078125, 34.855615234374994],
                            [61.1, 35.272314453125],
                            [61.18925781250002, 35.31201171875],
                            [61.24550781250002, 35.474072265625],
                            [61.27851562500001, 35.51376953125],
                            [61.281835937500006, 35.55341796875],
                            [61.26201171875002, 35.619580078125],
                            [61.3447265625, 35.6294921875],
                            [61.62099609375002, 35.43232421875],
                            [62.08964843750002, 35.3796875],
                            [62.30781250000001, 35.170800781249994],
                            [62.688085937500006, 35.255322265625],
                            [63.056640625, 35.44580078125],
                            [63.08417968750001, 35.56806640625],
                            [63.16972656250002, 35.678125],
                            [63.129980468750006, 35.84619140625],
                            [63.8625, 36.012353515624994],
                            [64.184375, 36.14892578125],
                            [64.51103515625002, 36.340673828125],
                            [64.56582031250002, 36.427587890625],
                            [64.6025390625, 36.554541015625],
                            [64.78242187500001, 37.05927734375],
                            [64.81630859375002, 37.132080078125],
                            [64.95156250000002, 37.1935546875],
                            [65.08964843750002, 37.237939453124994],
                            [65.30361328125002, 37.24677734375],
                            [65.55498046875002, 37.251171875],
                            [65.76503906250002, 37.569140625],
                            [66.471875, 37.3447265625],
                            [66.52226562500002, 37.348486328125],
                            [66.827734375, 37.3712890625],
                            [67.06884765625, 37.334814453125],
                            [67.19550781250001, 37.235205078125],
                            [67.31972656250002, 37.2095703125],
                            [67.44169921875002, 37.2580078125],
                            [67.51728515625001, 37.266650390624996],
                            [67.546484375, 37.235644531249996],
                            [67.607421875, 37.222509765625],
                            [67.7, 37.22724609375],
                            [67.7529296875, 37.1998046875],
                            [67.75898437500001, 37.172216796875],
                            [67.76601562500002, 37.14013671875],
                            [67.83447265625, 37.064208984375],
                            [67.9580078125, 36.972021484375],
                            [68.06777343750002, 36.9498046875],
                            [68.26093750000001, 37.013085937499994],
                            [68.284765625, 37.036328125],
                            [68.29951171875001, 37.088427734374996],
                            [68.38691406250001, 37.1375],
                            [68.66914062500001, 37.2583984375],
                            [68.7232421875, 37.268017578125],
                            [68.78203125000002, 37.2580078125],
                            [68.82373046875, 37.270703125],
                            [68.8384765625, 37.30283203125],
                            [68.85537109375002, 37.316845703125],
                            [68.88525390625, 37.328076171875],
                            [68.91181640625001, 37.333935546875],
                            [68.96044921875, 37.325048828125],
                            [69.18017578125, 37.15830078125],
                            [69.26484375000001, 37.1083984375],
                            [69.30390625000001, 37.116943359375],
                            [69.35380859375002, 37.150048828124994],
                            [69.41445312500002, 37.207763671875],
                            [69.4296875, 37.290869140625],
                            [69.39921875000002, 37.399316406249994],
                            [69.42011718750001, 37.48671875],
                            [69.49208984375002, 37.553076171875],
                            [69.62578125000002, 37.594042968749996],
                            [69.8208984375, 37.6095703125],
                            [69.9849609375, 37.566162109375],
                            [70.18867187500001, 37.582470703125],
                            [70.25146484375, 37.66416015625],
                            [70.25498046875, 37.765380859375],
                            [70.19941406250001, 37.886035156249996],
                            [70.21464843750002, 37.9244140625],
                            [70.41777343750002, 38.075439453125],
                            [70.7359375, 38.42255859375],
                            [71.255859375, 38.306982421875],
                            [71.33271484375001, 38.170263671875],
                            [71.27851562500001, 37.918408203125],
                            [71.319921875, 37.90185546875],
                            [71.3896484375, 37.906298828124996],
                            [71.48779296875, 37.931884765625],
                            [71.55195312500001, 37.933154296874996],
                            [71.58222656250001, 37.910107421875],
                            [71.43291015625002, 37.1275390625],
                            [71.530859375, 36.845117187499994],
                            [71.665625, 36.696923828124994],
                            [72.65742187500001, 37.029052734375],
                            [72.8955078125, 37.267529296875],
                            [73.21113281250001, 37.408496093749996],
                            [73.38291015625, 37.462255859375],
                            [73.48134765625002, 37.4716796875],
                            [73.60468750000001, 37.446044921875],
                            [73.65712890625002, 37.43046875],
                            [73.72060546875002, 37.41875],
                            [73.73378906250002, 37.37578125],
                            [73.71728515625, 37.329443359375],
                            [73.6275390625, 37.261572265625],
                            [73.65351562500001, 37.23935546875],
                            [73.749609375, 37.231787109375],
                            [74.16708984375, 37.329443359375],
                            [74.20351562500002, 37.372460937499994],
                            [74.25966796875002, 37.415429687499994],
                            [74.659375, 37.394482421875],
                            [74.73056640625, 37.35703125],
                            [74.83046875000002, 37.2859375],
                            [74.89130859375001, 37.231640625],
                            [74.84023437500002, 37.225048828125],
                            [74.76738281250002, 37.249169921874994],
                            [74.73896484375001, 37.28564453125],
                            [74.72666015625, 37.29072265625],
                            [74.6689453125, 37.26669921875],
                            [74.55898437500002, 37.236621093749996],
                            [74.37216796875, 37.15771484375],
                            [74.37617187500001, 37.137353515624994],
                            [74.49794921875002, 37.0572265625],
                            [74.52646484375, 37.030664062499994],
                            [74.54140625000002, 37.02216796875]
                        ]
                    ]
                },
                properties: {
                    name: "Afghanistan",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [17.57958984375, -8.099023437500009],
                                [17.643359375000017, -8.090722656250009],
                                [18.00878906250003, -8.107617187499983],
                                [18.56269531250001, -7.9359375],
                                [18.944433593750063, -8.001464843750028],
                                [19.142675781250034, -8.001464843750028],
                                [19.34082031249997, -7.966601562500031],
                                [19.369921875000045, -7.706542968749986],
                                [19.371679687500063, -7.655078124999989],
                                [19.47988281250008, -7.472167968750028],
                                [19.48378906250008, -7.279492187500026],
                                [19.527636718750017, -7.144433593749952],
                                [19.87519531250004, -6.986328124999986],
                                [19.99746093750008, -6.976464843750023],
                                [20.190039062500063, -6.9462890625],
                                [20.482226562500074, -6.915820312500017],
                                [20.59003906250001, -6.919921874999957],
                                [20.598730468750006, -6.935156249999949],
                                [20.536914062500045, -7.121777343749955],
                                [20.535839843749983, -7.182812499999955],
                                [20.558398437500045, -7.244433593749989],
                                [20.60781250000008, -7.277734375000023],
                                [20.910937500000017, -7.281445312499983],
                                [21.190332031250023, -7.284960937499989],
                                [21.751074218750034, -7.305468749999989],
                                [21.80605468750005, -7.32861328125],
                                [21.905371093750034, -8.693359374999943],
                                [21.813183593750068, -9.46875],
                                [22.19775390625, -10.040625],
                                [22.30703125000005, -10.691308593750023],
                                [22.203515625000023, -10.829492187500009],
                                [22.226171875, -11.121972656250009],
                                [22.27880859375, -11.19414062499996],
                                [22.314941406250057, -11.198632812499994],
                                [22.39296875000005, -11.159472656250003],
                                [22.486132812500045, -11.086718750000017],
                                [22.56103515625003, -11.05585937500004],
                                [22.814746093750017, -11.08027343750004],
                                [23.076269531250006, -11.087890624999986],
                                [23.463964843750034, -10.969335937499991],
                                [23.83388671875008, -11.013671874999972],
                                [23.96650390625001, -10.871777343750011],
                                [23.98388671875, -11.725],
                                [23.909375, -12.636132812500009],
                                [23.886523437500045, -12.743261718749991],
                                [23.882421875, -12.799023437499983],
                                [23.968066406250045, -12.956933593749994],
                                [23.962988281250006, -12.988476562500026],
                                [23.843164062500023, -13.0009765625],
                                [22.209570312500006, -13.0009765625],
                                [21.97890625000008, -13.0009765625],
                                [21.979101562500034, -13.798730468749994],
                                [21.979296875000074, -14.11962890625],
                                [21.979394531249994, -14.440527343750006],
                                [21.97978515624999, -15.955566406250014],
                                [22.193945312500006, -16.628125],
                                [23.380664062500017, -17.640625],
                                [22.32421875, -17.8375],
                                [20.74550781250008, -18.019726562499983],
                                [20.194335937500057, -17.86367187499999],
                                [18.95527343750004, -17.80351562499999],
                                [18.39638671875005, -17.3994140625],
                                [16.14843750000003, -17.39023437499999],
                                [14.017480468750023, -17.40888671874997],
                                [13.475976562500023, -17.04003906249997],
                                [13.179492187500017, -16.971679687499986],
                                [12.548144531250017, -17.212695312499974],
                                [12.35927734375008, -17.205859375],
                                [12.318457031250006, -17.21337890625003],
                                [12.213378906250028, -17.209960937500043],
                                [12.013964843750074, -17.168554687500034],
                                [11.902539062500011, -17.226562499999957],
                                [11.743066406250023, -17.24921875000004],
                                [11.780078125000017, -16.87128906249997],
                                [11.818945312500034, -16.704101562500014],
                                [11.750878906250023, -15.831933593749966],
                                [12.016113281250057, -15.513671874999957],
                                [12.55048828125004, -13.437792968750003],
                                [12.983203124999989, -12.775683593750017],
                                [13.4169921875, -12.52041015624998],
                                [13.597949218750017, -12.286132812500028],
                                [13.785351562499983, -11.81279296874996],
                                [13.833593750000063, -10.9296875],
                                [13.33222656250004, -9.998925781250009],
                                [12.99853515625, -9.048046875],
                                [13.358984375, -8.687207031250026],
                                [13.378515625000063, -8.369726562500006],
                                [12.82343750000004, -6.954785156249955],
                                [12.283300781250063, -6.12431640624996],
                                [13.184375, -5.85625],
                                [13.346484375000017, -5.863378906250006],
                                [13.978515625, -5.857226562500003],
                                [16.315234375000074, -5.865625],
                                [16.431445312500045, -5.90019531249996],
                                [16.53710937499997, -5.9658203125],
                                [16.697265625, -6.164257812500026],
                                [16.74296874999999, -6.618457031250003],
                                [16.813085937500063, -6.772558593749963],
                                [16.919433593750057, -6.93398437499998],
                                [16.98476562500005, -7.257421874999977],
                                [17.57958984375, -8.099023437500009]
                            ]
                        ],
                        [
                            [
                                [12.50146484375, -4.5875],
                                [12.848144531250028, -4.428906249999983],
                                [12.881054687500068, -4.445117187499989],
                                [12.971386718750068, -4.551757812499957],
                                [13.048046875000068, -4.619238281250034],
                                [13.072753906250028, -4.634765625],
                                [13.057324218750011, -4.651074218750026],
                                [12.947460937500011, -4.695312499999986],
                                [12.829687499999977, -4.73662109374996],
                                [12.451464843750017, -5.071484374999969],
                                [12.453222656250034, -5.090625],
                                [12.52236328125008, -5.148925781250028],
                                [12.484570312500011, -5.71875],
                                [12.213671875000074, -5.758691406249994],
                                [12.177148437499994, -5.324804687499977],
                                [12.018359375000074, -5.004296874999966],
                                [12.50146484375, -4.5875]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Angola",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [20.06396484375, 42.54726562499999],
                            [20.485449218750006, 42.223388671875],
                            [20.566210937500017, 41.873681640624994],
                            [20.48896484375001, 41.272607421874994],
                            [20.709277343750017, 40.928369140624994],
                            [20.964257812500023, 40.849902343749996],
                            [20.95576171875001, 40.775292968749994],
                            [21.030859375, 40.622460937499994],
                            [20.881640625000017, 40.467919921874994],
                            [20.65742187500001, 40.1173828125],
                            [20.4560546875, 40.065576171874994],
                            [20.408007812500017, 40.049462890624994],
                            [20.383691406250023, 40.0171875],
                            [20.338476562500006, 39.991064453125],
                            [20.311132812500006, 39.979443359375],
                            [20.311328125000017, 39.95078125],
                            [20.381640625000017, 39.841796875],
                            [20.382421875, 39.802636718749994],
                            [20.206835937500017, 39.653515625],
                            [20.13105468750001, 39.66162109375],
                            [20.05976562500001, 39.699121093749994],
                            [20.022558593750006, 39.710693359375],
                            [20.001269531250017, 39.709423828125],
                            [19.851855468750017, 40.0435546875],
                            [19.322265625, 40.407080078125],
                            [19.45917968750001, 40.40537109375],
                            [19.3375, 40.663818359375],
                            [19.57568359375, 41.640429687499996],
                            [19.577539062500023, 41.7875],
                            [19.342382812500006, 41.869091796875],
                            [19.280664062500023, 42.17255859375],
                            [19.65449218750001, 42.628564453124994],
                            [19.78828125000001, 42.476171875],
                            [20.06396484375, 42.54726562499999]
                        ]
                    ]
                },
                properties: {
                    name: "Albania",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [19.66230468750001, 60.187158203124994],
                                [19.53652343750005, 60.14497070312501],
                                [19.551367187500063, 60.24384765625001],
                                [19.66230468750001, 60.187158203124994]
                            ]
                        ],
                        [
                            [
                                [19.989550781250074, 60.351171875],
                                [20.258886718750063, 60.26127929687499],
                                [19.799804687500057, 60.08173828125001],
                                [19.68691406250005, 60.267626953125045],
                                [19.84765625000003, 60.22055664062506],
                                [19.823046875000074, 60.390185546875045],
                                [19.989550781250074, 60.351171875]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Aland",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [1.7060546875, 42.503320312499994],
                            [1.534082031250023, 42.441699218749996],
                            [1.448828125, 42.437451171875],
                            [1.428125, 42.46132812499999],
                            [1.414843750000017, 42.548388671874996],
                            [1.428320312500006, 42.5958984375],
                            [1.501367187500023, 42.642724609374994],
                            [1.568164062500017, 42.635009765625],
                            [1.709863281250023, 42.604443359375],
                            [1.739453125000011, 42.575927734375],
                            [1.740234375, 42.55673828125],
                            [1.713964843750006, 42.525634765625],
                            [1.7060546875, 42.503320312499994]
                        ]
                    ]
                },
                properties: {
                    name: "Andorra",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [53.927832031250006, 24.177197265624983],
                                [53.63447265625004, 24.169775390624977],
                                [53.83378906250002, 24.258935546875023],
                                [53.927832031250006, 24.177197265624983]
                            ]
                        ],
                        [
                            [
                                [53.3322265625001, 24.258593750000045],
                                [53.19091796874997, 24.290917968749966],
                                [53.412402343750074, 24.411035156250023],
                                [53.3322265625001, 24.258593750000045]
                            ]
                        ],
                        [
                            [
                                [56.29785156250003, 25.650683593750045],
                                [56.38798828125002, 24.97919921875004],
                                [56.06386718750005, 24.73876953125],
                                [56.00058593750006, 24.953222656249977],
                                [55.795703125000074, 24.868115234374955],
                                [55.76083984375006, 24.24267578125],
                                [55.92861328125005, 24.215136718750074],
                                [55.98515625000002, 24.063378906249966],
                                [55.4684570312501, 23.94111328125001],
                                [55.53164062499999, 23.81904296875001],
                                [55.1999023437501, 23.034765625000034],
                                [55.185839843750074, 22.7041015625],
                                [55.104296875000074, 22.621484375000023],
                                [52.55507812500005, 22.932812499999955],
                                [51.592578125000074, 24.07885742187503],
                                [51.56835937500003, 24.286181640625074],
                                [51.76757812500003, 24.25439453125],
                                [51.84316406250005, 24.010888671875023],
                                [52.118554687499994, 23.97109375],
                                [52.64824218750002, 24.154638671875006],
                                [53.80175781249997, 24.069482421874966],
                                [54.14794921875003, 24.17119140624999],
                                [54.39707031250006, 24.278173828125034],
                                [54.74677734375004, 24.810449218750023],
                                [55.94121093750002, 25.793994140625017],
                                [56.08046875, 26.06264648437505],
                                [56.16748046875003, 26.047460937499977],
                                [56.144628906250006, 25.690527343750006],
                                [56.29785156250003, 25.650683593750045]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "United Arab Emirates",
                    childNum: 3
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-64.54916992187498, -54.71621093749998],
                                [-63.81542968749997, -54.725097656250014],
                                [-64.637353515625, -54.90253906250001],
                                [-64.75732421875, -54.82656249999999],
                                [-64.54916992187498, -54.71621093749998]
                            ]
                        ],
                        [
                            [
                                [-68.65322265624994, -54.85361328124999],
                                [-68.62993164062499, -52.65263671875004],
                                [-68.24013671875, -53.08183593749999],
                                [-68.43115234375, -53.0552734375],
                                [-68.48852539062497, -53.260937499999976],
                                [-68.16113281249997, -53.30644531250001],
                                [-68.00849609374995, -53.5640625],
                                [-67.29423828125002, -54.049804687500014],
                                [-66.23564453124999, -54.53349609374997],
                                [-65.17900390624993, -54.678125],
                                [-65.47114257812495, -54.91464843749999],
                                [-66.5111328125, -55.032128906249945],
                                [-67.127099609375, -54.90380859375001],
                                [-68.65322265624994, -54.85361328124999]
                            ]
                        ],
                        [
                            [
                                [-61.084716796875, -23.65644531250001],
                                [-60.83984375000003, -23.85810546874997],
                                [-59.89248046874994, -24.093554687499974],
                                [-59.18725585937497, -24.56230468749999],
                                [-57.82167968749994, -25.136425781249983],
                                [-57.56313476562494, -25.473730468749963],
                                [-57.943115234375, -26.05292968750001],
                                [-58.18149414062498, -26.30742187499999],
                                [-58.222070312499994, -26.65],
                                [-58.618603515624955, -27.13212890624996],
                                [-58.64174804687494, -27.196093750000017],
                                [-58.60483398437498, -27.314355468750037],
                                [-58.16826171874993, -27.27343749999997],
                                [-56.437158203124966, -27.553808593749977],
                                [-56.16406250000003, -27.321484374999983],
                                [-55.95146484374996, -27.325683593749957],
                                [-55.789990234374926, -27.416406249999966],
                                [-55.71464843749996, -27.41484375],
                                [-55.632910156250006, -27.35712890624997],
                                [-55.59379882812502, -27.288085937500014],
                                [-55.597265625, -27.207617187499963],
                                [-55.56489257812498, -27.15],
                                [-55.496728515624966, -27.11533203124999],
                                [-55.45063476562498, -27.068359375000014],
                                [-55.426660156249994, -27.00927734374997],
                                [-55.13593750000001, -26.931152343749957],
                                [-54.934472656249994, -26.70253906250001],
                                [-54.677734375, -26.308789062499997],
                                [-54.631933593750006, -26.005761718749994],
                                [-54.615869140624994, -25.576074218750023],
                                [-54.44394531249998, -25.625],
                                [-54.15458984374999, -25.523046874999963],
                                [-53.89116210937499, -25.66884765625001],
                                [-53.668554687500006, -26.288183593749977],
                                [-53.83818359375002, -27.121093750000014],
                                [-54.32700195312495, -27.423535156249997],
                                [-54.82910156250003, -27.55058593750003],
                                [-55.10151367187501, -27.866796874999963],
                                [-55.72548828125002, -28.20410156250003],
                                [-55.68725585937497, -28.38164062499996],
                                [-55.890527343749994, -28.370019531249994],
                                [-56.938623046874994, -29.594824218750034],
                                [-57.22465820312499, -29.782128906249994],
                                [-57.40522460937501, -30.03388671875004],
                                [-57.563867187499994, -30.139941406249974],
                                [-57.60888671875003, -30.187792968750045],
                                [-57.65087890624997, -30.295019531250034],
                                [-57.71269531249996, -30.38447265624997],
                                [-57.83120117187502, -30.495214843749963],
                                [-57.87250976562501, -30.591015625000026],
                                [-57.81059570312499, -30.85859375000001],
                                [-57.88632812499998, -30.937402343749994],
                                [-57.86840820312497, -31.104394531249994],
                                [-57.89335937499999, -31.195312499999957],
                                [-58.03339843750001, -31.416601562500006],
                                [-58.053857421874994, -31.494921874999974],
                                [-58.009667968749966, -31.534375],
                                [-57.98798828124998, -31.576171875],
                                [-58.00698242187494, -31.684960937499966],
                                [-58.04233398437495, -31.769238281249997],
                                [-58.16748046874997, -31.87265625],
                                [-58.18901367187499, -31.924218750000037],
                                [-58.16040039062503, -31.986523437500026],
                                [-58.156347656250006, -32.0515625],
                                [-58.17700195312494, -32.11904296875002],
                                [-58.16479492187494, -32.18486328125002],
                                [-58.119726562500006, -32.24892578125002],
                                [-58.12304687499997, -32.321875],
                                [-58.201171875, -32.471679687500014],
                                [-58.219970703125, -32.563964843749986],
                                [-58.17099609374998, -32.95927734374996],
                                [-58.424462890624994, -33.11152343749998],
                                [-58.54721679687498, -33.66347656249998],
                                [-58.392480468749966, -34.192968750000034],
                                [-58.52548828124998, -34.29619140625002],
                                [-58.28334960937494, -34.68349609375005],
                                [-57.54785156250003, -35.018945312499994],
                                [-57.170654296875, -35.3625],
                                [-57.35390624999994, -35.72031249999998],
                                [-57.33544921875, -36.026757812499966],
                                [-57.07617187499994, -36.296777343749994],
                                [-56.74946289062501, -36.346484375],
                                [-56.67202148437494, -36.85126953124998],
                                [-57.546972656250034, -38.085644531250026],
                                [-58.17919921874994, -38.435839843750045],
                                [-59.82832031250001, -38.83818359375003],
                                [-61.112207031249994, -38.99296875000003],
                                [-61.84790039062497, -38.961816406249994],
                                [-62.33476562499993, -38.80009765625],
                                [-62.29506835937502, -39.24326171874996],
                                [-62.053662109374955, -39.373828125],
                                [-62.179345703124994, -39.38046875000002],
                                [-62.076806640624966, -39.46152343750002],
                                [-62.131542968749926, -39.82539062499998],
                                [-62.28691406249996, -39.89531250000002],
                                [-62.40185546875003, -40.19658203125002],
                                [-62.24633789062494, -40.674609374999974],
                                [-62.39501953124997, -40.89082031249997],
                                [-62.95903320312493, -41.10966796875006],
                                [-63.621777343749955, -41.15976562499996],
                                [-64.86948242187503, -40.735839843750014],
                                [-65.13339843749998, -40.88066406250003],
                                [-64.98637695312496, -42.102050781249986],
                                [-64.53774414062494, -42.25458984374998],
                                [-64.57099609374998, -42.416015625],
                                [-64.42041015625003, -42.43378906249998],
                                [-64.10087890624993, -42.395117187500006],
                                [-64.06118164062494, -42.266113281250014],
                                [-64.228515625, -42.21826171874996],
                                [-63.795556640624994, -42.113867187500006],
                                [-63.6298828125, -42.28271484375003],
                                [-63.61733398437502, -42.695800781249986],
                                [-64.03476562499998, -42.88125],
                                [-64.48784179687499, -42.51347656250006],
                                [-64.97070312499997, -42.66630859375002],
                                [-65.02690429687496, -42.75888671874996],
                                [-64.31914062499999, -42.968945312500026],
                                [-64.83994140624998, -43.18886718749998],
                                [-65.25234374999997, -43.571875],
                                [-65.26552734375, -44.2796875],
                                [-65.64760742187502, -44.661425781250045],
                                [-65.63876953125, -45.0078125],
                                [-66.19013671874995, -44.96474609375002],
                                [-66.94140625, -45.25732421875003],
                                [-67.59956054687495, -46.05253906250003],
                                [-67.5064453125, -46.44277343749995],
                                [-66.77685546874994, -47.005859375],
                                [-65.99853515625, -47.09375],
                                [-65.73808593749999, -47.34492187499998],
                                [-65.81430664062495, -47.63818359374996],
                                [-66.22524414062502, -47.826757812500006],
                                [-65.93422851562497, -47.826757812500006],
                                [-65.81005859374997, -47.941113281250026],
                                [-67.46630859375, -48.95175781250004],
                                [-67.68486328125002, -49.2466796875],
                                [-67.82597656249999, -49.91962890625005],
                                [-68.2572265625, -50.104589843749984],
                                [-68.66757812500003, -49.75253906250003],
                                [-68.66162109374997, -49.93574218750005],
                                [-68.97958984375, -50.003027343749984],
                                [-68.59794921874996, -50.00947265624997],
                                [-68.421875, -50.15791015625001],
                                [-69.04477539062495, -50.49912109374998],
                                [-69.35859374999993, -51.028125],
                                [-69.20102539062498, -50.99365234375001],
                                [-69.03530273437497, -51.48896484375002],
                                [-69.46542968750003, -51.58447265625003],
                                [-68.96533203125003, -51.67714843749999],
                                [-68.443359375, -52.35664062500004],
                                [-69.96025390624993, -52.00820312500002],
                                [-71.91865234374995, -51.98955078125004],
                                [-72.40766601562501, -51.54082031250002],
                                [-72.34023437499997, -50.68183593749999],
                                [-72.50981445312496, -50.607519531250034],
                                [-73.15292968749998, -50.73828125000003],
                                [-73.50126953124996, -50.125292968750024],
                                [-73.55419921875, -49.463867187500014],
                                [-73.46157226562497, -49.31386718750001],
                                [-73.13525390625, -49.30068359374999],
                                [-73.03364257812501, -49.014355468750004],
                                [-72.65126953125, -48.84160156249998],
                                [-72.582861328125, -48.47539062499999],
                                [-72.35473632812497, -48.36582031250005],
                                [-72.32832031250001, -48.11005859374998],
                                [-72.517919921875, -47.87636718749998],
                                [-72.34594726562497, -47.49267578124997],
                                [-71.90498046875001, -47.201660156250014],
                                [-71.94023437499999, -46.83125],
                                [-71.69965820312501, -46.6513671875],
                                [-71.87568359374998, -46.160546875],
                                [-71.63154296874998, -45.95371093749998],
                                [-71.74619140624998, -45.57890625],
                                [-71.34931640624995, -45.33193359374995],
                                [-71.5962890625, -44.97919921875004],
                                [-72.04169921874998, -44.90419921875004],
                                [-72.06372070312503, -44.771875],
                                [-71.26113281250002, -44.763085937499966],
                                [-71.15971679687496, -44.56025390625004],
                                [-71.21259765624998, -44.44121093750003],
                                [-71.82001953124993, -44.38310546875],
                                [-71.68007812500002, -43.92958984374998],
                                [-71.90498046875001, -43.34755859374998],
                                [-71.750634765625, -43.237304687499986],
                                [-72.14643554687498, -42.990039062499974],
                                [-72.10820312499993, -42.25185546874995],
                                [-71.75, -42.04677734375001],
                                [-71.91127929687497, -41.650390624999986],
                                [-71.93212890624994, -40.69169921874999],
                                [-71.70898437499997, -40.381738281249994],
                                [-71.81831054687493, -40.17666015624995],
                                [-71.65976562499998, -40.02080078125],
                                [-71.71992187499995, -39.63525390624997],
                                [-71.53945312499997, -39.60244140624995],
                                [-71.40156249999995, -38.93505859374996],
                                [-70.858642578125, -38.60449218750003],
                                [-71.16757812499998, -37.76230468749996],
                                [-71.19218750000002, -36.84365234375004],
                                [-71.05551757812498, -36.52373046874996],
                                [-70.40478515625, -36.06171874999998],
                                [-70.41572265625001, -35.52304687500002],
                                [-70.55517578125, -35.246875],
                                [-70.39316406250003, -35.146875],
                                [-70.05205078124999, -34.30078124999997],
                                [-69.85244140625, -34.224316406250026],
                                [-69.81962890624999, -33.28378906249999],
                                [-70.08486328125002, -33.20175781249998],
                                [-70.02197265625, -32.88457031250002],
                                [-70.36376953125, -32.08349609374997],
                                [-70.25439453125, -31.957714843750026],
                                [-70.585205078125, -31.569433593749963],
                                [-70.51958007812493, -31.1484375],
                                [-70.30908203124994, -31.02265625000004],
                                [-70.15322265625, -30.360937499999963],
                                [-69.95634765624996, -30.35820312500003],
                                [-69.84428710937493, -30.175],
                                [-69.95996093749997, -30.078320312500026],
                                [-70.02680664062501, -29.324023437500017],
                                [-69.82788085937497, -29.10322265624997],
                                [-69.65693359374995, -28.413574218749986],
                                [-69.17441406249998, -27.924707031250037],
                                [-68.84633789062494, -27.153710937499994],
                                [-68.59208984375002, -27.140039062499966],
                                [-68.31865234374999, -26.973242187500006],
                                [-68.59160156249999, -26.47041015624997],
                                [-68.41450195312498, -26.153710937500023],
                                [-68.59208984375002, -25.420019531250034],
                                [-68.38422851562495, -25.091894531249977],
                                [-68.56201171875, -24.74736328125003],
                                [-68.25029296875002, -24.391992187500023],
                                [-67.35620117187503, -24.033789062499963],
                                [-67.00878906249994, -23.00136718750005],
                                [-67.19487304687493, -22.821679687500037],
                                [-66.99111328125, -22.509863281250006],
                                [-66.71171874999999, -22.216308593749986],
                                [-66.36518554687501, -22.113769531249957],
                                [-66.32246093750001, -22.053125],
                                [-66.28212890624997, -21.94746093750001],
                                [-66.24760742187496, -21.83046875],
                                [-66.22016601562495, -21.802539062499974],
                                [-66.174658203125, -21.805664062499986],
                                [-66.09858398437495, -21.83505859375002],
                                [-66.05859375, -21.87949218750002],
                                [-65.86015624999999, -22.019726562499983],
                                [-65.77104492187493, -22.099609375000014],
                                [-65.68618164062497, -22.11025390625005],
                                [-65.51879882812497, -22.094531250000045],
                                [-64.99262695312498, -22.109667968750017],
                                [-64.60551757812499, -22.228808593750045],
                                [-64.52363281250001, -22.37158203125],
                                [-64.47773437499998, -22.485351562499986],
                                [-64.44550781249998, -22.585351562500023],
                                [-64.37397460937498, -22.761035156250017],
                                [-64.32529296875, -22.82763671875],
                                [-64.30791015624993, -22.7953125],
                                [-64.26640625000002, -22.60332031249996],
                                [-63.97612304687502, -22.072558593750003],
                                [-63.92167968749993, -22.028613281250017],
                                [-62.843359375, -21.997265625000026],
                                [-62.62597656250003, -22.29042968749998],
                                [-62.54155273437496, -22.349609374999957],
                                [-62.37250976562498, -22.439160156249997],
                                [-62.21416015624996, -22.612402343750034],
                                [-61.798535156249955, -23.18203125],
                                [-61.084716796875, -23.65644531250001]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Argentina",
                    childNum: 3
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [46.490625, 38.90668945312498],
                            [46.1144531250001, 38.877783203125034],
                            [45.977441406249994, 39.24389648437503],
                            [45.76630859375004, 39.37846679687499],
                            [45.78447265625002, 39.54560546875001],
                            [45.456835937500074, 39.494482421875006],
                            [45.15283203125003, 39.58266601562502],
                            [45.03164062500005, 39.76513671874997],
                            [44.76826171875004, 39.70351562500005],
                            [44.28925781250004, 40.040380859375006],
                            [43.66621093750004, 40.12636718750002],
                            [43.56933593750003, 40.48237304687498],
                            [43.72265624999997, 40.71953124999999],
                            [43.43945312500003, 41.10712890625001],
                            [44.077246093750006, 41.182519531249994],
                            [44.81132812500002, 41.259375],
                            [45.001367187499994, 41.29096679687498],
                            [45.188574218750006, 41.14741210937504],
                            [45.07050781250004, 41.075585937499966],
                            [45.5875, 40.846923828125],
                            [45.37890624999997, 40.67358398437506],
                            [45.45439453125002, 40.532373046874966],
                            [45.96464843750002, 40.233789062499966],
                            [45.8859375000001, 40.024853515624955],
                            [45.57978515625004, 39.9775390625],
                            [46.202050781249994, 39.59448242187503],
                            [46.48144531249997, 39.55517578125003],
                            [46.36523437500003, 39.402490234374994],
                            [46.584765625000074, 39.22368164062499],
                            [46.400292968749994, 39.1921875],
                            [46.490625, 38.90668945312498]
                        ]
                    ]
                },
                properties: {
                    name: "Armenia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-170.72626953125, -14.351171875],
                            [-170.8205078125, -14.312109375],
                            [-170.568115234375, -14.266796875000011],
                            [-170.72626953125, -14.351171875]
                        ]
                    ]
                },
                properties: {
                    name: "American Samoa",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [69.2824218750001, -49.05888671875002],
                                [69.16718750000004, -48.88291015624996],
                                [69.36875, -48.89042968749998],
                                [69.2824218750001, -49.05888671875002]
                            ]
                        ],
                        [
                            [
                                [69.18486328125002, -49.10957031250004],
                                [69.59277343749997, -48.97099609375005],
                                [69.64404296875003, -49.11738281250003],
                                [69.40507812500002, -49.18173828125],
                                [69.5423828125, -49.25566406250005],
                                [70.32021484375005, -49.05859374999996],
                                [70.55546875000007, -49.201464843750024],
                                [70.38613281250005, -49.433984374999966],
                                [70.16582031250002, -49.34296874999998],
                                [69.75996093750004, -49.430175781249986],
                                [69.98642578125006, -49.58164062500003],
                                [70.2477539062501, -49.53066406250003],
                                [70.12431640625002, -49.70439453124999],
                                [69.153125, -49.5296875],
                                [68.99296875000007, -49.704980468750016],
                                [68.81474609375002, -49.69960937499999],
                                [68.88339843750006, -49.16494140624995],
                                [68.76953125000003, -49.06591796875003],
                                [69.00244140624997, -48.661230468750006],
                                [69.13613281250005, -48.86103515625003],
                                [69.05214843750005, -49.08193359375001],
                                [69.18486328125002, -49.10957031250004]
                            ]
                        ],
                        [
                            [
                                [51.83457031250006, -46.43994140625],
                                [51.65927734375006, -46.37363281249999],
                                [51.7418945312501, -46.32685546874997],
                                [51.83457031250006, -46.43994140625]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Fr. S. Antarctic Lands",
                    childNum: 3
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-61.71606445312503, 17.037011718749994],
                            [-61.85966796874996, 17.013330078124966],
                            [-61.887109374999966, 17.09814453125],
                            [-61.81728515624994, 17.168945312500057],
                            [-61.71606445312503, 17.037011718749994]
                        ]
                    ]
                },
                properties: {
                    name: "Antigua and Barb.",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [147.35605468750006, -43.396972656250014],
                                [147.30888671875007, -43.50078125000002],
                                [147.10498046875003, -43.43115234374996],
                                [147.28388671875004, -43.278906250000034],
                                [147.35605468750006, -43.396972656250014]
                            ]
                        ],
                        [
                            [
                                [145.04296875000003, -40.78671875],
                                [145.28300781250002, -40.76992187500002],
                                [146.31748046875006, -41.16347656250001],
                                [146.72343750000002, -41.07802734375001],
                                [146.84814453124997, -41.16806640624996],
                                [146.98984375000006, -40.99238281249997],
                                [147.45478515625004, -41.00166015624998],
                                [147.62167968750012, -40.844726562499986],
                                [147.87294921875005, -40.87255859374997],
                                [147.96875, -40.779589843750045],
                                [148.215234375, -40.85488281250002],
                                [148.34257812500007, -42.21533203124997],
                                [148.21367187500002, -41.97001953125],
                                [147.92441406250006, -42.5724609375],
                                [147.94541015625006, -43.18183593749997],
                                [147.7858398437501, -43.22001953125002],
                                [147.69892578125004, -43.12255859374997],
                                [147.64794921874997, -43.02060546874999],
                                [147.8, -42.928125],
                                [147.57382812500006, -42.84570312499997],
                                [147.4523437500001, -43.03339843750001],
                                [147.29794921875006, -42.790917968749994],
                                [147.24501953125005, -43.21591796874999],
                                [146.99697265625005, -43.15634765625002],
                                [147.07734375000004, -43.27587890625003],
                                [146.87392578125, -43.6125],
                                [146.54853515625004, -43.50888671874999],
                                [146.04316406250004, -43.547167968749974],
                                [145.99443359375007, -43.37607421875002],
                                [146.20800781249997, -43.31621093749999],
                                [145.8732421875001, -43.29238281250002],
                                [145.48759765625002, -42.92666015625004],
                                [145.19882812500006, -42.23085937500004],
                                [145.46826171874997, -42.492871093750026],
                                [145.51660156249997, -42.3544921875],
                                [145.33105468750003, -42.14707031250002],
                                [145.23486328124997, -42.19697265624997],
                                [145.23818359375, -42.01962890624999],
                                [144.76611328125003, -41.39003906249998],
                                [144.64609375000006, -40.980859375],
                                [144.71855468750002, -40.67226562500002],
                                [145.04296875000003, -40.78671875]
                            ]
                        ],
                        [
                            [
                                [148.23691406250006, -40.515136718749986],
                                [148.18779296875007, -40.592578125000045],
                                [148.11728515625012, -40.52148437499996],
                                [148.23691406250006, -40.515136718749986]
                            ]
                        ],
                        [
                            [
                                [144.784375, -40.506738281249966],
                                [144.74804687499997, -40.589453125000034],
                                [144.7833984375001, -40.434863281249974],
                                [144.784375, -40.506738281249966]
                            ]
                        ],
                        [
                            [
                                [148.32626953125006, -40.30693359375003],
                                [148.40400390625004, -40.486523437500026],
                                [148.02011718750012, -40.40419921874995],
                                [148.32626953125006, -40.30693359375003]
                            ]
                        ],
                        [
                            [
                                [148.000390625, -39.75761718750003],
                                [148.29736328125003, -39.985742187499966],
                                [148.31357421875012, -40.173535156250026],
                                [148.10566406250004, -40.26210937499995],
                                [147.76718750000012, -39.87031249999998],
                                [148.000390625, -39.75761718750003]
                            ]
                        ],
                        [
                            [
                                [143.92792968750004, -40.116113281249966],
                                [143.83857421875004, -39.90410156250003],
                                [144.00078125000007, -39.580175781250034],
                                [144.14101562500005, -39.953808593750026],
                                [143.92792968750004, -40.116113281249966]
                            ]
                        ],
                        [
                            [
                                [145.31445312500003, -38.49082031249996],
                                [145.35507812500012, -38.55703124999995],
                                [145.12841796875003, -38.52763671875],
                                [145.31445312500003, -38.49082031249996]
                            ]
                        ],
                        [
                            [
                                [137.59648437500007, -35.73867187499998],
                                [137.92890625000004, -35.72607421875],
                                [138.12343750000005, -35.85234375],
                                [137.67089843749997, -35.897949218750014],
                                [137.44843750000004, -36.07480468749999],
                                [137.20957031250012, -35.982421875],
                                [136.7550781250001, -36.03310546875002],
                                [136.540625, -35.89013671875003],
                                [136.63867187499997, -35.74882812500002],
                                [137.33408203125006, -35.59248046875004],
                                [137.58496093749997, -35.620214843750006],
                                [137.59648437500007, -35.73867187499998]
                            ]
                        ],
                        [
                            [
                                [153.53876953125004, -27.436425781250037],
                                [153.42656250000002, -27.70644531249998],
                                [153.43544921875, -27.40537109375002],
                                [153.53876953125004, -27.436425781250037]
                            ]
                        ],
                        [
                            [
                                [113.18300781250005, -26.053125],
                                [112.96425781250005, -25.78310546875001],
                                [112.94707031250002, -25.531542968750017],
                                [113.18300781250005, -26.053125]
                            ]
                        ],
                        [
                            [
                                [153.07744140625002, -25.75078125],
                                [152.97666015625012, -25.551367187499963],
                                [153.03808593750003, -25.193164062500003],
                                [153.22753906249997, -25.00576171875001],
                                [153.14375, -24.814843750000023],
                                [153.25693359375012, -24.72890625],
                                [153.35019531250012, -25.063085937499963],
                                [153.07744140625002, -25.75078125]
                            ]
                        ],
                        [
                            [
                                [151.14658203125006, -23.49082031250002],
                                [151.24013671875, -23.529687500000037],
                                [151.23828124999997, -23.77578125],
                                [151.03330078125006, -23.530175781250037],
                                [151.14658203125006, -23.49082031250002]
                            ]
                        ],
                        [
                            [
                                [115.44619140625005, -20.78779296875001],
                                [115.31806640625004, -20.850585937500014],
                                [115.43457031249997, -20.66796875000003],
                                [115.44619140625005, -20.78779296875001]
                            ]
                        ],
                        [
                            [
                                [149.04375, -20.29150390624997],
                                [148.93886718750005, -20.283691406249986],
                                [148.98105468750012, -20.153515625000026],
                                [149.04375, -20.29150390624997]
                            ]
                        ],
                        [
                            [
                                [146.27832031249997, -18.23125],
                                [146.29882812499997, -18.48476562500005],
                                [146.09882812500004, -18.251757812500003],
                                [146.27832031249997, -18.23125]
                            ]
                        ],
                        [
                            [
                                [139.45917968750004, -17.11455078124996],
                                [139.49277343750006, -16.990429687499983],
                                [139.57089843750006, -17.09443359375004],
                                [139.45917968750004, -17.11455078124996]
                            ]
                        ],
                        [
                            [
                                [139.50781250000003, -16.57304687499996],
                                [139.1595703125, -16.74169921875003],
                                [139.29296875000003, -16.467285156249986],
                                [139.58789062499997, -16.39521484374997],
                                [139.69775390624997, -16.514941406250017],
                                [139.50781250000003, -16.57304687499996]
                            ]
                        ],
                        [
                            [
                                [137.09365234375005, -15.778125],
                                [136.94267578125002, -15.711718749999989],
                                [137.00957031250007, -15.594824218749977],
                                [137.09365234375005, -15.778125]
                            ]
                        ],
                        [
                            [
                                [124.59726562500006, -15.40195312500002],
                                [124.52421875000002, -15.421484375],
                                [124.51933593750002, -15.26748046874998],
                                [124.59726562500006, -15.40195312500002]
                            ]
                        ],
                        [
                            [
                                [125.19882812500006, -14.57949218749998],
                                [125.0912109375, -14.59169921874998],
                                [125.15996093750002, -14.456054687499972],
                                [125.19882812500006, -14.57949218749998]
                            ]
                        ],
                        [
                            [
                                [136.71464843750002, -13.803906249999983],
                                [136.89082031250004, -13.786621093750014],
                                [136.74531250000004, -14.072656250000023],
                                [136.95078125000006, -14.184277343750026],
                                [136.89433593750002, -14.293066406249977],
                                [136.33544921875003, -14.211816406250037],
                                [136.42470703125, -13.864843749999963],
                                [136.6556640625, -13.675878906250006],
                                [136.71464843750002, -13.803906249999983]
                            ]
                        ],
                        [
                            [
                                [136.23740234375006, -13.824511718750003],
                                [136.12265625000012, -13.816601562499983],
                                [136.21542968750012, -13.664746093750054],
                                [136.23740234375006, -13.824511718750003]
                            ]
                        ],
                        [
                            [
                                [136.33867187500007, -11.602343749999989],
                                [136.18027343750006, -11.676757812499957],
                                [136.47929687500002, -11.465917968749991],
                                [136.33867187500007, -11.602343749999989]
                            ]
                        ],
                        [
                            [
                                [130.45927734375007, -11.679296875000034],
                                [130.60625, -11.816601562500026],
                                [130.04326171875007, -11.787304687500011],
                                [130.19755859375007, -11.658203125],
                                [130.15283203124997, -11.477539062499972],
                                [130.29492187499997, -11.33681640624998],
                                [130.45927734375007, -11.679296875000034]
                            ]
                        ],
                        [
                            [
                                [130.6188476562501, -11.376074218749991],
                                [131.02304687500006, -11.334375],
                                [131.26826171875004, -11.18984375],
                                [131.53857421874997, -11.436914062500037],
                                [130.95097656250007, -11.926464843750026],
                                [130.51191406250004, -11.617871093749955],
                                [130.38457031250002, -11.1921875],
                                [130.6188476562501, -11.376074218749991]
                            ]
                        ],
                        [
                            [
                                [136.59853515625, -11.378906249999943],
                                [136.52656250000004, -11.438867187499994],
                                [136.78027343749997, -11.0125],
                                [136.59853515625, -11.378906249999943]
                            ]
                        ],
                        [
                            [
                                [132.59335937500006, -11.302832031249991],
                                [132.48378906250005, -11.037304687499983],
                                [132.57880859375004, -10.968847656249977],
                                [132.59335937500006, -11.302832031249991]
                            ]
                        ],
                        [
                            [
                                [143.17890625000004, -11.954492187499966],
                                [143.11025390625, -12.303515625000017],
                                [143.40156250000004, -12.639941406249989],
                                [143.5866210937501, -13.443652343750031],
                                [143.54843750000012, -13.74101562499996],
                                [143.75634765625003, -14.348828124999969],
                                [143.96181640625005, -14.462890625000028],
                                [144.473046875, -14.231835937500023],
                                [144.64804687500006, -14.492480468750017],
                                [145.28769531250006, -14.943164062499989],
                                [145.42607421875002, -16.406152343749966],
                                [145.75478515625, -16.879492187500034],
                                [145.91210937499997, -16.9125],
                                [146.12587890625005, -17.63525390625],
                                [146.03222656249997, -18.272851562500037],
                                [146.3332031250001, -18.55371093749997],
                                [146.38339843750006, -18.97705078124997],
                                [147.13876953125006, -19.39316406250002],
                                [147.41855468750012, -19.378125],
                                [147.7423828125001, -19.770117187499977],
                                [148.759375, -20.28955078125003],
                                [148.88476562499997, -20.480859375],
                                [148.72998046874997, -20.4677734375],
                                [148.68369140625012, -20.58017578124999],
                                [149.20488281250007, -21.125097656249977],
                                [149.45410156249997, -21.57871093750002],
                                [149.70390625000002, -22.440527343750006],
                                [149.82246093750004, -22.389843749999983],
                                [149.97441406250007, -22.55068359374998],
                                [149.94189453125003, -22.30810546875003],
                                [150.07617187500003, -22.16445312499998],
                                [150.54130859375002, -22.55908203125],
                                [150.56855468750004, -22.38398437500004],
                                [150.67246093750012, -22.418164062499983],
                                [150.84316406250005, -23.4580078125],
                                [151.15380859375003, -23.784082031249994],
                                [151.83164062500006, -24.12294921875001],
                                [152.12988281250003, -24.59755859374998],
                                [152.45634765625007, -24.802441406249983],
                                [152.65429687499997, -25.201953125000017],
                                [152.91347656250005, -25.432128906250014],
                                [152.98496093750012, -25.816210937500003],
                                [153.16494140625, -25.964160156250045],
                                [153.11679687500006, -27.194433593750034],
                                [153.57568359375003, -28.24052734374999],
                                [153.6168945312501, -28.673046875],
                                [153.03056640625002, -30.563378906249994],
                                [152.94394531250012, -31.43486328124999],
                                [152.5592773437501, -32.045703125],
                                [152.4704101562501, -32.439062500000034],
                                [152.13652343750002, -32.678125],
                                [152.1642578125001, -32.75742187499996],
                                [151.812890625, -32.90107421875001],
                                [151.29208984375012, -33.580957031249966],
                                [151.28027343750003, -33.92666015625005],
                                [151.12480468750007, -34.00527343749998],
                                [151.23154296875006, -34.0296875],
                                [150.8712890625001, -34.49912109374996],
                                [150.80458984375, -35.01289062500001],
                                [150.19531249999997, -35.83359374999996],
                                [149.93271484375012, -37.528515625000026],
                                [149.480859375, -37.77119140625],
                                [147.87675781250002, -37.93417968749998],
                                [146.8568359375, -38.663476562499966],
                                [146.21748046875004, -38.72744140625004],
                                [146.33662109375004, -38.89423828125],
                                [146.46660156250007, -38.84033203125003],
                                [146.40000000000012, -39.14550781250003],
                                [146.1583984375001, -38.86572265624996],
                                [145.93535156250002, -38.90175781250002],
                                [145.79082031250007, -38.66699218749997],
                                [145.39726562500002, -38.53535156249998],
                                [145.54218750000004, -38.39384765625002],
                                [145.4757812500001, -38.24375],
                                [145.29277343750002, -38.237597656249974],
                                [144.95957031250012, -38.500781250000045],
                                [144.71777343749997, -38.34033203125004],
                                [144.91142578125007, -38.34404296874999],
                                [145.11992187500007, -38.091308593750014],
                                [144.89130859375004, -37.899804687499994],
                                [144.39550781250003, -38.13691406249998],
                                [144.6652343750001, -38.20996093750003],
                                [143.53896484375005, -38.82089843749998],
                                [142.45585937500002, -38.38632812499999],
                                [141.725, -38.27138671875002],
                                [141.5939453125001, -38.38779296875002],
                                [141.42421875, -38.36347656250004],
                                [141.0109375000001, -38.07695312500003],
                                [140.39042968750007, -37.89667968749998],
                                [139.78427734375012, -37.24580078124998],
                                [139.85732421875, -36.662109375],
                                [139.72900390625003, -36.37138671875002],
                                [138.9689453125001, -35.58076171874997],
                                [139.17802734375007, -35.52304687500002],
                                [139.289453125, -35.61132812499997],
                                [139.28251953125002, -35.375390624999966],
                                [138.521875, -35.6423828125],
                                [138.184375, -35.612695312499994],
                                [138.5111328125, -35.02441406249996],
                                [138.48994140625004, -34.76357421875002],
                                [138.0892578125, -34.16982421875002],
                                [137.69169921875002, -35.14296875000004],
                                [136.88359375000007, -35.23974609375004],
                                [137.01425781250012, -34.91582031250003],
                                [137.39101562500005, -34.91328124999997],
                                [137.49384765625004, -34.16113281250003],
                                [137.9318359375001, -33.57910156250003],
                                [137.85234375000007, -33.20078124999996],
                                [137.99257812500005, -33.094238281250014],
                                [137.78320312500003, -32.578125],
                                [137.79091796875, -32.82324218749996],
                                [137.44228515625, -33.1935546875],
                                [137.23730468750003, -33.62949218749999],
                                [136.43066406249997, -34.02998046875004],
                                [135.891015625, -34.660937499999974],
                                [135.96972656249997, -34.98183593749998],
                                [135.7923828125, -34.863281249999986],
                                [135.64755859375006, -34.93964843750001],
                                [135.12304687499997, -34.58574218750003],
                                [135.21679687499997, -34.48730468749996],
                                [135.45, -34.58105468749996],
                                [135.21894531250004, -33.959765625000045],
                                [134.88876953125012, -33.62636718749998],
                                [134.79101562499997, -33.32832031250001],
                                [134.60771484375002, -33.19013671875001],
                                [134.30126953124997, -33.16503906249996],
                                [134.17353515625004, -32.979101562500006],
                                [134.10039062500007, -32.748632812500034],
                                [134.22714843750006, -32.73056640624999],
                                [134.23417968750007, -32.54853515625004],
                                [133.66533203125007, -32.207226562500054],
                                [133.21210937500004, -32.18378906249998],
                                [132.75742187500012, -31.95625],
                                [132.21464843750002, -32.00712890624996],
                                [131.14365234375006, -31.49570312500005],
                                [130.78300781250002, -31.604003906249986],
                                [129.1876953125001, -31.659960937500017],
                                [127.31982421874997, -32.2640625],
                                [125.91718750000004, -32.296972656250034],
                                [124.75878906250003, -32.882714843749994],
                                [124.24375, -33.01523437499999],
                                [123.50683593749997, -33.916210937500054],
                                [122.15097656250006, -33.99179687499999],
                                [122.06113281250006, -33.874414062499966],
                                [121.40507812500007, -33.826757812500034],
                                [119.85410156250012, -33.97470703124998],
                                [119.45058593750005, -34.368261718750034],
                                [118.89531250000007, -34.47988281250004],
                                [118.13554687500002, -34.98662109374999],
                                [117.58193359375005, -35.09775390624998],
                                [116.51718750000012, -34.98789062499998],
                                [115.98671875000005, -34.795019531250034],
                                [115.56503906250012, -34.42578125000003],
                                [115.00878906250003, -34.25585937499997],
                                [114.9938476562501, -33.51533203125],
                                [115.3587890625, -33.63994140624999],
                                [115.68300781250005, -33.19287109375003],
                                [115.6984375000001, -31.694531250000054],
                                [115.07792968750007, -30.560449218750023],
                                [114.85683593750005, -29.14296875],
                                [114.16513671875012, -28.08066406250002],
                                [114.028125, -27.34726562499999],
                                [113.18476562500004, -26.182226562499963],
                                [113.32324218749997, -26.243847656249997],
                                [113.35605468750012, -26.080468750000023],
                                [113.58164062500006, -26.558105468749986],
                                [113.73369140625002, -26.59511718749998],
                                [113.83642578125003, -26.50058593749999],
                                [113.85283203125007, -26.33212890625005],
                                [113.39531250000002, -25.71328125],
                                [113.4513671875001, -25.599121093750014],
                                [113.7130859375001, -25.83076171875004],
                                [113.72373046875006, -26.129785156250037],
                                [113.85390625, -26.01445312499999],
                                [113.99199218750007, -26.32148437500001],
                                [114.09033203124997, -26.393652343749963],
                                [114.21572265625, -26.289453124999966],
                                [114.2142578125, -25.851562500000014],
                                [113.41767578125004, -24.435644531250034],
                                [113.48984375000012, -23.869628906250014],
                                [113.7570312500001, -23.418164062500054],
                                [113.79511718750004, -22.91455078125003],
                                [113.68281250000004, -22.637792968749963],
                                [114.02285156250005, -21.881445312499977],
                                [114.12392578125005, -21.828613281249957],
                                [114.14160156250003, -22.483105468749983],
                                [114.37773437500007, -22.341503906249997],
                                [114.70927734375002, -21.82343749999997],
                                [115.45615234375012, -21.49169921874997],
                                [116.0109375000001, -21.030371093749963],
                                [116.7067382812501, -20.653808593749986],
                                [117.40625, -20.72119140625003],
                                [118.19921875000003, -20.37519531249997],
                                [118.75146484374997, -20.261914062499983],
                                [119.10449218749997, -19.995312500000026],
                                [119.58593750000003, -20.03828125],
                                [120.99794921875, -19.604394531249966],
                                [121.33769531250002, -19.31992187500002],
                                [121.83378906250002, -18.477050781249986],
                                [122.34541015625004, -18.11191406250002],
                                [122.14746093749997, -17.54902343750001],
                                [122.2609375000001, -17.135742187500014],
                                [122.72041015625004, -16.78769531249999],
                                [122.97070312499997, -16.436816406250003],
                                [123.56308593750006, -17.520898437499966],
                                [123.59355468750007, -17.03037109375005],
                                [123.83105468750003, -17.120800781249997],
                                [123.8744140625, -16.918652343750026],
                                [123.4904296875001, -16.49072265624997],
                                [123.62597656249997, -16.416308593750003],
                                [123.60703125000006, -16.224023437499994],
                                [123.72890625, -16.192480468749963],
                                [123.85917968750007, -16.38232421875],
                                [124.04443359374997, -16.264941406249974],
                                [124.30039062500006, -16.388281249999977],
                                [124.77197265624997, -16.40263671874996],
                                [124.40488281250006, -16.298925781249977],
                                [124.41640625, -16.133496093750026],
                                [124.5768554687501, -16.11367187499998],
                                [124.64853515625012, -15.870214843750034],
                                [124.50429687500005, -15.972460937499989],
                                [124.38164062500002, -15.758203125000037],
                                [124.43955078125012, -15.493554687500037],
                                [124.56162109375012, -15.496289062499969],
                                [124.69257812500004, -15.273632812499997],
                                [125.06298828125003, -15.44228515624998],
                                [125.0729492187501, -15.306738281249991],
                                [124.90917968750003, -15.310058593749957],
                                [124.83906250000004, -15.160742187500006],
                                [125.03818359375012, -15.004101562499969],
                                [125.35566406250004, -15.119824218750011],
                                [125.17871093749997, -14.714746093749994],
                                [125.57978515625004, -14.483203124999989],
                                [125.62773437500002, -14.256640625000017],
                                [125.70458984374997, -14.29140625],
                                [125.66162109375003, -14.529492187500011],
                                [125.81953125000004, -14.469140624999966],
                                [125.890625, -14.61796875],
                                [126.0207031250001, -14.49453125],
                                [126.0539062500001, -13.977246093750026],
                                [126.1842773437501, -14.00205078125002],
                                [126.25849609375004, -14.163574218749972],
                                [126.403125, -14.018945312499994],
                                [126.5697265625, -14.160937499999974],
                                [126.7806640625, -13.955175781249977],
                                [126.77558593750004, -13.788476562500037],
                                [126.90322265625, -13.744140624999972],
                                [127.45761718750006, -14.031445312499969],
                                [128.18046875000007, -14.711621093749983],
                                [128.06943359375012, -15.329296874999969],
                                [128.15546875000004, -15.225585937499972],
                                [128.25468750000002, -15.298535156250011],
                                [128.175, -15.043164062500026],
                                [128.57578125000006, -14.774511718750006],
                                [129.05820312500012, -14.884375],
                                [129.21582031249997, -15.160253906249991],
                                [129.26757812500003, -14.871484375000051],
                                [129.63476562499997, -15.139746093749991],
                                [129.637109375, -14.850976562500037],
                                [129.84873046875012, -14.828906249999989],
                                [129.60468750000004, -14.647070312499977],
                                [129.69794921875004, -14.557421875000017],
                                [129.37871093750002, -14.39248046874998],
                                [129.70986328125, -13.979980468749972],
                                [129.83886718749997, -13.572949218749997],
                                [130.25976562500003, -13.30224609375],
                                [130.1349609375001, -13.145507812499957],
                                [130.1681640625001, -12.957421875],
                                [130.39990234374997, -12.68789062499999],
                                [130.61748046875007, -12.646875],
                                [130.62265625000006, -12.43105468749998],
                                [130.8673828125001, -12.557812499999955],
                                [130.87382812500007, -12.367187500000028],
                                [131.29160156250006, -12.067871093749972],
                                [131.43828125000002, -12.27695312500002],
                                [132.06406250000006, -12.28076171875],
                                [132.25322265625007, -12.186035156249972],
                                [132.41103515625, -12.295117187499997],
                                [132.51054687500002, -12.134863281250034],
                                [132.71279296875, -12.1234375],
                                [132.63046875000012, -12.035156249999972],
                                [132.67421875000005, -11.649023437499991],
                                [132.47519531250006, -11.491503906249974],
                                [132.07285156250006, -11.474707031250006],
                                [131.82246093750004, -11.302441406249997],
                                [131.96152343750006, -11.180859375000011],
                                [132.15546875000004, -11.311132812499991],
                                [132.33398437499997, -11.223535156249994],
                                [132.6828125000001, -11.505566406249997],
                                [132.96103515625012, -11.407324218749963],
                                [133.18525390625004, -11.705664062499991],
                                [133.90419921875, -11.832031249999972],
                                [134.4173828125, -12.052734375],
                                [134.73027343750002, -11.984375],
                                [135.02968750000005, -12.19375],
                                [135.2179687500001, -12.221679687499957],
                                [135.92246093750012, -11.825781250000034],
                                [135.70439453125007, -12.209863281250037],
                                [136.00849609375004, -12.19140625],
                                [136.08183593750007, -12.422460937500006],
                                [136.26064453125, -12.433789062499997],
                                [136.32851562500005, -12.305566406249994],
                                [136.24990234375, -12.173046875],
                                [136.44335937499997, -11.951464843749974],
                                [136.7194335937501, -12.226464843749952],
                                [136.89746093749997, -12.243554687499966],
                                [136.94746093750004, -12.34990234374996],
                                [136.53701171875, -12.784277343749991],
                                [136.59433593750012, -13.003808593750051],
                                [136.46103515625006, -13.225195312500034],
                                [136.29414062500004, -13.137988281250031],
                                [135.92734375000012, -13.304296874999977],
                                [135.95449218750005, -13.934863281250017],
                                [135.40517578125005, -14.758203124999966],
                                [135.4533203125001, -14.923144531250003],
                                [136.20537109375002, -15.403417968749963],
                                [136.29140625000005, -15.570117187500003],
                                [136.70488281250007, -15.685253906250011],
                                [136.78466796874997, -15.89423828125004],
                                [137.00214843750004, -15.878320312499994],
                                [137.70371093750006, -16.233007812499963],
                                [138.24501953125005, -16.718359374999977],
                                [139.00986328125006, -16.899316406249994],
                                [139.2484375, -17.328613281249957],
                                [140.03583984375004, -17.702636718749957],
                                [140.51113281250005, -17.62451171875003],
                                [140.83046875, -17.414453125000037],
                                [141.29140625, -16.46347656250002],
                                [141.62548828124997, -15.056640625000014],
                                [141.52294921875003, -14.470117187499994],
                                [141.59433593750006, -14.152832031250014],
                                [141.47255859375, -13.797558593750011],
                                [141.64541015625, -13.259082031250003],
                                [141.61357421875002, -12.943457031250006],
                                [141.92978515625006, -12.73984375],
                                [141.67773437500003, -12.491406250000011],
                                [141.68857421875012, -12.351074218750028],
                                [141.87050781250005, -11.9755859375],
                                [141.96113281250004, -12.054296874999963],
                                [142.168359375, -10.946582031249974],
                                [142.45644531250005, -10.707324218749989],
                                [142.60507812500012, -10.748242187499983],
                                [142.55273437500003, -10.874414062500023],
                                [142.7796875, -11.115332031249977],
                                [142.87255859374997, -11.821386718750034],
                                [143.17890625000004, -11.954492187499966]
                            ]
                        ],
                        [
                            [
                                [142.2748046875, -10.704785156250011],
                                [142.19140624999997, -10.762011718750031],
                                [142.1310546875001, -10.640625],
                                [142.19794921875004, -10.59199218750004],
                                [142.2748046875, -10.704785156250011]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Australia",
                    childNum: 30
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [16.953125, 48.598828125],
                            [16.86542968750001, 48.3869140625],
                            [17.147363281250023, 48.00595703125],
                            [17.06660156250001, 47.707568359374996],
                            [16.421289062500023, 47.674462890624994],
                            [16.676562500000017, 47.536035156249994],
                            [16.44287109375, 47.39951171875],
                            [16.453417968750017, 47.006787109375],
                            [16.093066406250017, 46.86328125],
                            [15.957617187500006, 46.677636718749994],
                            [14.893261718750011, 46.605908203125],
                            [14.5498046875, 46.399707031249996],
                            [13.7, 46.520263671875],
                            [13.490039062500017, 46.555566406249994],
                            [13.3515625, 46.557910156249996],
                            [13.16875, 46.57265625],
                            [12.479199218750011, 46.672509765624994],
                            [12.38828125, 46.70263671875],
                            [12.330078125, 46.759814453124996],
                            [12.267968750000023, 46.835888671875],
                            [12.154101562500017, 46.93525390625],
                            [12.130761718750023, 46.98476562499999],
                            [12.16552734375, 47.028173828125],
                            [12.201269531250006, 47.060888671875],
                            [12.197167968750023, 47.075],
                            [12.16943359375, 47.08212890625],
                            [11.775683593750017, 46.986083984375],
                            [11.527539062500011, 46.997412109375],
                            [11.433203125, 46.983056640624994],
                            [11.244433593750017, 46.97568359375],
                            [11.133886718750006, 46.936181640624994],
                            [11.0634765625, 46.859130859375],
                            [11.025097656250011, 46.79697265625],
                            [10.993261718750006, 46.777001953124994],
                            [10.92734375, 46.769482421875],
                            [10.828906250000017, 46.775244140625],
                            [10.759765625, 46.793310546875],
                            [10.689257812500017, 46.84638671875],
                            [10.579785156250011, 46.8537109375],
                            [10.479394531250023, 46.855126953124994],
                            [10.452832031250011, 46.86494140625],
                            [10.45458984375, 46.8994140625],
                            [10.414941406250023, 46.964404296874996],
                            [10.349414062500017, 46.98476562499999],
                            [10.133496093750011, 46.851513671875],
                            [9.580273437500011, 47.057373046875],
                            [9.527539062500011, 47.270751953125],
                            [9.625878906250023, 47.467041015625],
                            [9.524023437500006, 47.52421875],
                            [9.748925781250023, 47.575537109375],
                            [9.839160156250017, 47.552294921874996],
                            [9.971582031250023, 47.505322265625],
                            [10.034082031250023, 47.473583984375],
                            [10.059863281250017, 47.449072265625],
                            [10.066308593750023, 47.393359375],
                            [10.200292968750006, 47.363427734374994],
                            [10.183007812500023, 47.27880859375],
                            [10.369140625, 47.366064453125],
                            [10.40390625, 47.4169921875],
                            [10.439453125, 47.5515625],
                            [10.482812500000023, 47.541796875],
                            [10.65869140625, 47.547216796875],
                            [10.741601562500023, 47.52412109375],
                            [10.873046875, 47.52021484375],
                            [11.0419921875, 47.393115234374996],
                            [12.185644531250006, 47.61953125],
                            [12.203808593750011, 47.646728515625],
                            [12.196875, 47.70908203125],
                            [12.209277343750017, 47.71826171875],
                            [12.268359375000017, 47.702734375],
                            [12.353540736607165, 47.70264787946429],
                            [12.492553013392856, 47.68551897321428],
                            [12.685839843750017, 47.669335937499994],
                            [12.771386718750023, 47.639404296875],
                            [12.796191406250017, 47.60703125],
                            [12.781152343750023, 47.5904296875],
                            [12.7828125, 47.56416015625],
                            [12.809375, 47.5421875],
                            [12.87890625, 47.5064453125],
                            [12.968066406250017, 47.47568359375],
                            [13.014355468750011, 47.478076171874996],
                            [13.031542968750017, 47.5080078125],
                            [13.047949218750006, 47.579150390624996],
                            [13.054101562500023, 47.655126953125],
                            [12.897656250000011, 47.721875],
                            [12.953515625000023, 47.890625],
                            [12.760351562500006, 48.106982421874996],
                            [13.215234375000023, 48.301904296874994],
                            [13.322851562500006, 48.33125],
                            [13.409375, 48.394140625],
                            [13.459863281250023, 48.56455078125],
                            [13.4716796875, 48.571826171874996],
                            [13.486621093750017, 48.581835937499996],
                            [13.636623883928596, 48.580904017857144],
                            [13.785351562500011, 48.587451171874996],
                            [13.798828125, 48.6216796875],
                            [13.802929687500011, 48.747509765625],
                            [13.814746093750017, 48.766943359375],
                            [14.049121093750017, 48.602490234375],
                            [14.691308593750023, 48.59921875],
                            [15.066796875000023, 48.997851562499996],
                            [16.057226562500006, 48.754785156249994],
                            [16.543554687500006, 48.796240234375],
                            [16.953125, 48.598828125]
                        ]
                    ]
                },
                properties: {
                    name: "Austria",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [46.1144531250001, 38.877783203125034],
                                [45.4796875000001, 39.00625],
                                [44.81718750000002, 39.65043945312496],
                                [44.76826171875004, 39.70351562500005],
                                [45.03164062500005, 39.76513671874997],
                                [45.15283203125003, 39.58266601562502],
                                [45.456835937500074, 39.494482421875006],
                                [45.78447265625002, 39.54560546875001],
                                [45.76630859375004, 39.37846679687499],
                                [45.977441406249994, 39.24389648437503],
                                [46.1144531250001, 38.877783203125034]
                            ]
                        ],
                        [
                            [
                                [48.572851562500006, 41.84448242187503],
                                [49.45673828125004, 40.79985351562502],
                                [49.77597656250006, 40.583984375],
                                [50.18251953125005, 40.50478515625002],
                                [50.3659179687501, 40.279492187499955],
                                [49.91884765625005, 40.31640625000003],
                                [49.55117187499999, 40.19414062499999],
                                [49.3244140625001, 39.60834960937501],
                                [49.36279296875003, 39.349560546874955],
                                [49.16533203125002, 39.03027343750003],
                                [49.013476562500074, 39.13398437500001],
                                [48.85449218750003, 38.83881835937501],
                                [48.86875, 38.43549804687498],
                                [48.59267578125005, 38.41108398437498],
                                [47.99648437499999, 38.85375976562503],
                                [48.292089843750006, 39.01884765624999],
                                [48.10439453125005, 39.241113281249994],
                                [48.322167968749994, 39.39907226562502],
                                [47.995898437500074, 39.683935546875034],
                                [46.490625, 38.90668945312498],
                                [46.400292968749994, 39.1921875],
                                [46.584765625000074, 39.22368164062499],
                                [46.36523437500003, 39.402490234374994],
                                [46.48144531249997, 39.55517578125003],
                                [46.202050781249994, 39.59448242187503],
                                [45.57978515625004, 39.9775390625],
                                [45.8859375000001, 40.024853515624955],
                                [45.96464843750002, 40.233789062499966],
                                [45.45439453125002, 40.532373046874966],
                                [45.37890624999997, 40.67358398437506],
                                [45.5875, 40.846923828125],
                                [45.07050781250004, 41.075585937499966],
                                [45.188574218750006, 41.14741210937504],
                                [45.001367187499994, 41.29096679687498],
                                [45.2171875, 41.423193359375006],
                                [45.28095703125004, 41.449560546875034],
                                [46.086523437500006, 41.183837890625],
                                [46.43095703125002, 41.077050781249994],
                                [46.534375, 41.08857421875004],
                                [46.62636718750005, 41.15966796875006],
                                [46.66240234375002, 41.24550781250002],
                                [46.67255859375004, 41.28681640625001],
                                [46.61894531250002, 41.34375],
                                [46.30546875000002, 41.507714843749994],
                                [46.18427734375004, 41.70214843749997],
                                [46.42988281250004, 41.890966796875006],
                                [46.74931640625002, 41.812597656250006],
                                [47.31767578125002, 41.28242187500001],
                                [47.79101562499997, 41.19926757812502],
                                [48.572851562500006, 41.84448242187503]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Azerbaijan",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [30.553613281250023, -2.400097656250011],
                            [30.53369140625, -2.42626953125],
                            [30.441992187500006, -2.613476562500011],
                            [30.424218750000023, -2.6416015625],
                            [30.47333984375001, -2.6943359375],
                            [30.42402343750001, -2.824023437500003],
                            [30.433496093750023, -2.87451171875],
                            [30.515039062500023, -2.917578125],
                            [30.604296875000017, -2.935253906250011],
                            [30.70947265625, -2.977246093750011],
                            [30.7802734375, -2.98486328125],
                            [30.811132812500006, -3.116406250000011],
                            [30.79023437500001, -3.274609375000011],
                            [30.4, -3.65390625],
                            [29.947265625, -4.307324218750011],
                            [29.7177734375, -4.455859375],
                            [29.403222656250023, -4.449316406250006],
                            [29.211816406250023, -3.833789062500003],
                            [29.224414062500017, -3.053515625],
                            [29.01435546875001, -2.72021484375],
                            [29.10205078125, -2.595703125],
                            [29.390234375, -2.80859375],
                            [29.698046875000017, -2.794726562500003],
                            [29.8681640625, -2.71640625],
                            [29.93017578125, -2.339550781250011],
                            [30.117285156250006, -2.416601562500006],
                            [30.408496093750017, -2.31298828125],
                            [30.553613281250023, -2.400097656250011]
                        ]
                    ]
                },
                properties: {
                    name: "Burundi",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [5.693554687500011, 50.774755859375006],
                            [5.993945312500017, 50.75043945312504],
                            [6.340917968750006, 50.451757812500034],
                            [6.116503906250045, 50.120996093749966],
                            [6.08906250000004, 50.15458984374996],
                            [6.054785156249977, 50.154296875],
                            [5.976269531250068, 50.167187499999955],
                            [5.866894531250068, 50.08281250000002],
                            [5.817382812500028, 50.01269531250003],
                            [5.7880859375, 49.96123046875002],
                            [5.744042968749994, 49.91962890624998],
                            [5.789746093749983, 49.53828125000001],
                            [5.50732421875, 49.51088867187502],
                            [4.867578125000051, 49.78813476562502],
                            [4.818652343750045, 50.153173828125034],
                            [4.545019531250063, 49.96025390624999],
                            [4.149316406250023, 49.971582031249994],
                            [4.174609375000017, 50.24648437500005],
                            [3.689355468750023, 50.30605468750002],
                            [3.595410156250068, 50.47734374999999],
                            [3.27333984375008, 50.53154296875002],
                            [3.10683593750008, 50.779443359374994],
                            [2.759375, 50.750634765624994],
                            [2.52490234375, 51.097119140624955],
                            [3.35009765625, 51.37768554687503],
                            [3.43251953125008, 51.24575195312505],
                            [3.902050781250011, 51.20766601562502],
                            [4.226171875000034, 51.38647460937503],
                            [5.03095703125004, 51.46909179687498],
                            [5.214160156250045, 51.278955078124966],
                            [5.796484375000034, 51.153076171875],
                            [5.693554687500011, 50.774755859375006]
                        ]
                    ]
                },
                properties: {
                    name: "Belgium",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [3.595410156250011, 11.6962890625],
                            [3.553906250000011, 11.631884765624989],
                            [3.490527343750017, 11.49921875],
                            [3.48779296875, 11.395410156249994],
                            [3.638867187500011, 11.176855468749991],
                            [3.65625, 11.154589843749989],
                            [3.6953125, 11.1203125],
                            [3.71640625, 11.07958984375],
                            [3.7568359375, 10.76875],
                            [3.83447265625, 10.607421875],
                            [3.771777343750017, 10.417626953124994],
                            [3.646582031250006, 10.408984374999989],
                            [3.60205078125, 10.004541015624994],
                            [3.3251953125, 9.778466796874994],
                            [3.044921875, 9.083837890624991],
                            [2.774804687500023, 9.048535156249997],
                            [2.703125, 8.371826171875],
                            [2.68603515625, 7.873730468749997],
                            [2.719335937500006, 7.616259765624989],
                            [2.7509765625, 7.541894531249994],
                            [2.78515625, 7.476855468749989],
                            [2.783984375000017, 7.443408203124989],
                            [2.765820312500011, 7.422509765624994],
                            [2.75048828125, 7.395068359374989],
                            [2.756738281250023, 7.067919921874989],
                            [2.721386718750011, 6.980273437499989],
                            [2.731738281250017, 6.852832031249989],
                            [2.7529296875, 6.771630859374994],
                            [2.774609375000011, 6.711718749999989],
                            [2.753710937500017, 6.661767578124994],
                            [2.735644531250017, 6.595703125],
                            [2.706445312500023, 6.369238281249991],
                            [1.62265625, 6.216796875],
                            [1.777929687500006, 6.294628906249997],
                            [1.530957031250011, 6.992431640625],
                            [1.624707031250011, 6.997314453125],
                            [1.600195312500006, 9.050048828125],
                            [1.3857421875, 9.361669921874991],
                            [1.330078125, 9.996972656249994],
                            [.763378906250011, 10.386669921874997],
                            [.900488281250006, 10.993261718749991],
                            [1.4267578125, 11.447119140624991],
                            [1.980371093750023, 11.418408203124997],
                            [2.38916015625, 11.897070312499991],
                            [2.366015625000017, 12.221923828125],
                            [2.805273437500006, 12.383837890624989],
                            [3.595410156250011, 11.6962890625]
                        ]
                    ]
                },
                properties: {
                    name: "Benin",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [.217480468750011, 14.911474609374991],
                            [.163867187500017, 14.497216796874994],
                            [.382519531250011, 14.245800781249997],
                            [.42919921875, 13.972119140624997],
                            [.6181640625, 13.703417968750003],
                            [1.201171875, 13.357519531249991],
                            [.988476562500011, 13.36484375],
                            [.9873046875, 13.041894531249994],
                            [1.56494140625, 12.635400390624994],
                            [2.104589843750006, 12.701269531249991],
                            [2.226269531250011, 12.466064453125],
                            [2.072949218750011, 12.309375],
                            [2.38916015625, 11.897070312499991],
                            [1.980371093750023, 11.418408203124997],
                            [1.4267578125, 11.447119140624991],
                            [.900488281250006, 10.993261718749991],
                            [.49267578125, 10.954980468749994],
                            [-.068603515625, 11.115625],
                            [-.299462890624994, 11.166894531249994],
                            [-.627148437499983, 10.927392578124994],
                            [-1.04248046875, 11.010058593749989],
                            [-2.829931640624977, 10.998388671874991],
                            [-2.914892578124977, 10.592333984374989],
                            [-2.791162109374994, 10.432421874999989],
                            [-2.780517578125, 9.745849609375],
                            [-2.765966796874977, 9.658056640624991],
                            [-2.706201171874994, 9.533935546875],
                            [-2.695849609374989, 9.481347656249994],
                            [-2.7171875, 9.457128906249991],
                            [-2.7666015625, 9.424707031249994],
                            [-2.816748046874977, 9.425830078124989],
                            [-2.875146484374994, 9.500927734374997],
                            [-2.90087890625, 9.534619140624997],
                            [-2.948144531249994, 9.610742187499994],
                            [-2.98828125, 9.687353515624991],
                            [-3.042626953124994, 9.720898437499997],
                            [-3.095800781249977, 9.752099609374994],
                            [-3.160693359374989, 9.849169921874989],
                            [-3.223535156249994, 9.895458984374997],
                            [-3.289697265624994, 9.882226562499994],
                            [-3.581152343749977, 9.92431640625],
                            [-3.790625, 9.9171875],
                            [-4.18115234375, 9.78173828125],
                            [-4.267187499999977, 9.743261718749991],
                            [-4.332226562499983, 9.645703125],
                            [-4.406201171874983, 9.647998046874989],
                            [-4.526611328125, 9.723486328124991],
                            [-4.625830078124977, 9.713574218749997],
                            [-4.721777343749977, 9.756542968749997],
                            [-5.262304687499977, 10.319677734374991],
                            [-5.523535156249977, 10.426025390625],
                            [-5.490478515625, 11.042382812499994],
                            [-5.250244140625, 11.375781249999989],
                            [-5.288134765624989, 11.827929687499989],
                            [-4.699316406249977, 12.076171875],
                            [-4.4287109375, 12.337597656249997],
                            [-4.480615234374994, 12.672216796874991],
                            [-4.227099609374989, 12.793701171875],
                            [-4.328710937499977, 13.119042968749994],
                            [-4.151025390624994, 13.306201171875003],
                            [-3.947314453124989, 13.402197265624991],
                            [-3.527636718749989, 13.182714843749991],
                            [-3.3017578125, 13.28076171875],
                            [-3.248632812499977, 13.658349609374994],
                            [-2.950830078124994, 13.6484375],
                            [-2.873925781249994, 13.950732421875003],
                            [-2.586718749999989, 14.227587890625003],
                            [-2.113232421874983, 14.16845703125],
                            [-1.97304687499999, 14.45654296875],
                            [-1.049560546875, 14.81953125],
                            [-.760449218749983, 15.047753906249994],
                            [-.235888671874989, 15.059423828124991],
                            [.217480468750011, 14.911474609374991]
                        ]
                    ]
                },
                properties: {
                    name: "Burkina Faso",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [91.94921875000003, 21.50805664062503],
                                [91.85947265625012, 21.532958984375057],
                                [91.90771484374997, 21.722949218750017],
                                [91.94921875000003, 21.50805664062503]
                            ]
                        ],
                        [
                            [
                                [91.87382812500002, 21.832128906249977],
                                [91.8375976562501, 21.750244140625],
                                [91.85068359375012, 21.927050781250045],
                                [91.87382812500002, 21.832128906249977]
                            ]
                        ],
                        [
                            [
                                [91.15078125000005, 22.175195312499966],
                                [91.04472656250002, 22.10517578125001],
                                [91.0794921875, 22.519726562499983],
                                [91.15078125000005, 22.175195312499966]
                            ]
                        ],
                        [
                            [
                                [91.55673828125006, 22.38222656250005],
                                [91.41132812500004, 22.475683593750006],
                                [91.45605468749997, 22.61650390624999],
                                [91.55673828125006, 22.38222656250005]
                            ]
                        ],
                        [
                            [
                                [90.77763671875007, 22.089306640624983],
                                [90.51503906250005, 22.06513671875001],
                                [90.68046875000007, 22.327490234375006],
                                [90.50292968749997, 22.835351562499994],
                                [90.59648437500002, 22.863525390625057],
                                [90.86816406250003, 22.48486328125],
                                [90.77763671875007, 22.089306640624983]
                            ]
                        ],
                        [
                            [
                                [88.94072265625002, 26.24536132812497],
                                [88.97041015625004, 26.250878906250023],
                                [88.95195312500002, 26.412109375],
                                [89.01865234375012, 26.410253906249977],
                                [89.28925781250004, 26.03759765625],
                                [89.54990234375006, 26.005273437499994],
                                [89.57275390625003, 26.13232421875003],
                                [89.67089843750003, 26.21381835937504],
                                [89.8229492187501, 25.94140625000003],
                                [89.82490234375004, 25.56015625],
                                [89.80087890625012, 25.33613281250001],
                                [89.81406250000006, 25.305371093749955],
                                [89.86630859375012, 25.293164062499955],
                                [90.11962890625003, 25.21997070312497],
                                [90.61308593750002, 25.16772460937497],
                                [92.04970703125005, 25.16948242187499],
                                [92.46835937500006, 24.94414062499999],
                                [92.38496093750004, 24.848779296875023],
                                [92.25126953125007, 24.895068359375045],
                                [92.22832031250002, 24.88134765625],
                                [92.22666015625012, 24.77099609374997],
                                [92.11748046875002, 24.493945312500017],
                                [92.06416015625004, 24.374365234375006],
                                [91.84619140624997, 24.17529296875003],
                                [91.72656250000003, 24.20507812499997],
                                [91.35019531250012, 24.06049804687501],
                                [91.16044921875007, 23.66064453125],
                                [91.359375, 23.06835937500003],
                                [91.43623046875004, 23.19990234375001],
                                [91.55351562500002, 22.991552734375006],
                                [91.61953125, 22.97968750000001],
                                [91.75097656250003, 23.053515625000017],
                                [91.75419921875007, 23.287304687499955],
                                [91.79003906249997, 23.361035156249983],
                                [91.937890625, 23.504687500000017],
                                [91.92949218750007, 23.598242187499977],
                                [91.92958984375, 23.68598632812501],
                                [91.97851562500003, 23.691992187499977],
                                [92.04404296875006, 23.677783203125017],
                                [92.24609375000003, 23.683593750000057],
                                [92.33378906250002, 23.242382812499955],
                                [92.36162109375002, 22.929003906250074],
                                [92.46445312500006, 22.734423828125045],
                                [92.49140625000004, 22.685400390625006],
                                [92.5612304687501, 22.04804687500001],
                                [92.57490234375004, 21.978076171875045],
                                [92.58281250000002, 21.940332031249994],
                                [92.5934570312501, 21.46733398437499],
                                [92.63164062500002, 21.306201171875045],
                                [92.33056640624997, 21.439794921874977],
                                [92.17958984375005, 21.293115234375023],
                                [92.32412109375, 20.791845703125063],
                                [92.0560546875, 21.1748046875],
                                [91.86337890625012, 22.350488281249966],
                                [91.7970703125001, 22.297460937500006],
                                [91.48007812500006, 22.884814453125045],
                                [91.2162109375, 22.642236328124994],
                                [90.94560546875002, 22.597021484375034],
                                [90.65625, 23.025488281250006],
                                [90.60400390624997, 23.59135742187499],
                                [90.55566406249997, 23.42153320312505],
                                [90.26914062500012, 23.455859375000017],
                                [90.59091796875012, 23.266406250000045],
                                [90.43505859374997, 22.751904296874955],
                                [90.61611328125, 22.362158203125034],
                                [90.23056640625006, 21.82978515625004],
                                [90.07119140625005, 21.887255859375017],
                                [90.20957031250006, 22.156591796875006],
                                [89.95419921875006, 22.022851562500023],
                                [89.91806640625012, 22.11616210937501],
                                [89.98515625000002, 22.466406250000063],
                                [89.81191406250005, 21.983496093750006],
                                [89.56855468750004, 21.767431640625034],
                                [89.48320312500007, 22.275537109374994],
                                [89.50058593750006, 21.914355468750045],
                                [89.35371093750004, 21.72109375],
                                [89.09394531250004, 21.872753906249983],
                                [89.05, 22.274609374999983],
                                [88.92070312500002, 22.632031249999955],
                                [88.89970703125002, 22.843505859375057],
                                [88.85058593749997, 23.040527343750057],
                                [88.928125, 23.186621093750063],
                                [88.72441406250002, 23.254980468750034],
                                [88.69765625, 23.493017578125034],
                                [88.63574218749997, 23.55],
                                [88.56738281249997, 23.674414062500034],
                                [88.69980468750006, 24.002539062500006],
                                [88.71376953125, 24.069628906250017],
                                [88.72656250000003, 24.186230468749955],
                                [88.7335937500001, 24.23090820312501],
                                [88.72353515625, 24.27490234375],
                                [88.64228515625004, 24.325976562500017],
                                [88.49853515625003, 24.34663085937504],
                                [88.3375, 24.45385742187503],
                                [88.225, 24.460644531249983],
                                [88.14550781250003, 24.485791015624955],
                                [88.07910156249997, 24.549902343750063],
                                [88.02343750000003, 24.62783203125005],
                                [88.03027343749997, 24.66445312500005],
                                [88.0451171875001, 24.713037109374994],
                                [88.1498046875, 24.914648437500034],
                                [88.1888671875, 24.92060546875001],
                                [88.27949218750004, 24.881933593750034],
                                [88.31337890625005, 24.8818359375],
                                [88.37294921875, 24.961523437499977],
                                [88.45625, 25.18842773437504],
                                [88.57382812500006, 25.18789062499999],
                                [88.92978515625012, 25.222998046875063],
                                [88.94414062500002, 25.290771484375],
                                [88.85478515625002, 25.333544921875017],
                                [88.76914062500006, 25.490478515625],
                                [88.50244140624997, 25.537011718749994],
                                [88.14746093749997, 25.811425781250023],
                                [88.1066406250001, 25.841113281250045],
                                [88.15078125000005, 26.08715820312497],
                                [88.33398437499997, 26.257519531249955],
                                [88.44042968749997, 26.369482421875034],
                                [88.38623046875003, 26.471533203125034],
                                [88.35146484375005, 26.482568359374966],
                                [88.36992187500002, 26.564111328124994],
                                [88.51826171875004, 26.517773437499955],
                                [88.68281250000004, 26.291699218749983],
                                [88.94072265625002, 26.24536132812497]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Bangladesh",
                    childNum: 6
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [28.585351562500023, 43.742236328124996],
                            [28.465429687500006, 43.389306640624994],
                            [28.133691406250023, 43.39560546875],
                            [27.92890625000001, 43.1861328125],
                            [27.88886718750001, 42.74970703125],
                            [27.484765625000023, 42.468066406249996],
                            [28.014453125000017, 41.969042968749996],
                            [27.47480468750001, 41.946875],
                            [27.294921875, 42.079541015625],
                            [27.24433593750001, 42.09326171875],
                            [27.01171875, 42.058642578124996],
                            [26.96875, 42.02685546875],
                            [26.884863281250006, 41.991845703124994],
                            [26.615332031250006, 41.964892578124996],
                            [26.549707031250023, 41.896728515625],
                            [26.51142578125001, 41.8263671875],
                            [26.3603515625, 41.8015625],
                            [26.327246093750006, 41.772802734375],
                            [26.31796875, 41.744677734374996],
                            [26.320898437500006, 41.716552734375],
                            [26.200585937500023, 41.743798828124994],
                            [26.107421875, 41.72568359375],
                            [26.085546875, 41.704150390624996],
                            [26.066015625, 41.673242187499994],
                            [26.1435546875, 41.521533203124996],
                            [26.155175781250023, 41.434863281249996],
                            [26.135351562500006, 41.3857421875],
                            [26.06640625, 41.35068359375],
                            [25.92333984375, 41.311914062499994],
                            [25.784960937500017, 41.330419921875],
                            [25.52705078125001, 41.2998046875],
                            [25.381933593750006, 41.26435546875],
                            [25.25117187500001, 41.243554687499994],
                            [24.773730468750017, 41.356103515624994],
                            [24.595996093750017, 41.442724609375],
                            [24.5693359375, 41.4673828125],
                            [24.51826171875001, 41.552539062499996],
                            [24.487890625, 41.555224609374996],
                            [24.056054687500023, 41.527246093749994],
                            [24.03291015625001, 41.469091796875],
                            [24.011328125, 41.46005859375],
                            [23.635156250000023, 41.386767578124996],
                            [23.53583984375001, 41.386035156249996],
                            [23.433398437500017, 41.398730468749996],
                            [23.3720703125, 41.3896484375],
                            [23.23984375, 41.3849609375],
                            [23.15595703125001, 41.322070312499996],
                            [22.916015625, 41.336279296875],
                            [23.00361328125001, 41.73984375],
                            [22.836816406250023, 41.993603515625],
                            [22.344042968750017, 42.31396484375],
                            [22.42207031250001, 42.328857421875],
                            [22.445703125000023, 42.359130859375],
                            [22.523535156250006, 42.440966796874996],
                            [22.53242187500001, 42.481201171875],
                            [22.524218750000017, 42.50390625],
                            [22.43623046875001, 42.6291015625],
                            [22.466796875, 42.84248046875],
                            [22.799902343750006, 42.985742187499994],
                            [22.976855468750017, 43.18798828125],
                            [22.85957031250001, 43.25234375],
                            [22.819726562500023, 43.300732421875],
                            [22.767578125, 43.354150390624994],
                            [22.554589843750023, 43.454492187499994],
                            [22.36962890625, 43.781298828124996],
                            [22.36542968750001, 43.862109375],
                            [22.399023437500006, 43.96953125],
                            [22.420800781250023, 44.007421875],
                            [22.452529688228115, 44.0510441391688],
                            [22.547921095934313, 44.113823956634434],
                            [22.688564844478098, 44.254306249271906],
                            [23.02851562500001, 44.077978515625],
                            [22.868261718750006, 43.947900390624994],
                            [22.919042968750006, 43.83447265625],
                            [25.4970703125, 43.670800781249994],
                            [26.2158203125, 44.007275390625],
                            [27.0869140625, 44.167382812499994],
                            [27.425390625, 44.0205078125],
                            [27.88427734375, 43.987353515624996],
                            [28.221972656250017, 43.772851562499994],
                            [28.585351562500023, 43.742236328124996]
                        ]
                    ]
                },
                properties: {
                    name: "Bulgaria",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [50.60722656250002, 25.883105468750003],
                            [50.57490234375001, 25.806787109374994],
                            [50.465917968750006, 25.965527343749997],
                            [50.46992187500001, 26.228955078124997],
                            [50.5859375, 26.24072265625],
                            [50.60722656250002, 25.883105468750003]
                        ]
                    ]
                },
                properties: {
                    name: "Bahrain",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-73.02685546874994, 21.19238281250003],
                                [-73.16455078125003, 20.979150390625023],
                                [-73.68115234375003, 20.9755859375],
                                [-73.68037109374995, 21.103320312500017],
                                [-73.52309570312497, 21.190820312499966],
                                [-73.23535156249997, 21.15449218750004],
                                [-73.05849609375, 21.313378906249994],
                                [-73.02685546874994, 21.19238281250003]
                            ]
                        ],
                        [
                            [
                                [-73.041015625, 22.429052734375006],
                                [-72.74726562500001, 22.32739257812497],
                                [-73.16191406250002, 22.380712890625006],
                                [-73.041015625, 22.429052734375006]
                            ]
                        ],
                        [
                            [
                                [-74.20673828124998, 22.213769531250023],
                                [-74.27690429687499, 22.183691406250006],
                                [-73.906396484375, 22.527441406250063],
                                [-73.95419921874995, 22.71552734375001],
                                [-73.84995117187503, 22.731054687500063],
                                [-73.83652343749998, 22.538427734374977],
                                [-74.20673828124998, 22.213769531250023]
                            ]
                        ],
                        [
                            [
                                [-74.05751953124997, 22.723486328125034],
                                [-74.27460937499995, 22.71166992187503],
                                [-74.30703125, 22.83959960937497],
                                [-74.05751953124997, 22.723486328125034]
                            ]
                        ],
                        [
                            [
                                [-74.84047851562494, 22.894335937500017],
                                [-75.22333984374995, 23.165332031250074],
                                [-75.13056640624998, 23.267919921875006],
                                [-75.31596679687502, 23.668359374999966],
                                [-74.84047851562494, 22.894335937500017]
                            ]
                        ],
                        [
                            [
                                [-75.66455078124997, 23.45014648437501],
                                [-76.03710937500003, 23.60278320312503],
                                [-76.01044921875001, 23.671386718750057],
                                [-75.66455078124997, 23.45014648437501]
                            ]
                        ],
                        [
                            [
                                [-74.42944335937497, 24.068066406249955],
                                [-74.55092773437502, 23.96894531250001],
                                [-74.52690429687502, 24.105078125000034],
                                [-74.42944335937497, 24.068066406249955]
                            ]
                        ],
                        [
                            [
                                [-77.65771484374994, 24.249462890624955],
                                [-77.75527343750002, 24.163476562500023],
                                [-77.61538085937494, 24.216357421875045],
                                [-77.5615234375, 24.136816406250006],
                                [-77.57373046875, 23.739160156249994],
                                [-77.77128906249999, 23.752539062499977],
                                [-77.99990234374994, 24.219824218750063],
                                [-77.65771484374994, 24.249462890624955]
                            ]
                        ],
                        [
                            [
                                [-75.30839843749999, 24.2],
                                [-75.50322265624996, 24.139062500000023],
                                [-75.40893554687503, 24.265771484374994],
                                [-75.72666015625, 24.68935546875005],
                                [-75.30839843749999, 24.2]
                            ]
                        ],
                        [
                            [
                                [-77.34755859375, 25.013867187499983],
                                [-77.56191406249997, 25.030029296875],
                                [-77.27558593750001, 25.055761718750006],
                                [-77.34755859375, 25.013867187499983]
                            ]
                        ],
                        [
                            [
                                [-77.74384765625001, 24.70742187499999],
                                [-77.74521484375, 24.463476562500034],
                                [-78.04492187499997, 24.287451171875063],
                                [-78.14580078125002, 24.493457031250017],
                                [-78.36650390624993, 24.544189453125057],
                                [-78.435302734375, 24.627587890624994],
                                [-78.24272460937493, 24.65380859375],
                                [-78.21137695312495, 25.191259765624977],
                                [-77.97529296874998, 25.084814453125063],
                                [-77.74384765625001, 24.70742187499999]
                            ]
                        ],
                        [
                            [
                                [-76.64882812499994, 25.487402343750006],
                                [-76.34379882812496, 25.33203124999997],
                                [-76.12661132812497, 25.14052734375005],
                                [-76.16953125, 24.6494140625],
                                [-76.319970703125, 24.81767578124999],
                                [-76.21376953124994, 24.822460937499983],
                                [-76.160400390625, 25.119335937499983],
                                [-76.36928710937502, 25.312597656250006],
                                [-76.62070312499998, 25.43164062500003],
                                [-76.78066406249997, 25.426855468750006],
                                [-76.71083984374997, 25.564892578124983],
                                [-76.64882812499994, 25.487402343750006]
                            ]
                        ],
                        [
                            [
                                [-78.49287109375001, 26.729052734375017],
                                [-77.92246093749998, 26.69111328125001],
                                [-78.74365234374994, 26.50068359375004],
                                [-78.98564453124996, 26.689501953125045],
                                [-78.79804687500001, 26.58242187499999],
                                [-78.59711914062493, 26.797949218750006],
                                [-78.49287109375001, 26.729052734375017]
                            ]
                        ],
                        [
                            [
                                [-77.22563476562496, 25.904199218750023],
                                [-77.40317382812498, 26.02470703124996],
                                [-77.24677734374998, 26.156347656250034],
                                [-77.238623046875, 26.561132812500006],
                                [-77.510595703125, 26.845996093750045],
                                [-77.94375, 26.90356445312503],
                                [-77.53388671874995, 26.903417968750006],
                                [-77.06635742187501, 26.530175781249994],
                                [-77.03828124999998, 26.333447265624983],
                                [-77.16728515624996, 26.240332031250006],
                                [-77.22563476562496, 25.904199218750023]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Bahamas",
                    childNum: 14
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [19.007128906250045, 44.86918945312502],
                            [19.348632812500057, 44.88090820312502],
                            [19.118457031250074, 44.359960937500006],
                            [19.583789062500017, 44.04345703125003],
                            [19.245019531249994, 43.96503906250004],
                            [19.495117187500057, 43.642871093750045],
                            [19.19433593749997, 43.533300781250006],
                            [19.164355468750017, 43.53544921874999],
                            [19.11279296874997, 43.52773437500002],
                            [19.080078125000057, 43.51772460937502],
                            [19.0283203125, 43.53251953125002],
                            [18.97421875, 43.54233398437498],
                            [18.95068359375, 43.52666015624999],
                            [19.036718750000034, 43.35732421875002],
                            [19.026660156250017, 43.292431640624955],
                            [18.97871093750001, 43.28540039062503],
                            [18.934667968750006, 43.339453125000034],
                            [18.85107421875003, 43.34633789062502],
                            [18.749218750000068, 43.283544921875006],
                            [18.67421875000008, 43.230810546875006],
                            [18.623632812500063, 43.027685546875034],
                            [18.488476562500068, 43.01215820312498],
                            [18.44384765625003, 42.96845703125004],
                            [18.46601562500001, 42.777246093749994],
                            [18.54589843750003, 42.64160156249997],
                            [18.436328125000017, 42.559716796874994],
                            [17.667578125000063, 42.897119140624994],
                            [17.585156250000068, 42.93837890625005],
                            [17.650488281250063, 43.006591796875],
                            [17.27382812500005, 43.44575195312501],
                            [16.300097656250017, 44.12451171875],
                            [16.10341796875008, 44.52099609375006],
                            [15.736621093750045, 44.76582031250001],
                            [15.788085937500057, 45.17895507812497],
                            [16.028320312500057, 45.18959960937502],
                            [16.29335937500005, 45.00883789062496],
                            [16.53066406250008, 45.21669921875002],
                            [16.918652343749983, 45.27656249999998],
                            [17.812792968750074, 45.078125],
                            [18.66259765625, 45.07744140624999],
                            [18.83642578125, 44.883251953124955],
                            [19.007128906250045, 44.86918945312502]
                        ]
                    ]
                },
                properties: {
                    name: "Bosnia and Herz.",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [28.14794921875, 56.142919921875],
                            [28.284277343750006, 56.055908203125],
                            [29.375, 55.938720703125],
                            [29.353417968750023, 55.784375],
                            [29.412988281250023, 55.724853515625],
                            [29.482226562500017, 55.6845703125],
                            [29.63007812500001, 55.751171875],
                            [29.6845703125, 55.7697265625],
                            [29.744140625, 55.77041015625],
                            [29.82392578125001, 55.7951171875],
                            [29.881640625000017, 55.832324218749996],
                            [29.93701171875, 55.845263671874996],
                            [30.04267578125001, 55.83642578125],
                            [30.23359375000001, 55.84521484375],
                            [30.625585937500006, 55.666259765625],
                            [30.906835937500006, 55.57001953125],
                            [30.90058593750001, 55.397412109375],
                            [30.82099609375001, 55.3302734375],
                            [30.810546875, 55.306982421875],
                            [30.814453125, 55.2787109375],
                            [30.87744140625, 55.2234375],
                            [30.958886718750023, 55.13759765625],
                            [30.97773437500001, 55.08779296875],
                            [30.97773437500001, 55.05048828125],
                            [30.829882812500017, 54.914990234375],
                            [30.804492187500017, 54.8609375],
                            [30.791015625, 54.806005859375],
                            [30.798828125, 54.783251953124996],
                            [30.984179687500017, 54.6958984375],
                            [31.12128906250001, 54.648486328124996],
                            [31.152148437500017, 54.625341796875],
                            [31.074804687500006, 54.491796875],
                            [31.18476562500001, 54.452978515625],
                            [31.299121093750017, 54.29169921875],
                            [31.403613281250017, 54.195947265625],
                            [31.62841796875, 54.111181640625],
                            [31.7919921875, 54.055908203125],
                            [31.825976562500017, 54.030712890625],
                            [31.837792968750023, 54.00078125],
                            [31.825292968750006, 53.935009765625],
                            [31.783007812500017, 53.85498046875],
                            [31.754199218750017, 53.81044921875],
                            [31.82080078125, 53.791943359375],
                            [31.9921875, 53.796875],
                            [32.20039062500001, 53.78125],
                            [32.45097656250002, 53.6533203125],
                            [32.70429687500001, 53.336328125],
                            [32.64443359375002, 53.32890625],
                            [32.57802734375002, 53.31240234375],
                            [32.469335937500006, 53.2703125],
                            [32.14199218750002, 53.091162109375],
                            [31.849707031250006, 53.106201171875],
                            [31.668261718750017, 53.200927734375],
                            [31.417871093750023, 53.196044921875],
                            [31.38837890625001, 53.184814453125],
                            [31.364550781250017, 53.138964843749996],
                            [31.30292968750001, 53.060888671875],
                            [31.2587890625, 53.01669921875],
                            [31.29511718750001, 52.989794921874996],
                            [31.35302734375, 52.933447265625],
                            [31.442773437500023, 52.86181640625],
                            [31.53515625, 52.7982421875],
                            [31.564843750000023, 52.759228515625],
                            [31.585546875, 52.532470703125],
                            [31.57734375000001, 52.312304687499996],
                            [31.6015625, 52.284814453125],
                            [31.64990234375, 52.26220703125],
                            [31.690625, 52.220654296875],
                            [31.758593750000017, 52.125830078125],
                            [31.76337890625001, 52.10107421875],
                            [31.57373046875, 52.10810546875],
                            [31.345996093750017, 52.10537109375],
                            [31.21796875000001, 52.050244140625],
                            [30.98066406250001, 52.046191406249996],
                            [30.845703125, 51.953076171875],
                            [30.755273437500023, 51.895166015625],
                            [30.667285156250017, 51.814111328125],
                            [30.583886718750023, 51.68896484375],
                            [30.533007812500017, 51.596337890624994],
                            [30.56074218750001, 51.531494140625],
                            [30.602343750000017, 51.471240234374996],
                            [30.611718750000023, 51.40634765625],
                            [30.63251953125001, 51.355419921875],
                            [30.449511718750017, 51.274316406249994],
                            [30.160742187500006, 51.477880859375],
                            [29.346484375000017, 51.382568359375],
                            [29.10205078125, 51.6275390625],
                            [29.06074218750001, 51.625439453125],
                            [29.013085937500023, 51.598925781249996],
                            [28.97773437500001, 51.57177734375],
                            [28.927539062500017, 51.562158203124994],
                            [28.849511718750023, 51.540185546874994],
                            [28.73125, 51.433398437499996],
                            [28.690234375000017, 51.438867187499994],
                            [28.647753906250017, 51.45654296875],
                            [28.599023437500023, 51.542626953124994],
                            [28.532031250000017, 51.562451171875],
                            [27.85859375000001, 51.5923828125],
                            [27.7, 51.477978515625],
                            [27.689746093750017, 51.572412109374994],
                            [27.296289062500023, 51.597412109375],
                            [27.270117187500006, 51.613574218749996],
                            [27.141992187500023, 51.75205078125],
                            [27.074121093750023, 51.76083984375],
                            [26.95283203125001, 51.75400390625],
                            [26.7734375, 51.770703125],
                            [25.785742187500006, 51.923828125],
                            [24.361914062500006, 51.867529296875],
                            [24.280078125000017, 51.774707031249996],
                            [24.126855468750023, 51.6646484375],
                            [23.978320312500017, 51.59130859375],
                            [23.951171875, 51.58505859375],
                            [23.8642578125, 51.623974609375],
                            [23.79169921875001, 51.637109375],
                            [23.706835937500017, 51.64130859375],
                            [23.61376953125, 51.525390625],
                            [23.605273437500017, 51.517919921875],
                            [23.652441406250006, 52.040380859375],
                            [23.175097656250017, 52.28662109375],
                            [23.915429687500023, 52.770263671875],
                            [23.484667968750017, 53.939794921875],
                            [23.55908203125, 53.91982421875],
                            [23.733691406250017, 53.912255859375],
                            [24.191308593750023, 53.950439453125],
                            [24.236621093750017, 53.919970703124996],
                            [24.31796875, 53.89296875],
                            [24.620703125, 53.979833984375],
                            [24.768164062500006, 53.974658203124996],
                            [24.78925781250001, 53.9982421875],
                            [24.82568359375, 54.118994140625],
                            [24.869531250000023, 54.145166015625],
                            [25.04609375000001, 54.133056640625],
                            [25.111425781250006, 54.154931640625],
                            [25.179492187500017, 54.2142578125],
                            [25.46113281250001, 54.292773437499996],
                            [25.505664062500017, 54.264941406249996],
                            [25.52734375, 54.215136718749996],
                            [25.497363281250017, 54.175244140625],
                            [25.573046875000017, 54.139892578125],
                            [25.765234375, 54.17978515625],
                            [25.702539062500023, 54.29296875],
                            [25.61689453125001, 54.310107421874996],
                            [25.557519531250023, 54.310693359375],
                            [25.54736328125, 54.331835937499996],
                            [25.56757812500001, 54.37705078125],
                            [25.62031250000001, 54.460400390625],
                            [25.68515625, 54.535791015625],
                            [25.72480468750001, 54.564257812499996],
                            [25.73164062500001, 54.590380859374996],
                            [25.722460937500017, 54.71787109375],
                            [25.859277343750023, 54.919287109375],
                            [25.964453125, 54.94716796875],
                            [26.09296875000001, 54.9623046875],
                            [26.175195312500023, 55.003271484375],
                            [26.250781250000017, 55.12451171875],
                            [26.291796875000017, 55.139599609375],
                            [26.601171875, 55.130175781249996],
                            [26.6484375, 55.20419921875],
                            [26.775683593750017, 55.273095703125],
                            [26.760156250000023, 55.293359375],
                            [26.68125, 55.306445312499996],
                            [26.49531250000001, 55.318017578125],
                            [26.457617187500006, 55.34248046875],
                            [26.469531250000017, 55.371923828125],
                            [26.51923828125001, 55.44814453125],
                            [26.56660156250001, 55.546484375],
                            [26.5908203125, 55.62265625],
                            [26.593554687500017, 55.667529296874996],
                            [27.052539062500017, 55.83056640625],
                            [27.576757812500006, 55.798779296875],
                            [28.14794921875, 56.142919921875]
                        ]
                    ]
                },
                properties: {
                    name: "Belarus",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-87.8529296875, 17.4228515625],
                                [-87.92998046874996, 17.283007812500017],
                                [-87.826416015625, 17.546289062499994],
                                [-87.8529296875, 17.4228515625]
                            ]
                        ],
                        [
                            [
                                [-88.89404296875, 15.890625],
                                [-89.2328125, 15.888671875],
                                [-89.16147460937503, 17.81484375],
                                [-89.13354492187503, 17.970800781249977],
                                [-88.80634765624998, 17.965527343749983],
                                [-88.52299804687499, 18.445898437500063],
                                [-88.29565429687494, 18.47241210937503],
                                [-88.34926757812494, 18.358837890624983],
                                [-88.1302734375, 18.350732421875023],
                                [-88.08525390624999, 18.226123046875045],
                                [-88.27172851562494, 17.60986328125],
                                [-88.203466796875, 17.5166015625],
                                [-88.31342773437501, 16.632763671874983],
                                [-88.89404296875, 15.890625]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Belize",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-64.73027343749999, 32.29345703125],
                            [-64.86284179687499, 32.273876953125],
                            [-64.66831054687499, 32.38193359375],
                            [-64.73027343749999, 32.29345703125]
                        ]
                    ]
                },
                properties: {
                    name: "Bermuda",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-58.15976562499999, -20.164648437500006],
                            [-58.18017578125, -19.81787109375],
                            [-59.09052734375, -19.286230468750006],
                            [-60.00737304687499, -19.29755859375001],
                            [-61.7568359375, -19.6453125],
                            [-62.276318359375, -20.5625],
                            [-62.27666015624999, -21.066015625],
                            [-62.65097656249999, -22.233691406250003],
                            [-62.84335937499999, -21.99726562500001],
                            [-63.92167968749999, -22.028613281250003],
                            [-63.97612304687499, -22.072558593750003],
                            [-64.26640624999999, -22.603320312500003],
                            [-64.30791015624999, -22.7953125],
                            [-64.32529296874999, -22.82763671875],
                            [-64.373974609375, -22.761035156250003],
                            [-64.4455078125, -22.58535156250001],
                            [-64.477734375, -22.4853515625],
                            [-64.5236328125, -22.37158203125],
                            [-64.60551757812499, -22.228808593750003],
                            [-64.992626953125, -22.109667968750003],
                            [-65.518798828125, -22.09453125],
                            [-65.686181640625, -22.11025390625001],
                            [-65.77104492187499, -22.099609375],
                            [-65.86015624999999, -22.01972656250001],
                            [-66.05859375, -21.879492187500006],
                            [-66.098583984375, -21.835058593750006],
                            [-66.17465820312499, -21.8056640625],
                            [-66.220166015625, -21.802539062500003],
                            [-66.24760742187499, -21.83046875],
                            [-66.28212890625, -21.94746093750001],
                            [-66.3224609375, -22.053125],
                            [-66.365185546875, -22.11376953125],
                            [-66.71171874999999, -22.21630859375],
                            [-66.99111328125, -22.509863281250006],
                            [-67.19487304687499, -22.82167968750001],
                            [-67.362255859375, -22.85517578125001],
                            [-67.57993164062499, -22.891699218750006],
                            [-67.79443359375, -22.879492187500006],
                            [-67.87944335937499, -22.82294921875001],
                            [-67.88173828125, -22.49335937500001],
                            [-68.18642578125, -21.61855468750001],
                            [-68.197021484375, -21.30029296875],
                            [-68.558251953125, -20.901953125],
                            [-68.484326171875, -20.62841796875],
                            [-68.74516601562499, -20.45859375],
                            [-68.75932617187499, -20.115527343750003],
                            [-68.560693359375, -19.967089843750003],
                            [-68.559375, -19.90234375],
                            [-68.578271484375, -19.856542968750006],
                            [-68.69619140625, -19.74072265625],
                            [-68.69829101562499, -19.72109375],
                            [-68.57529296874999, -19.56015625],
                            [-68.462890625, -19.43281250000001],
                            [-68.470166015625, -19.409960937500003],
                            [-68.49199218749999, -19.381933593750006],
                            [-68.85795898437499, -19.093359375],
                            [-68.96831054687499, -18.96796875000001],
                            [-68.97885742187499, -18.81298828125],
                            [-69.026806640625, -18.65625],
                            [-69.09228515625, -18.28242187500001],
                            [-69.145458984375, -18.14404296875],
                            [-69.0939453125, -18.05048828125001],
                            [-69.28232421874999, -17.96484375],
                            [-69.31337890625, -17.943164062500003],
                            [-69.5109375, -17.50605468750001],
                            [-69.51108398437499, -17.5048828125],
                            [-69.510986328125, -17.46035156250001],
                            [-69.521923828125, -17.388964843750003],
                            [-69.645703125, -17.24853515625],
                            [-69.62485351562499, -17.2001953125],
                            [-69.020703125, -16.6421875],
                            [-69.03291015625, -16.47597656250001],
                            [-68.8427734375, -16.337890625],
                            [-69.21757812499999, -16.14912109375001],
                            [-69.4208984375, -15.640625],
                            [-69.17246093749999, -15.236621093750003],
                            [-69.37470703125, -14.962988281250006],
                            [-69.35947265624999, -14.7953125],
                            [-68.87089843749999, -14.169726562500003],
                            [-69.07412109375, -13.682812500000011],
                            [-68.97861328124999, -12.880078125000011],
                            [-68.68525390625, -12.501953125],
                            [-69.57861328125, -10.951757812500006],
                            [-69.228515625, -10.955664062500006],
                            [-68.84833984375, -11.011132812500009],
                            [-68.678369140625, -11.11279296875],
                            [-68.39799804687499, -11.01875],
                            [-68.0716796875, -10.703125],
                            [-67.99169921875, -10.674414062500006],
                            [-67.83500976562499, -10.662792968750011],
                            [-67.72177734374999, -10.68310546875],
                            [-67.416943359375, -10.389843750000011],
                            [-66.575341796875, -9.89990234375],
                            [-65.396142578125, -9.71240234375],
                            [-65.298583984375, -10.146777343750003],
                            [-65.31308593749999, -10.253027343750006],
                            [-65.395458984375, -10.392285156250011],
                            [-65.4369140625, -10.449023437500003],
                            [-65.44711914062499, -10.507421875],
                            [-65.33403320312499, -10.892773437500011],
                            [-65.32377929687499, -11.024804687500009],
                            [-65.389892578125, -11.246289062500011],
                            [-65.1857421875, -11.74951171875],
                            [-64.783447265625, -12.059375],
                            [-64.42050781249999, -12.439746093750003],
                            [-63.68857421874999, -12.47802734375],
                            [-63.3466796875, -12.680078125],
                            [-63.06748046874999, -12.669140625000011],
                            [-62.76547851562499, -12.997265625000011],
                            [-62.11801757812499, -13.159765625],
                            [-62.09477539062499, -13.241992187500003],
                            [-61.944726562499994, -13.40625],
                            [-61.87412109374999, -13.470410156250011],
                            [-61.789941406249994, -13.525585937500011],
                            [-61.57568359375, -13.524804687500009],
                            [-61.51157226562499, -13.541210937500011],
                            [-61.41606445312499, -13.526562500000011],
                            [-61.129150390625, -13.49853515625],
                            [-61.07700195312499, -13.48974609375],
                            [-60.506591796875, -13.78984375],
                            [-60.372705078124994, -14.41875],
                            [-60.273339843749994, -15.088769531250009],
                            [-60.402001953124994, -15.0927734375],
                            [-60.583203125, -15.098339843750011],
                            [-60.53046875, -15.143164062500006],
                            [-60.38046875, -15.318261718750009],
                            [-60.242333984374994, -15.479589843750006],
                            [-60.20664062499999, -15.901953125],
                            [-60.18720703125, -16.132128906250003],
                            [-60.17558593749999, -16.269335937500003],
                            [-58.53793945312499, -16.328222656250006],
                            [-58.49658203125, -16.32666015625],
                            [-58.42368164062499, -16.307910156250003],
                            [-58.37539062499999, -16.28359375],
                            [-58.345605468749994, -16.284375],
                            [-58.35039062499999, -16.490820312500006],
                            [-58.470605468749994, -16.650195312500003],
                            [-58.478125, -16.70068359375],
                            [-58.45981445312499, -16.910742187500006],
                            [-58.417382812499994, -17.08056640625],
                            [-58.39599609375, -17.23427734375001],
                            [-58.34775390624999, -17.28212890625001],
                            [-57.99091796875, -17.51289062500001],
                            [-57.905029296875, -17.532324218750006],
                            [-57.832470703125, -17.512109375],
                            [-57.78886718749999, -17.573046875],
                            [-57.780175781249994, -17.67177734375001],
                            [-57.66166992187499, -17.947363281250006],
                            [-57.58647460937499, -18.12226562500001],
                            [-57.49565429687499, -18.214648437500003],
                            [-57.57402343749999, -18.279296875],
                            [-57.725, -18.733203125],
                            [-57.783105468749994, -18.91425781250001],
                            [-57.716796875, -19.044042968750006],
                            [-58.131494140624994, -19.74453125],
                            [-57.860742187499994, -19.979589843750006],
                            [-57.887597656249994, -20.02041015625001],
                            [-57.96015625, -20.04072265625001],
                            [-58.021142578124994, -20.05517578125],
                            [-58.09375, -20.15107421875001],
                            [-58.15976562499999, -20.164648437500006]
                        ]
                    ]
                },
                properties: {
                    name: "Bolivia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-48.48588867187493, -27.76699218749998],
                                [-48.554589843749994, -27.81220703125004],
                                [-48.542187499999955, -27.57480468749999],
                                [-48.41489257812495, -27.399609375],
                                [-48.48588867187493, -27.76699218749998]
                            ]
                        ],
                        [
                            [
                                [-48.584423828124955, -26.401562499999983],
                                [-48.665771484375, -26.289648437500006],
                                [-48.53974609374998, -26.170312500000023],
                                [-48.584423828124955, -26.401562499999983]
                            ]
                        ],
                        [
                            [
                                [-45.26025390624997, -23.889160156249986],
                                [-45.451416015625, -23.895605468749977],
                                [-45.30234375, -23.727539062500014],
                                [-45.26025390624997, -23.889160156249986]
                            ]
                        ],
                        [
                            [
                                [-44.12929687499994, -23.14189453124999],
                                [-44.36015624999999, -23.17207031250001],
                                [-44.24287109374998, -23.074121093750037],
                                [-44.12929687499994, -23.14189453124999]
                            ]
                        ],
                        [
                            [
                                [-38.90356445312497, -13.473437499999974],
                                [-38.97758789062496, -13.523535156249963],
                                [-39.02216796874998, -13.445605468749989],
                                [-38.907128906249994, -13.401074218749983],
                                [-38.90356445312497, -13.473437499999974]
                            ]
                        ],
                        [
                            [
                                [-38.743847656249955, -13.097070312500037],
                                [-38.668115234374966, -12.880175781249989],
                                [-38.601171875, -12.99257812499998],
                                [-38.743847656249955, -13.097070312500037]
                            ]
                        ],
                        [
                            [
                                [-44.49931640625002, -2.939648437499983],
                                [-44.597753906250006, -3.037597656249943],
                                [-44.4814453125, -2.717578125000031],
                                [-44.49931640625002, -2.939648437499983]
                            ]
                        ],
                        [
                            [
                                [-44.88310546874996, -1.317871093749986],
                                [-45.020849609375034, -1.372363281249974],
                                [-44.978662109374966, -1.267285156249983],
                                [-44.88310546874996, -1.317871093749986]
                            ]
                        ],
                        [
                            [
                                [-51.83251953124997, -1.433789062499969],
                                [-51.938378906249966, -1.452636718749986],
                                [-51.680029296875006, -1.086132812500026],
                                [-51.546044921874966, -.649609375],
                                [-51.25400390624998, -.54140625],
                                [-51.16074218749998, -.666699218750011],
                                [-51.27631835937498, -1.02177734374996],
                                [-51.83251953124997, -1.433789062499969]
                            ]
                        ],
                        [
                            [
                                [-49.62866210937497, -.229199218749969],
                                [-49.11699218749999, -.163574218750014],
                                [-48.39267578124995, -.29736328125],
                                [-48.83359375, -1.390039062500023],
                                [-49.038476562499994, -1.5140625],
                                [-49.17270507812498, -1.41259765625],
                                [-49.233984375000034, -1.59951171874998],
                                [-49.50664062499999, -1.511621093750023],
                                [-49.587890625, -1.712402343749972],
                                [-49.805126953124955, -1.790234375000026],
                                [-50.06572265625002, -1.703808593749997],
                                [-50.50761718749999, -1.787988281250009],
                                [-50.759765625, -1.240234374999972],
                                [-50.72949218749997, -1.126757812499946],
                                [-50.57695312499999, -1.103125],
                                [-50.709619140624994, -1.07773437499999],
                                [-50.796093749999955, -.90625],
                                [-50.6455078125, -.27285156249998],
                                [-50.24824218749998, -.11640625],
                                [-49.62866210937497, -.229199218749969]
                            ]
                        ],
                        [
                            [
                                [-50.65288085937499, -.131640624999989],
                                [-50.926367187500034, -.327343749999983],
                                [-51.03808593749994, -.225878906250003],
                                [-50.84218750000002, -.050195312500009],
                                [-50.65288085937499, -.131640624999989]
                            ]
                        ],
                        [
                            [
                                [-49.44389648437499, -.112402343749977],
                                [-49.83007812499997, -.093896484375023],
                                [-49.50346679687496, .083691406250011],
                                [-49.37231445312497, .001074218749963],
                                [-49.44389648437499, -.112402343749977]
                            ]
                        ],
                        [
                            [
                                [-49.73823242187498, .26816406250002],
                                [-49.917089843750006, -.023193359375014],
                                [-50.339453125, .043359375000051],
                                [-50.27265624999998, .231738281249974],
                                [-49.73823242187498, .26816406250002]
                            ]
                        ],
                        [
                            [
                                [-50.42612304687498, .139257812500048],
                                [-50.44394531249998, -.007666015624949],
                                [-50.623925781249966, .054394531249983],
                                [-50.372753906249955, .590869140625031],
                                [-50.33227539062497, .259033203125028],
                                [-50.42612304687498, .139257812500048]
                            ]
                        ],
                        [
                            [
                                [-50.152929687500006, .393017578125054],
                                [-50.26132812499998, .359179687500003],
                                [-50.281689453124955, .51650390624998],
                                [-50.05883789062503, .638037109374963],
                                [-50.152929687500006, .393017578125054]
                            ]
                        ],
                        [
                            [
                                [-50.29897460937502, 1.93852539062496],
                                [-50.45610351562496, 1.910498046875034],
                                [-50.49101562499996, 2.128613281249969],
                                [-50.34199218749998, 2.14174804687498],
                                [-50.29897460937502, 1.93852539062496]
                            ]
                        ],
                        [
                            [
                                [-59.69970703125, 4.353515625],
                                [-59.73857421874993, 4.226757812500026],
                                [-59.62021484374998, 4.023144531250026],
                                [-59.557763671874966, 3.960009765625031],
                                [-59.551123046875034, 3.933544921874969],
                                [-59.854394531249994, 3.5875],
                                [-59.99433593749998, 2.689990234375031],
                                [-59.88964843749997, 2.362939453125009],
                                [-59.75522460937495, 2.27412109375004],
                                [-59.74350585937498, 2.12163085937496],
                                [-59.75175781249996, 1.962402343750028],
                                [-59.75620117187498, 1.900634765624972],
                                [-59.666601562500006, 1.746289062499969],
                                [-59.53569335937499, 1.7],
                                [-59.23120117187494, 1.376025390625031],
                                [-58.82177734374994, 1.201220703125031],
                                [-58.787207031250006, 1.208496093750014],
                                [-58.73032226562498, 1.247509765625054],
                                [-58.68461914062499, 1.28105468749996],
                                [-58.511865234374966, 1.284667968749986],
                                [-58.506054687499926, 1.438671875000011],
                                [-58.39580078124993, 1.481738281249989],
                                [-58.38037109375, 1.530224609375011],
                                [-58.34067382812498, 1.587548828125051],
                                [-58.03466796875, 1.520263671875014],
                                [-57.9828125, 1.648437500000014],
                                [-57.87343750000002, 1.667285156250045],
                                [-57.79565429687497, 1.7],
                                [-57.59443359375001, 1.704101562499986],
                                [-57.54575195312495, 1.726074218750028],
                                [-57.31748046874998, 1.963476562499991],
                                [-57.27558593749998, 1.959228515625014],
                                [-57.189599609374966, 1.981591796875037],
                                [-57.11889648437494, 2.013964843749974],
                                [-57.09267578125002, 2.005810546874997],
                                [-57.03759765625, 1.936474609374997],
                                [-56.96953124999999, 1.91640625],
                                [-56.48281249999994, 1.942138671874986],
                                [-56.019921874999966, 1.842236328124983],
                                [-55.96333007812498, 1.85708007812498],
                                [-55.929638671874955, 1.8875],
                                [-55.92163085937503, 1.976660156250006],
                                [-55.91533203124999, 2.039550781250028],
                                [-55.96196289062496, 2.09511718749998],
                                [-56.02006835937499, 2.15815429687504],
                                [-56.073632812499994, 2.236767578124969],
                                [-56.13769531249997, 2.259033203124986],
                                [-56.12939453124997, 2.299511718749969],
                                [-56.08779296875002, 2.341308593750043],
                                [-56.045117187499955, 2.364404296875037],
                                [-56.02036132812498, 2.392773437500054],
                                [-55.993505859375006, 2.497509765624983],
                                [-55.9755859375, 2.515966796875006],
                                [-55.957470703124955, 2.52045898437504],
                                [-55.730566406250006, 2.406152343750023],
                                [-55.385351562500006, 2.440625],
                                [-55.34399414062503, 2.488769531249972],
                                [-55.28603515625002, 2.49965820312498],
                                [-55.18769531249998, 2.547509765625037],
                                [-55.114111328125006, 2.539208984375037],
                                [-55.07031249999994, 2.548339843750028],
                                [-55.005810546874955, 2.592968749999983],
                                [-54.97866210937502, 2.597656250000043],
                                [-54.968408203124966, 2.548339843750028],
                                [-54.92656249999999, 2.497363281250045],
                                [-54.876074218750006, 2.450390624999969],
                                [-54.72221679687499, 2.441650390624972],
                                [-54.69741210937502, 2.359814453124997],
                                [-54.66186523437497, 2.327539062499994],
                                [-54.61625976562499, 2.326757812500006],
                                [-54.59194335937502, 2.313769531250031],
                                [-54.55048828125001, 2.293066406249991],
                                [-54.51508789062498, 2.245458984374963],
                                [-54.43310546875, 2.207519531250057],
                                [-54.13007812499998, 2.121044921875026],
                                [-53.76777343749998, 2.354833984375048],
                                [-52.90346679687502, 2.211523437499977],
                                [-52.58300781250003, 2.528906249999977],
                                [-52.327880859375, 3.18173828125002],
                                [-51.65253906249998, 4.061279296874972],
                                [-51.54707031250001, 4.31088867187502],
                                [-51.219921874999955, 4.093603515624991],
                                [-50.71440429687502, 2.134033203125],
                                [-50.458886718749994, 1.829589843749972],
                                [-49.957128906250006, 1.65986328125004],
                                [-49.898876953124955, 1.16298828124998],
                                [-50.29443359374997, .835742187500003],
                                [-50.755078124999955, .222558593749966],
                                [-51.28291015625001, -.085205078125028],
                                [-51.98081054687498, -1.367968749999974],
                                [-52.22924804687497, -1.3625],
                                [-52.664160156250034, -1.551757812500028],
                                [-51.94755859374996, -1.586718749999946],
                                [-50.89492187500002, -.937597656249963],
                                [-50.690039062500006, -1.761718749999986],
                                [-50.40322265625002, -2.015527343750009],
                                [-49.999218749999955, -1.831835937499974],
                                [-49.71953125000002, -1.926367187499963],
                                [-49.31367187500001, -1.731738281250003],
                                [-49.63652343749996, -2.656933593750026],
                                [-49.45751953125, -2.504589843749983],
                                [-49.21103515624998, -1.916503906249986],
                                [-48.99130859374998, -1.829785156249997],
                                [-48.71000976562496, -1.487695312500023],
                                [-48.46293945312499, -1.613964843749997],
                                [-48.349804687499926, -1.482128906249955],
                                [-48.46806640624996, -1.393847656250003],
                                [-48.44980468749998, -1.145507812499943],
                                [-48.11508789062498, -.7375],
                                [-47.557324218749955, -.669921874999957],
                                [-47.418652343749955, -.765917968749974],
                                [-47.39809570312502, -.626660156250026],
                                [-45.45859374999995, -1.35625],
                                [-45.32915039062496, -1.71728515625],
                                [-45.07636718749998, -1.466406249999949],
                                [-44.72114257812498, -1.733496093750006],
                                [-44.778515624999955, -1.798828125],
                                [-44.651269531249966, -1.745800781250026],
                                [-44.537792968749955, -2.052734374999943],
                                [-44.75634765624997, -2.265527343749952],
                                [-44.66240234375002, -2.373242187499955],
                                [-44.435449218749966, -2.168066406249991],
                                [-44.38183593749997, -2.365527343749989],
                                [-44.52011718749998, -2.40546875000004],
                                [-44.589013671874994, -2.573437499999983],
                                [-44.72304687500002, -3.204785156249997],
                                [-44.43754882812496, -2.944433593749977],
                                [-44.228613281250006, -2.471289062499949],
                                [-44.105566406250006, -2.493457031250031],
                                [-44.19267578124999, -2.809570312499943],
                                [-43.93291015624999, -2.583496093749986],
                                [-43.45512695312499, -2.502050781250006],
                                [-43.38007812499998, -2.376074218750006],
                                [-42.93671874999998, -2.465039062500011],
                                [-42.24960937499998, -2.7919921875],
                                [-41.876171874999926, -2.746582031249986],
                                [-41.479931640624955, -2.916503906249972],
                                [-40.474560546874926, -2.795605468750026],
                                [-39.96469726562498, -2.861523437499955],
                                [-38.475781249999955, -3.717480468749997],
                                [-38.04882812500003, -4.216406250000034],
                                [-37.626318359375006, -4.592089843750003],
                                [-37.30146484375001, -4.713085937499969],
                                [-37.174658203125006, -4.912402343749974],
                                [-36.590722656249966, -5.097558593749952],
                                [-35.549414062500006, -5.129394531249957],
                                [-35.39257812499994, -5.250878906250009],
                                [-34.833886718749994, -7.024414062500014],
                                [-34.83466796874998, -7.97148437499996],
                                [-35.34086914062499, -9.230664062499983],
                                [-35.76396484374993, -9.702539062500023],
                                [-35.890820312499926, -9.687011718749957],
                                [-35.88544921875001, -9.84765625],
                                [-36.39833984374994, -10.484082031249983],
                                [-36.768310546875, -10.671679687500017],
                                [-37.18281249999998, -11.06845703125002],
                                [-37.35600585937502, -11.403906249999977],
                                [-37.35922851562495, -11.252539062499963],
                                [-37.68872070312503, -12.1],
                                [-38.019238281249955, -12.591308593750028],
                                [-38.401757812499994, -12.966210937500023],
                                [-38.69096679687502, -12.623925781250009],
                                [-38.85175781250001, -12.790136718750034],
                                [-38.76372070312502, -12.9072265625],
                                [-38.835302734375034, -13.147167968750026],
                                [-39.030908203124994, -13.365136718750023],
                                [-39.08935546875, -13.588183593749989],
                                [-38.988623046875006, -13.61503906249996],
                                [-39.04814453124996, -14.043945312500028],
                                [-38.94233398437498, -14.030664062499994],
                                [-39.05957031249997, -14.654785156249957],
                                [-38.88061523437503, -15.864257812499972],
                                [-39.20288085937503, -17.178125],
                                [-39.154003906249926, -17.70390625000003],
                                [-39.650781249999966, -18.252343750000037],
                                [-39.78330078124998, -19.571777343749986],
                                [-40.001367187499994, -19.74199218750003],
                                [-40.39594726562501, -20.56943359375002],
                                [-40.78925781250001, -20.90605468750003],
                                [-40.954541015624926, -21.237890624999963],
                                [-41.04726562499999, -21.505664062499974],
                                [-41.00029296875002, -21.99902343750003],
                                [-41.70551757812498, -22.30966796874999],
                                [-41.980419921874955, -22.580664062499963],
                                [-42.042382812499966, -22.947070312500003],
                                [-42.95830078124996, -22.96708984374999],
                                [-43.154296875, -22.725195312500006],
                                [-43.22416992187502, -22.991210937500014],
                                [-43.898828124999966, -23.10146484375001],
                                [-43.97382812499998, -23.057324218749983],
                                [-43.675976562499955, -23.00947265625001],
                                [-43.86616210937498, -22.910546875000023],
                                [-44.63725585937496, -23.05546875],
                                [-44.67382812499994, -23.206640625000034],
                                [-44.56967773437495, -23.27402343749999],
                                [-45.32539062499998, -23.59970703124999],
                                [-45.464306640624955, -23.802539062500017],
                                [-45.97207031250002, -23.795507812500006],
                                [-46.86728515624998, -24.236328125000014],
                                [-47.989160156249994, -25.03574218749999],
                                [-47.92939453124998, -25.16826171874999],
                                [-48.20273437499998, -25.41650390625003],
                                [-48.18593749999994, -25.309863281249974],
                                [-48.402490234374994, -25.27207031249999],
                                [-48.47612304687499, -25.44296875],
                                [-48.73173828124993, -25.36875],
                                [-48.6921875, -25.49150390625003],
                                [-48.40117187500002, -25.59736328125001],
                                [-48.665771484375, -25.844335937499963],
                                [-48.576318359374994, -25.935449218749966],
                                [-48.61943359374996, -26.17939453125001],
                                [-48.74829101562503, -26.26865234374999],
                                [-48.55415039062498, -27.195996093749997],
                                [-48.62080078124998, -28.075585937499966],
                                [-48.799658203125006, -28.575292968749977],
                                [-49.27128906249999, -28.87119140625005],
                                [-49.745996093749966, -29.363183593749994],
                                [-50.299511718749955, -30.42578125000003],
                                [-50.92138671874997, -31.25839843750002],
                                [-52.039208984374994, -32.11484374999996],
                                [-52.063232421875, -31.830371093750017],
                                [-51.68066406249994, -31.774609375000026],
                                [-51.272167968749955, -31.476953125000037],
                                [-51.16142578124996, -31.11884765625001],
                                [-50.980078125000034, -31.09423828124997],
                                [-50.94082031249994, -30.903710937499966],
                                [-50.68930664062495, -30.70419921874999],
                                [-50.71630859374994, -30.425976562499983],
                                [-50.58193359375002, -30.438867187500037],
                                [-50.56352539062499, -30.25361328125004],
                                [-51.02495117187493, -30.36865234375003],
                                [-51.29804687499998, -30.03486328124997],
                                [-51.15727539062499, -30.364257812500014],
                                [-51.283056640625034, -30.751562499999963],
                                [-51.35908203124998, -30.674511718749983],
                                [-51.506298828124955, -31.104492187500014],
                                [-51.97246093749999, -31.383789062499986],
                                [-52.19355468749998, -31.885546874999974],
                                [-52.12739257812501, -32.1677734375],
                                [-52.652246093749994, -33.137792968750006],
                                [-53.37060546874997, -33.74218750000003],
                                [-53.39755859374995, -33.737304687500014],
                                [-53.46357421875001, -33.70986328125002],
                                [-53.531347656250034, -33.65546875000004],
                                [-53.531347656250034, -33.1708984375],
                                [-53.511865234374966, -33.10869140625003],
                                [-53.482861328124926, -33.068554687500026],
                                [-53.39521484375001, -33.01035156249998],
                                [-53.31010742187499, -32.927050781249974],
                                [-53.21406249999998, -32.82109375],
                                [-53.12558593749998, -32.73671875],
                                [-53.15727539062496, -32.680078125],
                                [-53.601708984374994, -32.40302734374997],
                                [-53.76171875, -32.05683593749997],
                                [-53.920605468749926, -31.95234375],
                                [-54.220556640625034, -31.855175781249997],
                                [-54.58764648437503, -31.48515625000003],
                                [-55.036035156249994, -31.27900390625004],
                                [-55.091162109375034, -31.31396484374997],
                                [-55.173535156249926, -31.279589843749974],
                                [-55.557324218749955, -30.8759765625],
                                [-55.60302734375003, -30.85078125000001],
                                [-55.62714843749998, -30.858105468749997],
                                [-55.650488281250034, -30.89208984375],
                                [-55.66523437500001, -30.92490234375002],
                                [-55.807763671874994, -31.036718749999977],
                                [-55.87368164062502, -31.069628906250017],
                                [-55.95200195312498, -31.08085937499999],
                                [-56.0046875, -31.079199218750006],
                                [-56.01845703125002, -30.991894531249983],
                                [-55.998974609374955, -30.837207031250003],
                                [-56.4072265625, -30.44746093750001],
                                [-56.83271484374998, -30.107226562499974],
                                [-57.120507812499994, -30.144433593749994],
                                [-57.21445312499995, -30.283398437499983],
                                [-57.55229492187496, -30.261230468749986],
                                [-57.60888671875003, -30.187792968750045],
                                [-57.563867187499994, -30.139941406249974],
                                [-57.40522460937501, -30.03388671875004],
                                [-57.22465820312499, -29.782128906249994],
                                [-56.938623046874994, -29.594824218750034],
                                [-55.890527343749994, -28.370019531249994],
                                [-55.68725585937497, -28.38164062499996],
                                [-55.72548828125002, -28.20410156250003],
                                [-55.10151367187501, -27.866796874999963],
                                [-54.82910156250003, -27.55058593750003],
                                [-54.32700195312495, -27.423535156249997],
                                [-53.83818359375002, -27.121093750000014],
                                [-53.668554687500006, -26.288183593749977],
                                [-53.89116210937499, -25.66884765625001],
                                [-54.15458984374999, -25.523046874999963],
                                [-54.44394531249998, -25.625],
                                [-54.615869140624994, -25.576074218750023],
                                [-54.61054687499998, -25.432714843750034],
                                [-54.47314453124997, -25.22021484375],
                                [-54.43623046875001, -25.12128906250001],
                                [-54.281005859375, -24.30605468750001],
                                [-54.31826171874994, -24.128125],
                                [-54.26689453124996, -24.06582031250001],
                                [-54.241796875, -24.047265624999966],
                                [-54.44023437500002, -23.90175781249998],
                                [-54.62548828125, -23.8125],
                                [-54.98266601562494, -23.974511718749966],
                                [-55.081884765625006, -23.997656249999977],
                                [-55.1943359375, -24.017480468750023],
                                [-55.28691406249993, -24.00429687499999],
                                [-55.366308593750034, -23.99101562499996],
                                [-55.41591796875002, -23.95136718749997],
                                [-55.4423828125, -23.86533203125002],
                                [-55.4423828125, -23.792578125000034],
                                [-55.458886718749966, -23.686718750000054],
                                [-55.51845703124994, -23.627246093750017],
                                [-55.53828124999998, -23.580957031249994],
                                [-55.61767578125, -22.67148437499999],
                                [-55.74663085937499, -22.51269531249997],
                                [-55.753271484375006, -22.410156250000043],
                                [-55.84916992187499, -22.307617187500014],
                                [-55.991406249999926, -22.28115234375005],
                                [-56.18984374999994, -22.28115234375005],
                                [-56.246044921874926, -22.26464843749997],
                                [-56.39487304687498, -22.092675781250023],
                                [-56.44780273437502, -22.07617187500003],
                                [-56.77519531249999, -22.261328125],
                                [-57.955908203125034, -22.109179687500003],
                                [-57.94267578124999, -21.79833984375],
                                [-57.830224609374994, -20.99794921875001],
                                [-57.91513671874998, -20.690332031249966],
                                [-57.97905273437493, -20.65732421874999],
                                [-58.00224609374996, -20.465429687499977],
                                [-58.02539062499997, -20.41582031249999],
                                [-58.05844726562495, -20.38613281249998],
                                [-58.091503906249926, -20.33320312500004],
                                [-58.124609375000034, -20.293457031250014],
                                [-58.13779296874995, -20.237304687500043],
                                [-58.15976562499998, -20.164648437499977],
                                [-58.09375, -20.15107421874997],
                                [-58.021142578124994, -20.05517578124997],
                                [-57.96015625000001, -20.04072265625004],
                                [-57.887597656249966, -20.020410156249994],
                                [-57.860742187499994, -19.97958984375002],
                                [-58.029931640624994, -19.83271484375004],
                                [-58.131494140624994, -19.74453125],
                                [-57.71679687499997, -19.044042968750034],
                                [-57.73085937499999, -18.91718750000004],
                                [-57.783105468749994, -18.91425781249997],
                                [-57.725, -18.73320312500003],
                                [-57.57402343749993, -18.279296875000014],
                                [-57.49565429687496, -18.21464843749999],
                                [-57.58647460937499, -18.122265625],
                                [-57.66166992187493, -17.94736328124999],
                                [-57.78017578125002, -17.67177734374998],
                                [-57.78886718750002, -17.573046875000017],
                                [-57.83247070312501, -17.512109375000037],
                                [-57.90502929687497, -17.53232421874999],
                                [-57.990917968749955, -17.512890625000026],
                                [-58.20556640625, -17.363085937499974],
                                [-58.347753906250006, -17.282128906249994],
                                [-58.39599609374997, -17.234277343750023],
                                [-58.417382812499994, -17.08056640624997],
                                [-58.459814453125006, -16.910742187500006],
                                [-58.478125, -16.70068359375003],
                                [-58.470605468749994, -16.650195312500045],
                                [-58.35039062500002, -16.49082031249999],
                                [-58.34560546875002, -16.284375],
                                [-58.375390624999966, -16.283593749999966],
                                [-58.423681640625034, -16.30791015625003],
                                [-58.49658203124994, -16.32666015625003],
                                [-58.537939453125034, -16.32822265624999],
                                [-60.17558593749996, -16.26933593749999],
                                [-60.187207031249955, -16.132128906250017],
                                [-60.206640625, -15.90195312500002],
                                [-60.242333984374994, -15.479589843750034],
                                [-60.38046874999998, -15.318261718750023],
                                [-60.53046874999998, -15.143164062499977],
                                [-60.58320312499998, -15.098339843749983],
                                [-60.273339843749994, -15.088769531249994],
                                [-60.372705078124994, -14.41875],
                                [-60.506591796875, -13.78984375],
                                [-61.077001953125034, -13.489746093750014],
                                [-61.129150390625, -13.498535156250028],
                                [-61.41606445312502, -13.526562499999969],
                                [-61.511572265625006, -13.541210937500011],
                                [-61.789941406249966, -13.525585937500026],
                                [-61.87412109374998, -13.470410156249983],
                                [-61.944726562499966, -13.40625],
                                [-62.09477539062499, -13.241992187499989],
                                [-62.118017578125006, -13.15976562500002],
                                [-62.765478515625034, -12.99726562500004],
                                [-63.01518554687502, -12.80556640624998],
                                [-63.067480468750006, -12.669140624999983],
                                [-63.34667968749994, -12.68007812499999],
                                [-63.68857421874998, -12.478027343749957],
                                [-64.42050781249995, -12.439746093749974],
                                [-64.783447265625, -12.059375],
                                [-65.18574218749998, -11.749511718749957],
                                [-65.389892578125, -11.246289062500011],
                                [-65.33403320312499, -10.892773437500026],
                                [-65.44711914062503, -10.507421875000034],
                                [-65.4369140625, -10.449023437499946],
                                [-65.39545898437498, -10.392285156250026],
                                [-65.31308593749998, -10.253027343749991],
                                [-65.29858398437497, -10.146777343750017],
                                [-65.39614257812494, -9.712402343749986],
                                [-66.57534179687502, -9.899902343749986],
                                [-67.41694335937495, -10.389843749999969],
                                [-67.72177734374998, -10.683105468749943],
                                [-67.83500976562496, -10.662792968749983],
                                [-67.99169921875, -10.674414062499949],
                                [-68.07167968749994, -10.703125],
                                [-68.39799804687499, -11.01875],
                                [-68.678369140625, -11.11279296875],
                                [-68.84833984374998, -11.01113281249998],
                                [-69.228515625, -10.955664062499963],
                                [-69.46254882812497, -10.948144531250023],
                                [-69.57861328125, -10.951757812499963],
                                [-69.67402343749998, -10.9541015625],
                                [-69.83979492187501, -10.93339843749996],
                                [-69.96035156249997, -10.92988281250004],
                                [-70.06630859374997, -10.982421875],
                                [-70.22006835937503, -11.04765625],
                                [-70.29038085937498, -11.064257812499974],
                                [-70.34199218750001, -11.066699218750017],
                                [-70.39228515624995, -11.058593749999972],
                                [-70.45087890624998, -11.024804687500009],
                                [-70.53325195312496, -10.946875],
                                [-70.59653320312498, -10.976855468750017],
                                [-70.642333984375, -11.010253906249986],
                                [-70.59916992187499, -9.620507812500009],
                                [-70.54111328124998, -9.4375],
                                [-70.60791015625, -9.463671875000031],
                                [-70.63691406249995, -9.478222656249969],
                                [-71.041748046875, -9.81875],
                                [-71.11528320312499, -9.852441406250009],
                                [-71.33940429687499, -9.988574218750031],
                                [-72.18159179687495, -10.003710937500003],
                                [-72.37905273437497, -9.51015625],
                                [-73.20942382812493, -9.411425781249946],
                                [-73.08984375, -9.26572265625002],
                                [-72.970361328125, -9.120117187500028],
                                [-72.97402343750002, -8.9931640625],
                                [-73.07050781249995, -8.8828125],
                                [-73.203125, -8.719335937499991],
                                [-73.30244140624995, -8.654003906250011],
                                [-73.36040039062496, -8.479296875000031],
                                [-73.39814453125001, -8.458984374999986],
                                [-73.54912109374993, -8.34580078125002],
                                [-73.73203125, -7.875390625],
                                [-73.72041015624993, -7.782519531250017],
                                [-73.76689453124999, -7.753515624999963],
                                [-73.82207031249996, -7.738964843750026],
                                [-73.89462890624998, -7.654785156250014],
                                [-73.946875, -7.611230468750023],
                                [-73.98173828124996, -7.58505859375002],
                                [-74.00205078125003, -7.556054687499966],
                                [-73.98173828124996, -7.535742187500006],
                                [-73.95849609374994, -7.506640625000031],
                                [-73.96430664062498, -7.378906250000028],
                                [-73.74946289062498, -7.335351562500037],
                                [-73.72041015624993, -7.309277343749969],
                                [-73.758203125, -7.172753906249952],
                                [-73.79301757812499, -7.135058593750003],
                                [-73.75810546874999, -6.90576171875],
                                [-73.137353515625, -6.4658203125],
                                [-73.23554687500001, -6.098437500000017],
                                [-73.209375, -6.028710937500023],
                                [-73.16289062499996, -5.933398437499974],
                                [-72.97988281249997, -5.634863281249991],
                                [-72.88706054687498, -5.122753906250026],
                                [-72.83193359374994, -5.09375],
                                [-72.69873046874997, -5.067187499999989],
                                [-72.60834960937495, -5.009570312499974],
                                [-72.46899414062497, -4.901269531250023],
                                [-72.35283203124993, -4.786035156249994],
                                [-72.25678710937501, -4.74892578124998],
                                [-71.8447265625, -4.504394531249986],
                                [-70.97368164062499, -4.350488281249994],
                                [-70.86601562499999, -4.229589843749963],
                                [-70.79951171874995, -4.173339843749957],
                                [-70.72158203124997, -4.15888671875004],
                                [-70.53066406249997, -4.167578125000034],
                                [-70.40463867187498, -4.150097656250026],
                                [-70.34365234375, -4.193652343750017],
                                [-70.31689453124994, -4.246972656250037],
                                [-70.23916015625002, -4.30117187499998],
                                [-70.12880859375, -4.286621093749943],
                                [-70.05332031249998, -4.333105468750006],
                                [-70.00395507812496, -4.327246093749963],
                                [-69.97202148437503, -4.30117187499998],
                                [-69.96591796875003, -4.2359375],
                                [-69.94819335937498, -4.200585937500009],
                                [-69.66904296875003, -2.667675781249997],
                                [-69.40024414062498, -1.194921874999977],
                                [-69.63398437500001, -.50927734375],
                                [-70.07050781249993, -.13886718750004],
                                [-70.05390624999993, .578613281250028],
                                [-69.47211914062498, .72993164062504],
                                [-69.15332031249994, .65878906250002],
                                [-69.31181640624999, 1.050488281249969],
                                [-69.85214843750003, 1.05952148437504],
                                [-69.84858398437493, 1.708740234375043],
                                [-68.17656249999999, 1.719824218749991],
                                [-68.25595703125, 1.845507812500017],
                                [-68.19379882812495, 1.987011718749983],
                                [-67.93623046874998, 1.748486328124969],
                                [-67.40043945312499, 2.116699218750028],
                                [-67.11923828124998, 1.703613281249986],
                                [-67.082275390625, 1.185400390625006],
                                [-66.87602539062499, 1.223046875000037],
                                [-66.34711914062498, .7671875],
                                [-66.06005859375003, .78535156250004],
                                [-65.68144531249999, .983447265624989],
                                [-65.52299804687493, .843408203124966],
                                [-65.55605468750002, .687988281250014],
                                [-65.47338867187497, .691259765624977],
                                [-65.10375976562497, 1.108105468749983],
                                [-64.20502929687493, 1.52949218750004],
                                [-64.00849609374995, 1.931591796874969],
                                [-63.43251953124994, 2.155566406250045],
                                [-63.389257812500006, 2.411914062500045],
                                [-64.04658203124998, 2.502392578124997],
                                [-64.22109375000002, 3.587402343749972],
                                [-64.66899414062496, 4.01181640625002],
                                [-64.788671875, 4.276025390625023],
                                [-64.57636718750001, 4.139892578125],
                                [-64.19248046874995, 4.126855468750009],
                                [-64.02148437500003, 3.929101562500051],
                                [-63.33867187500002, 3.943896484375045],
                                [-62.85698242187502, 3.593457031249969],
                                [-62.71210937499998, 4.01791992187502],
                                [-62.41064453124994, 4.156738281249972],
                                [-62.153125, 4.098388671874986],
                                [-61.82084960937496, 4.197021484375],
                                [-61.28007812500002, 4.516894531249974],
                                [-61.00283203125002, 4.535253906249991],
                                [-60.603857421875006, 4.94936523437498],
                                [-60.671972656250034, 5.164355468749989],
                                [-60.71196289062499, 5.191552734375023],
                                [-60.742138671874926, 5.202050781250037],
                                [-60.6513671875, 5.221142578125011],
                                [-60.45952148437499, 5.188085937500034],
                                [-60.40878906249998, 5.21015625],
                                [-60.33520507812497, 5.199316406250006],
                                [-60.241650390624926, 5.257958984374966],
                                [-60.14204101562498, 5.238818359374974],
                                [-59.990673828124955, 5.082861328124991],
                                [-60.14863281249998, 4.533251953125031],
                                [-59.69970703125, 4.353515625]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Brazil",
                    childNum: 17
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-59.493310546874994, 13.081982421874997],
                            [-59.611328125, 13.102099609374989],
                            [-59.6466796875, 13.303125],
                            [-59.427636718749994, 13.152783203124997],
                            [-59.493310546874994, 13.081982421874997]
                        ]
                    ]
                },
                properties: {
                    name: "Barbados",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [115.02675781250005, 4.899707031249989],
                                [115.1400390625, 4.899755859374991],
                                [115.290625, 4.352587890624989],
                                [115.10703125000006, 4.390429687499974],
                                [115.02675781250005, 4.899707031249989]
                            ]
                        ],
                        [
                            [
                                [115.02675781250005, 4.899707031249989],
                                [114.74667968750006, 4.718066406250017],
                                [114.84023437500005, 4.393212890625009],
                                [114.65410156250007, 4.037646484375045],
                                [114.0638671875, 4.592675781249966],
                                [114.42441406250006, 4.660400390625],
                                [114.99541015625002, 5.022363281250023],
                                [115.02675781250005, 4.899707031249989]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Brunei",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [91.63193359375003, 27.759960937499997],
                            [91.5947265625, 27.557666015624996],
                            [91.74306640625002, 27.442529296874994],
                            [91.85126953125001, 27.438623046874994],
                            [91.95097656249999, 27.458300781249996],
                            [91.99082031250003, 27.4501953125],
                            [92.044921875, 27.364697265624997],
                            [92.08339843750002, 27.290625],
                            [92.03115234375002, 27.214306640624997],
                            [92.00253906250003, 27.147363281249994],
                            [91.99228515625003, 27.099902343749996],
                            [91.99863281250003, 27.079296875],
                            [92.03085937500003, 27.040820312499996],
                            [92.06816406249999, 26.9751953125],
                            [92.07343750000001, 26.91484375],
                            [92.04970703125002, 26.874853515625],
                            [91.99833984374999, 26.85498046875],
                            [91.84208984374999, 26.852978515624997],
                            [91.67158203125001, 26.802001953125],
                            [91.517578125, 26.807324218749997],
                            [91.45585937499999, 26.866894531249997],
                            [91.4267578125, 26.867089843749994],
                            [91.28652343750002, 26.789941406249994],
                            [90.73964843750002, 26.771679687499997],
                            [90.34589843750001, 26.890332031249997],
                            [90.2060546875, 26.847509765625],
                            [90.12294921875002, 26.754589843749997],
                            [89.94316406249999, 26.723925781249996],
                            [89.76386718750001, 26.7015625],
                            [89.60996093750003, 26.719433593749997],
                            [89.58613281250001, 26.778955078124994],
                            [89.33212890625003, 26.8486328125],
                            [89.14824218749999, 26.816162109375],
                            [89.04091796875002, 26.865039062499996],
                            [88.85761718750001, 26.961474609374996],
                            [88.73876953125, 27.175585937499996],
                            [88.76035156250003, 27.218115234375],
                            [88.88164062499999, 27.2974609375],
                            [88.89140624999999, 27.316064453124994],
                            [88.94755859374999, 27.464013671874994],
                            [89.48066406250001, 28.059960937499994],
                            [89.53691406249999, 28.107421875],
                            [89.65273437500002, 28.15830078125],
                            [89.74980468749999, 28.188183593749997],
                            [89.81689453125, 28.256298828124997],
                            [89.89785156250002, 28.294140625],
                            [89.98105468750003, 28.311181640624994],
                            [90.34824218750003, 28.243945312499996],
                            [90.36298828125001, 28.216503906249997],
                            [90.33310546875003, 28.093994140625],
                            [90.35273437500001, 28.080224609374994],
                            [90.47734374999999, 28.070849609374996],
                            [90.63007812500001, 28.078564453124997],
                            [90.71572265625002, 28.071728515624997],
                            [91.02080078124999, 27.970068359375],
                            [91.07773437500003, 27.974462890625],
                            [91.22587890624999, 28.071240234374997],
                            [91.27304687500003, 28.078369140625],
                            [91.30683593750001, 28.064013671874996],
                            [91.36757812500002, 28.021630859374994],
                            [91.64189453124999, 27.923242187499994],
                            [91.63193359375003, 27.759960937499997]
                        ]
                    ]
                },
                properties: {
                    name: "Bhutan",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [25.2587890625, -17.793554687500006],
                            [25.242285156250006, -17.969042968750003],
                            [25.939355468750023, -18.93867187500001],
                            [26.168066406250006, -19.53828125000001],
                            [27.17822265625, -20.10097656250001],
                            [27.28076171875, -20.47871093750001],
                            [27.679296875, -20.503027343750006],
                            [27.66943359375, -21.064257812500003],
                            [28.014062500000023, -21.55419921875],
                            [29.02558593750001, -21.796875],
                            [29.042382812500023, -22.018359375],
                            [29.237207031250023, -22.07949218750001],
                            [29.315234375000017, -22.15771484375],
                            [29.36484375, -22.193945312500006],
                            [29.1298828125, -22.21328125],
                            [29.013476562500017, -22.278417968750006],
                            [28.94580078125, -22.395117187500006],
                            [28.83984375, -22.480859375],
                            [28.21015625000001, -22.693652343750003],
                            [27.812597656250006, -23.108007812500006],
                            [27.7685546875, -23.14892578125],
                            [27.085546875, -23.577929687500003],
                            [26.835058593750006, -24.240820312500006],
                            [26.617773437500006, -24.3955078125],
                            [26.451757812500006, -24.58271484375001],
                            [26.39716796875001, -24.613574218750003],
                            [26.130859375, -24.671484375],
                            [26.031835937500006, -24.702441406250003],
                            [25.912109375, -24.74746093750001],
                            [25.518164062500006, -25.66279296875001],
                            [25.21337890625, -25.75625],
                            [24.33056640625, -25.74287109375001],
                            [24.19296875, -25.632910156250006],
                            [23.969531250000017, -25.626074218750006],
                            [23.89375, -25.600878906250003],
                            [23.389257812500006, -25.29140625],
                            [23.148730468750017, -25.288671875],
                            [22.878808593750023, -25.45791015625001],
                            [22.59765625, -26.13271484375001],
                            [22.548632812500017, -26.17841796875001],
                            [22.47089843750001, -26.219042968750003],
                            [22.217578125000017, -26.38886718750001],
                            [22.090917968750006, -26.580175781250006],
                            [22.01093750000001, -26.635839843750006],
                            [21.78828125000001, -26.710058593750006],
                            [21.738085937500017, -26.80683593750001],
                            [21.694726562500023, -26.840917968750006],
                            [20.73984375, -26.84882812500001],
                            [20.641406250000017, -26.7421875],
                            [20.79316406250001, -25.915625],
                            [20.4306640625, -25.147070312500006],
                            [19.98046875, -24.77675781250001],
                            [19.977343750000017, -22.00019531250001],
                            [20.9794921875, -21.9619140625],
                            [20.97412109375, -18.31884765625],
                            [23.219335937500006, -17.99970703125001],
                            [23.599707031250006, -18.4599609375],
                            [24.243945312500017, -18.0234375],
                            [24.530566406250017, -18.052734375],
                            [24.909082031250023, -17.821386718750006],
                            [25.2587890625, -17.793554687500006]
                        ]
                    ]
                },
                properties: {
                    name: "Botswana",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [22.86005859375001, 10.919677734375],
                            [23.646289062500017, 9.822900390624994],
                            [23.62265625, 9.340625],
                            [23.46826171875, 9.11474609375],
                            [23.53730468750001, 8.815820312499994],
                            [24.147363281250023, 8.665625],
                            [24.291406250000023, 8.29140625],
                            [24.853320312500017, 8.137548828124991],
                            [25.20039062500001, 7.807910156249989],
                            [25.18134765625001, 7.557226562499991],
                            [25.27890625, 7.427490234375],
                            [26.36181640625, 6.635302734374989],
                            [26.30859375, 6.455322265625],
                            [26.514257812500006, 6.069238281249994],
                            [27.143945312500023, 5.722949218749989],
                            [27.4033203125, 5.109179687499989],
                            [27.071875, 5.199755859374989],
                            [26.822070312500017, 5.062402343749994],
                            [25.52509765625001, 5.31210937499999],
                            [25.065234375000017, 4.967431640624994],
                            [24.31982421875, 4.994140625],
                            [23.41718750000001, 4.663134765624989],
                            [22.864550781250017, 4.723876953125],
                            [22.422167968750017, 4.134960937499997],
                            [20.55810546875, 4.462695312499989],
                            [20.226367187500017, 4.829638671874989],
                            [19.806542968750023, 5.089306640624997],
                            [19.5009765625, 5.127490234374989],
                            [19.06855468750001, 4.891406249999989],
                            [18.594140625000023, 4.346240234374989],
                            [18.6103515625, 3.478417968749994],
                            [18.474414062500017, 3.622998046874997],
                            [18.160937500000017, 3.499804687499989],
                            [17.491601562500023, 3.687304687499989],
                            [16.610742187500023, 3.50537109375],
                            [16.468554687500017, 2.831738281249997],
                            [16.183398437500017, 2.270068359374989],
                            [16.0634765625, 2.90859375],
                            [15.128710937500017, 3.826904296875],
                            [15.063574218750006, 4.284863281249997],
                            [14.73125, 4.602392578124991],
                            [14.56298828125, 5.279931640624994],
                            [14.616894531250011, 5.865136718749994],
                            [14.43115234375, 6.038720703124994],
                            [14.7392578125, 6.27978515625],
                            [15.206738281250011, 7.206152343749991],
                            [15.480078125, 7.523779296874991],
                            [15.957617187500006, 7.507568359375],
                            [16.37890625, 7.683544921874997],
                            [16.545312500000023, 7.865478515625],
                            [16.784765625, 7.550976562499997],
                            [17.6494140625, 7.98359375],
                            [18.56416015625001, 8.0458984375],
                            [19.108691406250017, 8.656152343749994],
                            [18.886035156250017, 8.836035156249991],
                            [18.95625, 8.938867187499994],
                            [20.342089843750017, 9.127099609374994],
                            [20.773242187500017, 9.405664062499994],
                            [21.682714843750006, 10.289843749999989],
                            [21.771484375, 10.642822265625],
                            [22.49384765625001, 10.996240234374994],
                            [22.86005859375001, 10.919677734375]
                        ]
                    ]
                },
                properties: {
                    name: "Central African Rep.",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-59.78759765624997, 43.939599609374994],
                                [-60.11748046874996, 43.95336914062506],
                                [-59.727148437500006, 44.002832031249994],
                                [-59.78759765624997, 43.939599609374994]
                            ]
                        ],
                        [
                            [
                                [-66.7625, 44.68178710937502],
                                [-66.8970703125, 44.62890625],
                                [-66.80214843749994, 44.80537109374998],
                                [-66.7625, 44.68178710937502]
                            ]
                        ],
                        [
                            [
                                [-60.961572265624966, 45.48994140625001],
                                [-61.081738281249926, 45.55781249999998],
                                [-60.91245117187498, 45.56728515625005],
                                [-60.961572265624966, 45.48994140625001]
                            ]
                        ],
                        [
                            [
                                [-73.69531249999997, 45.58549804687502],
                                [-73.85771484375002, 45.573583984375006],
                                [-73.57236328124998, 45.69448242187502],
                                [-73.69531249999997, 45.58549804687502]
                            ]
                        ],
                        [
                            [
                                [-73.56650390625003, 45.469091796875034],
                                [-73.960546875, 45.44140624999997],
                                [-73.68745117187498, 45.561425781249994],
                                [-73.47607421874997, 45.704736328124994],
                                [-73.56650390625003, 45.469091796875034]
                            ]
                        ],
                        [
                            [
                                [-61.10517578124998, 45.94472656250002],
                                [-60.86523437499997, 45.983496093750006],
                                [-61.05903320312501, 45.70336914062497],
                                [-60.73789062499995, 45.75141601562498],
                                [-60.46059570312494, 45.96870117187501],
                                [-60.733300781249994, 45.956591796875045],
                                [-60.297949218750034, 46.31123046874998],
                                [-60.22646484374994, 46.19555664062506],
                                [-59.86503906249993, 46.159521484375006],
                                [-59.8421875, 45.941552734374994],
                                [-60.67294921874995, 45.59082031250006],
                                [-61.28369140624994, 45.573876953124966],
                                [-61.44980468749995, 45.71621093750002],
                                [-61.40864257812501, 46.17036132812498],
                                [-60.87016601562499, 46.796777343749966],
                                [-60.40820312500003, 47.00351562499998],
                                [-60.332910156249966, 46.737011718749955],
                                [-60.49453125000002, 46.270263671875],
                                [-61.10517578124998, 45.94472656250002]
                            ]
                        ],
                        [
                            [
                                [-63.811279296875, 46.46870117187501],
                                [-63.68144531249993, 46.561914062499994],
                                [-63.12939453125, 46.422216796875034],
                                [-62.02373046874999, 46.42158203125001],
                                [-62.52607421875001, 46.20288085937503],
                                [-62.531347656250034, 45.977294921875],
                                [-63.02207031249998, 46.06660156249998],
                                [-62.89453125000003, 46.12358398437496],
                                [-63.056347656249955, 46.22392578124996],
                                [-62.97846679687498, 46.31635742187498],
                                [-63.21347656249998, 46.15986328124998],
                                [-63.641015624999966, 46.23046874999997],
                                [-63.758642578125034, 46.397607421874994],
                                [-64.11083984375003, 46.425439453124994],
                                [-64.13603515624999, 46.59970703125006],
                                [-64.388037109375, 46.640869140625],
                                [-63.99355468750002, 47.06157226562502],
                                [-64.08789062499997, 46.77543945312499],
                                [-63.811279296875, 46.46870117187501]
                            ]
                        ],
                        [
                            [
                                [-61.91411132812496, 47.284521484375034],
                                [-61.77255859374998, 47.25981445312499],
                                [-62.00830078124994, 47.23427734375002],
                                [-61.924707031249966, 47.425146484375006],
                                [-61.3955078125, 47.63764648437504],
                                [-61.91411132812496, 47.284521484375034]
                            ]
                        ],
                        [
                            [
                                [-54.227148437500034, 47.44135742187501],
                                [-54.32597656250002, 47.408105468749994],
                                [-54.12817382812494, 47.646826171875034],
                                [-54.227148437500034, 47.44135742187501]
                            ]
                        ],
                        [
                            [
                                [-74.70888671874997, 45.0038574218751],
                                [-73.55810546875, 45.425097656250045],
                                [-73.1595703125, 46.01005859375002],
                                [-72.10927734374997, 46.55122070312504],
                                [-71.26118164062495, 46.75625],
                                [-70.51948242187501, 47.032519531250045],
                                [-69.47104492187503, 47.96728515625006],
                                [-68.23818359374994, 48.62641601562504],
                                [-66.17817382812493, 49.21313476562503],
                                [-64.83632812499994, 49.191748046875006],
                                [-64.2162109375, 48.873632812500034],
                                [-64.51372070312493, 48.84111328124999],
                                [-64.24609374999994, 48.69111328124998],
                                [-64.34882812500001, 48.423193359375034],
                                [-65.259423828125, 48.02124023437503],
                                [-65.92670898437495, 48.188867187499994],
                                [-66.70439453125002, 48.0224609375],
                                [-66.35961914062494, 48.06064453125006],
                                [-65.84941406250002, 47.91103515625005],
                                [-65.60722656249996, 47.67001953125006],
                                [-65.00166015624995, 47.84682617187502],
                                [-64.70322265625, 47.72485351562503],
                                [-64.91220703125003, 47.36865234375003],
                                [-65.31889648437502, 47.101220703124994],
                                [-64.831396484375, 47.06079101562503],
                                [-64.88251953124993, 46.822851562500034],
                                [-64.54150390625, 46.240332031250034],
                                [-63.91591796875002, 46.165820312500045],
                                [-63.831933593749966, 46.107177734375],
                                [-64.05639648437503, 46.021337890625006],
                                [-63.70288085937494, 45.858007812500034],
                                [-62.70068359374997, 45.740576171875006],
                                [-62.750097656250006, 45.64824218750002],
                                [-62.483056640624966, 45.62182617187506],
                                [-61.955517578124955, 45.86816406249997],
                                [-61.776513671874994, 45.655615234375006],
                                [-61.49228515624998, 45.68701171875],
                                [-61.350488281249966, 45.57368164062501],
                                [-61.28198242187494, 45.441064453124994],
                                [-61.46098632812502, 45.36669921875003],
                                [-61.03154296875002, 45.29174804687506],
                                [-63.306298828124994, 44.64257812500003],
                                [-63.60400390624997, 44.68320312500006],
                                [-63.60976562499999, 44.47998046875006],
                                [-63.999707031249926, 44.64492187499999],
                                [-64.10087890624993, 44.487451171874966],
                                [-64.1669921875, 44.58666992187503],
                                [-64.28608398437493, 44.55034179687499],
                                [-64.27568359374993, 44.33408203124998],
                                [-65.48168945312497, 43.51806640625],
                                [-65.73813476562498, 43.56074218750001],
                                [-65.88691406250001, 43.79521484374999],
                                [-66.125732421875, 43.813818359375034],
                                [-66.19306640624995, 44.143847656250045],
                                [-65.86801757812498, 44.56879882812501],
                                [-66.14638671875002, 44.43593750000005],
                                [-66.090625, 44.50493164062499],
                                [-64.44814453125, 45.33745117187502],
                                [-64.13549804687497, 45.023046875],
                                [-64.09316406249997, 45.21708984375002],
                                [-63.368017578125034, 45.36479492187502],
                                [-64.87314453124998, 45.35458984375006],
                                [-64.31464843749998, 45.83569335937503],
                                [-64.48222656250002, 45.80634765624998],
                                [-64.63271484375002, 45.94663085937506],
                                [-64.77851562499998, 45.63842773437497],
                                [-65.88447265624995, 45.22290039062506],
                                [-66.10976562500002, 45.316601562499955],
                                [-66.02656249999995, 45.417578125],
                                [-66.43984374999994, 45.09589843750001],
                                [-66.87246093749997, 45.067285156249966],
                                [-67.12485351562498, 45.16943359375],
                                [-67.366943359375, 45.17377929687498],
                                [-67.43266601562496, 45.603125],
                                [-67.80224609374994, 45.7275390625],
                                [-67.806787109375, 47.08281249999999],
                                [-68.23549804687502, 47.34594726562503],
                                [-68.93720703124998, 47.21123046875002],
                                [-69.0501953125, 47.426611328125034],
                                [-69.24287109374998, 47.46298828124998],
                                [-70.00771484375002, 46.70893554687501],
                                [-70.296240234375, 45.90610351562506],
                                [-70.86503906249999, 45.27070312500001],
                                [-71.327294921875, 45.29008789062496],
                                [-71.51752929687495, 45.00756835937497],
                                [-74.663232421875, 45.00390625000003],
                                [-74.70888671874997, 45.0038574218751]
                            ]
                        ],
                        [
                            [
                                [-126.09208984374995, 49.35400390625003],
                                [-126.06401367187499, 49.26362304687501],
                                [-126.22963867187498, 49.29565429687506],
                                [-126.09208984374995, 49.35400390625003]
                            ]
                        ],
                        [
                            [
                                [-54.55439453125001, 49.5888671875],
                                [-54.786523437499966, 49.496142578125045],
                                [-54.86357421875002, 49.576074218749966],
                                [-54.55439453125001, 49.5888671875]
                            ]
                        ],
                        [
                            [
                                [-54.093701171874955, 49.74443359374999],
                                [-53.98066406250001, 49.66196289062498],
                                [-54.28613281249997, 49.595361328124994],
                                [-54.27763671875002, 49.71147460937502],
                                [-54.093701171874955, 49.74443359374999]
                            ]
                        ],
                        [
                            [
                                [-126.64121093749999, 49.605810546875006],
                                [-126.93857421874999, 49.71845703125004],
                                [-126.92583007812497, 49.837744140625006],
                                [-126.73813476562502, 49.84365234375005],
                                [-126.64121093749999, 49.605810546875006]
                            ]
                        ],
                        [
                            [
                                [-61.801123046875034, 49.093896484374966],
                                [-63.04150390624994, 49.224951171875034],
                                [-64.485205078125, 49.88696289062497],
                                [-64.13144531249995, 49.94165039062503],
                                [-62.858544921874966, 49.70546875000005],
                                [-61.817138671875, 49.28354492187498],
                                [-61.69614257812495, 49.139013671875006],
                                [-61.801123046875034, 49.093896484374966]
                            ]
                        ],
                        [
                            [
                                [-125.18413085937497, 50.09711914062498],
                                [-125.301171875, 50.4140625],
                                [-125.07402343750002, 50.22065429687501],
                                [-125.18413085937497, 50.09711914062498]
                            ]
                        ],
                        [
                            [
                                [-127.19731445312495, 50.640380859375],
                                [-125.48208007812501, 50.316796874999966],
                                [-124.83061523437499, 49.53007812500002],
                                [-123.99580078125, 49.22402343750002],
                                [-123.49702148437498, 48.58208007812499],
                                [-123.38989257812501, 48.67021484374999],
                                [-123.31064453125003, 48.41103515625002],
                                [-123.57314453124995, 48.32280273437499],
                                [-123.91694335937501, 48.386572265625034],
                                [-125.12070312500002, 48.76079101562496],
                                [-124.84965820312496, 49.02827148437501],
                                [-124.81264648437497, 49.212646484375],
                                [-124.92734374999998, 49.01420898437499],
                                [-125.489453125, 48.933789062499955],
                                [-125.82851562499998, 49.09184570312499],
                                [-125.64423828125001, 49.18579101562506],
                                [-125.95166015625001, 49.24804687500003],
                                [-125.93540039062499, 49.401464843750006],
                                [-126.51914062499999, 49.396777343750045],
                                [-126.54189453125001, 49.590478515624966],
                                [-126.13408203124997, 49.672314453124955],
                                [-126.52524414062499, 49.71958007812498],
                                [-126.90332031250001, 49.94414062499999],
                                [-127.114306640625, 49.879736328125034],
                                [-127.24980468749999, 50.13798828124996],
                                [-127.34941406249995, 50.05195312500001],
                                [-127.46713867187503, 50.163427734375006],
                                [-127.86391601562495, 50.12773437500002],
                                [-127.90585937499998, 50.44521484375002],
                                [-127.48652343749998, 50.404638671875034],
                                [-127.46591796874996, 50.58310546875006],
                                [-128.05834960937494, 50.498486328124955],
                                [-128.34604492187503, 50.744238281250006],
                                [-127.91806640624998, 50.86054687500001],
                                [-127.19731445312495, 50.640380859375]
                            ]
                        ],
                        [
                            [
                                [-55.45874023437494, 51.53652343750005],
                                [-55.58339843749994, 51.38857421875002],
                                [-56.031103515625034, 51.328369140625],
                                [-55.8, 51.033300781250034],
                                [-56.732324218749966, 50.007714843749994],
                                [-56.822167968749966, 49.613476562499955],
                                [-56.179394531249955, 50.114990234375],
                                [-56.161279296874994, 49.94013671874998],
                                [-55.50292968749997, 49.98315429687503],
                                [-56.14018554687496, 49.61914062500006],
                                [-55.869824218749955, 49.67016601562506],
                                [-56.08730468750002, 49.45195312499999],
                                [-55.375927734374955, 49.48974609374997],
                                [-55.34384765624998, 49.37290039062506],
                                [-55.22954101562496, 49.508154296875006],
                                [-55.35317382812502, 49.07944335937506],
                                [-54.50219726562503, 49.52734375],
                                [-54.44824218749997, 49.329443359375006],
                                [-53.957714843749955, 49.44184570312498],
                                [-53.61943359374996, 49.321630859375006],
                                [-53.57343750000001, 49.141210937500034],
                                [-54.16127929687494, 48.787695312500034],
                                [-53.852880859375006, 48.81132812499996],
                                [-53.966015624999955, 48.70668945312505],
                                [-53.70634765624999, 48.65551757812503],
                                [-54.11445312499998, 48.393603515625045],
                                [-53.027587890625, 48.634716796874955],
                                [-53.1357421875, 48.40185546875003],
                                [-53.60976562500002, 48.20771484375001],
                                [-53.56943359374998, 48.088085937499955],
                                [-53.869580078124926, 48.019677734374966],
                                [-53.63823242187496, 48.01464843750003],
                                [-53.863671874999966, 47.787011718749994],
                                [-53.67236328125, 47.64824218749999],
                                [-53.28271484375, 47.99785156249996],
                                [-52.86601562499993, 48.11298828124998],
                                [-53.16982421875002, 47.51210937500005],
                                [-52.945019531249955, 47.55283203124998],
                                [-52.782421874999955, 47.769433593749966],
                                [-52.653662109375034, 47.549414062500006],
                                [-53.11484375, 46.65581054687502],
                                [-53.32304687499996, 46.71835937499998],
                                [-53.589794921874955, 46.638867187499955],
                                [-53.59736328124998, 47.14599609374997],
                                [-54.00957031249993, 46.839599609375],
                                [-54.173730468749994, 46.88037109375003],
                                [-53.84951171875002, 47.440332031249994],
                                [-53.98901367187503, 47.756201171875034],
                                [-54.191845703124955, 47.85981445312501],
                                [-54.488134765625006, 47.40385742187502],
                                [-54.47392578124996, 47.54707031249998],
                                [-54.856640624999955, 47.385009765625],
                                [-55.31572265624993, 46.905712890624955],
                                [-55.78852539062498, 46.86723632812502],
                                [-55.91923828124996, 47.01689453124996],
                                [-55.49150390624996, 47.16064453125003],
                                [-54.78461914062501, 47.664746093749955],
                                [-55.366308593750034, 47.66108398437501],
                                [-55.57612304687498, 47.46523437499999],
                                [-56.12724609374999, 47.50283203125002],
                                [-55.867089843749994, 47.592333984375045],
                                [-55.85791015625, 47.81918945312498],
                                [-56.774121093749955, 47.56499023437499],
                                [-58.33686523437501, 47.73085937500002],
                                [-59.11694335937494, 47.57070312499999],
                                [-59.32065429687498, 47.736914062500006],
                                [-59.272070312500034, 47.99555664062504],
                                [-58.330224609374994, 48.52211914062502],
                                [-59.16767578124998, 48.558496093749966],
                                [-58.84179687500003, 48.74643554687498],
                                [-58.906445312499955, 48.65019531249999],
                                [-58.716455078124994, 48.59804687500002],
                                [-58.403662109375034, 49.08432617187498],
                                [-57.99052734374996, 48.987939453124966],
                                [-58.09892578124993, 49.07744140624999],
                                [-57.98007812499998, 49.229638671874994],
                                [-58.19091796875003, 49.25874023437498],
                                [-58.21337890625, 49.38666992187501],
                                [-58.01582031249998, 49.54248046874997],
                                [-57.79130859374999, 49.48999023437503],
                                [-57.92617187499999, 49.700830078124994],
                                [-57.4326171875, 50.50581054687504],
                                [-57.179589843749966, 50.614843750000034],
                                [-57.29799804687502, 50.69873046874997],
                                [-57.03593750000002, 51.01083984374998],
                                [-56.68242187500002, 51.332763671875],
                                [-56.025585937499955, 51.56835937500006],
                                [-55.6904296875, 51.471337890624994],
                                [-55.666406249999966, 51.57890624999999],
                                [-55.45874023437494, 51.53652343750005]
                            ]
                        ],
                        [
                            [
                                [-127.92465820312498, 51.47387695312497],
                                [-128.14877929687498, 51.62670898437503],
                                [-128.03173828125006, 51.708398437499966],
                                [-127.92465820312498, 51.47387695312497]
                            ]
                        ],
                        [
                            [
                                [-79.38427734374997, 51.951953125000045],
                                [-79.64375, 52.01005859374996],
                                [-79.27128906249996, 52.086816406249966],
                                [-79.38427734374997, 51.951953125000045]
                            ]
                        ],
                        [
                            [
                                [-128.36875, 52.40087890625],
                                [-128.43979492187503, 52.696386718750006],
                                [-128.24726562499998, 52.784375],
                                [-128.36875, 52.40087890625]
                            ]
                        ],
                        [
                            [
                                [-80.73168945312494, 52.74726562499998],
                                [-82.03925781249998, 53.04990234374998],
                                [-81.84731445312494, 53.18627929687497],
                                [-81.135595703125, 53.20581054687503],
                                [-80.73168945312494, 52.74726562499998]
                            ]
                        ],
                        [
                            [
                                [-131.7537109375, 53.195556640625],
                                [-131.63466796874997, 52.92216796874999],
                                [-131.97177734374998, 52.87983398437498],
                                [-131.45522460937502, 52.70170898437502],
                                [-131.59057617187494, 52.578222656250006],
                                [-131.25971679687495, 52.415917968749966],
                                [-131.31992187499998, 52.30307617187498],
                                [-131.142626953125, 52.291113281250034],
                                [-131.221533203125, 52.15361328124999],
                                [-132.16508789062493, 52.783300781250034],
                                [-132.14375, 52.99931640624999],
                                [-132.54677734374997, 53.1375],
                                [-131.7537109375, 53.195556640625]
                            ]
                        ],
                        [
                            [
                                [-128.55244140624998, 52.93974609375002],
                                [-128.50991210937502, 52.51860351562502],
                                [-128.678955078125, 52.289648437500006],
                                [-128.74633789062494, 52.763378906249955],
                                [-128.89980468749997, 52.67382812500003],
                                [-129.175927734375, 52.964941406250006],
                                [-129.033251953125, 53.27993164062505],
                                [-128.63266601562498, 53.1125],
                                [-128.55244140624998, 52.93974609375002]
                            ]
                        ],
                        [
                            [
                                [-129.167724609375, 53.11787109374998],
                                [-129.32387695312502, 53.142138671875045],
                                [-129.23818359374997, 53.33007812500006],
                                [-129.167724609375, 53.11787109374998]
                            ]
                        ],
                        [
                            [
                                [-129.84858398437498, 53.167919921874955],
                                [-130.51757812500003, 53.54423828124999],
                                [-130.45200195312498, 53.63115234375002],
                                [-129.94472656250002, 53.436376953125034],
                                [-129.75483398437498, 53.244775390624994],
                                [-129.84858398437498, 53.167919921874955]
                            ]
                        ],
                        [
                            [
                                [-130.236279296875, 53.95854492187502],
                                [-130.38422851562504, 53.84394531250001],
                                [-130.703173828125, 53.892236328124994],
                                [-130.44799804687497, 54.08901367187502],
                                [-130.236279296875, 53.95854492187502]
                            ]
                        ],
                        [
                            [
                                [-132.65551757812503, 54.12749023437496],
                                [-132.30336914062497, 54.098876953125],
                                [-132.16611328124998, 53.95522460937505],
                                [-132.53466796875, 53.651708984375034],
                                [-132.18696289062504, 53.68481445312503],
                                [-132.134423828125, 54.03427734374998],
                                [-131.66762695312502, 54.14135742187503],
                                [-131.957421875, 53.308691406250034],
                                [-132.34726562500003, 53.18920898437503],
                                [-132.747509765625, 53.310498046874955],
                                [-132.425, 53.33696289062502],
                                [-132.84501953125, 53.507714843749994],
                                [-133.07949218749997, 53.837011718750034],
                                [-133.04838867187493, 54.15893554687497],
                                [-132.65551757812503, 54.12749023437496]
                            ]
                        ],
                        [
                            [
                                [-130.92714843749997, 54.47905273437499],
                                [-130.90683593750003, 54.63178710937504],
                                [-130.75800781249998, 54.61376953125],
                                [-130.92714843749997, 54.47905273437499]
                            ]
                        ],
                        [
                            [
                                [-130.57534179687497, 54.769677734374966],
                                [-130.2140625, 55.02587890625003],
                                [-130.34941406249996, 54.814550781250034],
                                [-130.57534179687497, 54.769677734374966]
                            ]
                        ],
                        [
                            [
                                [-79.97758789062499, 56.20703125000006],
                                [-80.057470703125, 56.28735351562497],
                                [-79.57973632812502, 56.466357421875045],
                                [-79.97758789062499, 56.20703125000006]
                            ]
                        ],
                        [
                            [
                                [-78.93559570312496, 56.26606445312498],
                                [-79.17548828124998, 55.88505859374999],
                                [-79.18212890625, 56.21215820312503],
                                [-79.4951171875, 55.87475585937503],
                                [-79.76474609374995, 55.80678710937505],
                                [-79.54472656249999, 56.12836914062501],
                                [-79.9875, 55.89213867187502],
                                [-79.45888671875, 56.53974609374998],
                                [-79.53632812499995, 56.180078124999966],
                                [-79.27241210937493, 56.600439453125006],
                                [-78.93559570312496, 56.26606445312498]
                            ]
                        ],
                        [
                            [
                                [-61.743603515624955, 57.55458984375005],
                                [-61.6375, 57.41606445312499],
                                [-62.01123046875003, 57.54848632812505],
                                [-61.743603515624955, 57.55458984375005]
                            ]
                        ],
                        [
                            [
                                [-79.71650390624998, 57.515527343749994],
                                [-79.80844726562498, 57.44243164062502],
                                [-79.74257812499997, 57.60795898437499],
                                [-79.71650390624998, 57.515527343749994]
                            ]
                        ],
                        [
                            [
                                [-69.16005859375, 59.04023437500001],
                                [-69.35283203125002, 58.96074218749999],
                                [-69.30322265625003, 59.144873046875006],
                                [-69.16005859375, 59.04023437500001]
                            ]
                        ],
                        [
                            [
                                [-64.40703125, 60.367089843749966],
                                [-64.44194335937496, 60.2978515625],
                                [-64.73793945312497, 60.37563476562502],
                                [-64.83642578124997, 60.50102539062499],
                                [-64.40703125, 60.367089843749966]
                            ]
                        ],
                        [
                            [
                                [-68.23378906250002, 60.24091796875001],
                                [-68.36787109374998, 60.314746093750045],
                                [-68.08759765624998, 60.58784179687501],
                                [-67.81884765624994, 60.449511718750074],
                                [-68.23378906250002, 60.24091796875001]
                            ]
                        ],
                        [
                            [
                                [-78.531640625, 60.72856445312499],
                                [-78.66889648437498, 60.716894531250006],
                                [-78.24169921875, 60.818652343750045],
                                [-78.531640625, 60.72856445312499]
                            ]
                        ],
                        [
                            [
                                [-64.83261718749998, 61.366064453125006],
                                [-65.43212890625, 61.649511718750034],
                                [-64.78964843750003, 61.662207031250034],
                                [-64.83261718749998, 61.366064453125006]
                            ]
                        ],
                        [
                            [
                                [-65.03056640624999, 61.879052734374966],
                                [-64.89658203124995, 61.73330078125005],
                                [-65.23535156249997, 61.89770507812506],
                                [-65.03056640624999, 61.879052734374966]
                            ]
                        ],
                        [
                            [
                                [-79.54531250000002, 62.41171875000006],
                                [-79.28647460937495, 62.247656250000034],
                                [-79.32392578124995, 62.02607421875001],
                                [-79.81611328124995, 61.59462890625002],
                                [-80.26518554687496, 61.818212890625006],
                                [-80.26005859374996, 62.10903320312502],
                                [-79.9267578125, 62.39287109375002],
                                [-79.54531250000002, 62.41171875000006]
                            ]
                        ],
                        [
                            [
                                [-64.82382812499998, 62.558740234374994],
                                [-64.46503906249998, 62.535937500000045],
                                [-64.47832031250002, 62.417871093749966],
                                [-64.901220703125, 62.421044921874994],
                                [-64.82382812499998, 62.558740234374994]
                            ]
                        ],
                        [
                            [
                                [-70.33706054687497, 62.548730468749994],
                                [-70.76606445312498, 62.596875],
                                [-71.22011718750002, 62.873925781249966],
                                [-70.44262695312497, 62.73378906250002],
                                [-70.33706054687497, 62.548730468749994]
                            ]
                        ],
                        [
                            [
                                [-82.00048828124997, 62.95419921874998],
                                [-82.02583007812498, 62.73007812499998],
                                [-82.56826171875002, 62.403222656249994],
                                [-83.01582031249998, 62.20991210937498],
                                [-83.69887695312497, 62.16025390624998],
                                [-83.91049804687498, 62.45415039062499],
                                [-83.37641601562498, 62.904931640624994],
                                [-82.00048828124997, 62.95419921874998]
                            ]
                        ],
                        [
                            [
                                [-77.87670898437497, 63.470556640625034],
                                [-77.53271484374997, 63.233642578125],
                                [-77.94243164062496, 63.11440429687502],
                                [-78.536767578125, 63.423730468749994],
                                [-77.87670898437497, 63.470556640625034]
                            ]
                        ],
                        [
                            [
                                [-76.67758789062503, 63.393945312499966],
                                [-77.36474609374994, 63.588330078124955],
                                [-77.13369140624997, 63.68203125000002],
                                [-76.65244140624998, 63.503564453124994],
                                [-76.67758789062503, 63.393945312499966]
                            ]
                        ],
                        [
                            [
                                [-84.91962890624995, 65.26108398437503],
                                [-84.50112304687497, 65.45844726562501],
                                [-84.08486328125, 65.21782226562502],
                                [-82.05, 64.64428710937506],
                                [-81.67612304687498, 64.21264648437503],
                                [-81.88710937499997, 64.01640625000002],
                                [-80.82895507812495, 64.08994140625],
                                [-80.30205078124999, 63.76220703125003],
                                [-81.04638671875003, 63.461572265624966],
                                [-82.378125, 63.706787109375],
                                [-82.46708984375002, 63.92695312500001],
                                [-83.30395507812497, 64.14379882812506],
                                [-84.63291015625, 63.30922851562502],
                                [-85.39262695312496, 63.119677734375045],
                                [-85.76894531249997, 63.70034179687502],
                                [-87.15190429687499, 63.58564453125001],
                                [-86.93203124999997, 63.90166015625002],
                                [-86.252099609375, 64.13686523437497],
                                [-86.37426757812503, 64.56582031249997],
                                [-86.074609375, 65.533837890625],
                                [-85.55468750000003, 65.91865234374995],
                                [-85.17622070312501, 65.746875],
                                [-85.23994140624993, 65.51030273437499],
                                [-84.91962890624995, 65.26108398437503]
                            ]
                        ],
                        [
                            [
                                [-84.67475585937498, 65.575],
                                [-85.096337890625, 65.756201171875],
                                [-85.14960937500001, 66.01538085937506],
                                [-84.75737304687496, 65.85893554687505],
                                [-84.67475585937498, 65.575]
                            ]
                        ],
                        [
                            [
                                [-83.72597656249997, 65.796728515625],
                                [-83.23374023437495, 65.71503906249995],
                                [-83.332421875, 65.63105468749998],
                                [-84.11826171874995, 65.77177734375007],
                                [-84.40717773437501, 66.13100585937497],
                                [-83.78696289062495, 65.96577148437498],
                                [-83.72597656249997, 65.796728515625]
                            ]
                        ],
                        [
                            [
                                [-108.09272460937501, 67.00517578124999],
                                [-107.80551757812493, 66.99858398437507],
                                [-107.94394531249999, 66.8578125],
                                [-108.09272460937501, 67.00517578124999]
                            ]
                        ],
                        [
                            [
                                [-62.681542968749966, 67.05629882812502],
                                [-62.87163085937499, 67.06259765625006],
                                [-62.41679687499996, 67.18847656250003],
                                [-62.681542968749966, 67.05629882812502]
                            ]
                        ],
                        [
                            [
                                [-107.89985351562497, 67.40180664062495],
                                [-107.95024414062503, 67.31821289062498],
                                [-108.15224609374997, 67.429443359375],
                                [-108.04897460937498, 67.664892578125],
                                [-107.89985351562497, 67.40180664062495]
                            ]
                        ],
                        [
                            [
                                [-73.621728515625, 67.783837890625],
                                [-74.573388671875, 67.82866210937507],
                                [-74.70654296875003, 68.06708984374995],
                                [-73.49375, 68.00063476562502],
                                [-73.40717773437498, 67.79306640625],
                                [-73.621728515625, 67.783837890625]
                            ]
                        ],
                        [
                            [
                                [-86.59555664062498, 67.7359375],
                                [-86.89252929687498, 67.836572265625],
                                [-86.95981445312503, 68.10024414062497],
                                [-86.70209960937501, 68.30561523437498],
                                [-86.42114257812497, 68.18344726562503],
                                [-86.59555664062498, 67.7359375]
                            ]
                        ],
                        [
                            [
                                [-75.67587890624998, 68.32250976562506],
                                [-75.078125, 68.17314453124999],
                                [-75.20195312499996, 67.45917968750001],
                                [-75.78007812499996, 67.28354492187503],
                                [-76.94418945312498, 67.25029296875002],
                                [-77.30439453125001, 67.68510742187505],
                                [-77.12587890624997, 67.94707031250002],
                                [-76.59580078124998, 68.27895507812497],
                                [-75.67587890624998, 68.32250976562506]
                            ]
                        ],
                        [
                            [
                                [-78.98271484374999, 68.19282226562501],
                                [-79.17475585937493, 68.26445312500002],
                                [-78.95258789062495, 68.35302734375006],
                                [-78.98271484374999, 68.19282226562501]
                            ]
                        ],
                        [
                            [
                                [-104.54067382812497, 68.405908203125],
                                [-105.05136718749999, 68.55903320312501],
                                [-104.60200195312503, 68.56152343749997],
                                [-104.54067382812497, 68.405908203125]
                            ]
                        ],
                        [
                            [
                                [-74.880859375, 68.34868164062505],
                                [-75.40024414062503, 68.52548828125],
                                [-75.28740234374996, 68.68774414062503],
                                [-74.98364257812497, 68.64760742187502],
                                [-74.880859375, 68.34868164062505]
                            ]
                        ],
                        [
                            [
                                [-101.84589843749994, 68.58632812499997],
                                [-102.30815429687497, 68.681982421875],
                                [-102.01337890624995, 68.82539062500001],
                                [-101.73295898437495, 68.75341796875],
                                [-101.84589843749994, 68.58632812499997]
                            ]
                        ],
                        [
                            [
                                [-100.21723632812497, 68.80668945312502],
                                [-100.59653320312496, 68.76640625000007],
                                [-100.56547851562495, 69.02680664062501],
                                [-100.21723632812497, 68.80668945312502]
                            ]
                        ],
                        [
                            [
                                [-99.99467773437502, 69.01352539062503],
                                [-100.19570312500002, 68.991455078125],
                                [-100.153125, 69.12949218750003],
                                [-99.99467773437502, 69.01352539062503]
                            ]
                        ],
                        [
                            [
                                [-79.21064453124995, 68.845458984375],
                                [-79.24267578125, 69.04926757812495],
                                [-78.33256835937496, 69.38603515624999],
                                [-78.77919921875, 68.95048828124999],
                                [-79.21064453124995, 68.845458984375]
                            ]
                        ],
                        [
                            [
                                [-90.1998046875, 69.419091796875],
                                [-90.33027343749993, 69.252197265625],
                                [-90.49204101562503, 69.369873046875],
                                [-90.1998046875, 69.419091796875]
                            ]
                        ],
                        [
                            [
                                [-76.99536132812503, 69.14375],
                                [-77.37939453125, 69.2740234375],
                                [-77.18754882812502, 69.440087890625],
                                [-76.66884765625002, 69.36616210937504],
                                [-76.99536132812503, 69.14375]
                            ]
                        ],
                        [
                            [
                                [-101.171728515625, 69.39707031250003],
                                [-101.31289062499998, 69.57607421875],
                                [-101.00063476562497, 69.4619140625],
                                [-101.171728515625, 69.39707031250003]
                            ]
                        ],
                        [
                            [
                                [-95.51367187499997, 69.57363281250002],
                                [-95.43745117187498, 69.37846679687505],
                                [-95.73012695312502, 69.34755859374997],
                                [-95.80620117187499, 69.56049804687501],
                                [-95.89345703125, 69.35175781250004],
                                [-95.87583007812495, 69.60600585937505],
                                [-95.51367187499997, 69.57363281250002]
                            ]
                        ],
                        [
                            [
                                [-67.91469726562494, 69.54096679687504],
                                [-68.22138671874998, 69.61674804687502],
                                [-67.908837890625, 69.68183593749995],
                                [-67.91469726562494, 69.54096679687504]
                            ]
                        ],
                        [
                            [
                                [-78.02910156249993, 69.71489257812502],
                                [-78.03999023437495, 69.6083984375],
                                [-78.84819335937502, 69.4828125],
                                [-78.02910156249993, 69.71489257812502]
                            ]
                        ],
                        [
                            [
                                [-79.43066406250003, 69.78779296874995],
                                [-79.55283203124995, 69.63085937500006],
                                [-80.04750976562502, 69.63432617187505],
                                [-79.97783203124993, 69.50966796874997],
                                [-80.794775390625, 69.68925781250005],
                                [-80.42421875000002, 69.797607421875],
                                [-79.43066406250003, 69.78779296874995]
                            ]
                        ],
                        [
                            [
                                [-97.439453125, 69.64267578125006],
                                [-96.29995117187494, 69.34438476562505],
                                [-95.7513671875, 68.89765624999998],
                                [-95.26777343749998, 68.82607421874997],
                                [-96.40156249999995, 68.47070312500003],
                                [-97.47202148437498, 68.543701171875],
                                [-98.320556640625, 68.84272460937498],
                                [-98.70380859374993, 68.80278320312502],
                                [-98.90449218749995, 68.93242187500005],
                                [-99.25400390625002, 68.86318359374997],
                                [-99.49467773437493, 68.95957031249998],
                                [-99.455712890625, 69.13120117187503],
                                [-98.45595703124997, 69.33466796875001],
                                [-98.54599609375, 69.57290039062497],
                                [-98.04135742187498, 69.456640625],
                                [-98.20048828124996, 69.79697265625006],
                                [-97.79072265624998, 69.86162109374999],
                                [-97.439453125, 69.64267578125006]
                            ]
                        ],
                        [
                            [
                                [-86.91303710937501, 70.11323242187501],
                                [-86.55766601562499, 69.99531249999995],
                                [-87.3232421875, 70.08012695312502],
                                [-86.91303710937501, 70.11323242187501]
                            ]
                        ],
                        [
                            [
                                [-74.70888671874997, 45.0038574218751],
                                [-74.76245117187494, 44.99907226562502],
                                [-74.99614257812496, 44.970117187499966],
                                [-75.40126953124997, 44.77226562499999],
                                [-75.81933593749997, 44.468017578125],
                                [-76.18579101562503, 44.24223632812502],
                                [-76.819970703125, 43.62880859375011],
                                [-77.59653320312492, 43.62861328125007],
                                [-78.45825195312497, 43.63149414062511],
                                [-78.72041015624993, 43.62495117187501],
                                [-78.84555664062492, 43.58334960937506],
                                [-79.171875, 43.466552734375085],
                                [-79.0830566406249, 43.33139648437509],
                                [-79.05922851562494, 43.27807617187506],
                                [-79.066064453125, 43.10610351562502],
                                [-79.02617187499996, 43.01733398437506],
                                [-78.98076171874993, 42.98061523437502],
                                [-78.91508789062496, 42.90913085937504],
                                [-79.17373046875, 42.74853515625],
                                [-80.24755859374991, 42.366015625000045],
                                [-81.02822265624997, 42.247167968750006],
                                [-81.50732421874997, 42.10346679687504],
                                [-81.97416992187496, 41.88872070312499],
                                [-82.43906249999989, 41.6748535156251],
                                [-82.69003906249995, 41.675195312499994],
                                [-83.141943359375, 41.97587890624996],
                                [-83.10952148437497, 42.25068359375001],
                                [-82.54531249999997, 42.62470703124998],
                                [-82.19038085937495, 43.47407226562501],
                                [-82.137841796875, 43.570898437500034],
                                [-82.48505859374993, 45.08374023437503],
                                [-82.55107421874987, 45.3473632812501],
                                [-82.91933593749994, 45.51796875000002],
                                [-83.59267578125, 45.81713867187506],
                                [-83.46948242187503, 45.99467773437499],
                                [-83.61596679687503, 46.116845703124994],
                                [-83.97778320312494, 46.08491210937507],
                                [-84.12319335937497, 46.50292968749997],
                                [-84.44047851562496, 46.49814453125006],
                                [-84.66577148437503, 46.54326171875002],
                                [-84.87597656249994, 46.89990234375003],
                                [-85.07006835937497, 46.97993164062498],
                                [-85.65224609375, 47.21997070312503],
                                [-86.67216796874996, 47.636425781249955],
                                [-87.20800781249997, 47.848486328125006],
                                [-87.74389648437497, 48.06054687500003],
                                [-88.37817382812497, 48.30307617187506],
                                [-89.45566406249992, 47.99624023437508],
                                [-90.79731445312495, 48.13105468750001],
                                [-91.04345703124991, 48.19370117187498],
                                [-91.38720703124997, 48.05854492187498],
                                [-92.00517578125002, 48.301855468750006],
                                [-92.3484375, 48.276611328125],
                                [-92.41459960937493, 48.276611328125],
                                [-92.50058593749995, 48.43535156250002],
                                [-92.83671875, 48.567773437499994],
                                [-93.25795898437497, 48.62885742187501],
                                [-93.37788085937498, 48.61655273437498],
                                [-93.70771484374995, 48.525439453125074],
                                [-93.85161132812496, 48.607275390625034],
                                [-94.6208984374999, 48.7426269531251],
                                [-94.71279296874997, 48.863427734374994],
                                [-94.80346679687497, 49.0029296875],
                                [-94.86040039062493, 49.258593750000045],
                                [-94.85434570312495, 49.304589843749994],
                                [-95.15527343749997, 49.3696777343751],
                                [-95.16206054687493, 48.991748046875045],
                                [-95.39790039062493, 48.99316406249997],
                                [-96.25068359374993, 48.99316406249997],
                                [-96.67705078124993, 48.99316406249997],
                                [-97.52983398437493, 48.99316406249997],
                                [-98.80898437499995, 48.99316406249997],
                                [-104.77832031249997, 48.993115234375125],
                                [-110.7476562499999, 48.993066406250136],
                                [-116.71704101562493, 48.993066406250136],
                                [-118.84892578124993, 48.993066406250136],
                                [-119.27534179687494, 48.993066406250136],
                                [-119.70170898437495, 48.99301757812495],
                                [-120.98085937499995, 48.99301757812495],
                                [-122.78876953124994, 48.99301757812495],
                                [-122.82670898437495, 49.028417968750034],
                                [-122.9241699218749, 49.07465820312504],
                                [-122.96269531249993, 49.07460937500005],
                                [-123.06328125, 48.97773437500001],
                                [-123.22944335937493, 49.260498046875085],
                                [-122.87910156249995, 49.39892578125003],
                                [-123.27675781249997, 49.34394531250001],
                                [-123.1875, 49.680322265624994],
                                [-123.53056640624989, 49.39731445312506],
                                [-124.02861328125002, 49.602880859375006],
                                [-123.99262695312497, 49.736181640625006],
                                [-123.81718749999993, 49.58657226562508],
                                [-123.58247070312498, 49.68125],
                                [-123.87441406250005, 49.736816406250114],
                                [-123.82543945312493, 50.14423828124998],
                                [-123.94589843749995, 50.18393554687509],
                                [-123.9849121093749, 49.87558593749998],
                                [-124.28125, 49.77211914062502],
                                [-124.78237304687492, 50.02011718749992],
                                [-125.05668945312495, 50.418652343750125],
                                [-124.8598632812499, 50.872412109375006],
                                [-125.05878906249993, 50.51386718749998],
                                [-125.4763183593749, 50.49716796874995],
                                [-125.53935546874996, 50.64902343749998],
                                [-125.64130859374994, 50.46621093750005],
                                [-126.09433593749995, 50.497607421875045],
                                [-126.44746093750004, 50.58774414062492],
                                [-125.90410156250002, 50.704931640625006],
                                [-126.51435546875, 50.679394531250125],
                                [-126.37460937499995, 50.83735351562498],
                                [-126.5217773437499, 50.86606445312498],
                                [-126.51733398437497, 51.0568359375001],
                                [-126.63178710937494, 50.915136718750006],
                                [-127.057568359375, 50.86752929687509],
                                [-127.70810546875, 51.15117187499996],
                                [-127.41967773437496, 51.608056640625136],
                                [-126.69145507812502, 51.70341796875002],
                                [-127.33872070312489, 51.70737304687495],
                                [-127.66870117187497, 51.47758789062502],
                                [-127.85053710937498, 51.67319335937509],
                                [-127.79536132812493, 52.19101562500006],
                                [-127.43793945312504, 52.356152343750125],
                                [-127.24223632812496, 52.39511718750009],
                                [-126.71396484374989, 52.060693359374994],
                                [-127.19399414062498, 52.45766601562502],
                                [-126.95136718749994, 52.7510253906251],
                                [-127.01933593750002, 52.8424804687501],
                                [-127.06621093749989, 52.65268554687498],
                                [-127.79189453124994, 52.28935546875002],
                                [-128.10224609374993, 51.78842773437495],
                                [-128.3576171875, 52.1588867187501],
                                [-128.0375, 52.318164062500045],
                                [-127.94023437499996, 52.545166015625085],
                                [-128.27153320312493, 52.3629882812501],
                                [-128.05327148437487, 52.91069335937496],
                                [-128.3650390624999, 52.82578125000006],
                                [-128.52470703125002, 53.1406738281251],
                                [-129.08090820312492, 53.36728515625006],
                                [-129.1715820312499, 53.53359375000002],
                                [-128.8545898437499, 53.70454101562504],
                                [-128.90561523437492, 53.559326171875114],
                                [-128.5421386718749, 53.420654296875114],
                                [-128.13271484375002, 53.417773437500045],
                                [-127.92783203125, 53.274707031250045],
                                [-128.2072265624999, 53.483203125000074],
                                [-128.67553710937494, 53.55458984375005],
                                [-128.76367187500003, 53.746875],
                                [-128.5321289062499, 53.85810546875007],
                                [-128.959375, 53.84145507812505],
                                [-129.2578613281249, 53.417968750000085],
                                [-129.56372070312506, 53.251464843750114],
                                [-130.33525390625002, 53.723925781250074],
                                [-130.04331054687495, 54.13354492187503],
                                [-129.62602539062493, 54.23027343750002],
                                [-130.08422851562503, 54.18139648437503],
                                [-130.4302734375, 54.42099609374998],
                                [-129.56064453124995, 55.46254882812508],
                                [-129.79516601562503, 55.559570312500114],
                                [-130.04848632812494, 55.05727539062511],
                                [-130.01406249999997, 55.950537109375006],
                                [-130.09785156249995, 56.10927734375002],
                                [-130.41313476562487, 56.12250976562507],
                                [-130.47709960937496, 56.230566406250034],
                                [-130.649072265625, 56.26367187500003],
                                [-131.471875, 56.55673828125006],
                                [-131.82426757812496, 56.58999023437508],
                                [-131.86616210937495, 56.792822265625006],
                                [-132.1042968749999, 56.85678710937509],
                                [-132.062890625, 56.95336914062503],
                                [-132.33798828124992, 57.07944335937498],
                                [-132.27939453124998, 57.14536132812506],
                                [-132.23217773437494, 57.198535156250074],
                                [-132.30166015625005, 57.2763183593751],
                                [-132.44248046874986, 57.40673828125003],
                                [-132.55048828124995, 57.499902343749994],
                                [-133.00141601562495, 57.948974609375],
                                [-133.27529296875, 58.22285156250004],
                                [-133.54638671874997, 58.50346679687499],
                                [-134.21850585937503, 58.849902343750045],
                                [-134.32963867187505, 58.93969726562506],
                                [-134.39306640625, 59.009179687499994],
                                [-134.67724609374997, 59.19926757812499],
                                [-134.94375, 59.28828125000001],
                                [-135.05102539062491, 59.57866210937502],
                                [-135.36787109374998, 59.743310546874994],
                                [-135.70258789062504, 59.72875976562506],
                                [-136.3218261718749, 59.604833984375034],
                                [-136.27797851562494, 59.48032226562506],
                                [-136.46635742187493, 59.459082031250006],
                                [-136.57875976562494, 59.15224609375002],
                                [-136.81328125000002, 59.15004882812511],
                                [-137.12622070312491, 59.04096679687507],
                                [-137.2775390624999, 58.988183593749994],
                                [-137.43857421874995, 58.903125],
                                [-137.52089843749994, 58.91538085937506],
                                [-137.59331054687493, 59.22626953124998],
                                [-138.317626953125, 59.611132812500074],
                                [-138.86875, 59.94575195312501],
                                [-139.18515624999986, 60.083593750000034],
                                [-139.13696289062494, 60.17270507812506],
                                [-139.07924804687497, 60.279443359375136],
                                [-139.07924804687497, 60.3437011718751],
                                [-139.23476562499997, 60.339746093749994],
                                [-139.67631835937505, 60.32832031249998],
                                [-139.97329101562497, 60.183154296875074],
                                [-140.45283203125004, 60.29970703125002],
                                [-140.5254394531249, 60.21835937499995],
                                [-140.76274414062505, 60.25913085937509],
                                [-141.00214843750004, 60.300244140625125],
                                [-141.00214843750004, 60.884667968749994],
                                [-141.00214843750004, 61.761279296875045],
                                [-141.00214843750004, 63.22226562499998],
                                [-141.00214843750004, 64.09887695312506],
                                [-141.00214843750004, 65.55991210937498],
                                [-141.00214843750004, 66.43652343750006],
                                [-141.00214843750004, 67.89755859374998],
                                [-141.00214843750004, 68.77416992187506],
                                [-141.00214843750004, 69.65078125000011],
                                [-139.18154296874997, 69.51552734375008],
                                [-137.25996093749998, 68.96411132812503],
                                [-136.12236328124993, 68.88222656250002],
                                [-135.258837890625, 68.68432617187503],
                                [-135.93901367187487, 68.9741699218751],
                                [-135.575537109375, 69.02695312500003],
                                [-135.91020507812487, 69.11147460937502],
                                [-135.6914550781249, 69.31118164062502],
                                [-135.29282226562486, 69.30786132812506],
                                [-135.1408203124999, 69.46782226562496],
                                [-134.45683593749993, 69.47763671875],
                                [-134.40893554687494, 69.68178710937502],
                                [-133.87978515624997, 69.50771484375011],
                                [-134.17431640624991, 69.25283203125005],
                                [-133.16313476562496, 69.43388671874999],
                                [-132.91533203125002, 69.62963867187506],
                                [-132.40390625, 69.65874023437496],
                                [-132.48847656249993, 69.73808593749996],
                                [-132.16342773437498, 69.70498046875014],
                                [-131.13637695312497, 69.90688476562505],
                                [-130.66547851562495, 70.12705078124998],
                                [-129.944970703125, 70.09091796875006],
                                [-129.675634765625, 70.19296875000009],
                                [-129.64829101562495, 69.9977539062501],
                                [-130.83208007812487, 69.65146484375006],
                                [-131.9377929687499, 69.5347167968751],
                                [-132.8174804687499, 69.20576171875004],
                                [-133.41831054687492, 68.84428710937493],
                                [-133.138037109375, 68.74658203125011],
                                [-133.33666992187497, 68.83525390625005],
                                [-132.57763671874997, 68.84780273437514],
                                [-132.71894531249998, 69.07919921875],
                                [-131.78837890625002, 69.43198242187495],
                                [-131.32470703124997, 69.36118164062509],
                                [-131.06342773437504, 69.45068359375003],
                                [-130.97065429687495, 69.20908203125],
                                [-130.1176269531249, 69.720068359375],
                                [-128.89892578124994, 69.96616210937506],
                                [-129.15791015624995, 69.80009765624999],
                                [-129.05434570312502, 69.70107421875005],
                                [-128.85302734375003, 69.7510253906251],
                                [-127.68378906249994, 70.26035156249995],
                                [-128.17011718749998, 70.41845703125],
                                [-127.99101562499992, 70.57382812500003],
                                [-127.22597656249992, 70.29614257812497],
                                [-126.25043945312495, 69.54526367187492],
                                [-125.52495117187495, 69.35156250000009],
                                [-125.171875, 69.42797851562503],
                                [-125.35693359374991, 69.62597656250003],
                                [-124.767919921875, 69.99003906249996],
                                [-124.99038085937494, 70.02661132812511],
                                [-124.55502929687488, 70.15122070312509],
                                [-124.40693359374991, 69.76743164062506],
                                [-124.12460937499995, 69.6899902343751],
                                [-124.33808593749991, 69.36484374999995],
                                [-123.5284179687499, 69.38935546874995],
                                [-123.02578125, 69.81000976562504],
                                [-122.07006835937499, 69.81616210937506],
                                [-120.96245117187502, 69.66040039062511],
                                [-120.13999023437488, 69.38056640625013],
                                [-117.22695312499998, 68.913427734375],
                                [-116.05947265625, 68.83701171875006],
                                [-116.2434082031249, 68.9740722656251],
                                [-115.44228515624994, 68.94091796875009],
                                [-114.62016601562496, 68.74609375],
                                [-113.96440429687495, 68.39907226562502],
                                [-114.09594726562491, 68.26679687500007],
                                [-114.76528320312494, 68.27021484375004],
                                [-115.12705078124992, 68.13203124999995],
                                [-115.43447265624994, 67.90234375000006],
                                [-115.13320312499994, 67.819189453125],
                                [-112.50302734374993, 67.6819335937501],
                                [-110.9900390624999, 67.79082031250007],
                                [-110.07392578124995, 67.99291992187506],
                                [-109.63037109374991, 67.73271484374996],
                                [-109.03803710937504, 67.69116210937503],
                                [-108.85200195312497, 67.42197265625009],
                                [-108.61333007812493, 67.59804687500008],
                                [-107.98872070312495, 67.2563964843751],
                                [-107.99130859374995, 67.09516601562513],
                                [-108.49604492187493, 67.09228515625006],
                                [-107.25947265624998, 66.39853515624995],
                                [-107.71035156250001, 66.74003906250007],
                                [-107.7250976562499, 66.98413085937506],
                                [-107.15649414062497, 66.88173828124997],
                                [-107.9583984375, 67.81860351562506],
                                [-107.79829101562498, 68.03691406249996],
                                [-106.42426757812491, 68.20058593750008],
                                [-105.7501953125, 68.59228515625011],
                                [-106.45805664062496, 68.51645507812495],
                                [-106.60849609374988, 68.35737304687504],
                                [-107.61933593749994, 68.3310546875],
                                [-107.73417968749989, 68.17373046875011],
                                [-108.3228027343749, 68.15410156250002],
                                [-108.71811523437488, 68.29746093750009],
                                [-108.31347656249996, 68.61079101562498],
                                [-106.16445312499992, 68.91987304687507],
                                [-105.68559570312489, 68.82817382812505],
                                [-105.3774414062499, 68.413818359375],
                                [-104.65317382812488, 68.23007812500003],
                                [-104.48681640624991, 68.06318359374998],
                                [-103.47412109374993, 68.11503906250005],
                                [-102.32036132812489, 67.73564453125005],
                                [-101.55498046874992, 67.69316406250007],
                                [-100.21293945312489, 67.83857421875004],
                                [-98.92045898437502, 67.72578124999998],
                                [-98.41210937499991, 67.80717773437505],
                                [-98.63154296875004, 68.0725585937501],
                                [-97.45493164062486, 67.61699218750002],
                                [-97.20654296874989, 67.85507812500003],
                                [-97.73911132812495, 67.97817382812505],
                                [-98.19252929687494, 67.92299804687502],
                                [-98.65048828124989, 68.36352539062506],
                                [-98.21855468750002, 68.31743164062507],
                                [-97.7942382812499, 68.38759765625],
                                [-97.9250976562499, 68.523681640625],
                                [-97.41035156249993, 68.49653320312498],
                                [-96.97670898437497, 68.25541992187505],
                                [-96.43066406249991, 68.3105957031251],
                                [-96.72207031250005, 68.03876953124998],
                                [-95.9703125, 68.24912109375],
                                [-96.36914062499991, 67.50976562500003],
                                [-96.14145507812489, 67.27182617187503],
                                [-95.71992187499998, 67.31679687500014],
                                [-95.77768554687495, 67.18461914062505],
                                [-95.41591796875005, 67.15556640624999],
                                [-95.41889648437504, 67.01323242187493],
                                [-96.42255859374995, 67.05175781249997],
                                [-95.7875488281249, 66.616796875],
                                [-96.03686523437489, 66.9375],
                                [-95.39965820312503, 66.94946289062509],
                                [-95.25874023437493, 67.26254882812492],
                                [-95.65048828124986, 67.73745117187505],
                                [-95.46069335937503, 68.02138671875],
                                [-94.74443359374993, 68.07089843749995],
                                [-93.44892578124998, 68.61889648437503],
                                [-93.85244140624994, 69.00034179687495],
                                [-94.06489257812495, 68.78476562500006],
                                [-94.600439453125, 68.80322265625011],
                                [-94.08364257812497, 69.12309570312507],
                                [-94.254736328125, 69.31376953125002],
                                [-93.61948242187492, 69.41699218750009],
                                [-93.74853515624991, 69.2261230468751],
                                [-93.5322753906249, 69.48090820312495],
                                [-94.2708007812499, 69.45512695312505],
                                [-94.63383789062496, 69.64965820312506],
                                [-94.82250976562494, 69.577783203125],
                                [-95.96494140624989, 69.80278320312499],
                                [-96.5513671875, 70.21030273437506],
                                [-96.29770507812492, 70.51137695312511],
                                [-95.87861328124998, 70.54897460937514],
                                [-95.88632812499986, 70.69428710937507],
                                [-96.25800781249993, 70.64228515625013],
                                [-96.54892578124995, 70.80874023437511],
                                [-96.44658203124996, 71.23989257812502],
                                [-96.06201171874997, 71.41386718749993],
                                [-95.5642578124999, 71.33676757812503],
                                [-95.40625, 71.49165039062498],
                                [-95.87231445312494, 71.57314453125005],
                                [-94.73486328124994, 71.98295898437507],
                                [-94.30834960937491, 71.76489257812506],
                                [-93.74628906249998, 71.742822265625],
                                [-92.94868164062493, 71.26210937500011],
                                [-92.98144531249994, 70.8522460937501],
                                [-91.56406249999995, 70.1782714843751],
                                [-92.32050781250004, 70.2353515625],
                                [-92.51186523437494, 70.10385742187503],
                                [-91.976708984375, 70.03867187500009],
                                [-92.88779296874989, 69.66821289062511],
                                [-92.31166992187494, 69.67290039062499],
                                [-91.91196289062495, 69.53125],
                                [-91.20180664062494, 69.64477539062494],
                                [-91.43994140624997, 69.52568359375002],
                                [-90.4155761718749, 69.45698242187507],
                                [-90.89228515625004, 69.26728515624995],
                                [-91.23720703125005, 69.28554687500014],
                                [-90.47900390624994, 68.88115234374999],
                                [-90.57363281250005, 68.47470703124998],
                                [-90.20478515625004, 68.25747070312511],
                                [-89.27954101562491, 69.25546875000003],
                                [-88.22353515625, 68.91503906249997],
                                [-87.81357421874986, 68.34570312499997],
                                [-87.89267578125, 68.24814453125],
                                [-88.34697265624993, 68.28828125000001],
                                [-88.313818359375, 67.95034179687508],
                                [-87.359375, 67.17724609374997],
                                [-86.56079101562491, 67.48212890625007],
                                [-85.64316406249992, 68.69970703124997],
                                [-84.86757812499994, 68.77333984375005],
                                [-85.10664062499995, 68.84404296875007],
                                [-84.86220703125, 69.07397460937503],
                                [-85.38676757812493, 69.23188476562504],
                                [-85.50737304687487, 69.84526367187493],
                                [-82.61835937499993, 69.69106445312514],
                                [-82.39023437499989, 69.60087890625007],
                                [-82.75483398437493, 69.49438476562506],
                                [-82.30986328124996, 69.41000976562509],
                                [-82.22753906249997, 69.24887695312495],
                                [-81.37783203125005, 69.18564453125003],
                                [-81.95791015624991, 68.88364257812498],
                                [-81.38090820312496, 68.85004882812504],
                                [-81.28154296874987, 68.65722656250003],
                                [-81.91484374999993, 68.4587890625001],
                                [-82.55268554687504, 68.44648437500007],
                                [-82.22241210937489, 68.145263671875],
                                [-82.0125, 68.19389648437496],
                                [-81.97646484374997, 67.86201171875001],
                                [-81.2943359375, 67.497412109375],
                                [-81.46757812499996, 67.0698730468751],
                                [-83.40644531249998, 66.37124023437508],
                                [-84.53847656249994, 66.97280273437505],
                                [-84.84575195312502, 67.02871093750008],
                                [-85.11372070312498, 66.90693359375013],
                                [-84.73774414062504, 66.93359375000006],
                                [-84.223046875, 66.68247070312506],
                                [-83.86904296875, 66.2135742187501],
                                [-84.29306640624995, 66.29179687500005],
                                [-84.628076171875, 66.20771484374998],
                                [-85.603857421875, 66.56826171875005],
                                [-86.708154296875, 66.52304687500009],
                                [-86.68510742187502, 66.36040039062499],
                                [-85.95874023437491, 66.11904296875002],
                                [-87.45288085937503, 65.33896484375009],
                                [-87.96997070312503, 65.34892578124999],
                                [-89.7494140625, 65.93603515625006],
                                [-89.88969726562487, 65.86855468749997],
                                [-91.42724609374994, 65.94790039062497],
                                [-91.04111328124989, 65.82983398437509],
                                [-90.98344726562496, 65.91923828124999],
                                [-89.92407226562497, 65.78027343750011],
                                [-88.97402343749994, 65.34829101562502],
                                [-87.02753906249995, 65.19809570312498],
                                [-88.10561523437497, 64.18330078125001],
                                [-88.81772460937489, 63.99223632812499],
                                [-89.20063476562493, 64.11376953125006],
                                [-89.13154296874998, 63.96850585937494],
                                [-89.61582031249995, 64.030615234375],
                                [-89.8113281249999, 64.18056640625],
                                [-90.04165039062494, 64.14086914062509],
                                [-89.85571289062497, 63.9569824218751],
                                [-90.16816406250004, 63.978759765625085],
                                [-90.15473632812498, 63.68964843749998],
                                [-90.81191406249991, 63.580908203125034],
                                [-91.98222656249996, 63.82241210937502],
                                [-92.33842773437496, 63.787646484375045],
                                [-93.69633789062493, 64.14716796875013],
                                [-93.55981445312491, 63.865283203125074],
                                [-93.27021484374998, 63.840869140625074],
                                [-93.37851562499992, 63.94848632812497],
                                [-92.15688476562491, 63.691699218750045],
                                [-92.46508789062491, 63.55507812500011],
                                [-91.84184570312496, 63.69755859374999],
                                [-90.97006835937489, 63.442773437500136],
                                [-90.69858398437492, 63.06386718750005],
                                [-91.44897460937503, 62.804052734375034],
                                [-92.3612792968749, 62.81938476562496],
                                [-91.93583984374993, 62.59238281250009],
                                [-92.55141601562491, 62.546728515625034],
                                [-92.76596679687492, 62.34995117187509],
                                [-92.52797851562494, 62.16840820312504],
                                [-93.20537109374993, 62.364941406250125],
                                [-92.90551757812503, 62.21513671874996],
                                [-93.3330566406249, 61.93291015625002],
                                [-93.58178710937494, 61.94204101562511],
                                [-93.31201171874997, 61.76728515625004],
                                [-93.91274414062497, 61.48144531250006],
                                [-94.509375, 60.60454101562493],
                                [-94.76171874999991, 60.498242187500125],
                                [-94.78828124999998, 59.26787109374993],
                                [-94.95732421874996, 59.068847656250085],
                                [-94.28706054687493, 58.716015625000125],
                                [-94.33222656249998, 58.297363281250114],
                                [-94.12319335937494, 58.73671875000008],
                                [-93.1787597656249, 58.72563476562496],
                                [-92.43281249999993, 57.3203125],
                                [-92.7981445312499, 56.921972656250034],
                                [-90.89746093750003, 57.25693359375006],
                                [-88.94848632812489, 56.85131835937503],
                                [-88.07509765624997, 56.46728515624994],
                                [-87.48242187499991, 56.021289062500045],
                                [-85.55932617187491, 55.54018554687508],
                                [-85.21801757812491, 55.348974609375034],
                                [-85.3652832031249, 55.07929687499998],
                                [-85.06093749999997, 55.285644531250085],
                                [-83.91059570312493, 55.314648437499955],
                                [-82.39326171874998, 55.067822265625125],
                                [-82.219384765625, 54.8134765625],
                                [-82.42416992187486, 54.2445800781251],
                                [-82.14145507812492, 53.81762695312497],
                                [-82.29155273437496, 53.03071289062507],
                                [-81.5994140624999, 52.432617187500085],
                                [-81.82788085937489, 52.22421875000009],
                                [-81.46621093749994, 52.204492187500136],
                                [-80.588037109375, 51.667236328125114],
                                [-80.4433105468749, 51.38857421875002],
                                [-80.85122070312497, 51.125],
                                [-80.47832031249993, 51.30732421874998],
                                [-80.10356445312487, 51.282861328125136],
                                [-79.34790039062494, 50.76264648437504],
                                [-79.737451171875, 51.186279296875],
                                [-79.33867187500002, 51.62817382812497],
                                [-79.04052734375003, 51.46376953125005],
                                [-78.90317382812495, 51.200292968750034],
                                [-78.73134765624994, 51.497460937499994],
                                [-78.98164062499993, 51.774560546875136],
                                [-78.44809570312495, 52.26137695312502],
                                [-78.74414062499994, 52.65537109374998],
                                [-79.10034179687497, 53.65664062500005],
                                [-78.99604492187493, 54.00249023437499],
                                [-79.241796875, 54.098876953125085],
                                [-79.14672851562491, 54.16923828125002],
                                [-79.71235351562495, 54.6718261718751],
                                [-77.77529296874994, 55.291259765625],
                                [-76.60405273437496, 56.19956054687495],
                                [-76.52558593749998, 56.8917968750001],
                                [-76.80981445312497, 57.65795898437506],
                                [-77.15678710937496, 58.018896484375034],
                                [-78.51508789062493, 58.68237304687503],
                                [-77.76069335937498, 59.38002929687505],
                                [-77.72617187499995, 59.67587890624992],
                                [-77.34907226562495, 59.57895507812509],
                                [-77.48530273437493, 59.684570312500114],
                                [-77.28920898437494, 60.0220214843751],
                                [-77.58588867187498, 60.088183593750074],
                                [-77.45288085937497, 60.1458007812501],
                                [-77.6814453124999, 60.427099609375034],
                                [-77.503564453125, 60.54272460937497],
                                [-77.7908203124999, 60.63984375000004],
                                [-77.58955078124993, 60.808593750000114],
                                [-78.18134765624995, 60.81914062499996],
                                [-77.51435546874998, 61.55629882812505],
                                [-78.02138671874997, 61.8320800781251],
                                [-78.13339843749986, 62.28227539062496],
                                [-77.372412109375, 62.572509765625114],
                                [-75.81689453124991, 62.31586914062507],
                                [-75.7898437499999, 62.17958984375002],
                                [-75.3412109375, 62.312109375],
                                [-74.63256835937497, 62.115673828125125],
                                [-74.6458007812499, 62.21113281250004],
                                [-73.70507812499991, 62.47314453124994],
                                [-72.68696289062498, 62.12456054687499],
                                [-72.771630859375, 61.840429687500006],
                                [-72.50556640624998, 61.922656250000074],
                                [-72.22612304687487, 61.83159179687499],
                                [-72.04003906249991, 61.68027343750006],
                                [-72.21586914062502, 61.58725585937495],
                                [-71.86611328125, 61.68852539062499],
                                [-71.63828124999995, 61.6171875],
                                [-71.85439453124991, 61.43979492187492],
                                [-71.42270507812489, 61.158935546875085],
                                [-70.27929687499991, 61.06865234374999],
                                [-69.99243164062491, 60.8564941406251],
                                [-69.50332031249994, 61.04042968750011],
                                [-69.40473632812493, 60.84677734375009],
                                [-69.75947265624998, 60.440234375000045],
                                [-69.67373046874994, 60.07587890625007],
                                [-70.65483398437496, 60.02622070312506],
                                [-69.73393554687493, 59.918017578125045],
                                [-69.68188476562489, 59.34174804687507],
                                [-69.3440429687499, 59.303076171875006],
                                [-69.53164062499994, 58.86923828125009],
                                [-69.64838867187493, 58.82080078125],
                                [-69.78417968749994, 58.95571289062511],
                                [-70.15434570312496, 58.76059570312498],
                                [-69.78989257812486, 58.689306640625034],
                                [-69.27109374999986, 58.88393554687505],
                                [-68.69819335937495, 58.904541015625],
                                [-68.38115234374993, 58.74350585937506],
                                [-68.22939453124994, 58.48457031250007],
                                [-68.35654296874989, 58.163232421875136],
                                [-69.04082031249996, 57.902490234375136],
                                [-68.41357421874997, 58.0517578125],
                                [-68.02104492187493, 58.48530273437504],
                                [-67.88828124999989, 58.29575195312495],
                                [-68.06386718750005, 58.13896484374999],
                                [-67.75595703124992, 58.4045898437501],
                                [-67.6782714843749, 57.99111328125008],
                                [-67.5696289062499, 58.21347656250006],
                                [-66.72216796874991, 58.49101562499996],
                                [-66.36240234374989, 58.791162109374994],
                                [-66.0023925781249, 58.43120117187502],
                                [-66.04306640624995, 58.82065429687495],
                                [-65.72099609374996, 59.02377929687495],
                                [-65.38354492187494, 59.06020507812508],
                                [-65.7, 59.21333007812501],
                                [-65.4117187499999, 59.31499023437496],
                                [-65.47509765624994, 59.47031249999998],
                                [-65.03823242187494, 59.38789062500007],
                                [-65.40742187499993, 59.53935546875002],
                                [-65.4333984374999, 59.776513671874994],
                                [-65.02817382812495, 59.77070312500007],
                                [-65.17172851562489, 59.90800781249996],
                                [-64.81733398437498, 60.3310546875],
                                [-64.49941406250005, 60.26826171875001],
                                [-64.41958007812494, 60.17138671874997],
                                [-64.76845703124997, 60.01210937500005],
                                [-64.28349609374993, 60.06406249999998],
                                [-64.22631835937491, 59.741210937500085],
                                [-64.05605468750005, 59.82255859374996],
                                [-63.7501953124999, 59.51259765625005],
                                [-63.945458984374994, 59.380175781250074],
                                [-63.775878906249915, 59.277148437500045],
                                [-63.539892578124864, 59.332861328125034],
                                [-63.41513671874995, 59.194384765625074],
                                [-63.97114257812498, 59.053808593750034],
                                [-63.24843749999991, 59.068310546874955],
                                [-63.28212890624994, 58.86738281250007],
                                [-63.05029296874997, 58.87817382812494],
                                [-62.87387695312489, 58.67246093749998],
                                [-63.537060546874926, 58.329931640625006],
                                [-63.209960937499886, 58.46694335937502],
                                [-62.593847656249864, 58.47402343750005],
                                [-62.81206054687502, 58.20039062500007],
                                [-63.26152343749993, 58.014697265625074],
                                [-62.486230468749966, 58.15405273437506],
                                [-62.30566406249997, 57.97226562499995],
                                [-61.95864257812505, 57.91176757812508],
                                [-61.9679687499999, 57.61191406250009],
                                [-62.495556640624926, 57.489208984375125],
                                [-61.92114257812497, 57.42080078125005],
                                [-61.977441406249966, 57.24794921875002],
                                [-61.33374023437494, 57.01059570312498],
                                [-61.37163085937502, 56.68081054687511],
                                [-62.497265624999926, 56.80170898437504],
                                [-61.73774414062498, 56.52602539062502],
                                [-61.940429687499886, 56.423583984375114],
                                [-61.42529296874994, 56.360644531250074],
                                [-61.713085937499955, 56.230957031250114],
                                [-61.364697265624926, 56.2160156250001],
                                [-61.30112304687495, 56.04716796874999],
                                [-61.4495117187499, 55.99570312499998],
                                [-61.08935546874997, 55.86635742187511],
                                [-60.74326171874989, 55.94145507812493],
                                [-60.56210937499995, 55.727001953125125],
                                [-60.341015624999926, 55.78466796874997],
                                [-60.40830078124995, 55.649560546874994],
                                [-60.19238281249994, 55.4809082031251],
                                [-60.617138671874955, 55.060205078124994],
                                [-59.75878906249997, 55.3095703125],
                                [-59.68906249999989, 55.19633789062502],
                                [-59.43789062500005, 55.175927734375136],
                                [-59.837792968749994, 54.813964843750114],
                                [-59.25957031249996, 55.19995117187506],
                                [-58.99711914062496, 55.149462890625074],
                                [-58.780175781249994, 54.838378906250114],
                                [-58.39814453124998, 54.77412109374998],
                                [-57.96245117187493, 54.875732421875085],
                                [-57.40449218750004, 54.59086914062496],
                                [-57.69926757812496, 54.38657226562506],
                                [-58.435205078124966, 54.228125],
                                [-58.63320312499999, 54.04956054687497],
                                [-59.8230468749999, 53.83442382812504],
                                [-60.14492187499994, 53.59614257812498],
                                [-60.395410156249994, 53.653320312500085],
                                [-60.1002929687499, 53.48696289062511],
                                [-60.329492187499966, 53.26611328125006],
                                [-58.652050781249926, 53.97788085937495],
                                [-57.935986328124955, 54.09116210937492],
                                [-58.31748046874989, 54.11445312500007],
                                [-58.192089843749926, 54.228173828125136],
                                [-57.4160644531249, 54.162744140625136],
                                [-57.134960937499926, 53.79184570312506],
                                [-57.524072265624966, 53.61142578125006],
                                [-57.331738281249955, 53.469091796875034],
                                [-56.84086914062496, 53.73945312500004],
                                [-56.46499023437505, 53.76503906250011],
                                [-55.96611328125002, 53.4711425781251],
                                [-55.79794921874995, 53.211962890625045],
                                [-55.80283203124989, 52.64316406249998],
                                [-56.324902343749926, 52.54453124999998],
                                [-55.74648437499994, 52.4745605468751],
                                [-55.7771484374999, 52.3642578125],
                                [-56.01171874999997, 52.394482421875125],
                                [-55.695214843749994, 52.13779296875006],
                                [-56.97597656250005, 51.45766601562505],
                                [-58.510351562500006, 51.295068359375136],
                                [-59.88632812499992, 50.316406250000085],
                                [-61.72485351562503, 50.10405273437499],
                                [-61.91953124999989, 50.2328613281251],
                                [-62.71542968749995, 50.30166015625008],
                                [-66.49550781249991, 50.2118652343751],
                                [-66.94116210937503, 49.993701171875045],
                                [-67.37202148437495, 49.348437500000045],
                                [-68.28193359374998, 49.197167968750136],
                                [-69.67387695312496, 48.19916992187504],
                                [-71.01826171874993, 48.455615234375045],
                                [-69.86552734374993, 48.17226562500005],
                                [-69.775, 48.09809570312504],
                                [-69.9944335937499, 47.73989257812508],
                                [-70.70585937499996, 47.13979492187505],
                                [-71.26777343749995, 46.79594726562499],
                                [-71.87958984374998, 46.68681640624996],
                                [-72.98100585937493, 46.209716796875085],
                                [-73.4766113281249, 45.738232421874955],
                                [-74.03784179687494, 45.501855468750136],
                                [-74.31508789062494, 45.531054687500045],
                                [-73.97382812499995, 45.345117187499994],
                                [-74.70888671874997, 45.0038574218751]
                            ]
                        ],
                        [
                            [
                                [-96.78232421874998, 72.93662109375],
                                [-97.0927734375, 72.99692382812503],
                                [-96.86240234374995, 73.18881835937506],
                                [-96.78232421874998, 72.93662109375]
                            ]
                        ],
                        [
                            [
                                [-114.52153320312502, 72.592919921875],
                                [-113.57807617187501, 72.65209960937506],
                                [-113.2923828125, 72.94980468750003],
                                [-112.75361328125001, 72.98603515624995],
                                [-111.26972656249994, 72.71372070312498],
                                [-111.895166015625, 72.35610351562497],
                                [-111.67509765625002, 72.30014648437503],
                                [-110.20512695312495, 72.66127929687497],
                                [-110.66083984374998, 73.00820312500002],
                                [-110.00844726562494, 72.983642578125],
                                [-108.75498046875002, 72.55107421874999],
                                [-108.18823242187501, 71.72377929687502],
                                [-107.812841796875, 71.62617187500004],
                                [-107.30600585937496, 71.89467773437502],
                                [-108.23740234374999, 73.14990234375003],
                                [-108.029052734375, 73.34873046875003],
                                [-106.48212890624998, 73.19619140624997],
                                [-105.41513671874995, 72.788330078125],
                                [-104.38593749999997, 71.57695312500005],
                                [-104.51479492187502, 71.06425781250005],
                                [-103.58457031249995, 70.63085937500003],
                                [-103.07719726562497, 70.50883789062505],
                                [-103.04956054687503, 70.65507812499999],
                                [-101.67631835937495, 70.27827148437495],
                                [-101.56240234375001, 70.135009765625],
                                [-101.04267578125, 70.11079101562504],
                                [-100.98237304687497, 69.67988281250001],
                                [-101.483837890625, 69.85019531250006],
                                [-101.64765624999997, 69.69853515625007],
                                [-102.18212890624997, 69.845947265625],
                                [-102.59589843749997, 69.71791992187502],
                                [-102.62109374999996, 69.55151367187506],
                                [-103.464892578125, 69.64448242187498],
                                [-103.04892578124999, 69.47177734375006],
                                [-103.12021484374995, 69.20458984374997],
                                [-102.44677734374997, 69.476318359375],
                                [-102.04594726562493, 69.46484374999997],
                                [-101.85712890625001, 69.02397460937505],
                                [-102.89506835937499, 68.8236328125],
                                [-104.57143554687501, 68.87211914062502],
                                [-105.105859375, 68.92041015625],
                                [-105.019580078125, 69.08125],
                                [-106.27016601562497, 69.19458007812497],
                                [-106.65908203124997, 69.439599609375],
                                [-107.43989257812497, 69.00214843749995],
                                [-108.36499023437497, 68.93476562499998],
                                [-109.47211914062501, 68.67670898437498],
                                [-113.12773437500002, 68.49414062500003],
                                [-113.61684570312501, 68.8384765625],
                                [-113.69414062499995, 69.19501953124998],
                                [-115.61811523437495, 69.28295898437506],
                                [-116.51347656249993, 69.42460937500005],
                                [-117.19541015624995, 70.05405273437503],
                                [-114.59233398437497, 70.31245117187498],
                                [-112.63789062499997, 70.225244140625],
                                [-111.63256835937497, 70.30883789062497],
                                [-113.75727539062503, 70.69072265625005],
                                [-115.99091796874997, 70.586279296875],
                                [-117.58706054687498, 70.62954101562502],
                                [-118.2640625, 70.888330078125],
                                [-118.26909179687493, 71.03471679687505],
                                [-115.30341796874997, 71.49370117187505],
                                [-117.93564453125003, 71.39208984375003],
                                [-118.22646484374995, 71.46708984375005],
                                [-117.742333984375, 71.65932617187502],
                                [-118.58300781250003, 71.64902343749998],
                                [-118.98769531249997, 71.7642578125],
                                [-118.94462890624997, 71.98554687499995],
                                [-118.21347656249998, 72.26289062499998],
                                [-118.481298828125, 72.42768554687498],
                                [-118.13310546874995, 72.63281250000003],
                                [-114.63823242187499, 73.37265625000003],
                                [-114.20639648437495, 73.29780273437495],
                                [-114.05170898437497, 73.07099609375004],
                                [-114.52153320312502, 72.592919921875]
                            ]
                        ],
                        [
                            [
                                [-105.28891601562499, 72.919921875],
                                [-106.92153320312497, 73.479833984375],
                                [-106.61396484375001, 73.69560546875002],
                                [-105.31796874999995, 73.76713867187502],
                                [-104.5875, 73.57807617187495],
                                [-104.62172851562495, 73.3111328125],
                                [-105.28891601562499, 72.919921875]
                            ]
                        ],
                        [
                            [
                                [-79.53730468749998, 73.65449218749998],
                                [-78.2865234375, 73.66582031250007],
                                [-77.20654296874997, 73.49956054687505],
                                [-76.18339843749999, 72.84306640625005],
                                [-77.83593750000003, 72.89682617187498],
                                [-79.3193359375, 72.75771484375],
                                [-79.820703125, 72.82631835937502],
                                [-80.18330078124995, 73.22465820312499],
                                [-80.77641601562502, 73.33417968750001],
                                [-80.84887695312503, 73.72124023437499],
                                [-79.53730468749998, 73.65449218749998]
                            ]
                        ],
                        [
                            [
                                [-86.58935546874997, 71.01079101562507],
                                [-85.64384765624999, 71.15244140624998],
                                [-85.09487304687497, 71.15195312500006],
                                [-84.82373046874997, 71.02861328125005],
                                [-84.69941406249995, 71.63144531250003],
                                [-85.33906249999998, 71.69726562500003],
                                [-85.91162109375, 71.98652343749998],
                                [-85.321875, 72.23315429687506],
                                [-84.28374023437499, 72.04448242187499],
                                [-84.84199218749995, 72.30815429687505],
                                [-84.62304687500003, 72.37656250000003],
                                [-85.34111328124993, 72.42153320312497],
                                [-85.64990234374997, 72.72216796875003],
                                [-85.26210937500002, 72.95400390625],
                                [-84.25664062499999, 72.79672851562503],
                                [-85.454736328125, 73.10546875000003],
                                [-84.41606445312496, 73.45649414062495],
                                [-83.781884765625, 73.41689453125],
                                [-83.72983398437495, 73.57587890624995],
                                [-81.946142578125, 73.72983398437506],
                                [-81.40615234374997, 73.634521484375],
                                [-80.27724609375, 72.77016601562502],
                                [-81.229345703125, 72.31171874999998],
                                [-80.61147460937497, 72.450830078125],
                                [-80.925146484375, 71.90766601562501],
                                [-80.18193359374996, 72.20878906250007],
                                [-79.884375, 72.17719726562501],
                                [-80.10893554687499, 72.33217773437497],
                                [-79.83129882812503, 72.44628906250003],
                                [-79.000244140625, 72.27202148437507],
                                [-79.00781250000003, 72.04291992187501],
                                [-78.58510742187497, 71.880615234375],
                                [-78.86274414062495, 72.100830078125],
                                [-78.69926757812496, 72.35141601562498],
                                [-77.51650390624997, 72.17778320312505],
                                [-78.48427734374994, 72.47060546875002],
                                [-77.75322265624996, 72.72475585937502],
                                [-75.70429687499998, 72.57153320312497],
                                [-75.05268554687493, 72.22636718749999],
                                [-75.92280273437501, 71.71723632812501],
                                [-74.90317382812503, 72.10048828125002],
                                [-74.20932617187498, 71.978662109375],
                                [-74.31572265624999, 71.84267578125],
                                [-75.20478515625001, 71.70913085937497],
                                [-74.70078125, 71.67558593750005],
                                [-74.99619140624998, 71.21811523437503],
                                [-74.48808593750002, 71.64838867187501],
                                [-73.8140625, 71.77143554687495],
                                [-74.197265625, 71.404150390625],
                                [-73.71284179687498, 71.58759765624998],
                                [-73.18061523437501, 71.282861328125],
                                [-73.27822265625, 71.53798828125],
                                [-72.901953125, 71.67778320312507],
                                [-71.64067382812499, 71.51625976562502],
                                [-71.22939453124997, 71.33876953125],
                                [-71.49501953124997, 71.10512695312502],
                                [-71.93793945312498, 71.09428710937502],
                                [-72.63271484374994, 70.83076171874998],
                                [-71.74252929687495, 71.046875],
                                [-71.370849609375, 70.97514648437499],
                                [-70.82607421874994, 71.10874023437503],
                                [-70.67265625, 71.05219726562498],
                                [-70.76171874999997, 70.79223632812503],
                                [-71.89018554687502, 70.43154296875002],
                                [-71.27587890625, 70.50029296874999],
                                [-71.42944335937503, 70.12778320312503],
                                [-70.97978515624999, 70.5810546875],
                                [-69.94980468750003, 70.84501953125005],
                                [-68.49575195312502, 70.61025390625],
                                [-68.363525390625, 70.48125],
                                [-70.05771484375, 70.042626953125],
                                [-68.77822265625, 70.20356445312501],
                                [-69.00830078124997, 69.97895507812501],
                                [-68.74404296874997, 69.94140625],
                                [-68.05908203124997, 70.317236328125],
                                [-67.36367187499994, 70.03442382812503],
                                [-67.22163085937495, 69.73071289062506],
                                [-68.02041015625, 69.77006835937499],
                                [-69.25078124999999, 69.51191406249998],
                                [-68.51303710937498, 69.57729492187497],
                                [-67.236962890625, 69.460107421875],
                                [-66.71674804687495, 69.31186523437498],
                                [-66.70742187500002, 69.16821289062503],
                                [-68.40629882812499, 69.23222656250002],
                                [-69.040625, 69.09799804687503],
                                [-68.41552734375, 69.17207031250001],
                                [-67.8326171875, 69.06596679687499],
                                [-67.88320312500002, 68.78398437499999],
                                [-69.31909179687497, 68.85698242187505],
                                [-68.21040039062495, 68.702978515625],
                                [-67.9384765625, 68.524169921875],
                                [-66.74272460937502, 68.45776367187497],
                                [-67.032958984375, 68.32607421874997],
                                [-66.923095703125, 68.06572265625005],
                                [-66.72900390624997, 68.12900390625006],
                                [-66.66269531249995, 68.03442382812497],
                                [-66.63095703124998, 68.21064453124998],
                                [-66.21240234374997, 68.280419921875],
                                [-66.44394531249998, 67.83383789062506],
                                [-65.94238281250003, 68.07094726562505],
                                [-65.86435546875003, 67.92285156249997],
                                [-65.50908203124996, 67.96826171875],
                                [-65.40126953125002, 67.67485351562499],
                                [-65.41533203124996, 67.87924804687498],
                                [-64.92231445312495, 68.03164062500002],
                                [-65.02109375, 67.78754882812495],
                                [-64.63779296875, 67.84023437500002],
                                [-63.850195312500034, 67.56606445312502],
                                [-64.00795898437502, 67.34731445312497],
                                [-64.69995117187494, 67.35053710937501],
                                [-63.83623046874993, 67.26411132812498],
                                [-63.59160156250002, 67.3775390625],
                                [-63.040136718750034, 67.235009765625],
                                [-63.70156249999994, 66.82236328125003],
                                [-62.962304687499966, 66.94926757812505],
                                [-62.37973632812495, 66.90537109375],
                                [-62.12358398437499, 67.046728515625],
                                [-61.35341796874994, 66.689208984375],
                                [-61.52783203124994, 66.55810546875003],
                                [-62.12333984374993, 66.64306640625003],
                                [-61.57080078125, 66.37290039062506],
                                [-61.95634765624993, 66.30932617187497],
                                [-62.553125, 66.40683593750003],
                                [-62.53359374999994, 66.22700195312498],
                                [-61.99160156250002, 66.03530273437502],
                                [-62.624121093750006, 66.01625976562505],
                                [-62.381982421874966, 65.83330078124999],
                                [-62.65888671874998, 65.63994140625002],
                                [-63.16894531249997, 65.65732421875],
                                [-63.45874023437494, 65.85302734375],
                                [-63.42089843749997, 65.70859374999998],
                                [-63.651074218749955, 65.66098632812506],
                                [-63.33745117187493, 65.61674804687502],
                                [-63.36337890624998, 65.22973632812503],
                                [-63.606591796874966, 64.92807617187503],
                                [-64.345703125, 65.17241210937499],
                                [-64.26967773437497, 65.40078124999997],
                                [-64.55507812500002, 65.1166015625],
                                [-65.401611328125, 65.764013671875],
                                [-64.44536132812496, 66.31713867187497],
                                [-65.0044921875, 66.07773437500003],
                                [-65.82573242187499, 65.996923828125],
                                [-65.65634765625003, 66.204736328125],
                                [-66.06372070312497, 66.13271484374997],
                                [-66.986328125, 66.62749023437505],
                                [-67.07685546874995, 66.52548828125006],
                                [-67.30732421874993, 66.5697265625],
                                [-67.22539062499993, 66.31025390624998],
                                [-67.88339843749995, 66.46743164062502],
                                [-67.18320312499995, 66.03442382812503],
                                [-67.350439453125, 65.92973632812502],
                                [-67.82802734374997, 65.96518554687503],
                                [-68.45991210937498, 66.249267578125],
                                [-68.74892578125, 66.200048828125],
                                [-68.21718750000002, 66.078857421875],
                                [-68.18671874999993, 65.87099609375002],
                                [-67.86645507812497, 65.773681640625],
                                [-67.936767578125, 65.56489257812501],
                                [-67.56962890624999, 65.64355468749997],
                                [-67.11796874999999, 65.44038085937495],
                                [-67.3365234375, 65.34658203125005],
                                [-66.69741210937502, 64.81518554687506],
                                [-66.63549804687503, 65.00034179687503],
                                [-66.21464843749999, 64.72241210937497],
                                [-65.93852539062496, 64.88574218750003],
                                [-65.2748046875, 64.63154296875004],
                                [-65.52934570312499, 64.50478515624997],
                                [-65.074609375, 64.43666992187502],
                                [-65.21298828125003, 64.30327148437502],
                                [-65.580322265625, 64.29384765624997],
                                [-65.16987304687495, 64.02817382812503],
                                [-64.67846679687503, 64.027978515625],
                                [-64.79814453124999, 63.91596679687498],
                                [-64.4109375, 63.70634765625002],
                                [-64.66464843749995, 63.24536132812497],
                                [-65.19184570312498, 63.764257812500006],
                                [-65.06894531249998, 63.26347656250002],
                                [-64.67236328125003, 62.921972656250006],
                                [-65.16279296875001, 62.93261718750003],
                                [-65.10849609374998, 62.62646484375],
                                [-66.22402343749994, 63.10717773437497],
                                [-66.228662109375, 62.99096679687503],
                                [-66.41445312500002, 63.027197265625034],
                                [-66.65498046874998, 63.264746093750006],
                                [-66.69746093749993, 63.069531249999955],
                                [-67.89326171874993, 63.733740234375006],
                                [-67.72255859374997, 63.422753906249966],
                                [-68.49375, 63.725488281249994],
                                [-68.91108398437498, 63.703222656250006],
                                [-68.141259765625, 63.17231445312501],
                                [-67.67597656249998, 63.093554687500045],
                                [-67.73696289062497, 63.00957031249999],
                                [-65.98017578125001, 62.20888671875002],
                                [-66.12387695312498, 61.89306640625],
                                [-68.53588867187503, 62.25561523437506],
                                [-69.12558593749998, 62.423974609374966],
                                [-69.604736328125, 62.76772460937502],
                                [-70.23613281250002, 62.76337890625001],
                                [-70.801416015625, 62.91049804687506],
                                [-71.10576171874999, 63.00224609375002],
                                [-70.94604492187497, 63.12070312499998],
                                [-71.34726562499998, 63.066113281249955],
                                [-71.99223632812493, 63.41616210937505],
                                [-71.380859375, 63.580322265625],
                                [-72.29013671874995, 63.72797851562498],
                                [-72.17426757812498, 63.893408203125006],
                                [-72.49843749999994, 63.82348632812497],
                                [-73.45454101562495, 64.39926757812503],
                                [-73.27128906250002, 64.58251953125],
                                [-73.91035156249998, 64.578125],
                                [-74.064794921875, 64.42465820312498],
                                [-74.13046874999998, 64.6078125],
                                [-74.46123046874996, 64.64467773437505],
                                [-74.68139648437497, 64.8306640625],
                                [-74.91943359374997, 64.76552734374997],
                                [-74.69472656250002, 64.49658203124997],
                                [-75.71503906249995, 64.52436523437495],
                                [-75.76669921875, 64.39194335937498],
                                [-76.85615234374998, 64.23764648437498],
                                [-77.76049804687503, 64.36015624999999],
                                [-78.04521484374993, 64.499267578125],
                                [-78.09560546875, 64.93925781250002],
                                [-77.36088867187496, 65.19653320312503],
                                [-77.32670898437493, 65.453125],
                                [-75.82832031249993, 65.22705078125003],
                                [-75.45209960937495, 64.84160156250002],
                                [-75.35712890624995, 65.00874023437495],
                                [-75.79868164062503, 65.297509765625],
                                [-75.16630859374999, 65.28393554687497],
                                [-74.13847656250002, 65.50346679687502],
                                [-73.55078125000003, 65.48525390625005],
                                [-74.41640624999997, 66.16708984375003],
                                [-73.03325195312502, 66.72817382812505],
                                [-72.78881835937494, 67.030615234375],
                                [-72.22001953124999, 67.25429687500002],
                                [-73.28447265624993, 68.35698242187505],
                                [-73.82050781249998, 68.36293945312502],
                                [-73.82211914062495, 68.68598632812501],
                                [-74.11796875000002, 68.70092773437506],
                                [-73.9892578125, 68.54863281250002],
                                [-74.2701171875, 68.54121093750001],
                                [-74.89296875, 68.80815429687505],
                                [-74.71669921874997, 69.04550781249998],
                                [-76.58505859375, 68.69873046875003],
                                [-76.55722656250003, 69.00947265625001],
                                [-75.9537109375, 69.03081054687502],
                                [-75.64775390625002, 69.212548828125],
                                [-76.46494140624995, 69.46943359375001],
                                [-76.23408203125001, 69.66210937500003],
                                [-76.742333984375, 69.57290039062497],
                                [-77.08994140625, 69.63510742187503],
                                [-76.85859374999995, 69.775390625],
                                [-77.591650390625, 69.84560546875002],
                                [-77.77402343750003, 70.23852539062503],
                                [-78.28281250000003, 70.229150390625],
                                [-79.06640624999997, 70.60356445312507],
                                [-79.40522460937498, 70.40073242187503],
                                [-78.86284179687499, 70.24189453125001],
                                [-78.88964843750003, 69.97749023437495],
                                [-79.51542968749996, 69.88759765625005],
                                [-81.65195312500003, 70.09462890625002],
                                [-80.92172851562503, 69.73090820312501],
                                [-81.56469726562503, 69.94272460937498],
                                [-82.29384765624997, 69.83691406250003],
                                [-83.14995117187493, 70.00908203125002],
                                [-83.85908203124998, 69.96274414062498],
                                [-85.43237304687497, 70.11137695312507],
                                [-85.780029296875, 70.03666992187505],
                                [-86.32202148437503, 70.14541015625],
                                [-86.396875, 70.46533203124997],
                                [-87.838134765625, 70.24658203125],
                                [-88.78271484374997, 70.49448242187503],
                                [-89.45590820312498, 71.06171874999995],
                                [-87.84492187499995, 70.94438476562505],
                                [-87.14008789062498, 71.01162109374997],
                                [-89.80537109374993, 71.46230468750005],
                                [-89.86152343750001, 72.41191406250005],
                                [-88.70517578124998, 73.40327148437495],
                                [-87.71977539062496, 73.72290039062497],
                                [-85.95078124999998, 73.85014648437505],
                                [-84.94677734375, 73.72163085937498],
                                [-86.00053710937499, 73.31254882812505],
                                [-86.65629882812502, 72.72402343750005],
                                [-86.21845703124998, 71.89912109375004],
                                [-85.02338867187495, 71.35322265625001],
                                [-86.58935546874997, 71.01079101562507]
                            ]
                        ],
                        [
                            [
                                [-100.00190429687497, 73.9458984375],
                                [-99.15795898437499, 73.73159179687497],
                                [-97.66997070312499, 73.88774414062499],
                                [-97.1705078125, 73.82485351562497],
                                [-97.001708984375, 73.66650390625003],
                                [-97.62587890624997, 73.50229492187498],
                                [-97.27250976562502, 73.38681640624998],
                                [-98.42177734375002, 72.94101562500003],
                                [-97.63632812499998, 73.02763671874999],
                                [-97.128125, 72.62758789062502],
                                [-96.59208984374996, 72.71025390624999],
                                [-96.44560546874996, 72.55244140624998],
                                [-96.80146484374998, 72.32241210937502],
                                [-96.61342773437494, 71.83383789062506],
                                [-97.58227539062497, 71.62968750000005],
                                [-98.18134765624998, 71.66245117187503],
                                [-98.32270507812501, 71.85234375000002],
                                [-98.19863281249994, 71.44086914062501],
                                [-98.66289062499993, 71.302099609375],
                                [-99.22363281249996, 71.387109375],
                                [-100.594482421875, 72.15234375000003],
                                [-101.20854492187495, 72.31699218749998],
                                [-101.72392578124996, 72.31489257812501],
                                [-102.70874023437496, 72.76450195312503],
                                [-102.20400390624998, 73.077294921875],
                                [-101.27319335937497, 72.7216796875],
                                [-100.48476562500002, 72.77294921874997],
                                [-100.395703125, 72.97700195312498],
                                [-100.128125, 72.90668945312495],
                                [-100.53637695312497, 73.19785156250003],
                                [-99.82514648437503, 73.2138671875],
                                [-100.36611328125001, 73.359033203125],
                                [-100.88935546875003, 73.27534179687501],
                                [-101.52319335937501, 73.48637695312502],
                                [-100.97578124999995, 73.59975585937502],
                                [-100.5216796875, 73.44931640625],
                                [-100.96298828125002, 73.79140625],
                                [-99.99111328125, 73.79516601562503],
                                [-100.00190429687497, 73.9458984375]
                            ]
                        ],
                        [
                            [
                                [-98.270361328125, 73.86850585937498],
                                [-98.97392578124997, 73.81206054687502],
                                [-99.4169921875, 73.89541015625002],
                                [-97.69824218749997, 74.10869140625005],
                                [-98.270361328125, 73.86850585937498]
                            ]
                        ],
                        [
                            [
                                [-93.17084960937498, 74.16098632812506],
                                [-92.22270507812502, 73.97236328124998],
                                [-90.62744140625, 73.95170898437505],
                                [-90.38139648437496, 73.82475585937502],
                                [-92.11791992187497, 72.75380859375],
                                [-94.21132812499997, 72.75693359375],
                                [-93.77055664062496, 72.66821289062506],
                                [-93.55517578124994, 72.42114257812497],
                                [-94.03754882812498, 72.02875976562498],
                                [-95.00786132812496, 72.01279296875],
                                [-95.60214843749998, 72.88447265624995],
                                [-95.63291015625003, 73.69545898437497],
                                [-94.697607421875, 73.66357421874997],
                                [-95.134130859375, 73.88125],
                                [-94.97353515625, 74.04140625000002],
                                [-93.17084960937498, 74.16098632812506]
                            ]
                        ],
                        [
                            [
                                [-119.73632812499997, 74.11264648437498],
                                [-119.20595703125002, 74.19799804687503],
                                [-119.11796874999995, 74.01552734375],
                                [-118.54399414062499, 74.24462890625003],
                                [-117.51484375000001, 74.23173828124999],
                                [-115.51069335937501, 73.61875],
                                [-115.446875, 73.43886718750002],
                                [-118.96157226562497, 72.68413085937499],
                                [-119.51284179687501, 72.30268554687501],
                                [-120.17988281250001, 72.21264648437506],
                                [-120.61933593750001, 71.50576171875002],
                                [-121.47216796875003, 71.38901367187503],
                                [-121.74936523437502, 71.44477539062501],
                                [-123.09565429687503, 71.09379882812502],
                                [-124.00776367187494, 71.67744140624998],
                                [-125.29667968749999, 71.973046875],
                                [-125.84531250000002, 71.978662109375],
                                [-123.79726562499997, 73.76816406250003],
                                [-124.69624023437497, 74.34819335937499],
                                [-121.50415039062497, 74.54511718749998],
                                [-119.56264648437494, 74.23281250000002],
                                [-119.73632812499997, 74.11264648437498]
                            ]
                        ],
                        [
                            [
                                [-97.35551757812496, 74.52631835937495],
                                [-97.75, 74.51054687500005],
                                [-97.41650390624994, 74.62656250000003],
                                [-97.35551757812496, 74.52631835937495]
                            ]
                        ],
                        [
                            [
                                [-95.306640625, 74.50541992187505],
                                [-95.850732421875, 74.58247070312504],
                                [-95.51020507812498, 74.63676757812499],
                                [-95.306640625, 74.50541992187505]
                            ]
                        ],
                        [
                            [
                                [-104.11992187499995, 75.03632812500004],
                                [-104.88740234374998, 75.14775390624999],
                                [-104.34619140624996, 75.42993164062503],
                                [-103.64350585937497, 75.18657226562499],
                                [-104.11992187499995, 75.03632812500004]
                            ]
                        ],
                        [
                            [
                                [-93.54257812499995, 75.0279296875],
                                [-93.57309570312495, 74.66884765625005],
                                [-94.53452148437498, 74.63671874999997],
                                [-96.59960937499997, 75.03178710937499],
                                [-95.95463867187493, 75.44379882812501],
                                [-94.878173828125, 75.63002929687502],
                                [-93.90908203125002, 75.42250976562502],
                                [-93.54257812499995, 75.0279296875]
                            ]
                        ],
                        [
                            [
                                [-96.07856445312495, 75.510107421875],
                                [-96.91513671875003, 75.37968749999999],
                                [-96.98281249999997, 75.50981445312505],
                                [-96.367822265625, 75.65463867187506],
                                [-96.07856445312495, 75.510107421875]
                            ]
                        ],
                        [
                            [
                                [-94.52656249999995, 75.74931640624999],
                                [-94.901220703125, 75.93076171875],
                                [-94.53789062499996, 75.99643554687506],
                                [-94.52656249999995, 75.74931640624999]
                            ]
                        ],
                        [
                            [
                                [-118.328125, 75.57968749999998],
                                [-118.81713867187503, 75.52211914062497],
                                [-119.39458007812499, 75.617333984375],
                                [-117.63369140624998, 76.11508789062498],
                                [-118.328125, 75.57968749999998]
                            ]
                        ],
                        [
                            [
                                [-79.0630859375, 75.92587890624998],
                                [-79.63876953124995, 75.84291992187505],
                                [-79.00932617187499, 76.14589843750005],
                                [-79.0630859375, 75.92587890624998]
                            ]
                        ],
                        [
                            [
                                [-102.22734374999995, 76.014892578125],
                                [-102.00800781250003, 75.93940429687498],
                                [-102.57958984375003, 75.78022460937498],
                                [-103.31474609374996, 75.76420898437499],
                                [-103.04150390624999, 75.91884765624997],
                                [-103.98525390624997, 75.93310546875003],
                                [-103.80078124999994, 76.03701171874997],
                                [-104.24248046874996, 76.04697265625006],
                                [-104.35063476562497, 76.18232421875001],
                                [-102.72802734374999, 76.30703125],
                                [-102.22734374999995, 76.014892578125]
                            ]
                        ],
                        [
                            [
                                [-104.02285156249998, 76.58310546875003],
                                [-103.05131835937495, 76.44985351562497],
                                [-103.31137695312499, 76.34755859375],
                                [-104.35751953124995, 76.33461914062502],
                                [-104.58569335937499, 76.60649414062499],
                                [-104.07451171875003, 76.66611328124998],
                                [-104.02285156249998, 76.58310546875003]
                            ]
                        ],
                        [
                            [
                                [-97.70092773437497, 76.46650390624998],
                                [-97.89052734374997, 75.7603515625],
                                [-97.40751953124999, 75.67250976562497],
                                [-97.33603515624998, 75.41982421875],
                                [-97.65332031249997, 75.50776367187498],
                                [-97.87822265624996, 75.41611328125003],
                                [-97.67431640624997, 75.127294921875],
                                [-98.04531249999997, 75.20083007812497],
                                [-98.12094726562503, 75.03271484375],
                                [-100.234375, 75.00771484374997],
                                [-100.48349609374995, 75.18842773437501],
                                [-100.14570312499995, 75.24614257812505],
                                [-100.71191406250003, 75.40634765625],
                                [-99.19458007812499, 75.698388671875],
                                [-102.58740234375001, 75.51367187500003],
                                [-102.79750976562501, 75.59965820312505],
                                [-102.14472656249998, 75.87504882812502],
                                [-100.97280273437498, 75.79843750000003],
                                [-101.414990234375, 75.84584960937502],
                                [-101.87211914062496, 76.08310546875003],
                                [-101.52895507812495, 76.21728515625003],
                                [-102.1046875, 76.33120117187505],
                                [-101.41518554687495, 76.42490234375003],
                                [-99.86547851562499, 75.92421875],
                                [-100.11284179687502, 76.11723632812507],
                                [-99.54106445312497, 76.14628906250005],
                                [-100.41420898437495, 76.242529296875],
                                [-99.97773437500003, 76.31245117187495],
                                [-100.82973632812497, 76.52387695312495],
                                [-99.8140625, 76.6322265625],
                                [-98.89033203125, 76.46557617187497],
                                [-98.71083984374994, 76.69384765625003],
                                [-97.70092773437497, 76.46650390624998]
                            ]
                        ],
                        [
                            [
                                [-101.22612304687497, 76.57934570312497],
                                [-101.61308593749995, 76.60458984375006],
                                [-100.26914062499998, 76.73413085937497],
                                [-101.22612304687497, 76.57934570312497]
                            ]
                        ],
                        [
                            [
                                [-108.29238281250001, 76.05712890625],
                                [-107.72348632812502, 75.99541015625002],
                                [-108.020703125, 75.80478515625],
                                [-107.21621093749997, 75.89155273437501],
                                [-106.91352539062503, 75.67963867187501],
                                [-106.67700195312499, 76.02373046875002],
                                [-105.63266601562493, 75.94536132812505],
                                [-105.51948242187497, 75.63237304687505],
                                [-106.09262695312495, 75.08945312500003],
                                [-107.15341796874996, 74.9271484375],
                                [-108.47475585937495, 74.94721679687501],
                                [-108.83129882812501, 75.06489257812498],
                                [-112.51933593749997, 74.41684570312503],
                                [-113.67158203124997, 74.45302734375005],
                                [-114.31269531250003, 74.71508789062506],
                                [-112.835986328125, 74.9755859375],
                                [-111.67109375, 75.01943359374997],
                                [-111.09345703125001, 75.25629882812498],
                                [-113.71176757812499, 75.06860351562503],
                                [-113.85332031249996, 75.259375],
                                [-113.46708984374996, 75.41611328125003],
                                [-114.01650390624998, 75.43427734375001],
                                [-114.16845703124994, 75.23950195312503],
                                [-114.51381835937497, 75.27548828125],
                                [-114.45175781250002, 75.08789062499997],
                                [-115.02011718749999, 74.97617187500003],
                                [-115.41318359374995, 75.11499023437497],
                                [-115.72885742187496, 74.968115234375],
                                [-116.47607421874996, 75.17177734375],
                                [-117.56523437499997, 75.23334960937504],
                                [-117.25761718750002, 75.45952148437502],
                                [-116.07714843749996, 75.49296874999999],
                                [-115.14184570312501, 75.67851562500005],
                                [-116.42563476562498, 75.58535156249997],
                                [-117.16362304687496, 75.64487304687503],
                                [-116.80214843749995, 75.77158203124998],
                                [-114.99150390625002, 75.896337890625],
                                [-116.66455078124999, 75.95756835937505],
                                [-116.20986328125, 76.19443359374998],
                                [-114.77861328124999, 76.17260742187497],
                                [-115.82216796874997, 76.27001953125003],
                                [-114.99848632812503, 76.4974609375],
                                [-114.19394531249999, 76.45146484375005],
                                [-113.82348632812501, 76.20683593750002],
                                [-112.69760742187496, 76.20170898437505],
                                [-111.05268554687495, 75.54853515625001],
                                [-108.94716796875, 75.54179687499999],
                                [-108.94477539062495, 75.69897460937503],
                                [-109.8705078125, 75.929052734375],
                                [-109.48681640624999, 76.14467773437497],
                                [-110.31445312500001, 76.369384765625],
                                [-109.09824218749996, 76.811865234375],
                                [-108.46699218749997, 76.73759765625007],
                                [-108.29238281250001, 76.05712890625]
                            ]
                        ],
                        [
                            [
                                [-89.72646484374994, 76.50742187499998],
                                [-90.55625, 76.73457031249998],
                                [-90.13632812499995, 76.83696289062505],
                                [-89.69541015625, 76.74116210937498],
                                [-89.72646484374994, 76.50742187499998]
                            ]
                        ],
                        [
                            [
                                [-113.56069335937494, 76.74326171874998],
                                [-114.83525390624999, 76.79467773437497],
                                [-113.89165039062495, 76.89487304687503],
                                [-113.56069335937494, 76.74326171874998]
                            ]
                        ],
                        [
                            [
                                [-94.29497070312493, 76.91245117187498],
                                [-93.23002929687496, 76.77026367187497],
                                [-93.53457031250002, 76.44770507812498],
                                [-92.99536132812494, 76.62041015624999],
                                [-91.305029296875, 76.68076171875003],
                                [-90.54262695312494, 76.495751953125],
                                [-91.41508789062496, 76.45585937500005],
                                [-89.28452148437498, 76.30161132812506],
                                [-89.40659179687498, 76.18916015624998],
                                [-91.40732421874998, 76.22006835937506],
                                [-89.27758789062497, 75.79506835937497],
                                [-89.64604492187499, 75.5650390625],
                                [-88.91669921874998, 75.45395507812503],
                                [-88.64497070312495, 75.65844726562503],
                                [-88.201318359375, 75.51201171875005],
                                [-87.72973632812503, 75.57563476562495],
                                [-87.53911132812502, 75.48486328125003],
                                [-87.25693359374998, 75.61772460937499],
                                [-85.95146484374993, 75.39501953125],
                                [-85.97299804687498, 75.5287109375],
                                [-83.931982421875, 75.81894531250003],
                                [-83.23710937499993, 75.75083007812503],
                                [-82.153662109375, 75.83105468750003],
                                [-80.32197265624998, 75.62910156250001],
                                [-79.50908203125002, 75.25981445312499],
                                [-80.38198242187494, 75.03417968750003],
                                [-79.40141601562502, 74.91762695312502],
                                [-79.944482421875, 74.83364257812505],
                                [-80.34775390624998, 74.90297851562505],
                                [-80.26274414062499, 74.58447265625],
                                [-81.94018554687494, 74.47270507812505],
                                [-82.73579101562495, 74.53027343749997],
                                [-83.5220703125, 74.90146484375],
                                [-83.53188476562494, 74.58569335937497],
                                [-84.42553710937503, 74.50810546875007],
                                [-85.06142578125, 74.60693359375003],
                                [-85.133447265625, 74.517431640625],
                                [-85.44233398437495, 74.6005859375],
                                [-85.80800781249994, 74.49897460937498],
                                [-88.42304687499995, 74.49414062499997],
                                [-88.53496093749993, 74.83173828125001],
                                [-89.55869140624995, 74.55473632812507],
                                [-90.55327148437499, 74.61274414062498],
                                [-90.88022460937498, 74.8177734375],
                                [-91.13457031250002, 74.64985351562498],
                                [-91.54912109375002, 74.65556640624999],
                                [-92.3892578125, 75.263330078125],
                                [-92.18510742187499, 75.84653320312498],
                                [-93.09174804687495, 76.35400390624997],
                                [-95.27387695312498, 76.26440429687503],
                                [-96.03969726562494, 76.48671875000002],
                                [-95.65097656249998, 76.58466796874998],
                                [-96.88071289062495, 76.73833007812505],
                                [-96.40156249999995, 76.79721679687503],
                                [-96.75830078124997, 76.97177734374998],
                                [-95.84951171875002, 77.06621093750005],
                                [-94.29497070312493, 76.91245117187498]
                            ]
                        ],
                        [
                            [
                                [-115.55126953125001, 77.36328125],
                                [-116.32919921874996, 77.137060546875],
                                [-115.81005859374999, 76.939111328125],
                                [-116.25273437500002, 76.90141601562505],
                                [-115.94628906250003, 76.71127929687503],
                                [-116.99921874999995, 76.531591796875],
                                [-117.23359375000001, 76.28154296875005],
                                [-117.99296874999999, 76.40581054687505],
                                [-117.88081054687497, 76.80507812500005],
                                [-118.79140624999994, 76.51298828125005],
                                [-119.080712890625, 76.12407226562505],
                                [-119.58037109375, 76.32651367187498],
                                [-119.52612304687496, 75.99721679687505],
                                [-119.91289062499997, 75.85883789062501],
                                [-120.40888671874995, 75.82563476562498],
                                [-120.84838867187496, 76.18266601562499],
                                [-121.21347656249999, 75.98369140625005],
                                [-122.53305664062498, 75.95092773437503],
                                [-122.59272460937497, 76.16206054687495],
                                [-122.90278320312498, 76.13471679687498],
                                [-122.51938476562503, 76.353173828125],
                                [-121.56113281250003, 76.453466796875],
                                [-119.09018554687496, 77.30507812500002],
                                [-116.84355468749995, 77.33955078124995],
                                [-117.03974609374995, 77.46513671875005],
                                [-116.51132812500003, 77.54760742187497],
                                [-115.55126953125001, 77.36328125]
                            ]
                        ],
                        [
                            [
                                [-89.83325195312503, 77.26762695312505],
                                [-90.22827148437503, 77.21245117187499],
                                [-90.99321289062499, 77.32949218750002],
                                [-91.01904296875003, 77.64389648437503],
                                [-89.83896484375003, 77.49140624999998],
                                [-89.83325195312503, 77.26762695312505]
                            ]
                        ],
                        [
                            [
                                [-104.55815429687497, 77.14174804687497],
                                [-105.21508789062496, 77.18208007812501],
                                [-106.03559570312495, 77.73984375000006],
                                [-105.58789062499997, 77.73598632812497],
                                [-104.54223632812501, 77.33774414062503],
                                [-104.55815429687497, 77.14174804687497]
                            ]
                        ],
                        [
                            [
                                [-95.484375, 77.79199218750003],
                                [-93.30097656249995, 77.73979492187505],
                                [-93.54394531249997, 77.466650390625],
                                [-95.98706054687497, 77.484130859375],
                                [-96.19458007812497, 77.70053710937503],
                                [-95.484375, 77.79199218750003]
                            ]
                        ],
                        [
                            [
                                [-101.6935546875, 77.69658203125005],
                                [-102.37783203124995, 77.728125],
                                [-102.44770507812498, 77.88061523437506],
                                [-101.19321289062493, 77.82978515624998],
                                [-101.00205078124998, 77.73510742187497],
                                [-101.6935546875, 77.69658203125005]
                            ]
                        ],
                        [
                            [
                                [-113.83247070312497, 77.75463867187506],
                                [-114.28720703124998, 77.72148437500005],
                                [-114.98041992187498, 77.91542968750002],
                                [-114.33037109374997, 78.07753906250002],
                                [-113.83247070312497, 77.75463867187506]
                            ]
                        ],
                        [
                            [
                                [-110.45805664062496, 78.10322265625001],
                                [-109.62226562499995, 78.07475585937499],
                                [-110.865625, 77.834130859375],
                                [-110.15273437500002, 77.76293945312506],
                                [-110.19848632812501, 77.52451171874998],
                                [-112.37265625000002, 77.36411132812498],
                                [-113.16435546875002, 77.5302734375],
                                [-113.21518554687498, 77.90351562500001],
                                [-110.45805664062496, 78.10322265625001]
                            ]
                        ],
                        [
                            [
                                [-109.81596679687499, 78.65039062500003],
                                [-109.48447265624995, 78.31640625],
                                [-111.16918945312499, 78.38627929687505],
                                [-111.51748046874997, 78.27470703125005],
                                [-112.13125, 78.366064453125],
                                [-113.22304687499998, 78.29790039062505],
                                [-112.85585937499997, 78.46684570312502],
                                [-110.877587890625, 78.73505859375004],
                                [-109.81596679687499, 78.65039062500003]
                            ]
                        ],
                        [
                            [
                                [-96.20449218749994, 78.53129882812499],
                                [-94.91538085937495, 78.39052734375002],
                                [-95.32924804687497, 78.22504882812495],
                                [-94.93427734374998, 78.07563476562498],
                                [-96.98964843749994, 77.80600585937503],
                                [-97.65815429687498, 78.090625],
                                [-96.944677734375, 78.15185546874997],
                                [-98.04951171874995, 78.325927734375],
                                [-98.33261718749998, 78.77353515625006],
                                [-97.38232421875, 78.78291015625001],
                                [-96.20449218749994, 78.53129882812499]
                            ]
                        ],
                        [
                            [
                                [-103.42602539062499, 79.315625],
                                [-102.57617187499996, 78.87939453125003],
                                [-101.70366210937502, 79.07890625000002],
                                [-101.128125, 78.80166015625002],
                                [-100.43549804687503, 78.8203125],
                                [-99.60942382812495, 78.58305664062507],
                                [-99.16640625000002, 77.85693359375003],
                                [-100.27465820312503, 77.83271484374995],
                                [-101.07412109375001, 78.19384765625],
                                [-102.60698242187502, 78.24892578125002],
                                [-102.73134765624995, 78.37104492187495],
                                [-103.94658203124999, 78.26000976562497],
                                [-104.76357421874998, 78.35166015625],
                                [-104.90961914062498, 78.55263671875],
                                [-103.57050781250003, 78.53984375000005],
                                [-104.02084960937502, 78.63491210937497],
                                [-103.37158203125, 78.73632812500003],
                                [-104.18500976562498, 78.78129882812505],
                                [-104.15195312499999, 78.989892578125],
                                [-104.89550781249996, 78.80815429687502],
                                [-104.74677734375003, 79.02709960937503],
                                [-105.53564453124999, 79.03251953125007],
                                [-105.51455078124995, 79.24248046875002],
                                [-105.38769531249994, 79.32358398437503],
                                [-103.42602539062499, 79.315625]
                            ]
                        ],
                        [
                            [
                                [-98.79160156249995, 79.98110351562505],
                                [-98.94521484375, 79.72407226562498],
                                [-100.05683593749997, 79.89824218750005],
                                [-100.05327148437496, 80.093359375],
                                [-99.15322265625001, 80.12421874999998],
                                [-98.79160156249995, 79.98110351562505]
                            ]
                        ],
                        [
                            [
                                [-91.88554687499999, 81.13286132812505],
                                [-90.64301757812498, 80.59370117187498],
                                [-89.23559570312494, 80.51064453125002],
                                [-88.85732421874997, 80.16621093750001],
                                [-88.19990234374998, 80.11147460937497],
                                [-88.5248046875, 80.41801757812507],
                                [-87.675, 80.37211914062505],
                                [-87.92231445312501, 80.09770507812499],
                                [-86.97719726562502, 79.89423828125001],
                                [-87.29516601562494, 79.58017578124998],
                                [-86.33696289062496, 79.63496093749995],
                                [-86.00703124999998, 79.47944335937498],
                                [-85.6478515625, 79.61142578125006],
                                [-85.04213867187497, 79.2845703125],
                                [-86.95717773437502, 78.97490234375005],
                                [-87.61738281249995, 78.67631835937505],
                                [-88.04018554687494, 78.99531250000004],
                                [-87.98286132812498, 78.53706054687501],
                                [-88.74160156250002, 78.58403320312499],
                                [-88.82241210937497, 78.18588867187498],
                                [-90.037109375, 78.60683593750002],
                                [-89.52568359374999, 78.15961914062495],
                                [-90.29721679687495, 78.32802734374997],
                                [-90.614404296875, 78.14985351562501],
                                [-92.35126953125001, 78.312890625],
                                [-92.8482421875, 78.46010742187497],
                                [-91.86689453124998, 78.54267578125001],
                                [-93.26660156249997, 78.60830078124997],
                                [-93.63442382812502, 78.75092773437498],
                                [-93.15986328124998, 78.77563476562503],
                                [-94.11459960937498, 78.92890625000001],
                                [-92.54721679687495, 79.28261718750002],
                                [-91.29990234375003, 79.372705078125],
                                [-92.82192382812497, 79.44990234375001],
                                [-93.93315429687496, 79.29072265624998],
                                [-94.11030273437498, 79.40156250000001],
                                [-95.10317382812502, 79.289892578125],
                                [-95.66289062500002, 79.52734374999997],
                                [-94.40185546874997, 79.736328125],
                                [-95.73935546874995, 79.66015625000003],
                                [-96.58906249999995, 79.91665039062497],
                                [-96.77324218749999, 80.13579101562502],
                                [-94.64589843749994, 80.04873046874997],
                                [-94.26259765625002, 80.19487304687499],
                                [-95.40507812499996, 80.13500976562506],
                                [-96.39409179687493, 80.31503906250003],
                                [-95.549072265625, 80.36660156249997],
                                [-95.92695312499998, 80.72065429687498],
                                [-93.92792968749995, 80.55917968750003],
                                [-95.51474609375003, 80.83813476562503],
                                [-94.98051757812499, 81.04965820312503],
                                [-93.28671874999998, 81.10029296874998],
                                [-94.22011718749997, 81.33076171875004],
                                [-93.03466796874997, 81.3462890625],
                                [-91.88554687499999, 81.13286132812505]
                            ]
                        ],
                        [
                            [
                                [-69.4888671875, 83.01679687499998],
                                [-66.42255859374998, 82.92685546875003],
                                [-68.46933593749995, 82.65336914062502],
                                [-65.29902343749995, 82.79960937500005],
                                [-64.98388671874997, 82.90229492187501],
                                [-64.50400390625, 82.77841796874998],
                                [-63.641015624999966, 82.81259765625003],
                                [-63.246777343749926, 82.4501953125],
                                [-62.47519531249995, 82.51958007812502],
                                [-61.392480468749994, 82.44189453125],
                                [-61.61538085937502, 82.18442382812503],
                                [-64.43579101562497, 81.74262695312501],
                                [-66.62573242187497, 81.61640624999995],
                                [-68.68852539062493, 81.29331054687503],
                                [-64.78007812499993, 81.49287109375001],
                                [-69.55068359375, 80.38325195312498],
                                [-70.71259765625001, 80.53959960937505],
                                [-70.264892578125, 80.23359374999998],
                                [-72.05595703124996, 80.12324218749995],
                                [-70.56840820312493, 80.09370117187498],
                                [-71.387841796875, 79.76176757812505],
                                [-72.43652343750003, 79.69438476562499],
                                [-74.39448242187495, 79.87407226562499],
                                [-73.47246093749996, 79.7564453125],
                                [-73.36152343750001, 79.50400390625],
                                [-75.50341796875, 79.41416015625],
                                [-76.898828125, 79.5123046875],
                                [-75.60273437499998, 79.23955078125005],
                                [-74.48120117187503, 79.22949218750006],
                                [-74.64091796874996, 79.03554687499997],
                                [-78.58164062499998, 79.075],
                                [-77.88276367187498, 78.9423828125],
                                [-76.255859375, 79.00683593749997],
                                [-74.486328125, 78.75009765624998],
                                [-74.87861328124998, 78.54482421875],
                                [-76.41611328124995, 78.51152343750005],
                                [-75.19345703125, 78.327734375],
                                [-75.86596679687497, 78.00981445312499],
                                [-78.01259765624997, 77.94604492187506],
                                [-78.07617187500003, 77.51904296875],
                                [-78.70849609374997, 77.34213867187503],
                                [-80.57304687499996, 77.31479492187506],
                                [-81.65908203124997, 77.52543945312499],
                                [-81.3013671875, 77.34404296875007],
                                [-82.056787109375, 77.29653320312497],
                                [-81.75634765624997, 77.20400390625005],
                                [-79.49726562500001, 77.19609375000005],
                                [-78.97919921874998, 76.89287109374999],
                                [-78.28886718750002, 76.97797851562501],
                                [-77.98330078124994, 76.75498046875006],
                                [-78.284326171875, 76.57124023437501],
                                [-80.79970703124997, 76.173583984375],
                                [-80.97451171874994, 76.470068359375],
                                [-81.71738281250003, 76.494970703125],
                                [-82.52983398437499, 76.723291015625],
                                [-82.23315429687494, 76.46582031250003],
                                [-83.88569335937501, 76.453125],
                                [-84.22377929687497, 76.67534179687499],
                                [-84.27534179687498, 76.35654296875006],
                                [-85.141259765625, 76.30458984375005],
                                [-86.45371093750003, 76.58486328125002],
                                [-86.68022460937499, 76.37661132812497],
                                [-87.35419921874998, 76.44804687500005],
                                [-87.48979492187499, 76.58583984374997],
                                [-87.49755859374997, 76.38627929687499],
                                [-88.39599609374997, 76.40527343750003],
                                [-88.49584960937497, 76.77285156249997],
                                [-88.54580078125002, 76.42089843750003],
                                [-89.36962890624997, 76.474462890625],
                                [-89.49975585937503, 76.82680664062502],
                                [-88.39814453124995, 77.10395507812501],
                                [-86.81225585937497, 77.18491210937498],
                                [-87.68144531249996, 77.43637695312503],
                                [-88.01699218750002, 77.78471679687505],
                                [-86.75507812499998, 77.86372070312498],
                                [-85.58847656249998, 77.46113281250004],
                                [-84.73867187499997, 77.36103515624998],
                                [-83.72128906249998, 77.41420898437497],
                                [-82.7103515625, 77.84951171875002],
                                [-82.5953125, 77.99213867187504],
                                [-83.77939453125, 77.53261718750002],
                                [-85.28935546874996, 77.55903320312498],
                                [-85.54755859374998, 77.92768554687495],
                                [-84.61542968749998, 78.19570312500002],
                                [-84.22270507812499, 78.176025390625],
                                [-84.91035156249993, 78.23969726562501],
                                [-84.78320312499997, 78.52758789062506],
                                [-85.5859375, 78.10957031249998],
                                [-86.21777343750003, 78.08120117187497],
                                [-85.92006835937494, 78.34287109374998],
                                [-86.91323242187494, 78.126806640625],
                                [-87.5517578125, 78.17661132812503],
                                [-86.80791015624999, 78.77436523437495],
                                [-85.00375976562495, 78.912255859375],
                                [-83.27143554687501, 78.77031250000002],
                                [-81.75009765624995, 78.97578124999995],
                                [-82.43876953125002, 78.903662109375],
                                [-84.41201171875002, 78.99658203125003],
                                [-84.38359375000002, 79.1185546875],
                                [-83.57587890624995, 79.05366210937501],
                                [-86.42075195312498, 79.84521484374997],
                                [-86.49853515625003, 80.25825195312501],
                                [-83.72363281250003, 80.22895507812501],
                                [-81.68837890625, 79.685791015625],
                                [-80.47592773437498, 79.60625],
                                [-80.12446289062495, 79.66948242187507],
                                [-81.01015625000002, 79.693115234375],
                                [-82.98701171874995, 80.32260742187498],
                                [-76.86298828124995, 80.86479492187505],
                                [-78.71621093749994, 80.95166015624997],
                                [-76.88510742187503, 81.43027343750006],
                                [-81.00703125000001, 80.6548828125],
                                [-82.88432617187502, 80.57753906249997],
                                [-82.22236328124998, 80.77231445312503],
                                [-84.41782226562495, 80.52675781250002],
                                [-86.250341796875, 80.56577148437506],
                                [-86.60307617187499, 80.66401367187498],
                                [-85.63930664062494, 80.92460937500007],
                                [-83.288818359375, 81.14794921875],
                                [-85.780859375, 81.03505859375],
                                [-87.32988281250002, 80.669775390625],
                                [-88.00366210937497, 80.675390625],
                                [-89.16689453125, 80.94130859375],
                                [-86.47675781249993, 81.03574218750006],
                                [-84.94121093750002, 81.28623046875],
                                [-87.27509765624995, 81.080810546875],
                                [-89.623046875, 81.032470703125],
                                [-89.94731445312499, 81.17265625000005],
                                [-89.20869140624998, 81.25009765625003],
                                [-89.67368164062503, 81.32861328125003],
                                [-87.59702148437498, 81.52583007812498],
                                [-88.47905273437502, 81.56464843749998],
                                [-90.41630859374996, 81.40537109375003],
                                [-89.82167968749997, 81.63486328124998],
                                [-91.29238281250002, 81.57124023437498],
                                [-91.64755859374998, 81.68383789062503],
                                [-88.06318359375001, 82.09648437500007],
                                [-87.01821289062502, 81.95874023437497],
                                [-86.62680664062495, 82.05102539062503],
                                [-85.04482421874997, 81.9828125],
                                [-86.615625, 82.21855468750007],
                                [-84.89682617187503, 82.44941406250001],
                                [-82.63369140625002, 82.07729492187497],
                                [-82.53691406250002, 82.24726562499995],
                                [-79.465625, 81.85112304687499],
                                [-82.44755859374993, 82.39501953125003],
                                [-81.68115234375003, 82.51865234375],
                                [-82.11684570312497, 82.62866210937503],
                                [-80.8625, 82.57153320312503],
                                [-81.01015625000002, 82.77905273437503],
                                [-78.748779296875, 82.67939453124998],
                                [-80.15493164062497, 82.91113281250003],
                                [-77.61806640624997, 82.89584960937503],
                                [-76.009375, 82.53515625],
                                [-75.565625, 82.60854492187502],
                                [-77.12490234374994, 83.00854492187497],
                                [-74.41416015624995, 83.01313476562501],
                                [-72.65869140625, 82.72163085937495],
                                [-73.44189453124994, 82.90483398437499],
                                [-72.811669921875, 83.08120117187502],
                                [-71.98320312499996, 83.10141601562498],
                                [-70.94038085937495, 82.90224609375],
                                [-71.08481445312498, 83.08266601562497],
                                [-69.96992187499995, 83.11611328125005],
                                [-69.4888671875, 83.01679687499998]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Canada",
                    childNum: 110
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [9.527658197470123, 47.27026989773668],
                            [9.46249431093294, 47.19858962254578],
                            [9.46249431093294, 47.09010747968864],
                            [9.409458596647225, 47.02019676540292],
                            [9.579979133936737, 47.05856388629306],
                            [9.580273437500011, 47.057373046875],
                            [10.133496093750011, 46.851513671875],
                            [10.349414062500017, 46.98476562499999],
                            [10.414941406250023, 46.964404296874996],
                            [10.45458984375, 46.8994140625],
                            [10.452832031250011, 46.86494140625],
                            [10.406054687500017, 46.73486328125],
                            [10.39794921875, 46.6650390625],
                            [10.4306640625, 46.550048828125],
                            [10.195507812500011, 46.62109375],
                            [10.1375, 46.61435546875],
                            [10.087011718750006, 46.599902343749996],
                            [10.061230468750011, 46.546777343749994],
                            [10.038281250000011, 46.483203125],
                            [10.045605468750011, 46.447900390624994],
                            [10.081933593750023, 46.420751953125],
                            [10.109667968750017, 46.362841796874996],
                            [10.128320312500023, 46.238232421875],
                            [10.08056640625, 46.227978515625],
                            [10.041015625, 46.238085937499996],
                            [9.939257812500017, 46.36181640625],
                            [9.884472656250011, 46.3677734375],
                            [9.787792968750011, 46.346044921875],
                            [9.639453125000017, 46.2958984375],
                            [9.57958984375, 46.29609375],
                            [9.528710937500023, 46.306201171874996],
                            [9.427636718750023, 46.482324218749994],
                            [9.399316406250023, 46.4806640625],
                            [9.304394531250011, 46.495556640625],
                            [9.203417968750017, 46.21923828125],
                            [9.11874162946429, 46.014892578125],
                            [8.97551618303573, 45.81677455357143],
                            [8.74961495535715, 46.02246372767857],
                            [8.818554687500011, 46.0771484375],
                            [8.458398437500023, 46.245898437499996],
                            [8.370703125, 46.445117187499996],
                            [8.298535156250011, 46.40341796875],
                            [8.23193359375, 46.341210937499994],
                            [8.08154296875, 46.256005859374994],
                            [7.9931640625, 46.015917968749996],
                            [7.327929687500017, 45.912353515625],
                            [7.129003906250006, 45.880419921874996],
                            [7.055761718750006, 45.90380859375],
                            [7.02109375, 45.92578125],
                            [6.953710937500006, 46.017138671874996],
                            [6.897265625000017, 46.0517578125],
                            [6.772070312500006, 46.16513671875],
                            [6.758105468750017, 46.415771484375],
                            [6.578222656250006, 46.437353515625],
                            [6.428906250000011, 46.430517578125],
                            [6.321875, 46.393701171874994],
                            [6.234667968750017, 46.3326171875],
                            [6.199414062500011, 46.19306640625],
                            [6.086621093750011, 46.147021484374996],
                            [6.006640625000017, 46.142333984375],
                            [5.971484375000017, 46.151220703125],
                            [5.970019531250017, 46.214697265625],
                            [6.0361328125, 46.238085937499996],
                            [6.095898437500011, 46.27939453125],
                            [6.129687500000017, 46.5669921875],
                            [6.41015625, 46.755419921874996],
                            [6.429003906250017, 46.832275390625],
                            [6.45625, 46.94833984375],
                            [6.624804687500017, 47.004345703125],
                            [6.666894531250023, 47.026513671874994],
                            [6.688085937500006, 47.058251953124994],
                            [6.820703125000023, 47.16318359375],
                            [6.952050781250023, 47.2671875],
                            [6.978515625, 47.302050781249996],
                            [7.000585937500006, 47.322509765625],
                            [7.000585937500006, 47.339453125],
                            [6.900390625, 47.39423828125],
                            [6.968359375, 47.45322265625],
                            [7.136035156250017, 47.48984375],
                            [7.343164062500023, 47.43310546875],
                            [7.615625, 47.592724609375],
                            [8.454003906250023, 47.59619140625],
                            [8.559472656250023, 47.6240234375],
                            [8.570507812500011, 47.63779296875],
                            [8.567089843750011, 47.651904296874996],
                            [8.55234375, 47.659130859375],
                            [8.451757812500006, 47.651806640625],
                            [8.413281250000011, 47.6626953125],
                            [8.403417968750006, 47.687792968749996],
                            [8.435742187500011, 47.731347656249994],
                            [8.572656250000023, 47.775634765625],
                            [9.524023437500006, 47.52421875],
                            [9.625878906250023, 47.467041015625],
                            [9.527539062500011, 47.270751953125],
                            [9.527658197470123, 47.27026989773668]
                        ]
                    ]
                },
                properties: {
                    name: "Switzerland",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-67.28886718749999, -55.776855468749964],
                                [-67.55996093749997, -55.72480468750002],
                                [-67.39736328124997, -55.58515625],
                                [-67.28886718749999, -55.776855468749964]
                            ]
                        ],
                        [
                            [
                                [-67.07993164062498, -55.15380859374996],
                                [-67.33969726562495, -55.292578124999984],
                                [-67.4947265625, -55.177441406249976],
                                [-68.07001953124995, -55.22109374999999],
                                [-68.30136718750003, -54.98066406250003],
                                [-67.245263671875, -54.977636718750034],
                                [-67.07993164062498, -55.15380859374996]
                            ]
                        ],
                        [
                            [
                                [-69.70297851562503, -54.91904296875],
                                [-68.90078125000002, -55.01777343750004],
                                [-68.45800781249997, -54.95966796875002],
                                [-68.61328124999997, -55.155566406250045],
                                [-68.28266601562495, -55.25517578125],
                                [-68.04833984375, -55.6431640625],
                                [-68.86704101562498, -55.45019531250003],
                                [-68.89008789062498, -55.2412109375],
                                [-69.19262695312497, -55.171875],
                                [-69.35922851562498, -55.300683593749945],
                                [-69.18085937499995, -55.47480468749998],
                                [-69.41181640624995, -55.44423828124997],
                                [-69.97978515625002, -55.14746093749999],
                                [-69.88442382812494, -54.88203125000001],
                                [-69.70297851562503, -54.91904296875]
                            ]
                        ],
                        [
                            [
                                [-70.9916015625, -54.86796874999999],
                                [-70.80483398437497, -54.96767578124996],
                                [-70.41752929687493, -54.908886718749976],
                                [-70.29785156249997, -55.11376953124997],
                                [-70.47558593749994, -55.17705078124998],
                                [-71.43720703125001, -54.88925781249997],
                                [-70.9916015625, -54.86796874999999]
                            ]
                        ],
                        [
                            [
                                [-71.390478515625, -54.03281250000002],
                                [-71.02192382812495, -54.111816406250036],
                                [-71.14326171874998, -54.374023437499986],
                                [-71.473291015625, -54.23115234375001],
                                [-71.94853515624999, -54.300878906250006],
                                [-72.21044921874997, -54.04775390624995],
                                [-71.996484375, -53.884863281249984],
                                [-71.390478515625, -54.03281250000002]
                            ]
                        ],
                        [
                            [
                                [-72.92324218749997, -53.481640625],
                                [-72.88222656249997, -53.578320312499976],
                                [-72.48227539062503, -53.58808593750001],
                                [-72.20541992187503, -53.80742187500002],
                                [-72.408544921875, -54.00380859374997],
                                [-72.87099609375, -54.12656250000002],
                                [-72.76376953125, -53.86484375],
                                [-73.03945312499994, -53.83281250000004],
                                [-73.08076171875001, -53.99804687499995],
                                [-73.21064453125001, -53.98583984374995],
                                [-73.31435546875, -53.72919921874998],
                                [-73.845458984375, -53.54580078125001],
                                [-73.44707031249993, -53.41005859374998],
                                [-72.92324218749997, -53.481640625]
                            ]
                        ],
                        [
                            [
                                [-74.38574218749994, -52.92236328125001],
                                [-73.65400390624998, -53.06982421875003],
                                [-73.13520507812498, -53.35390625],
                                [-73.56728515625, -53.3068359375],
                                [-73.86694335937494, -53.096875],
                                [-74.27021484374995, -53.08154296875002],
                                [-74.71201171874998, -52.74873046874998],
                                [-74.38574218749994, -52.92236328125001]
                            ]
                        ],
                        [
                            [
                                [-68.62993164062499, -52.65263671875004],
                                [-68.65322265624994, -54.85361328124999],
                                [-69.48627929687493, -54.85888671875],
                                [-69.72343750000002, -54.71210937500003],
                                [-70.49716796875, -54.80957031249999],
                                [-71.83154296874997, -54.62617187500002],
                                [-71.92773437500003, -54.52871093749997],
                                [-71.80014648437498, -54.433984374999945],
                                [-71.07993164062498, -54.444238281249994],
                                [-70.79726562500002, -54.32724609374996],
                                [-70.70112304687498, -54.48544921875004],
                                [-70.31098632812498, -54.52851562500002],
                                [-70.86308593749993, -54.11044921875003],
                                [-70.86772460937499, -53.88417968750002],
                                [-70.53129882812502, -53.627343750000016],
                                [-70.37973632812495, -53.98671874999995],
                                [-70.62983398437493, -54.005566406249976],
                                [-70.53530273437494, -54.136132812500016],
                                [-70.16899414062502, -54.37929687499999],
                                [-69.74184570312494, -54.30585937500005],
                                [-69.25317382812494, -54.557421875000045],
                                [-69.04433593749997, -54.40673828124999],
                                [-69.98813476562503, -54.10908203125001],
                                [-70.15112304687503, -53.88808593750002],
                                [-70.09111328124996, -53.72177734374998],
                                [-69.35595703125003, -53.41630859375001],
                                [-69.63701171874999, -53.33408203125004],
                                [-70.32929687499998, -53.37763671875003],
                                [-70.44335937499994, -53.085546875000034],
                                [-70.130615234375, -52.942773437499994],
                                [-70.38012695312494, -52.75195312500002],
                                [-69.93544921874997, -52.82109374999998],
                                [-69.41406249999997, -52.48623046874997],
                                [-69.16704101562499, -52.66757812499997],
                                [-68.78979492187497, -52.576757812500034],
                                [-68.62993164062499, -52.65263671875004]
                            ]
                        ],
                        [
                            [
                                [-74.82294921874993, -51.63017578125001],
                                [-74.53681640624998, -51.96513671875004],
                                [-74.69448242187497, -52.27919921874999],
                                [-74.85180664062494, -52.27070312500003],
                                [-75.10537109375, -51.78886718750001],
                                [-74.82294921874993, -51.63017578125001]
                            ]
                        ],
                        [
                            [
                                [-74.55864257812499, -51.27705078125001],
                                [-74.62036132812497, -51.395703125000026],
                                [-75.04736328125, -51.39833984375003],
                                [-75.28911132812496, -51.625390625000016],
                                [-75.15366210937498, -51.278808593750014],
                                [-74.73666992187503, -51.20761718749999],
                                [-74.55864257812499, -51.27705078125001]
                            ]
                        ],
                        [
                            [
                                [-75.302001953125, -50.67998046875005],
                                [-75.411376953125, -50.76435546875001],
                                [-75.42763671875002, -50.48056640625002],
                                [-75.11533203124998, -50.510449218749976],
                                [-75.302001953125, -50.67998046875005]
                            ]
                        ],
                        [
                            [
                                [-75.05478515625, -50.29609375],
                                [-75.44912109374997, -50.34335937500004],
                                [-75.32666015624997, -50.01181640625],
                                [-74.8759765625, -50.10996093750001],
                                [-75.05478515625, -50.29609375]
                            ]
                        ],
                        [
                            [
                                [-75.106689453125, -48.83652343750001],
                                [-75.38994140624999, -49.15917968750002],
                                [-75.64116210937499, -49.195410156250034],
                                [-75.48764648437498, -49.082421875000016],
                                [-75.58310546874998, -48.85888671874995],
                                [-75.106689453125, -48.83652343750001]
                            ]
                        ],
                        [
                            [
                                [-74.47617187499998, -49.14785156250002],
                                [-74.59472656249997, -50.00664062500001],
                                [-74.76298828124996, -50.01142578125001],
                                [-74.88041992187502, -49.72587890625001],
                                [-74.72382812499998, -49.42382812500003],
                                [-74.960107421875, -49.533007812499974],
                                [-75.06601562499998, -49.85234375000002],
                                [-75.54980468749994, -49.79130859375002],
                                [-75.30585937499998, -49.49404296875003],
                                [-75.46748046874995, -49.35888671875003],
                                [-75.08603515624998, -49.27021484375],
                                [-75.21015624999995, -49.14804687499998],
                                [-74.94921875, -48.960156249999976],
                                [-74.89624023437503, -48.73320312500002],
                                [-74.54609374999993, -48.76689453125004],
                                [-74.47617187499998, -49.14785156250002]
                            ]
                        ],
                        [
                            [
                                [-75.51025390624997, -48.76347656250005],
                                [-75.65092773437496, -48.58632812500002],
                                [-75.57148437499993, -48.095898437500026],
                                [-75.39140625000002, -48.01972656249997],
                                [-75.15849609374999, -48.62265624999996],
                                [-75.51025390624997, -48.76347656250005]
                            ]
                        ],
                        [
                            [
                                [-74.56728515625, -48.591992187500026],
                                [-74.92304687499998, -48.62646484375003],
                                [-75.21289062499997, -48.141699218750034],
                                [-75.19829101562502, -47.974609375000014],
                                [-74.895654296875, -47.839355468749986],
                                [-74.56728515625, -48.591992187500026]
                            ]
                        ],
                        [
                            [
                                [-75.11220703124997, -47.8376953125],
                                [-75.26103515625002, -47.76386718749998],
                                [-74.92646484374998, -47.72314453125003],
                                [-75.11220703124997, -47.8376953125]
                            ]
                        ],
                        [
                            [
                                [-74.31289062500002, -45.69150390625002],
                                [-74.46552734374995, -45.757226562499994],
                                [-74.68984375, -45.66259765625],
                                [-74.310546875, -45.17265625000002],
                                [-74.31289062500002, -45.69150390625002]
                            ]
                        ],
                        [
                            [
                                [-73.63217773437498, -44.82148437499997],
                                [-73.81845703125, -44.65214843750002],
                                [-73.72392578124993, -44.544238281249974],
                                [-73.63217773437498, -44.82148437499997]
                            ]
                        ],
                        [
                            [
                                [-72.98613281249999, -44.780078124999974],
                                [-73.22846679687498, -44.85996093749999],
                                [-73.39707031249998, -44.77431640624995],
                                [-73.44506835937497, -44.641015624999966],
                                [-73.20771484374993, -44.33496093749997],
                                [-72.7763671875, -44.50859374999999],
                                [-72.98613281249999, -44.780078124999974]
                            ]
                        ],
                        [
                            [
                                [-73.73535156249997, -44.39453125000003],
                                [-74.00205078125003, -44.59091796874998],
                                [-73.728173828125, -45.195898437500034],
                                [-74.016259765625, -45.344921875000026],
                                [-74.61777343749998, -44.64794921874996],
                                [-74.50180664062498, -44.47353515624995],
                                [-74.09721679687496, -44.38935546875004],
                                [-73.99492187499999, -44.140234375],
                                [-73.70322265624998, -44.27412109375001],
                                [-73.73535156249997, -44.39453125000003]
                            ]
                        ],
                        [
                            [
                                [-73.81064453125003, -43.827246093750006],
                                [-73.95566406249998, -43.921972656250034],
                                [-74.14296874999997, -43.872167968750006],
                                [-73.81064453125003, -43.827246093750006]
                            ]
                        ],
                        [
                            [
                                [-73.77338867187498, -43.3458984375],
                                [-74.114404296875, -43.35791015624996],
                                [-74.387353515625, -43.231640625],
                                [-74.03666992187496, -41.79550781249998],
                                [-73.52783203124997, -41.89628906249999],
                                [-73.42290039062499, -42.192871093750014],
                                [-73.47080078124998, -42.46630859375004],
                                [-73.78925781249993, -42.58574218750003],
                                [-73.43632812499996, -42.9365234375],
                                [-73.74965820312494, -43.15908203124995],
                                [-73.77338867187498, -43.3458984375]
                            ]
                        ],
                        [
                            [
                                [-78.80415039062501, -33.646484374999986],
                                [-78.98945312499993, -33.66171874999998],
                                [-78.87744140625003, -33.57519531250003],
                                [-78.80415039062501, -33.646484374999986]
                            ]
                        ],
                        [
                            [
                                [-109.27998046874994, -27.14042968749996],
                                [-109.434130859375, -27.171289062500023],
                                [-109.39047851562499, -27.068359375000014],
                                [-109.27998046874994, -27.14042968749996]
                            ]
                        ],
                        [
                            [
                                [-67.19487304687493, -22.821679687500037],
                                [-67.00878906249994, -23.00136718750005],
                                [-67.35620117187503, -24.033789062499963],
                                [-68.25029296875002, -24.391992187500023],
                                [-68.56201171875, -24.74736328125003],
                                [-68.38422851562495, -25.091894531249977],
                                [-68.59208984375002, -25.420019531250034],
                                [-68.41450195312498, -26.153710937500023],
                                [-68.59160156249999, -26.47041015624997],
                                [-68.31865234374999, -26.973242187500006],
                                [-68.59208984375002, -27.140039062499966],
                                [-68.84633789062494, -27.153710937499994],
                                [-69.17441406249998, -27.924707031250037],
                                [-69.65693359374995, -28.413574218749986],
                                [-69.82788085937497, -29.10322265624997],
                                [-70.02680664062501, -29.324023437500017],
                                [-69.95996093749997, -30.078320312500026],
                                [-69.84428710937493, -30.175],
                                [-69.95634765624996, -30.35820312500003],
                                [-70.15322265625, -30.360937499999963],
                                [-70.30908203124994, -31.02265625000004],
                                [-70.51958007812493, -31.1484375],
                                [-70.585205078125, -31.569433593749963],
                                [-70.25439453125, -31.957714843750026],
                                [-70.36376953125, -32.08349609374997],
                                [-70.02197265625, -32.88457031250002],
                                [-70.08486328125002, -33.20175781249998],
                                [-69.81962890624999, -33.28378906249999],
                                [-69.85244140625, -34.224316406250026],
                                [-70.05205078124999, -34.30078124999997],
                                [-70.39316406250003, -35.146875],
                                [-70.55517578125, -35.246875],
                                [-70.41572265625001, -35.52304687500002],
                                [-70.40478515625, -36.06171874999998],
                                [-71.05551757812498, -36.52373046874996],
                                [-71.19218750000002, -36.84365234375004],
                                [-71.16757812499998, -37.76230468749996],
                                [-70.858642578125, -38.60449218750003],
                                [-71.40156249999995, -38.93505859374996],
                                [-71.53945312499997, -39.60244140624995],
                                [-71.71992187499995, -39.63525390624997],
                                [-71.65976562499998, -40.02080078125],
                                [-71.81831054687493, -40.17666015624995],
                                [-71.70898437499997, -40.381738281249994],
                                [-71.93212890624994, -40.69169921874999],
                                [-71.91127929687497, -41.650390624999986],
                                [-71.75, -42.04677734375001],
                                [-72.10820312499993, -42.25185546874995],
                                [-72.14643554687498, -42.990039062499974],
                                [-71.750634765625, -43.237304687499986],
                                [-71.90498046875001, -43.34755859374998],
                                [-71.68007812500002, -43.92958984374998],
                                [-71.82001953124993, -44.38310546875],
                                [-71.21259765624998, -44.44121093750003],
                                [-71.15971679687496, -44.56025390625004],
                                [-71.26113281250002, -44.763085937499966],
                                [-72.06372070312503, -44.771875],
                                [-72.04169921874998, -44.90419921875004],
                                [-71.5962890625, -44.97919921875004],
                                [-71.34931640624995, -45.33193359374995],
                                [-71.74619140624998, -45.57890625],
                                [-71.63154296874998, -45.95371093749998],
                                [-71.87568359374998, -46.160546875],
                                [-71.69965820312501, -46.6513671875],
                                [-71.94023437499999, -46.83125],
                                [-71.90498046875001, -47.201660156250014],
                                [-72.34594726562497, -47.49267578124997],
                                [-72.517919921875, -47.87636718749998],
                                [-72.32832031250001, -48.11005859374998],
                                [-72.35473632812497, -48.36582031250005],
                                [-72.582861328125, -48.47539062499999],
                                [-72.65126953125, -48.84160156249998],
                                [-73.03364257812501, -49.014355468750004],
                                [-73.13525390625, -49.30068359374999],
                                [-73.46157226562497, -49.31386718750001],
                                [-73.55419921875, -49.463867187500014],
                                [-73.50126953124996, -50.125292968750024],
                                [-73.15292968749998, -50.73828125000003],
                                [-72.50981445312496, -50.607519531250034],
                                [-72.34023437499997, -50.68183593749999],
                                [-72.40766601562501, -51.54082031250002],
                                [-71.91865234374995, -51.98955078125004],
                                [-69.96025390624993, -52.00820312500002],
                                [-68.443359375, -52.35664062500004],
                                [-69.24101562499996, -52.20546874999997],
                                [-69.62031249999995, -52.46474609374995],
                                [-70.79511718749995, -52.76875],
                                [-70.99584960937497, -53.77929687499997],
                                [-71.29775390625002, -53.88339843750004],
                                [-72.1744140625, -53.632324218749964],
                                [-72.41289062500002, -53.35019531250004],
                                [-71.94169921874993, -53.23408203125001],
                                [-71.89169921874998, -53.523535156250006],
                                [-71.79145507812498, -53.48457031249997],
                                [-71.74052734374999, -53.232617187499976],
                                [-71.28896484375002, -53.03369140624995],
                                [-71.22714843750003, -52.810644531249984],
                                [-71.38774414062496, -52.76425781250004],
                                [-72.27802734374998, -53.13232421874997],
                                [-72.54892578125, -53.4607421875],
                                [-73.05273437499997, -53.24345703125005],
                                [-72.72768554687502, -52.7623046875],
                                [-72.453466796875, -52.814453124999964],
                                [-72.11757812499997, -52.65],
                                [-71.51127929687502, -52.60537109375],
                                [-72.22568359374998, -52.52099609374995],
                                [-72.43769531250001, -52.62578124999998],
                                [-72.71210937499995, -52.53554687499999],
                                [-73.12246093749997, -53.073925781249976],
                                [-73.64521484374998, -52.83701171875003],
                                [-73.2408203125, -52.707128906250034],
                                [-73.12392578125, -52.487988281249976],
                                [-73.24414062499997, -52.62402343749998],
                                [-73.58569335937503, -52.68574218750003],
                                [-74.01445312499999, -52.63935546875],
                                [-74.26494140624993, -52.1048828125],
                                [-73.83447265625, -52.23398437500001],
                                [-73.68432617187494, -52.07773437499998],
                                [-73.26044921874993, -52.157812500000034],
                                [-72.79501953124998, -51.94951171875005],
                                [-72.57084960937496, -52.200097656249945],
                                [-72.67705078125002, -52.38466796874998],
                                [-72.52333984374997, -52.255468750000034],
                                [-72.62460937499998, -51.94648437499997],
                                [-72.48964843750002, -51.76367187500003],
                                [-72.76123046875, -51.57324218749996],
                                [-73.16875, -51.45390624999998],
                                [-72.60004882812495, -51.79912109374997],
                                [-73.51816406250003, -52.04101562499996],
                                [-73.75263671874993, -51.795507812500034],
                                [-74.19667968749997, -51.68056640624997],
                                [-73.92978515624995, -51.61787109374999],
                                [-73.93950195312499, -51.26630859375005],
                                [-74.81474609374996, -51.06289062499999],
                                [-75.09467773437495, -50.68125],
                                [-74.68574218749995, -50.662011718749945],
                                [-74.77587890625003, -50.46992187499998],
                                [-74.64448242187498, -50.360937499999984],
                                [-74.365576171875, -50.487890625],
                                [-74.13940429687503, -50.81777343749997],
                                [-73.80654296875, -50.93837890625003],
                                [-73.654443359375, -50.49267578125],
                                [-73.97802734375003, -50.827050781249994],
                                [-74.18559570312493, -50.485351562500014],
                                [-73.95034179687497, -50.510546875],
                                [-74.62958984374998, -50.19404296875],
                                [-74.333740234375, -49.97460937499997],
                                [-73.95859374999998, -49.994726562499984],
                                [-74.32392578124995, -49.783398437500004],
                                [-74.29082031249996, -49.604101562499984],
                                [-73.83637695312493, -49.609375],
                                [-74.09443359374993, -49.42968749999998],
                                [-73.93496093749994, -49.02089843750001],
                                [-74.2212890625, -49.500585937500034],
                                [-74.36655273437503, -49.40048828124998],
                                [-74.34101562499998, -48.59570312499998],
                                [-74.00908203124996, -48.475],
                                [-74.47441406249999, -48.46396484374996],
                                [-74.58466796874998, -47.999023437500014],
                                [-73.39106445312498, -48.14589843750001],
                                [-73.60991210937499, -47.993945312500045],
                                [-73.71586914062499, -47.65546875000001],
                                [-73.94086914062498, -47.92939453125004],
                                [-74.22705078124994, -47.96894531250001],
                                [-74.654931640625, -47.702246093750034],
                                [-74.5337890625, -47.567675781249974],
                                [-74.24296874999999, -47.67929687499998],
                                [-74.13408203125002, -47.590820312499986],
                                [-74.48266601562497, -47.43046875],
                                [-74.15839843749998, -47.18251953125002],
                                [-74.31357421874998, -46.78818359374998],
                                [-74.45419921875003, -46.76679687499997],
                                [-74.51225585937496, -46.88515625000002],
                                [-75.00595703125, -46.74111328124998],
                                [-74.98417968750002, -46.51210937499995],
                                [-75.54033203124999, -46.69873046874996],
                                [-75.43037109374995, -46.93457031249996],
                                [-75.70639648437498, -46.70527343749997],
                                [-74.924462890625, -46.159667968750014],
                                [-75.06669921874993, -45.874902343749994],
                                [-74.15786132812497, -45.7671875],
                                [-74.122705078125, -45.49619140625002],
                                [-73.95717773437494, -45.40439453124998],
                                [-73.825, -45.446875],
                                [-74.01992187500002, -46.055859375],
                                [-74.39296875, -46.21738281250005],
                                [-73.96757812500002, -46.15410156250003],
                                [-73.87871093749993, -45.846875],
                                [-73.73525390624994, -45.81171875],
                                [-73.70815429687502, -46.070312500000014],
                                [-73.94863281249997, -46.533105468749966],
                                [-73.845361328125, -46.56601562500002],
                                [-73.59184570312493, -45.89912109375004],
                                [-73.73076171874999, -45.47998046875],
                                [-73.26621093749995, -45.346191406250014],
                                [-72.933837890625, -45.45234374999997],
                                [-73.44497070312497, -45.23818359374995],
                                [-73.36245117187502, -44.97822265625001],
                                [-72.73896484375001, -44.73417968750003],
                                [-72.680078125, -44.59394531249997],
                                [-72.66386718749999, -44.43642578124995],
                                [-73.26508789062498, -44.16865234375001],
                                [-73.22446289062498, -43.89794921875003],
                                [-73.06879882812495, -43.86201171874998],
                                [-72.99658203125, -43.63154296875001],
                                [-73.07597656250002, -43.323632812499994],
                                [-72.75800781249998, -43.039453125],
                                [-72.84804687500002, -42.66914062499997],
                                [-72.77392578125003, -42.505175781250045],
                                [-72.63183593750003, -42.509667968749994],
                                [-72.77324218749996, -42.257714843749994],
                                [-72.63105468749995, -42.199804687500006],
                                [-72.412353515625, -42.388183593750014],
                                [-72.49941406249997, -41.98085937499999],
                                [-72.82407226562503, -41.90878906249996],
                                [-72.36040039062499, -41.64912109375],
                                [-72.31826171875, -41.49902343749997],
                                [-72.54238281250002, -41.690625],
                                [-72.95283203124995, -41.51474609374998],
                                [-73.24179687499995, -41.78085937500002],
                                [-73.62402343750003, -41.77363281249997],
                                [-73.73515625000002, -41.74248046875002],
                                [-73.62392578125, -41.581347656250045],
                                [-73.81074218749995, -41.51748046875001],
                                [-73.96586914062493, -41.118261718750034],
                                [-73.67099609375, -39.96318359374999],
                                [-73.41040039062503, -39.78916015624998],
                                [-73.22646484375002, -39.22441406250003],
                                [-73.52021484375001, -38.509375],
                                [-73.46479492187498, -38.04033203125003],
                                [-73.66181640624998, -37.69853515625003],
                                [-73.66240234375002, -37.341015625000026],
                                [-73.60166015624998, -37.18847656250003],
                                [-73.21596679687502, -37.16689453124998],
                                [-73.11806640624997, -36.68837890625002],
                                [-72.58735351562493, -35.759667968749994],
                                [-72.62392578125002, -35.5857421875],
                                [-72.22377929687494, -35.096191406250014],
                                [-72.00283203124997, -34.16533203125],
                                [-71.66435546875002, -33.65263671875],
                                [-71.74296875, -33.09511718750001],
                                [-71.45224609374998, -32.65957031250001],
                                [-71.70893554687495, -30.62802734375002],
                                [-71.66948242187499, -30.33037109374996],
                                [-71.40039062499997, -30.142968749999966],
                                [-71.31572265624996, -29.649707031250017],
                                [-71.51923828124993, -28.926464843750026],
                                [-71.30673828124998, -28.672460937499963],
                                [-71.08652343749998, -27.814453124999957],
                                [-70.92578125, -27.588671874999974],
                                [-70.64658203124998, -26.329394531250017],
                                [-70.71372070312498, -25.78417968749997],
                                [-70.44536132812502, -25.17265624999999],
                                [-70.57412109374994, -24.644335937500003],
                                [-70.39233398437494, -23.565917968749957],
                                [-70.59335937499995, -23.255468750000034],
                                [-70.56318359374995, -23.057031250000023],
                                [-70.33168945312494, -22.848632812500014],
                                [-70.08002929687501, -21.356835937500037],
                                [-70.19702148437494, -20.725390625],
                                [-70.15742187499995, -19.70585937500003],
                                [-70.41826171874999, -18.345605468750023],
                                [-69.92636718749998, -18.206054687500014],
                                [-69.80258789062498, -17.990234375000014],
                                [-69.85209960937493, -17.70380859375001],
                                [-69.68476562499995, -17.649804687500023],
                                [-69.58642578125, -17.57324218749997],
                                [-69.51093749999998, -17.50605468749997],
                                [-69.31337890624997, -17.943164062500017],
                                [-69.28232421875003, -17.96484375],
                                [-69.09394531249993, -18.05048828125004],
                                [-69.14545898437495, -18.14404296875],
                                [-69.09228515624994, -18.28242187500004],
                                [-69.02680664062493, -18.65625],
                                [-68.97885742187503, -18.81298828125003],
                                [-68.96831054687502, -18.967968749999983],
                                [-68.85795898437499, -19.09335937500005],
                                [-68.62055664062495, -19.29667968749999],
                                [-68.54785156249997, -19.341113281249974],
                                [-68.49199218749996, -19.381933593750034],
                                [-68.47016601562495, -19.409960937499974],
                                [-68.46289062499997, -19.43281250000001],
                                [-68.57529296874998, -19.56015625000002],
                                [-68.69829101562499, -19.721093750000037],
                                [-68.69619140625, -19.74072265625003],
                                [-68.57827148437494, -19.856542968750006],
                                [-68.559375, -19.902343750000014],
                                [-68.56069335937502, -19.96708984374996],
                                [-68.75932617187499, -20.115527343750003],
                                [-68.74516601562493, -20.45859375],
                                [-68.48432617187498, -20.628417968749957],
                                [-68.55825195312497, -20.90195312499999],
                                [-68.197021484375, -21.30029296874997],
                                [-68.18642578124997, -21.618554687499966],
                                [-67.88173828124997, -22.493359375000026],
                                [-67.87944335937496, -22.822949218750026],
                                [-67.57993164062495, -22.89169921874999],
                                [-67.36225585937493, -22.85517578125001],
                                [-67.19487304687493, -22.821679687500037]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Chile",
                    childNum: 26
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [110.88876953125006, 19.99194335937497],
                                [111.01367187500003, 19.65546875000001],
                                [110.64091796875002, 19.291210937499955],
                                [110.45126953125012, 18.747949218750023],
                                [110.06738281249997, 18.447558593750045],
                                [109.51933593750007, 18.21826171875003],
                                [108.7015625, 18.535253906250034],
                                [108.66552734375003, 19.304101562499994],
                                [109.27666015625002, 19.761132812500023],
                                [109.17744140625004, 19.768457031250023],
                                [109.26347656250007, 19.882666015625006],
                                [110.1715820312501, 20.053710937500057],
                                [110.58818359375002, 19.976367187500017],
                                [110.6517578125, 20.137744140625017],
                                [110.88876953125006, 19.99194335937497]
                            ]
                        ],
                        [
                            [
                                [110.38515625000005, 21.093164062499966],
                                [110.52158203125006, 21.083105468750063],
                                [110.50390625000003, 20.96772460937501],
                                [110.28095703125004, 21.001171874999983],
                                [110.38515625000005, 21.093164062499966]
                            ]
                        ],
                        [
                            [
                                [112.64375, 21.63964843750003],
                                [112.525, 21.62304687500003],
                                [112.64765625000004, 21.710253906250017],
                                [112.64375, 21.63964843750003]
                            ]
                        ],
                        [
                            [
                                [112.79023437500004, 21.601855468750045],
                                [112.78203125000007, 21.772265625000045],
                                [112.86259765625002, 21.75263671875004],
                                [112.79023437500004, 21.601855468750045]
                            ]
                        ],
                        [
                            [
                                [118.1830078125, 24.496289062499983],
                                [118.0905273437501, 24.446142578125063],
                                [118.10380859375002, 24.552343750000034],
                                [118.1830078125, 24.496289062499983]
                            ]
                        ],
                        [
                            [
                                [119.82089843750006, 25.45698242187504],
                                [119.70029296875012, 25.432714843750063],
                                [119.72255859375005, 25.638818359375023],
                                [119.83837890625003, 25.591064453125],
                                [119.82089843750006, 25.45698242187504]
                            ]
                        ],
                        [
                            [
                                [121.2513671875, 28.086425781250057],
                                [121.13154296875004, 28.062597656250006],
                                [121.20546875, 28.204394531250017],
                                [121.2513671875, 28.086425781250057]
                            ]
                        ],
                        [
                            [
                                [122.29589843750003, 29.96342773437499],
                                [122.02402343750012, 30.01333007812505],
                                [121.96943359375004, 30.143115234375017],
                                [122.28447265625007, 30.068017578124994],
                                [122.29589843750003, 29.96342773437499]
                            ]
                        ],
                        [
                            [
                                [121.86269531250005, 31.492285156249977],
                                [121.519921875, 31.549609375000017],
                                [121.2111328125001, 31.80537109375001],
                                [121.86269531250005, 31.492285156249977]
                            ]
                        ],
                        [
                            [
                                [130.52695312500012, 42.535400390625],
                                [130.24667968750012, 42.744824218749955],
                                [130.24033203125006, 42.891796874999955],
                                [129.89824218750002, 42.998144531250034],
                                [129.69785156250012, 42.448144531249994],
                                [129.3136718750001, 42.41357421874997],
                                [128.92343750000006, 42.038232421874966],
                                [128.04521484375007, 41.9875],
                                [128.28925781250004, 41.60742187500006],
                                [128.14941406249997, 41.38774414062496],
                                [127.17968750000003, 41.531347656250006],
                                [126.95478515625004, 41.76948242187501],
                                [126.74306640625, 41.724853515625],
                                [125.98906250000002, 40.904638671875034],
                                [124.8893554687501, 40.459814453125006],
                                [124.36210937500002, 40.004052734374994],
                                [124.10576171875002, 39.84101562499998],
                                [123.65087890625003, 39.881591796875],
                                [122.8400390625001, 39.600830078125],
                                [121.98232421875, 39.05317382812498],
                                [121.67724609374997, 39.00341796875006],
                                [121.64990234375003, 38.865087890625034],
                                [121.16357421874997, 38.73164062500001],
                                [121.10673828125002, 38.920800781249994],
                                [121.6798828125001, 39.10869140625002],
                                [121.62763671875004, 39.22016601562498],
                                [121.81845703125006, 39.38652343750002],
                                [121.27548828125006, 39.38476562500003],
                                [121.26748046875, 39.544677734375],
                                [121.51757812499997, 39.638964843750045],
                                [121.51738281250002, 39.84482421875006],
                                [121.8009765625001, 39.950537109375006],
                                [122.27500000000012, 40.541845703125034],
                                [121.83486328125005, 40.97426757812502],
                                [121.72929687500002, 40.84614257812504],
                                [121.1745117187501, 40.901269531249994],
                                [120.47910156250006, 40.23095703125003],
                                [119.39111328125003, 39.75249023437499],
                                [118.976953125, 39.182568359374955],
                                [118.29785156249997, 39.067089843749955],
                                [118.04091796875, 39.22675781249998],
                                [117.86572265625003, 39.191259765625034],
                                [117.61669921875003, 38.852880859375034],
                                [117.5578125000001, 38.625146484374994],
                                [117.76669921875012, 38.311669921874994],
                                [118.01494140625007, 38.18339843749996],
                                [118.94003906250006, 38.04277343750002],
                                [119.08916015625007, 37.70073242187496],
                                [118.95263671875003, 37.33115234374998],
                                [119.28740234375002, 37.138281250000034],
                                [119.76054687500007, 37.15507812499999],
                                [120.31152343750003, 37.62270507812505],
                                [120.2572265625, 37.67900390624996],
                                [120.75, 37.83393554687501],
                                [121.64023437500012, 37.46035156250002],
                                [122.05664062500003, 37.528906250000034],
                                [122.66699218750003, 37.40283203125003],
                                [122.4466796875, 37.06811523437503],
                                [122.51972656250004, 36.94682617187502],
                                [122.34091796875012, 36.83222656250004],
                                [121.93271484375006, 36.95947265625003],
                                [121.05380859375006, 36.61137695312499],
                                [120.81083984375007, 36.6328125],
                                [120.89580078125007, 36.44414062500002],
                                [120.71152343750006, 36.41328125000004],
                                [120.6378906250001, 36.129931640625045],
                                [120.39306640625003, 36.053857421874994],
                                [120.32773437500006, 36.228173828124994],
                                [120.18330078125004, 36.20244140624999],
                                [120.094140625, 36.11889648437503],
                                [120.28476562500006, 35.98442382812499],
                                [119.42968749999997, 35.301416015624994],
                                [119.16533203125002, 34.84882812499998],
                                [119.20097656250002, 34.748437499999966],
                                [120.26669921875006, 34.274023437500034],
                                [120.87109374999997, 33.016503906249994],
                                [120.8532226562501, 32.66137695312503],
                                [121.34169921875005, 32.42504882812503],
                                [121.40390625000006, 32.20625],
                                [121.85634765625, 31.816455078125045],
                                [121.86630859375006, 31.703564453124955],
                                [121.68085937500004, 31.71215820312503],
                                [121.351953125, 31.85878906250005],
                                [120.97353515625, 31.86938476562497],
                                [120.52011718750006, 32.10585937500002],
                                [120.03593750000002, 31.93627929687503],
                                [120.7155273437501, 31.983740234375006],
                                [120.7877929687501, 31.81977539062501],
                                [121.66064453124997, 31.319726562499994],
                                [121.87792968750003, 30.91699218750003],
                                [121.41894531249997, 30.789794921875057],
                                [120.8214843750001, 30.354638671875023],
                                [120.44980468750006, 30.38784179687505],
                                [120.19462890625002, 30.241308593750034],
                                [120.49453125, 30.303076171875006],
                                [120.63339843750006, 30.133154296875034],
                                [121.25800781250004, 30.30410156250005],
                                [121.67792968750004, 29.979101562500006],
                                [122.08291015625005, 29.870361328125057],
                                [121.50625, 29.484570312499955],
                                [121.94121093750002, 29.605908203124983],
                                [121.91777343750007, 29.13500976562497],
                                [121.71748046875004, 29.25634765625],
                                [121.48710937500007, 29.193164062500017],
                                [121.67968749999997, 28.953125],
                                [121.54003906250003, 28.931884765625],
                                [121.6625, 28.851416015625034],
                                [121.47519531250006, 28.64140625],
                                [121.60996093750006, 28.29213867187505],
                                [121.27226562500002, 28.222119140624983],
                                [121.14570312500004, 28.32666015624997],
                                [120.95859375000006, 28.037011718750023],
                                [120.74765625000006, 28.00996093750001],
                                [120.83300781249997, 27.891455078125034],
                                [120.58750000000012, 27.580761718749983],
                                [120.60751953125012, 27.41240234374996],
                                [120.2787109375, 27.097070312500023],
                                [120.08671875000007, 26.67158203125004],
                                [119.88222656250005, 26.610449218750006],
                                [119.82421874999997, 26.84638671875001],
                                [119.71044921874997, 26.728662109375023],
                                [119.58818359375002, 26.784960937500045],
                                [119.8810546875001, 26.33417968750004],
                                [119.46308593750004, 26.05468750000003],
                                [119.13945312500007, 26.12177734375001],
                                [119.33203124999997, 25.94873046875003],
                                [119.61875000000012, 26.003564453124994],
                                [119.53945312500005, 25.59125976562504],
                                [119.6224609375, 25.391162109375017],
                                [119.180078125, 25.449804687499977],
                                [119.285546875, 25.232226562500074],
                                [118.97753906249997, 25.209277343750017],
                                [118.90908203125005, 24.92890625000001],
                                [118.63691406250004, 24.835546874999977],
                                [118.65703125000002, 24.621435546874977],
                                [118.0871093750001, 24.627001953125045],
                                [118.00595703125006, 24.48198242187499],
                                [117.84267578125005, 24.47431640625004],
                                [118.0560546875, 24.24609374999997],
                                [117.62822265625002, 23.836718750000074],
                                [117.46640625000012, 23.84057617187497],
                                [117.36767578124997, 23.58862304687497],
                                [117.29082031250007, 23.71435546875],
                                [117.08251953124997, 23.578759765625023],
                                [116.91064453124997, 23.646679687499983],
                                [116.86093750000006, 23.453076171874983],
                                [116.62939453124997, 23.353857421875034],
                                [116.69882812500006, 23.277783203124983],
                                [116.53828125000004, 23.17968749999997],
                                [116.47070312499997, 22.945898437500034],
                                [116.25185546875005, 22.981347656249994],
                                [115.85214843750006, 22.801562500000045],
                                [115.64042968750002, 22.853417968750023],
                                [115.49833984375002, 22.718847656250063],
                                [115.19580078125003, 22.81728515625005],
                                [114.85380859375007, 22.616796875000063],
                                [114.65166015625002, 22.755273437500023],
                                [114.55419921874997, 22.52890625],
                                [114.26601562500005, 22.540966796874983],
                                [114.01542968750007, 22.51191406250001],
                                [113.61962890624997, 22.861425781249977],
                                [113.6205078125, 23.12749023437499],
                                [113.51972656250004, 23.102099609375074],
                                [113.33105468749997, 22.912011718749966],
                                [113.55302734375002, 22.594042968750045],
                                [113.54912109375002, 22.225195312500034],
                                [113.14902343750012, 22.075],
                                [113.08876953125, 22.207958984374983],
                                [112.95390625000007, 21.907324218750034],
                                [112.80859374999997, 21.944628906250074],
                                [112.58632812500005, 21.77685546875],
                                [112.35966796875007, 21.97802734375003],
                                [112.30498046875002, 21.74169921875003],
                                [111.94394531250012, 21.84965820312499],
                                [111.60273437500004, 21.55908203125003],
                                [111.01689453125007, 21.51171874999997],
                                [110.56718750000002, 21.21406250000001],
                                [110.41093750000007, 21.33813476562497],
                                [110.15400390625004, 20.944628906250017],
                                [110.36542968750004, 20.837597656249955],
                                [110.31308593750012, 20.67167968749999],
                                [110.51152343750007, 20.51826171875001],
                                [110.34472656249997, 20.29482421875005],
                                [109.88251953125004, 20.364062500000045],
                                [109.96835937500006, 20.448144531250023],
                                [109.66259765625003, 20.91689453125005],
                                [109.68125000000012, 21.13164062499999],
                                [109.93076171875012, 21.480566406250034],
                                [109.6869140625, 21.52460937500004],
                                [109.56640624999997, 21.690576171874994],
                                [109.54404296875012, 21.537939453125006],
                                [109.14863281250004, 21.425537109375],
                                [109.1017578125001, 21.59047851562505],
                                [108.77167968750004, 21.63046875],
                                [108.59375, 21.901025390624994],
                                [108.47988281250005, 21.904638671875006],
                                [108.50214843750004, 21.633447265624994],
                                [108.32480468750006, 21.693505859374994],
                                [108.24628906250004, 21.55839843749999],
                                [107.97265624999997, 21.507958984375023],
                                [107.75927734374997, 21.655029296875057],
                                [107.35117187500012, 21.60888671874997],
                                [106.97099609375002, 21.923925781250034],
                                [106.66357421875003, 21.97890625000005],
                                [106.55039062500006, 22.501367187499994],
                                [106.78027343749997, 22.778906250000034],
                                [106.54179687500007, 22.908349609375023],
                                [106.2790039062501, 22.857470703125045],
                                [106.14843749999997, 22.970068359375006],
                                [105.8429687500001, 22.922802734374955],
                                [105.27539062500003, 23.34521484375003],
                                [104.86474609375003, 23.136376953125023],
                                [104.68730468750002, 22.822216796874983],
                                [104.37177734375004, 22.704052734374983],
                                [104.14306640624997, 22.800146484375006],
                                [103.94150390625006, 22.540087890625045],
                                [103.62021484375006, 22.782031250000045],
                                [103.49296875000007, 22.587988281250034],
                                [103.32666015625003, 22.769775390625057],
                                [102.98193359374997, 22.4482421875],
                                [102.47089843750004, 22.75092773437501],
                                [102.40644531250004, 22.70800781249997],
                                [102.2370117187501, 22.466015624999983],
                                [102.1759765625001, 22.414648437500006],
                                [102.12744140624997, 22.379199218750045],
                                [101.84179687500003, 22.38847656249999],
                                [101.75996093750004, 22.490332031250034],
                                [101.73876953124997, 22.495263671874994],
                                [101.70751953125003, 22.486572265625],
                                [101.67148437500006, 22.462304687500023],
                                [101.64619140625004, 22.405419921874966],
                                [101.61992187500002, 22.32744140624999],
                                [101.56787109374997, 22.27636718749997],
                                [101.52451171875006, 22.25366210937497],
                                [101.7365234375001, 21.826513671874977],
                                [101.74394531250007, 21.77797851562505],
                                [101.74726562500004, 21.605761718750045],
                                [101.72294921875007, 21.31494140625003],
                                [101.80058593750007, 21.212597656249983],
                                [101.78349609375007, 21.204150390625017],
                                [101.728125, 21.156396484374994],
                                [101.7047851562501, 21.15014648437503],
                                [101.54238281250005, 21.23427734375005],
                                [101.2814453125001, 21.184130859375045],
                                [101.24785156250007, 21.197314453125045],
                                [101.22441406250002, 21.223730468750034],
                                [101.21181640625, 21.278222656250023],
                                [101.2199218750001, 21.34243164062505],
                                [101.17539062500006, 21.407519531250074],
                                [101.19667968750005, 21.522070312500063],
                                [101.1388671875001, 21.567480468749977],
                                [101.07978515625004, 21.75585937499997],
                                [100.60458984375012, 21.471777343750006],
                                [100.14765625000004, 21.480517578125017],
                                [99.94072265625007, 21.75874023437504],
                                [99.9176757812501, 22.02802734375001],
                                [99.19296875000006, 22.12597656249997],
                                [99.50712890625002, 22.959130859374994],
                                [99.41806640625006, 23.069238281250023],
                                [98.86376953125003, 23.191259765625034],
                                [98.8322265625001, 23.624365234374977],
                                [98.67675781250003, 23.905078125000045],
                                [98.83505859375006, 24.121191406250034],
                                [98.2125, 24.110644531250017],
                                [97.56455078125012, 23.911035156250023],
                                [97.7082031250001, 24.228759765625],
                                [97.53144531250004, 24.49169921875003],
                                [97.58330078125002, 24.77480468750005],
                                [97.73789062500006, 24.869873046875057],
                                [97.8195312500001, 25.251855468749994],
                                [98.01074218749997, 25.292529296875017],
                                [98.14287109375007, 25.571093750000017],
                                [98.33378906250007, 25.586767578125006],
                                [98.65625, 25.86357421874999],
                                [98.56406250000006, 26.072412109374994],
                                [98.68554687499997, 26.189355468750023],
                                [98.7384765625001, 26.785742187500006],
                                [98.65117187500007, 27.572460937499983],
                                [98.4525390625, 27.6572265625],
                                [98.29882812499997, 27.550097656250045],
                                [98.06162109375012, 28.185888671874977],
                                [97.59921875000006, 28.51704101562504],
                                [97.53789062500002, 28.510205078124983],
                                [97.43144531250002, 28.353906250000023],
                                [97.35644531249997, 28.254492187500006],
                                [97.32158929493812, 28.217097107438057],
                                [97.3027336276825, 28.08710519614969],
                                [97.34382779482424, 27.982305259167095],
                                [97.04929369561631, 27.76000444316393],
                                [96.96494598325154, 27.699301564540924],
                                [96.19423412199573, 28.04146177926422],
                                [95.73730002295082, 28.117613231051525],
                                [95.11298892962586, 27.748338353239472],
                                [94.07167814294401, 27.588707868507477],
                                [93.61247595136224, 27.323800298697016],
                                [93.30681393470121, 26.786120363519142],
                                [92.74319481218781, 26.833531317384058],
                                [92.04974640832253, 26.874866505386724],
                                [92.07342257335648, 26.915311275859864],
                                [92.06813426293174, 26.9752569185349],
                                [92.02985139563152, 27.03987087331446],
                                [91.99856592104459, 27.079255842602592],
                                [91.99177981607339, 27.100605151743654],
                                [92.0025114452454, 27.147290053160265],
                                [92.03101585307499, 27.214271359861193],
                                [92.08387457645458, 27.29090135496722],
                                [92.04520857607581, 27.364442429033787],
                                [91.99069061380867, 27.450181624174498],
                                [91.95099838734396, 27.45828799115413],
                                [91.85276579410389, 27.438593286730903],
                                [91.74366351462741, 27.442853010105477],
                                [91.59505352446729, 27.557262710287986],
                                [91.63193359375012, 27.759960937499983],
                                [91.64189453125002, 27.923242187500023],
                                [91.36259958579089, 28.02438066407592],
                                [91.27304687500012, 28.078369140625],
                                [91.22587890625007, 28.071240234374983],
                                [91.07773437500012, 27.974462890624977],
                                [91.02080078125002, 27.970068359374977],
                                [90.71572265625, 28.071728515624983],
                                [90.63007812500004, 28.078564453124955],
                                [90.47734375000007, 28.07084960937499],
                                [90.3527343750001, 28.080224609375023],
                                [90.33310546875012, 28.093994140625],
                                [90.36298828125004, 28.21650390625001],
                                [90.34824218750006, 28.24394531249999],
                                [90.22080078125006, 28.27773437500005],
                                [90.10449218749997, 28.302050781250017],
                                [89.98105468750006, 28.311181640625023],
                                [89.8978515625, 28.29414062500001],
                                [89.81689453125003, 28.25629882812501],
                                [89.74980468750002, 28.18818359375001],
                                [89.65273437500005, 28.158300781250034],
                                [89.53691406250007, 28.10742187499997],
                                [89.4806640625001, 28.059960937499994],
                                [88.89140625000002, 27.316064453124966],
                                [88.83251953125003, 27.36284179687499],
                                [88.7648437500001, 27.429882812499983],
                                [88.74902343749997, 27.521875],
                                [88.82988281250002, 27.76738281249999],
                                [88.84882812500004, 27.86865234375],
                                [88.80371093750003, 28.006933593750034],
                                [88.57792968750002, 28.093359375000034],
                                [88.42597656250004, 28.01166992187501],
                                [88.27519531250007, 27.968847656250006],
                                [88.14111328125003, 27.94892578125001],
                                [88.10898437500006, 27.933007812499966],
                                [88.10976562500005, 27.870605468750057],
                                [87.8607421875, 27.886083984375006],
                                [87.62255859374997, 27.81518554687503],
                                [87.29072265625004, 27.821923828124994],
                                [87.14140625000002, 27.838330078124955],
                                [87.02011718750006, 27.928662109374983],
                                [86.9337890625001, 27.96845703125001],
                                [86.84238281250012, 27.99916992187505],
                                [86.750390625, 28.022070312500006],
                                [86.71962890625005, 28.070654296875034],
                                [86.69052734375006, 28.09492187500001],
                                [86.61445312500004, 28.10302734374997],
                                [86.55449218750007, 28.08520507812497],
                                [86.51689453125007, 27.963525390624966],
                                [86.40869140625003, 27.928662109374983],
                                [86.32861328124997, 27.95952148437496],
                                [86.2179687500001, 28.022070312500006],
                                [86.13701171875002, 28.114355468750063],
                                [86.07871093750006, 28.08359375],
                                [86.0641601562501, 27.934716796874966],
                                [85.99453125000005, 27.910400390625],
                                [85.95410156249997, 27.92822265624997],
                                [85.92167968750002, 27.989697265624983],
                                [85.84023437500005, 28.135351562499977],
                                [85.75947265625004, 28.220654296874955],
                                [85.67832031250012, 28.277441406249977],
                                [85.41064453125003, 28.27602539062505],
                                [85.21210937500004, 28.292626953124966],
                                [85.1224609375, 28.315966796875017],
                                [85.08857421875004, 28.37226562500001],
                                [85.121484375, 28.484277343750023],
                                [85.16015624999997, 28.571875],
                                [85.15908203125, 28.592236328124983],
                                [85.1263671875, 28.602636718750063],
                                [85.06914062500007, 28.60966796874999],
                                [84.85507812500006, 28.553613281250023],
                                [84.796875, 28.560205078125023],
                                [84.2287109375001, 28.911767578124966],
                                [84.17558593750002, 29.036376953125057],
                                [84.12783203125005, 29.15629882812496],
                                [84.10136718750002, 29.21997070312497],
                                [84.02197265624997, 29.25385742187504],
                                [83.93593750000005, 29.27949218750001],
                                [83.58349609375003, 29.18359375000003],
                                [83.15546875000004, 29.612646484375034],
                                [82.22070312500003, 30.063867187500023],
                                [82.04335937500005, 30.326757812500034],
                                [81.8548828125, 30.362402343750006],
                                [81.64189453125007, 30.3875],
                                [81.4171875000001, 30.33759765625001],
                                [81.25507812500004, 30.09331054687499],
                                [81.17714843750005, 30.039892578125034],
                                [80.98544921875006, 30.23710937499999],
                                [80.87353515625003, 30.290576171875045],
                                [80.19121093750002, 30.56840820312496],
                                [80.20712890625006, 30.683740234375023],
                                [79.92451171875004, 30.888769531250034],
                                [79.66425781250004, 30.96523437499999],
                                [79.38847656250007, 31.064208984375],
                                [79.10712890625004, 31.402636718750017],
                                [78.74355468750005, 31.323779296875017],
                                [78.7550781250001, 31.55029296875],
                                [78.69345703125006, 31.740380859374994],
                                [78.72558593750003, 31.983789062500023],
                                [78.49589843750002, 32.21577148437504],
                                [78.4552734375001, 32.30034179687502],
                                [78.41748046874997, 32.466699218749994],
                                [78.38964843749997, 32.51987304687498],
                                [78.73671875, 32.55839843750002],
                                [78.75351562500012, 32.49926757812506],
                                [78.91894531249997, 32.35820312500002],
                                [79.16992187500003, 32.497216796874994],
                                [79.14550781250003, 33.00146484375006],
                                [79.10283203125007, 33.05253906249996],
                                [79.13515625000005, 33.17192382812496],
                                [79.1125, 33.22626953125001],
                                [78.94843750000004, 33.346533203125006],
                                [78.86503906250002, 33.43110351562501],
                                [78.78378906250006, 33.80878906250004],
                                [78.72666015625006, 34.013378906249955],
                                [78.97060546875, 34.22822265625004],
                                [78.93642578125, 34.35195312500002],
                                [78.86484375000006, 34.39033203125001],
                                [78.32695312500007, 34.60639648437498],
                                [78.15849609375002, 34.94648437499998],
                                [78.07578125000006, 35.13491210937502],
                                [78.0426757812501, 35.47978515625002],
                                [77.79941406250006, 35.49589843750002],
                                [77.44648437500004, 35.47558593750006],
                                [77.29482421875005, 35.508154296875034],
                                [77.09003906250004, 35.55205078124999],
                                [76.87890625000003, 35.61328125000003],
                                [76.76689453125002, 35.661718750000034],
                                [76.72753906250003, 35.67866210937504],
                                [76.63183593749997, 35.729394531249966],
                                [76.56347656249997, 35.77299804687499],
                                [76.55126953124997, 35.887060546875034],
                                [76.50205078125006, 35.87822265625002],
                                [76.38574218750003, 35.837158203125],
                                [76.25166015625004, 35.8109375],
                                [76.17783203125012, 35.810546875],
                                [76.14785156250005, 35.82900390625002],
                                [76.07089843750006, 35.983007812500034],
                                [75.91230468750004, 36.048974609374994],
                                [75.97441406250007, 36.38242187500006],
                                [75.9518554687501, 36.458105468750034],
                                [75.9330078125, 36.52158203124998],
                                [75.840234375, 36.64970703124999],
                                [75.7721679687501, 36.694921875000034],
                                [75.6671875000001, 36.741992187500045],
                                [75.57373046874997, 36.75932617187502],
                                [75.46025390625002, 36.725048828124955],
                                [75.42421875000005, 36.73823242187498],
                                [75.37685546875, 36.88369140625005],
                                [75.34667968749997, 36.913476562499966],
                                [75.05390625000004, 36.98715820312498],
                                [74.94912109375, 36.96835937500006],
                                [74.88925781250006, 36.95244140625002],
                                [74.69218750000007, 37.035742187500006],
                                [74.60058593749997, 37.03666992187502],
                                [74.54140625, 37.02216796875001],
                                [74.52646484375006, 37.03066406250005],
                                [74.49794921875, 37.057226562500034],
                                [74.37617187500004, 37.13735351562502],
                                [74.37216796875006, 37.15771484375],
                                [74.558984375, 37.23662109374999],
                                [74.66894531250003, 37.266699218750006],
                                [74.72666015625006, 37.29072265625001],
                                [74.7389648437501, 37.28564453125003],
                                [74.76738281250002, 37.249169921874966],
                                [74.840234375, 37.22504882812504],
                                [74.89130859375004, 37.231640624999955],
                                [75.11875, 37.38569335937498],
                                [74.8942382812501, 37.60141601562498],
                                [74.81230468750002, 38.46030273437498],
                                [74.27744140625, 38.659765625000034],
                                [74.02558593750004, 38.53984375000002],
                                [73.80166015625, 38.60688476562501],
                                [73.69609375000007, 38.85429687499996],
                                [73.8052734375, 38.968652343749994],
                                [73.60732421875, 39.229199218749955],
                                [73.63632812500006, 39.396679687499955],
                                [73.63164062500007, 39.44887695312502],
                                [73.82294921875004, 39.48896484375004],
                                [73.90712890625, 39.578515624999966],
                                [73.9146484375, 39.60649414062499],
                                [73.88251953125004, 39.71455078124998],
                                [73.83974609375005, 39.76284179687505],
                                [73.8353515625, 39.800146484375006],
                                [73.85625, 39.828662109375045],
                                [73.88457031250002, 39.87792968750006],
                                [73.93876953125002, 39.97880859374999],
                                [73.99160156250005, 40.04311523437502],
                                [74.83046875, 40.32851562499999],
                                [74.80126953124997, 40.428515625000045],
                                [74.83515625000004, 40.482617187499955],
                                [74.865625, 40.493505859375034],
                                [75.0044921875, 40.44951171874996],
                                [75.11132812499997, 40.4541015625],
                                [75.24101562500002, 40.48027343750002],
                                [75.52080078125002, 40.627539062500006],
                                [75.55556640625, 40.625195312499955],
                                [75.6771484375, 40.305810546874994],
                                [75.87197265625, 40.30322265625],
                                [76.25830078124997, 40.43076171875006],
                                [76.3185546875001, 40.352246093749955],
                                [76.39638671875005, 40.389794921874966],
                                [76.4801757812501, 40.44951171874996],
                                [76.57792968750002, 40.577880859375],
                                [76.62216796875006, 40.66235351562497],
                                [76.6398437500001, 40.74223632812499],
                                [76.66113281249997, 40.77963867187498],
                                [76.70839843750005, 40.818115234375],
                                [76.82402343750002, 40.982324218749966],
                                [76.90771484374997, 41.02416992187497],
                                [76.98662109375002, 41.039160156250006],
                                [77.58173828125004, 40.99277343750006],
                                [77.71933593750012, 41.024316406249994],
                                [77.81523437500002, 41.05561523437498],
                                [77.9564453125, 41.05068359375005],
                                [78.1234375, 41.07563476562498],
                                [78.34628906250012, 41.28144531249998],
                                [78.36240234375012, 41.37163085937496],
                                [78.44287109374997, 41.41752929687499],
                                [78.742578125, 41.56005859375],
                                [79.29355468750006, 41.78281249999998],
                                [79.76611328124997, 41.89887695312501],
                                [79.84042968750012, 41.99575195312502],
                                [79.90966796875003, 42.014990234375034],
                                [80.21621093750005, 42.03242187500004],
                                [80.23515625000007, 42.04345703124997],
                                [80.24619140625012, 42.05981445312503],
                                [80.209375, 42.190039062500006],
                                [80.20224609375012, 42.73447265624998],
                                [80.53896484375005, 42.873486328124955],
                                [80.39023437500006, 43.043115234374966],
                                [80.78574218750006, 43.16157226562504],
                                [80.35527343750002, 44.09726562500006],
                                [80.48154296875006, 44.71464843749999],
                                [79.871875, 44.88378906249997],
                                [80.05917968750012, 45.006445312500006],
                                [81.69199218750012, 45.34936523437497],
                                [81.94492187500006, 45.16083984375001],
                                [82.26660156249997, 45.21909179687498],
                                [82.52148437500003, 45.12548828125],
                                [82.61162109375007, 45.424267578124955],
                                [82.31523437500002, 45.59492187499998],
                                [83.02949218750004, 47.18593750000002],
                                [84.016015625, 46.97050781250002],
                                [84.66660156250006, 46.97236328125004],
                                [84.78613281249997, 46.83071289062505],
                                [85.484765625, 47.06352539062496],
                                [85.65664062500005, 47.254638671875],
                                [85.52597656250006, 47.915625],
                                [85.7494140625, 48.38505859374999],
                                [86.54941406250012, 48.52861328125002],
                                [86.8083007812501, 49.04970703125002],
                                [87.32285156250012, 49.085791015625006],
                                [87.41669921875004, 49.07661132812501],
                                [87.5158203125001, 49.122412109375006],
                                [87.7625, 49.16582031249996],
                                [87.81425781250002, 49.162304687499955],
                                [87.87216796875012, 49.000146484374966],
                                [87.74316406250003, 48.88164062499999],
                                [87.83183593750007, 48.79165039062505],
                                [88.02792968750006, 48.735595703125],
                                [88.06005859375003, 48.707177734374966],
                                [87.9796875000001, 48.55512695312498],
                                [88.30996093750005, 48.47207031250002],
                                [88.41396484375, 48.403417968750006],
                                [88.51708984374997, 48.384472656249955],
                                [88.56679687500005, 48.31743164062496],
                                [88.57597656250007, 48.220166015624955],
                                [88.68183593750004, 48.170556640624994],
                                [88.83828125000005, 48.101708984374994],
                                [88.91777343750007, 48.089013671874966],
                                [89.04765625000007, 48.002539062500034],
                                [89.47919921875004, 48.02905273437503],
                                [89.5609375, 48.00395507812496],
                                [89.778125, 47.82700195312498],
                                [89.83134765625002, 47.82329101562502],
                                [89.91044921875007, 47.844335937500034],
                                [89.95869140625004, 47.88632812499998],
                                [90.02792968750012, 47.877685546875],
                                [90.1032226562501, 47.74541015624996],
                                [90.19101562500012, 47.70209960937501],
                                [90.31328125000007, 47.67617187499999],
                                [90.33066406250006, 47.655175781249966],
                                [90.42519531250005, 47.50410156250001],
                                [90.49619140625012, 47.28515625],
                                [90.64335937500007, 47.10029296874998],
                                [90.71552734375004, 47.00385742187498],
                                [90.7990234375001, 46.98515624999999],
                                [90.86992187500002, 46.95449218750005],
                                [90.91054687500005, 46.88325195312501],
                                [90.9857421875, 46.7490234375],
                                [90.9115234375, 46.270654296874994],
                                [90.94755859375002, 46.17729492187499],
                                [90.99677734375004, 46.10498046875],
                                [91.00175781250007, 46.03579101562502],
                                [90.6618164062501, 45.525244140625006],
                                [90.87724609375002, 45.19609375000002],
                                [91.05, 45.217431640624994],
                                [91.584375, 45.07651367187498],
                                [92.42382812499997, 45.008935546874994],
                                [92.57890625000002, 45.01098632812506],
                                [92.78789062500007, 45.035742187500034],
                                [93.51621093750012, 44.944482421874994],
                                [94.71201171875012, 44.35083007812503],
                                [95.35029296875004, 44.27807617187503],
                                [95.32558593750005, 44.03935546874999],
                                [95.52558593750004, 43.953955078125006],
                                [95.85957031250004, 43.27597656249998],
                                [96.38544921875004, 42.72036132812502],
                                [97.20566406250012, 42.78979492187506],
                                [99.46787109375012, 42.568212890625034],
                                [99.98378906250005, 42.67734375000006],
                                [100.08632812500005, 42.67075195312506],
                                [100.51904296875003, 42.61679687499998],
                                [101.09199218750004, 42.55131835937496],
                                [101.49531250000004, 42.53876953124998],
                                [101.57910156249997, 42.52353515624998],
                                [101.65996093750002, 42.50004882812499],
                                [101.97294921875002, 42.21586914062502],
                                [102.15664062500005, 42.158105468749966],
                                [102.57519531249997, 42.09208984375002],
                                [103.07285156250006, 42.00595703125006],
                                [103.7111328125001, 41.75131835937506],
                                [103.99726562500004, 41.796972656250034],
                                [104.30517578124997, 41.84614257812501],
                                [104.49824218750004, 41.87700195312499],
                                [104.49824218750004, 41.65869140625],
                                [104.86035156250003, 41.64375],
                                [104.98203125000012, 41.59550781250002],
                                [105.05058593750002, 41.61591796875001],
                                [105.1154296875001, 41.66328124999998],
                                [105.19707031250002, 41.738037109375],
                                [105.31435546875005, 41.77089843750005],
                                [105.86757812500005, 41.993994140625034],
                                [106.77001953125003, 42.28872070312502],
                                [108.17119140625002, 42.44731445312502],
                                [108.68730468750002, 42.416113281250034],
                                [109.33984374999997, 42.43837890625005],
                                [109.44316406250002, 42.455957031249994],
                                [110.40039062499997, 42.77368164062497],
                                [111.00722656250005, 43.34140624999998],
                                [111.878125, 43.68017578125],
                                [111.93173828125012, 43.81494140625],
                                [111.40224609375005, 44.367285156250006],
                                [111.89804687500006, 45.064062500000034],
                                [112.03261718750005, 45.08164062500006],
                                [112.11289062500006, 45.06293945312498],
                                [112.41132812500004, 45.05820312499998],
                                [112.49931640625002, 45.01093750000004],
                                [112.59677734375006, 44.917675781249955],
                                [112.7067382812501, 44.883447265624994],
                                [113.04941406250006, 44.81035156250002],
                                [113.3009765625001, 44.79165039062502],
                                [113.50791015625006, 44.76235351562502],
                                [113.58701171875006, 44.745703125],
                                [113.65263671875002, 44.76347656249999],
                                [113.87705078125012, 44.89619140625001],
                                [114.03027343749997, 44.942578124999955],
                                [114.08027343750004, 44.97114257812501],
                                [114.41914062500004, 45.20258789062501],
                                [114.56015625000012, 45.38999023437498],
                                [114.73876953124997, 45.41962890624998],
                                [114.91923828125007, 45.378271484375006],
                                [115.16259765624997, 45.390234375000034],
                                [115.6810546875, 45.45825195312503],
                                [116.19765625, 45.739355468750006],
                                [116.240625, 45.795996093750006],
                                [116.22910156250012, 45.84575195312502],
                                [116.21298828125012, 45.88691406249998],
                                [116.56259765625012, 46.28979492187497],
                                [116.85908203125004, 46.387939453125],
                                [117.3333984375, 46.36201171875004],
                                [117.35693359375003, 46.391308593749955],
                                [117.35634765625, 46.436669921874966],
                                [117.39218750000012, 46.53759765625003],
                                [117.40556640625007, 46.57089843750006],
                                [117.43808593750012, 46.58623046874999],
                                [117.546875, 46.58828125000005],
                                [117.74121093749997, 46.51816406250006],
                                [118.07128906249997, 46.666601562500006],
                                [118.15683593750006, 46.678564453125034],
                                [118.30869140625012, 46.71704101562497],
                                [118.40439453125006, 46.70317382812499],
                                [118.58046875, 46.69189453125],
                                [118.64873046875002, 46.70166015625006],
                                [118.72294921875007, 46.69189453125],
                                [118.8439453125001, 46.76020507812498],
                                [118.95712890625006, 46.73486328124997],
                                [119.16210937499997, 46.638671875],
                                [119.33183593750002, 46.61381835937499],
                                [119.47402343750005, 46.626660156249955],
                                [119.62021484375006, 46.60395507812504],
                                [119.70664062500006, 46.60600585937502],
                                [119.74746093750005, 46.62719726562497],
                                [119.86718750000003, 46.67216796874999],
                                [119.89785156250005, 46.857812499999966],
                                [119.71113281250004, 47.15],
                                [119.08193359375, 47.654150390625034],
                                [119.01757812500003, 47.68535156249999],
                                [118.88027343750005, 47.72509765625],
                                [118.75996093750004, 47.75761718749996],
                                [118.69052734375012, 47.822265625],
                                [118.56777343750005, 47.94326171875005],
                                [118.49843750000005, 47.98398437499998],
                                [117.76835937500002, 47.98789062499998],
                                [117.3507812500001, 47.65219726562498],
                                [117.28593750000002, 47.666357421875034],
                                [117.06972656250005, 47.80639648437506],
                                [116.95166015624997, 47.836572265624966],
                                [116.90117187500007, 47.85307617187496],
                                [116.76054687500002, 47.869775390624994],
                                [116.65195312500012, 47.86450195312497],
                                [116.51347656250007, 47.839550781249955],
                                [116.37822265625002, 47.84404296874999],
                                [116.31718750000002, 47.85986328125],
                                [116.2311523437501, 47.85820312500002],
                                [116.07480468750012, 47.78955078125],
                                [115.99384765625004, 47.71132812500005],
                                [115.89824218750002, 47.68691406250005],
                                [115.6164062500001, 47.874804687500045],
                                [115.52509765625004, 48.13085937499997],
                                [115.63945312500007, 48.18623046874998],
                                [115.785546875, 48.24824218750001],
                                [115.7965820312501, 48.346337890624994],
                                [115.7916992187501, 48.455712890624994],
                                [115.8205078125001, 48.57724609375006],
                                [116.6833007812501, 49.82377929687499],
                                [117.8734375, 49.51347656250002],
                                [118.4515625, 49.84448242187503],
                                [119.25986328125012, 50.06640625000003],
                                [119.34628906250012, 50.278955078124994],
                                [119.16367187500006, 50.40600585937503],
                                [120.06689453125003, 51.60068359375006],
                                [120.74980468750007, 52.096533203125006],
                                [120.65615234375, 52.56665039062503],
                                [120.0675781250001, 52.632910156250034],
                                [120.09453125000007, 52.787207031250034],
                                [120.98544921875012, 53.28457031250002],
                                [123.6078125, 53.546533203124994],
                                [124.81230468750002, 53.133837890625045],
                                [125.075, 53.20366210937496],
                                [125.64902343750012, 53.042285156250045],
                                [126.34169921875, 52.36201171875001],
                                [126.92480468749997, 51.10014648437496],
                                [127.30703125000005, 50.70795898437501],
                                [127.33720703125007, 50.35014648437502],
                                [127.590234375, 50.20898437500003],
                                [127.55078124999997, 49.801806640625045],
                                [127.99960937500006, 49.56860351562506],
                                [128.70400390625, 49.60014648437499],
                                [129.0651367187501, 49.374658203124966],
                                [129.49814453125012, 49.38881835937502],
                                [130.1959960937501, 48.89165039062499],
                                [130.553125, 48.861181640625006],
                                [130.5521484375, 48.602490234374955],
                                [130.80429687500012, 48.34150390624998],
                                [130.7326171875001, 48.01923828124998],
                                [130.96191406249997, 47.70932617187498],
                                [132.47626953125004, 47.714990234374994],
                                [132.7072265625001, 47.94726562500006],
                                [133.14404296875003, 48.10566406249998],
                                [133.46835937500006, 48.09716796875003],
                                [134.29335937500005, 48.37343750000002],
                                [134.66523437500004, 48.25390625],
                                [134.56601562500006, 48.02250976562502],
                                [134.75234375, 47.71542968749998],
                                [134.1676757812501, 47.30219726562501],
                                [133.86132812500003, 46.24775390625004],
                                [133.43642578125, 45.60468750000004],
                                [133.18603515625003, 45.49482421875004],
                                [133.1134765625001, 45.130712890625006],
                                [132.93603515624997, 45.029931640624994],
                                [131.85185546875002, 45.32685546875001],
                                [131.44687500000012, 44.984033203124966],
                                [130.9816406250001, 44.844335937500034],
                                [131.2552734375, 44.07158203124999],
                                [131.25732421875003, 43.378076171874994],
                                [131.06855468750004, 42.90224609375005],
                                [130.42480468749997, 42.72705078124997],
                                [130.52695312500012, 42.535400390625]
                            ]
                        ],
                        [
                            [
                                [113.9977539062501, 22.210498046875045],
                                [113.83886718749997, 22.24169921875003],
                                [114.04394531250003, 22.33339843750005],
                                [113.9977539062501, 22.210498046875045]
                            ]
                        ],
                        [
                            [
                                [114.01542968750007, 22.51191406250001],
                                [114.26601562500005, 22.540966796874983],
                                [114.26796875, 22.295556640624966],
                                [113.93730468750002, 22.364990234375],
                                [114.01542968750007, 22.51191406250001]
                            ]
                        ],
                        [],
                        [
                            [
                                [118.4074218750001, 24.522119140624994],
                                [118.43271484375006, 24.414355468750074],
                                [118.29511718750004, 24.436328125000017],
                                [118.4074218750001, 24.522119140624994]
                            ]
                        ],
                        [
                            [
                                [121.00878906249997, 22.62036132812497],
                                [120.83984375000003, 21.925],
                                [120.2328125, 22.71791992187505],
                                [120.0724609375001, 23.149755859375006],
                                [120.13212890625007, 23.652929687500034],
                                [121.040625, 25.032812500000034],
                                [121.59365234375, 25.275341796874983],
                                [121.92900390625002, 24.973730468749977],
                                [121.39746093750003, 23.172509765625023],
                                [121.00878906249997, 22.62036132812497]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "China",
                    childNum: 15
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-5.262304687499977, 10.319677734374991],
                            [-4.72177734374992, 9.756542968750026],
                            [-4.625830078125006, 9.713574218749969],
                            [-4.526611328124943, 9.723486328125034],
                            [-4.406201171874926, 9.647998046875031],
                            [-4.332226562499955, 9.645703125],
                            [-4.18115234375, 9.78173828125],
                            [-3.790625, 9.917187499999983],
                            [-3.581152343749977, 9.924316406250014],
                            [-3.289697265625023, 9.882226562500051],
                            [-3.223535156249937, 9.895458984374997],
                            [-3.160693359374932, 9.849169921874974],
                            [-3.095800781249949, 9.752099609375009],
                            [-3.042626953124937, 9.72089843750004],
                            [-2.988281249999972, 9.687353515624963],
                            [-2.900878906249943, 9.534619140625026],
                            [-2.875146484374937, 9.500927734374997],
                            [-2.816748046874949, 9.425830078124974],
                            [-2.766601562499943, 9.424707031250009],
                            [-2.7171875, 9.457128906250048],
                            [-2.695849609374989, 9.481347656250009],
                            [-2.686132812499977, 9.43173828125002],
                            [-2.705761718749983, 9.351367187499989],
                            [-2.74692382812492, 9.04511718750004],
                            [-2.689892578124955, 9.02509765625004],
                            [-2.649218750000017, 8.956591796875031],
                            [-2.600390625000017, 8.800439453125023],
                            [-2.505859375000028, 8.208740234375],
                            [-2.538281249999955, 8.171630859374986],
                            [-2.61171875, 8.147558593749963],
                            [-2.619970703125006, 8.12109375],
                            [-2.600976562499937, 8.082226562499983],
                            [-2.613378906249977, 8.046679687500017],
                            [-2.668847656249994, 8.022216796875014],
                            [-2.789746093749955, 7.931933593750003],
                            [-2.959082031249977, 7.454541015624997],
                            [-3.227148437499977, 6.749121093749991],
                            [-2.998291015624972, 5.711328125000051],
                            [-2.793652343749955, 5.600097656250028],
                            [-2.754980468749977, 5.432519531249994],
                            [-2.815673828125, 5.153027343749997],
                            [-3.168701171874972, 5.203027343749966],
                            [-3.199951171874943, 5.3544921875],
                            [-3.347558593749994, 5.13066406249996],
                            [-4.120166015625017, 5.309716796875023],
                            [-4.60888671875, 5.235888671875003],
                            [-4.037207031249977, 5.23012695312498],
                            [-4.899707031249932, 5.138330078125023],
                            [-5.282373046874994, 5.210253906250017],
                            [-5.36752929687492, 5.15078125],
                            [-5.061816406249989, 5.13066406249996],
                            [-5.913769531249926, 5.0109375],
                            [-7.544970703124989, 4.351318359375],
                            [-7.574658203124983, 4.572314453124989],
                            [-7.585058593749977, 4.916748046875],
                            [-7.39990234375, 5.550585937499989],
                            [-7.454394531249989, 5.841308593749972],
                            [-7.636132812499994, 5.90771484375],
                            [-7.730371093749994, 5.919042968749991],
                            [-7.800927734374994, 6.038916015624991],
                            [-7.833251953125, 6.076367187499983],
                            [-7.855517578125017, 6.150146484375],
                            [-7.888623046875011, 6.234863281250028],
                            [-7.981591796874937, 6.2861328125],
                            [-8.287109375, 6.31904296875004],
                            [-8.587890625, 6.490527343749989],
                            [-8.324511718749989, 6.920019531249991],
                            [-8.408740234374989, 7.411816406249997],
                            [-8.429980468749989, 7.601855468749989],
                            [-8.351757812499926, 7.590576171875],
                            [-8.231884765624955, 7.556738281250034],
                            [-8.205957031249994, 7.590234375000023],
                            [-8.115429687499926, 7.760742187500028],
                            [-8.126855468749937, 7.867724609374974],
                            [-8.00986328124992, 8.078515625000023],
                            [-8.048583984375, 8.169726562500045],
                            [-8.140625, 8.181445312500031],
                            [-8.217138671874949, 8.219677734375011],
                            [-8.256103515625, 8.253710937500017],
                            [-8.244140624999943, 8.407910156249983],
                            [-8.236962890624994, 8.455664062500034],
                            [-7.953125, 8.477734375],
                            [-7.823583984374977, 8.467675781249994],
                            [-7.738964843749983, 8.375244140624986],
                            [-7.696093749999932, 8.375585937499977],
                            [-7.71958007812492, 8.643017578125011],
                            [-7.950976562499989, 8.786816406249997],
                            [-7.938183593749983, 8.97978515624996],
                            [-7.902099609375, 9.017089843750014],
                            [-7.777978515624937, 9.080859375000031],
                            [-7.799804687499943, 9.115039062499989],
                            [-7.839404296875017, 9.151611328124972],
                            [-7.918066406249949, 9.188525390625031],
                            [-7.896191406249955, 9.415869140624991],
                            [-8.136962890624972, 9.49570312499999],
                            [-8.155175781249937, 9.973193359375017],
                            [-7.990625, 10.1625],
                            [-7.661132812500028, 10.427441406250011],
                            [-7.385058593749989, 10.340136718749989],
                            [-7.01708984375, 10.143261718750026],
                            [-6.950341796874994, 10.342333984374989],
                            [-6.693261718750023, 10.34946289062502],
                            [-6.669335937499937, 10.39218750000002],
                            [-6.69199218749992, 10.512011718750017],
                            [-6.686132812499977, 10.578027343750051],
                            [-6.676367187499949, 10.633789062500043],
                            [-6.654150390624949, 10.65644531250004],
                            [-6.482617187499983, 10.561230468749997],
                            [-6.250244140625, 10.717919921875037],
                            [-6.190673828124943, 10.400292968749994],
                            [-6.192626953124972, 10.369433593750003],
                            [-6.241308593749949, 10.279199218750009],
                            [-6.238378906249977, 10.26162109374998],
                            [-6.117187499999972, 10.201904296874986],
                            [-6.034570312499937, 10.194824218750057],
                            [-5.907568359375006, 10.307226562500034],
                            [-5.896191406249983, 10.354736328125028],
                            [-5.843847656249977, 10.389550781250023],
                            [-5.694287109374983, 10.433203125000034],
                            [-5.556591796874983, 10.439941406249986],
                            [-5.382275390625011, 10.314013671875003],
                            [-5.262304687499977, 10.319677734374991]
                        ]
                    ]
                },
                properties: {
                    name: "CÃ´te d'Ivoire",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [15.480078125, 7.523779296874991],
                            [15.206738281250011, 7.206152343749991],
                            [14.7392578125, 6.27978515625],
                            [14.43115234375, 6.038720703124994],
                            [14.616894531250011, 5.865136718749994],
                            [14.56298828125, 5.279931640624994],
                            [14.73125, 4.602392578124991],
                            [15.063574218750006, 4.284863281249997],
                            [15.128710937500017, 3.826904296875],
                            [16.0634765625, 2.90859375],
                            [16.183398437500017, 2.270068359374989],
                            [16.059375, 1.676220703124997],
                            [15.741601562500023, 1.914990234374997],
                            [14.902441406250006, 2.012304687499991],
                            [14.578906250000017, 2.199121093749994],
                            [13.293554687500006, 2.161572265624997],
                            [13.2203125, 2.256445312499991],
                            [11.558984375000023, 2.302197265624997],
                            [11.348437500000017, 2.299707031249994],
                            [11.328710937500006, 2.167431640624997],
                            [11.096582031250023, 2.16748046875],
                            [10.790917968750023, 2.16757812499999],
                            [9.979882812500023, 2.167773437499989],
                            [9.8701171875, 2.21328125],
                            [9.8369140625, 2.242382812499997],
                            [9.830371093750017, 2.275488281249991],
                            [9.826171875, 2.297802734374997],
                            [9.80078125, 2.304443359375],
                            [9.82177734375, 2.539257812499997],
                            [9.948437500000011, 3.079052734374997],
                            [9.672070312500011, 3.53759765625],
                            [9.765722656250006, 3.623828124999989],
                            [9.642382812500017, 3.611767578124997],
                            [9.55615234375, 3.798046875],
                            [9.739648437500023, 3.852929687499994],
                            [9.639941406250017, 3.96533203125],
                            [9.688867187500023, 4.056396484375],
                            [9.483691406250017, 4.066113281249997],
                            [9.42529296875, 3.922314453124997],
                            [9.000097656250006, 4.091601562499989],
                            [8.918261718750017, 4.553759765624989],
                            [8.660351562500011, 4.670996093749991],
                            [8.65625, 4.516357421875],
                            [8.53955078125, 4.571875],
                            [8.715625, 5.046875],
                            [8.997167968750006, 5.917724609375],
                            [9.490234375, 6.418652343749997],
                            [9.779882812500006, 6.76015625],
                            [9.820703125000023, 6.783935546875],
                            [9.874218750000011, 6.803271484374989],
                            [10.038867187500017, 6.92138671875],
                            [10.1435546875, 6.996435546874991],
                            [10.167773437500017, 6.959179687499997],
                            [10.185546875, 6.912792968749997],
                            [10.205468750000023, 6.8916015625],
                            [10.293066406250006, 6.876757812499989],
                            [10.413183593750006, 6.877734374999989],
                            [10.60625, 7.063085937499991],
                            [10.954199218750006, 6.7765625],
                            [11.032519531250017, 6.697900390624994],
                            [11.1064453125, 6.457714843749997],
                            [11.1533203125, 6.437939453124997],
                            [11.2373046875, 6.450537109374991],
                            [11.401757812500023, 6.533935546875],
                            [11.551660156250023, 6.697265625],
                            [11.580078125, 6.888867187499997],
                            [11.657519531250017, 6.9515625],
                            [11.861425781250006, 7.11640625],
                            [11.767382812500017, 7.272265624999989],
                            [11.809179687500006, 7.345068359374991],
                            [12.016015625000023, 7.589746093749994],
                            [12.2333984375, 8.282324218749991],
                            [12.403515625000011, 8.595556640624991],
                            [12.582714843750011, 8.624121093749991],
                            [12.651562500000011, 8.667773437499989],
                            [12.7822265625, 8.81787109375],
                            [12.806542968750023, 8.886621093749994],
                            [12.875683593750011, 9.303515624999989],
                            [12.929492187500017, 9.42626953125],
                            [13.19873046875, 9.563769531249989],
                            [13.269921875000023, 10.036181640624989],
                            [13.41455078125, 10.171435546874989],
                            [13.535351562500011, 10.60507812499999],
                            [13.699902343750011, 10.873144531249991],
                            [13.89208984375, 11.140087890624997],
                            [13.9814453125, 11.211865234374997],
                            [14.056738281250006, 11.245019531249994],
                            [14.143261718750011, 11.24853515625],
                            [14.202343750000011, 11.268164062499991],
                            [14.559765625000011, 11.492285156249991],
                            [14.619726562500006, 12.150976562499991],
                            [14.518945312500023, 12.298242187499994],
                            [14.272851562500023, 12.356494140624989],
                            [14.184863281250017, 12.447216796874997],
                            [14.06396484375, 13.07851562499999],
                            [14.244824218750011, 13.07734375],
                            [14.461718750000017, 13.021777343749989],
                            [14.847070312500023, 12.502099609374994],
                            [15.08125, 11.845507812499989],
                            [15.029882812500006, 11.11367187499999],
                            [15.132226562500023, 10.648486328124989],
                            [15.276074218750011, 10.357373046874997],
                            [15.654882812500006, 10.0078125],
                            [14.243261718750006, 9.979736328125],
                            [13.977246093750011, 9.691552734374994],
                            [14.332324218750017, 9.20351562499999],
                            [15.1162109375, 8.557324218749997],
                            [15.5498046875, 7.787890624999989],
                            [15.480078125, 7.523779296874991]
                        ]
                    ]
                },
                properties: {
                    name: "Cameroon",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [27.4033203125, 5.109179687499989],
                            [27.7880859375, 4.644677734374994],
                            [28.19208984375001, 4.350244140624994],
                            [28.427539062500017, 4.324169921874997],
                            [28.72705078125, 4.504980468749991],
                            [29.224902343750017, 4.391894531249989],
                            [29.469628906250023, 4.61181640625],
                            [29.676855468750006, 4.5869140625],
                            [30.194921875, 3.98193359375],
                            [30.50830078125, 3.835693359375],
                            [30.586718750000017, 3.62421875],
                            [30.757226562500023, 3.62421875],
                            [30.83857421875001, 3.49072265625],
                            [30.90644531250001, 3.408935546875],
                            [30.754003906250006, 3.041796874999989],
                            [30.8466796875, 2.847021484374991],
                            [30.728613281250006, 2.455371093749989],
                            [31.176367187500006, 2.270068359374989],
                            [31.252734375000017, 2.044580078124994],
                            [29.94287109375, .819238281249994],
                            [29.934472656250023, .4990234375],
                            [29.717675781250023, .098339843749997],
                            [29.576953125000017, -1.387890625000011],
                            [29.196582031250017, -1.719921875000011],
                            [29.13154296875001, -2.195117187500003],
                            [28.876367187500023, -2.400292968750009],
                            [28.893945312500023, -2.635058593750003],
                            [29.01435546875001, -2.72021484375],
                            [29.224414062500017, -3.053515625],
                            [29.211816406250023, -3.833789062500003],
                            [29.403222656250023, -4.449316406250006],
                            [29.404199218750023, -4.496679687500006],
                            [29.32568359375, -4.835644531250011],
                            [29.32343750000001, -4.898828125],
                            [29.3427734375, -4.983105468750011],
                            [29.542382812500023, -5.499804687500003],
                            [29.594140625000023, -5.65078125],
                            [29.60703125, -5.72265625],
                            [29.59638671875001, -5.775976562500006],
                            [29.490820312500006, -5.965429687500006],
                            [29.480078125, -6.025],
                            [29.50625, -6.172070312500011],
                            [29.540820312500017, -6.313867187500009],
                            [29.590625, -6.394433593750009],
                            [29.70966796875001, -6.616894531250011],
                            [29.798144531250017, -6.69189453125],
                            [29.961816406250023, -6.803125],
                            [30.10625, -6.9150390625],
                            [30.212695312500017, -7.037890625],
                            [30.31318359375001, -7.203710937500006],
                            [30.40673828125, -7.460644531250011],
                            [30.75117187500001, -8.193652343750003],
                            [28.89814453125001, -8.485449218750006],
                            [28.869531250000023, -8.785839843750011],
                            [28.400683593750017, -9.224804687500011],
                            [28.60419921875001, -9.678808593750006],
                            [28.6455078125, -10.550195312500009],
                            [28.383398437500006, -11.566699218750003],
                            [28.482519531250006, -11.812109375],
                            [29.064355468750023, -12.348828125000011],
                            [29.48554687500001, -12.41845703125],
                            [29.508203125000023, -12.228222656250011],
                            [29.79511718750001, -12.155468750000011],
                            [29.775195312500017, -13.438085937500006],
                            [29.55419921875, -13.248925781250009],
                            [29.20185546875001, -13.398339843750009],
                            [29.014257812500006, -13.368847656250011],
                            [28.730078125, -12.925488281250011],
                            [28.550878906250006, -12.836132812500011],
                            [28.412890625000017, -12.51806640625],
                            [27.573828125, -12.22705078125],
                            [27.1591796875, -11.579199218750006],
                            [26.824023437500017, -11.965234375],
                            [26.025976562500006, -11.89013671875],
                            [25.349414062500017, -11.623046875],
                            [25.28876953125001, -11.21240234375],
                            [24.3779296875, -11.417089843750006],
                            [24.36572265625, -11.1298828125],
                            [23.96650390625001, -10.871777343750011],
                            [23.901171875000017, -10.983203125],
                            [23.833886718750023, -11.013671875],
                            [23.463964843750006, -10.969335937500006],
                            [23.076269531250006, -11.087890625],
                            [22.814746093750017, -11.080273437500011],
                            [22.56103515625, -11.055859375000011],
                            [22.486132812500017, -11.08671875],
                            [22.392968750000023, -11.159472656250003],
                            [22.31494140625, -11.198632812500009],
                            [22.27880859375, -11.194140625],
                            [22.226171875, -11.121972656250009],
                            [22.203515625000023, -10.829492187500009],
                            [22.307031250000023, -10.691308593750009],
                            [22.19775390625, -10.040625],
                            [21.81318359375001, -9.46875],
                            [21.905371093750006, -8.693359375],
                            [21.806054687500023, -7.32861328125],
                            [21.751074218750006, -7.30546875],
                            [21.190332031250023, -7.284960937500003],
                            [20.910937500000017, -7.281445312500011],
                            [20.607812500000023, -7.277734375],
                            [20.558398437500017, -7.244433593750003],
                            [20.53583984375001, -7.182812500000011],
                            [20.536914062500017, -7.121777343750011],
                            [20.598730468750006, -6.93515625],
                            [20.59003906250001, -6.919921875],
                            [20.482226562500017, -6.915820312500003],
                            [20.190039062500006, -6.9462890625],
                            [19.997460937500023, -6.976464843750009],
                            [19.87519531250001, -6.986328125],
                            [19.527636718750017, -7.144433593750009],
                            [19.483789062500023, -7.279492187500011],
                            [19.479882812500023, -7.47216796875],
                            [19.371679687500006, -7.655078125],
                            [19.369921875000017, -7.70654296875],
                            [19.3408203125, -7.966601562500003],
                            [19.142675781250006, -8.00146484375],
                            [18.944433593750006, -8.00146484375],
                            [18.56269531250001, -7.9359375],
                            [18.0087890625, -8.107617187500011],
                            [17.643359375000017, -8.090722656250009],
                            [17.57958984375, -8.099023437500009],
                            [16.984765625000023, -7.257421875],
                            [16.91943359375, -6.933984375],
                            [16.813085937500006, -6.772558593750006],
                            [16.742968750000017, -6.618457031250003],
                            [16.697265625, -6.164257812500011],
                            [16.537109375, -5.9658203125],
                            [16.431445312500017, -5.900195312500003],
                            [16.315234375000017, -5.865625],
                            [13.978515625, -5.857226562500003],
                            [13.346484375000017, -5.863378906250006],
                            [13.184375, -5.85625],
                            [12.452929687500017, -6.00048828125],
                            [12.213671875000017, -5.758691406250009],
                            [12.484570312500011, -5.71875],
                            [12.451464843750017, -5.071484375000011],
                            [12.502734375000017, -5.036914062500003],
                            [12.573535156250017, -4.99658203125],
                            [12.59619140625, -4.978417968750009],
                            [12.8296875, -4.736621093750003],
                            [12.947460937500011, -4.6953125],
                            [13.057324218750011, -4.651074218750011],
                            [13.07275390625, -4.634765625],
                            [13.08740234375, -4.601953125],
                            [13.136621093750023, -4.604296875],
                            [13.414941406250023, -4.83740234375],
                            [13.659570312500023, -4.721484375],
                            [13.717089843750017, -4.454492187500009],
                            [13.94091796875, -4.484667968750003],
                            [14.358300781250023, -4.299414062500006],
                            [14.449804687500006, -4.449511718750003],
                            [14.365429687500011, -4.585546875],
                            [14.410742187500006, -4.83125],
                            [14.707910156250023, -4.881738281250009],
                            [15.990039062500017, -3.766210937500006],
                            [16.217382812500006, -3.0302734375],
                            [16.21533203125, -2.177832031250006],
                            [16.54072265625001, -1.840136718750003],
                            [16.8798828125, -1.225878906250003],
                            [17.752832031250023, -.549023437500011],
                            [18.072167968750023, 2.01328125],
                            [18.49091796875001, 2.924414062499991],
                            [18.6103515625, 3.478417968749994],
                            [18.594140625000023, 4.346240234374989],
                            [19.06855468750001, 4.891406249999989],
                            [19.5009765625, 5.127490234374989],
                            [19.806542968750023, 5.089306640624997],
                            [20.226367187500017, 4.829638671874989],
                            [20.55810546875, 4.462695312499989],
                            [22.422167968750017, 4.134960937499997],
                            [22.864550781250017, 4.723876953125],
                            [23.41718750000001, 4.663134765624989],
                            [24.31982421875, 4.994140625],
                            [25.065234375000017, 4.967431640624994],
                            [25.52509765625001, 5.31210937499999],
                            [26.822070312500017, 5.062402343749994],
                            [27.071875, 5.199755859374989],
                            [27.4033203125, 5.109179687499989]
                        ]
                    ]
                },
                properties: {
                    name: "Dem. Rep. Congo",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [18.6103515625, 3.478417968749994],
                            [18.49091796875001, 2.924414062499991],
                            [18.072167968750023, 2.01328125],
                            [17.752832031250023, -.549023437500011],
                            [16.8798828125, -1.225878906250003],
                            [16.54072265625001, -1.840136718750003],
                            [16.21533203125, -2.177832031250006],
                            [16.217382812500006, -3.0302734375],
                            [15.990039062500017, -3.766210937500006],
                            [14.707910156250023, -4.881738281250009],
                            [14.410742187500006, -4.83125],
                            [14.365429687500011, -4.585546875],
                            [14.449804687500006, -4.449511718750003],
                            [14.358300781250023, -4.299414062500006],
                            [13.94091796875, -4.484667968750003],
                            [13.717089843750017, -4.454492187500009],
                            [13.659570312500023, -4.721484375],
                            [13.414941406250023, -4.83740234375],
                            [13.136621093750023, -4.604296875],
                            [13.08740234375, -4.601953125],
                            [13.07275390625, -4.634765625],
                            [13.048046875000011, -4.619238281250006],
                            [12.971386718750011, -4.5517578125],
                            [12.881054687500011, -4.445117187500003],
                            [12.84814453125, -4.428906250000011],
                            [12.50146484375, -4.5875],
                            [12.018359375000017, -5.004296875],
                            [11.777539062500011, -4.565820312500009],
                            [11.130175781250017, -3.916308593750003],
                            [11.234472656250006, -3.690820312500009],
                            [11.504296875000023, -3.5203125],
                            [11.685742187500011, -3.68203125],
                            [11.8798828125, -3.665917968750009],
                            [11.934179687500006, -3.318554687500011],
                            [11.715429687500006, -3.176953125000011],
                            [11.760156250000023, -2.983105468750011],
                            [11.537792968750011, -2.83671875],
                            [11.60546875, -2.342578125],
                            [12.064453125, -2.41259765625],
                            [12.446386718750006, -2.329980468750009],
                            [12.43212890625, -1.928906250000011],
                            [12.590429687500006, -1.826855468750011],
                            [12.793554687500006, -1.931835937500011],
                            [12.991992187500017, -2.313378906250009],
                            [13.464941406250006, -2.395410156250009],
                            [13.733789062500023, -2.138476562500003],
                            [13.886914062500011, -2.465429687500006],
                            [13.993847656250011, -2.490625],
                            [14.199804687500006, -2.354199218750011],
                            [14.162890625000017, -2.217578125],
                            [14.383984375000011, -1.890039062500009],
                            [14.47412109375, -.573437500000011],
                            [13.860058593750011, -.203320312500011],
                            [13.949609375000023, .353808593749989],
                            [14.32421875, .62421875],
                            [14.429882812500011, .901464843749991],
                            [14.180859375000011, 1.370214843749991],
                            [13.851367187500017, 1.41875],
                            [13.21630859375, 1.2484375],
                            [13.172167968750017, 1.78857421875],
                            [13.293554687500006, 2.161572265624997],
                            [14.578906250000017, 2.199121093749994],
                            [14.902441406250006, 2.012304687499991],
                            [15.741601562500023, 1.914990234374997],
                            [16.059375, 1.676220703124997],
                            [16.183398437500017, 2.270068359374989],
                            [16.468554687500017, 2.831738281249997],
                            [16.610742187500023, 3.50537109375],
                            [17.491601562500023, 3.687304687499989],
                            [18.160937500000017, 3.499804687499989],
                            [18.474414062500017, 3.622998046874997],
                            [18.6103515625, 3.478417968749994]
                        ]
                    ]
                },
                properties: {
                    name: "Congo",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-71.31972656249997, 11.861914062500048],
                            [-71.95810546875, 11.66640625],
                            [-72.24848632812501, 11.196435546875009],
                            [-72.690087890625, 10.835839843749994],
                            [-72.86933593750001, 10.49125976562496],
                            [-73.00654296874998, 9.789160156250006],
                            [-73.36621093749997, 9.194140625000017],
                            [-73.05839843749999, 9.259570312500031],
                            [-72.79638671874997, 9.10898437499999],
                            [-72.66542968749994, 8.62758789062498],
                            [-72.39033203124995, 8.287060546874969],
                            [-72.47197265624996, 7.524267578124991],
                            [-72.20771484374995, 7.37026367187498],
                            [-72.00664062499993, 7.032617187500023],
                            [-71.12861328124993, 6.98671875],
                            [-70.73715820312503, 7.090039062499997],
                            [-70.12919921874999, 6.95361328125],
                            [-69.42714843749997, 6.123974609374997],
                            [-68.47177734375, 6.156542968749974],
                            [-67.85917968749999, 6.289892578124963],
                            [-67.48198242187499, 6.18027343750002],
                            [-67.47387695312503, 5.929980468750003],
                            [-67.82490234374995, 5.270458984375026],
                            [-67.85527343750002, 4.506884765624989],
                            [-67.66162109375, 3.864257812499986],
                            [-67.3111328125, 3.41586914062502],
                            [-67.85908203124998, 2.793603515624994],
                            [-67.61870117187496, 2.793603515624994],
                            [-67.21083984375, 2.390136718750043],
                            [-66.87602539062499, 1.223046875000037],
                            [-67.082275390625, 1.185400390625006],
                            [-67.11923828124998, 1.703613281249986],
                            [-67.40043945312499, 2.116699218750028],
                            [-67.93623046874998, 1.748486328124969],
                            [-68.19379882812495, 1.987011718749983],
                            [-68.25595703125, 1.845507812500017],
                            [-68.17656249999999, 1.719824218749991],
                            [-69.84858398437493, 1.708740234375043],
                            [-69.85214843750003, 1.05952148437504],
                            [-69.31181640624999, 1.050488281249969],
                            [-69.15332031249994, .65878906250002],
                            [-69.47211914062498, .72993164062504],
                            [-70.05390624999993, .578613281250028],
                            [-70.07050781249993, -.13886718750004],
                            [-69.63398437500001, -.50927734375],
                            [-69.40024414062498, -1.194921874999977],
                            [-69.66904296875003, -2.667675781249997],
                            [-69.94819335937498, -4.200585937500009],
                            [-69.96591796875003, -4.2359375],
                            [-70.16752929687499, -4.050195312500009],
                            [-70.24028320312496, -3.882714843749994],
                            [-70.2984375, -3.844238281249972],
                            [-70.33950195312502, -3.814355468750009],
                            [-70.73510742187497, -3.781542968749989],
                            [-70.09584960937494, -2.658203125000014],
                            [-70.16474609374995, -2.639843750000011],
                            [-70.24443359375002, -2.606542968749977],
                            [-70.29462890624995, -2.552539062499989],
                            [-70.57587890624995, -2.418261718749989],
                            [-70.64799804687499, -2.405761718750014],
                            [-70.70537109374996, -2.341992187499983],
                            [-70.91455078125003, -2.218554687499974],
                            [-70.96855468750002, -2.206835937499989],
                            [-71.02729492187498, -2.225781250000026],
                            [-71.11337890625003, -2.245410156250031],
                            [-71.19638671874998, -2.313085937499963],
                            [-71.39697265625, -2.334082031249977],
                            [-71.55947265624997, -2.224218749999977],
                            [-71.75253906249995, -2.15273437499998],
                            [-71.80273437499997, -2.166308593749989],
                            [-71.86728515624998, -2.227734374999983],
                            [-71.932470703125, -2.288671874999963],
                            [-71.98427734375, -2.326562499999952],
                            [-72.21845703125001, -2.400488281250006],
                            [-72.94111328124998, -2.394042968750028],
                            [-72.9896484375, -2.33974609374998],
                            [-73.15449218749993, -2.278222656249966],
                            [-73.19697265624995, -1.830273437500011],
                            [-73.49628906249993, -1.69306640625004],
                            [-73.66430664062497, -1.248828124999946],
                            [-73.86318359374997, -1.19667968749998],
                            [-73.92695312500001, -1.125195312499983],
                            [-73.98681640625003, -1.098144531249986],
                            [-74.05439453124995, -1.028613281250031],
                            [-74.18076171875, -.997753906249955],
                            [-74.24638671874999, -.970605468750023],
                            [-74.28388671874998, -.927832031250006],
                            [-74.33442382812498, -.85087890624996],
                            [-74.41787109375, -.580664062499977],
                            [-74.46518554687498, -.517675781250034],
                            [-74.51386718749993, -.470117187500023],
                            [-74.555078125, -.429882812499997],
                            [-74.61635742187494, -.370019531249966],
                            [-74.691650390625, -.335253906249989],
                            [-74.75537109375003, -.298632812499989],
                            [-74.78046874999998, -.24453125],
                            [-74.80175781249997, -.200097656249994],
                            [-75.13837890624998, -.050488281249969],
                            [-75.28447265624999, -.10654296875002],
                            [-75.77666015624999, .08925781249998],
                            [-76.27060546874998, .439404296874997],
                            [-76.49462890624997, .23544921875002],
                            [-77.396337890625, .393896484374963],
                            [-77.46767578124997, .636523437500017],
                            [-77.702880859375, .837841796874997],
                            [-78.1806640625, .968554687499974],
                            [-78.85966796874996, 1.455371093750031],
                            [-79.02543945312499, 1.623681640625037],
                            [-78.79296874999994, 1.848730468749963],
                            [-78.576904296875, 1.773779296874977],
                            [-78.59169921875, 2.356640624999969],
                            [-78.41689453125, 2.483496093749963],
                            [-78.06665039062494, 2.509130859375034],
                            [-77.81357421875, 2.716357421874974],
                            [-77.076806640625, 3.913281250000026],
                            [-77.26352539062503, 3.893212890625023],
                            [-77.27802734374995, 4.058496093750023],
                            [-77.35820312499996, 3.944726562500037],
                            [-77.40874023437496, 4.24775390625004],
                            [-77.52070312499993, 4.212792968750023],
                            [-77.35351562499997, 4.398291015624977],
                            [-77.28632812499995, 4.72172851562496],
                            [-77.373291015625, 5.323974609375],
                            [-77.53442382812497, 5.537109374999986],
                            [-77.24926757812497, 5.780175781250037],
                            [-77.46943359374995, 6.176757812500014],
                            [-77.368798828125, 6.575585937499994],
                            [-77.90117187499999, 7.229345703125048],
                            [-77.76191406249995, 7.698828125000034],
                            [-77.53828124999995, 7.56625976562502],
                            [-77.19599609374995, 7.972460937500003],
                            [-77.47851562499994, 8.498437500000037],
                            [-77.37421874999993, 8.65830078125002],
                            [-76.85185546875002, 8.09047851562498],
                            [-76.924658203125, 7.973193359374974],
                            [-76.78657226562493, 7.931591796875026],
                            [-76.7720703125, 8.310546875000043],
                            [-76.92045898437496, 8.573730468750014],
                            [-76.27685546875, 8.989111328124991],
                            [-76.02724609374997, 9.365771484374989],
                            [-75.63935546874998, 9.450439453125014],
                            [-75.680029296875, 9.729785156249989],
                            [-75.53857421874997, 10.205175781250034],
                            [-75.708349609375, 10.143408203124963],
                            [-75.44599609374995, 10.610888671874989],
                            [-74.84458007812498, 11.109716796875006],
                            [-74.330224609375, 10.996679687499991],
                            [-74.51625976562497, 10.8625],
                            [-74.40087890625, 10.76523437499999],
                            [-74.14291992187503, 11.320849609375031],
                            [-73.31337890624997, 11.295751953124991],
                            [-72.275, 11.88925781250002],
                            [-72.13574218749994, 12.188574218749977],
                            [-71.71455078124993, 12.41997070312496],
                            [-71.26210937499997, 12.335302734375034],
                            [-71.13730468750003, 12.04633789062504],
                            [-71.31972656249997, 11.861914062500048]
                        ]
                    ]
                },
                properties: {
                    name: "Colombia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [43.788671875, -12.307031250000023],
                                [43.85898437500006, -12.368261718749977],
                                [43.66367187500006, -12.342871093749949],
                                [43.63134765624997, -12.247070312499972],
                                [43.788671875, -12.307031250000023]
                            ]
                        ],
                        [
                            [
                                [44.476367187500074, -12.08154296875],
                                [44.504980468750006, -12.356542968749991],
                                [44.220117187499994, -12.171386718750014],
                                [44.476367187500074, -12.08154296875]
                            ]
                        ],
                        [
                            [
                                [43.46582031249997, -11.901269531249966],
                                [43.226660156250006, -11.75185546874998],
                                [43.2990234375001, -11.374511718750028],
                                [43.39296875000005, -11.408593749999952],
                                [43.46582031249997, -11.901269531249966]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Comoros",
                    childNum: 3
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-24.308251953124966, 14.856298828124991],
                                [-24.44052734374992, 14.834814453124963],
                                [-24.496875, 14.980273437500017],
                                [-24.329492187499937, 15.019482421875011],
                                [-24.308251953124966, 14.856298828124991]
                            ]
                        ],
                        [
                            [
                                [-23.18212890624997, 15.136767578125017],
                                [-23.210253906250017, 15.32353515625006],
                                [-23.119335937499955, 15.26840820312502],
                                [-23.18212890624997, 15.136767578125017]
                            ]
                        ],
                        [
                            [
                                [-23.444238281249994, 15.00795898437498],
                                [-23.5046875, 14.916113281250006],
                                [-23.70537109374999, 14.96132812499998],
                                [-23.74809570312499, 15.328515625],
                                [-23.444238281249994, 15.00795898437498]
                            ]
                        ],
                        [
                            [
                                [-22.917724609375, 16.237255859374955],
                                [-22.69262695312497, 16.169042968750006],
                                [-22.710107421874994, 16.043359374999966],
                                [-22.95927734374996, 16.045117187499983],
                                [-22.917724609375, 16.237255859374955]
                            ]
                        ],
                        [
                            [
                                [-24.08769531249999, 16.62250976562501],
                                [-24.03271484374997, 16.57202148437503],
                                [-24.243066406250023, 16.599414062500017],
                                [-24.32236328124992, 16.49311523437504],
                                [-24.398095703124966, 16.61840820312497],
                                [-24.08769531249999, 16.62250976562501]
                            ]
                        ],
                        [
                            [
                                [-22.888330078124966, 16.659082031249994],
                                [-22.980615234374937, 16.700878906249983],
                                [-22.93291015624999, 16.84101562500004],
                                [-22.888330078124966, 16.659082031249994]
                            ]
                        ],
                        [
                            [
                                [-24.88706054687495, 16.81811523437497],
                                [-25.09306640624999, 16.83251953125],
                                [-24.936474609374983, 16.92211914062503],
                                [-24.88706054687495, 16.81811523437497]
                            ]
                        ],
                        [
                            [
                                [-25.169824218749994, 16.94648437500001],
                                [-25.308300781249955, 16.93583984374999],
                                [-25.337109374999955, 17.091015624999983],
                                [-25.03466796875, 17.176464843749983],
                                [-24.979687499999983, 17.09472656250003],
                                [-25.169824218749994, 16.94648437500001]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Cape Verde",
                    childNum: 8
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-83.6419921875, 10.917236328125],
                            [-83.346826171875, 10.315380859374997],
                            [-82.77841796874999, 9.66953125],
                            [-82.56357421874999, 9.57666015625],
                            [-82.56923828125, 9.55820312499999],
                            [-82.58652343749999, 9.538818359375],
                            [-82.64409179687499, 9.505859375],
                            [-82.801025390625, 9.591796875],
                            [-82.843994140625, 9.57080078125],
                            [-82.86015624999999, 9.511474609375],
                            [-82.88896484374999, 9.481005859374989],
                            [-82.925048828125, 9.469042968749989],
                            [-82.93984375, 9.449169921874997],
                            [-82.94033203125, 9.060107421874989],
                            [-82.88134765625, 9.055859375],
                            [-82.78305664062499, 8.990283203124989],
                            [-82.741162109375, 8.951708984374989],
                            [-82.72783203124999, 8.916064453124989],
                            [-82.91704101562499, 8.740332031249991],
                            [-82.855712890625, 8.635302734374989],
                            [-82.84477539062499, 8.489355468749991],
                            [-82.86162109374999, 8.45351562499999],
                            [-83.02734375, 8.337744140624991],
                            [-82.879345703125, 8.070654296874991],
                            [-83.12333984374999, 8.353076171874989],
                            [-83.16240234374999, 8.588183593749989],
                            [-83.4697265625, 8.706835937499989],
                            [-83.29150390625, 8.406005859375],
                            [-83.54375, 8.445849609374989],
                            [-83.73408203125, 8.614453125],
                            [-83.613720703125, 8.804052734374991],
                            [-83.73691406249999, 9.150292968749994],
                            [-84.58159179687499, 9.568359375],
                            [-84.71494140624999, 9.8994140625],
                            [-85.23564453124999, 10.242089843749994],
                            [-85.2365234375, 10.107373046874997],
                            [-84.88642578125, 9.820947265624994],
                            [-85.07705078125, 9.60195312499999],
                            [-85.31455078124999, 9.8109375],
                            [-85.62485351562499, 9.902441406249991],
                            [-85.84965820312499, 10.292041015624989],
                            [-85.667236328125, 10.745019531249994],
                            [-85.90800781249999, 10.897558593749991],
                            [-85.7443359375, 11.06210937499999],
                            [-85.5841796875, 11.189453125],
                            [-84.9091796875, 10.9453125],
                            [-84.6341796875, 11.045605468749997],
                            [-83.91928710937499, 10.7353515625],
                            [-83.71293945312499, 10.785888671875],
                            [-83.6419921875, 10.917236328125]
                        ]
                    ]
                },
                properties: {
                    name: "Costa Rica",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-82.56176757812503, 21.571679687500023],
                                [-82.959619140625, 21.441308593750023],
                                [-83.18378906250001, 21.59345703125004],
                                [-82.97358398437498, 21.592285156250057],
                                [-83.08251953124997, 21.791406250000023],
                                [-82.99121093750003, 21.942724609375034],
                                [-82.71455078124998, 21.890283203125023],
                                [-82.56176757812503, 21.571679687500023]
                            ]
                        ],
                        [
                            [
                                [-77.66899414062493, 21.951953125000045],
                                [-77.91855468749998, 22.088085937499983],
                                [-77.63369140624994, 22.054003906250074],
                                [-77.66899414062493, 21.951953125000045]
                            ]
                        ],
                        [
                            [
                                [-77.87939453125, 22.127539062500034],
                                [-78.04165039062502, 22.201269531250034],
                                [-77.99921874999998, 22.298730468749994],
                                [-77.87939453125, 22.127539062500034]
                            ]
                        ],
                        [
                            [
                                [-81.83745117187499, 23.163037109374955],
                                [-81.26235351562497, 23.156835937500034],
                                [-81.14462890624998, 23.054931640625057],
                                [-80.65014648437494, 23.10307617187499],
                                [-80.36489257812502, 22.943408203125074],
                                [-79.82026367187498, 22.887011718750045],
                                [-79.27568359374999, 22.407617187499994],
                                [-78.68647460937493, 22.366845703125023],
                                [-77.63681640624995, 21.79736328125],
                                [-77.49711914062502, 21.78833007812503],
                                [-77.58315429687497, 21.889257812499977],
                                [-77.49726562499995, 21.871630859375045],
                                [-77.14414062499995, 21.643603515625017],
                                [-77.36616210937498, 21.612646484375034],
                                [-77.25288085937498, 21.483496093750006],
                                [-77.0986328125, 21.589013671875023],
                                [-76.86743164062497, 21.330419921875006],
                                [-75.72294921874996, 21.111035156249983],
                                [-75.59580078125, 20.99467773437499],
                                [-75.72456054687493, 20.71455078125004],
                                [-74.882568359375, 20.65063476562497],
                                [-74.51313476562495, 20.384570312500045],
                                [-74.16748046874997, 20.292187499999955],
                                [-74.15371093750002, 20.168554687500006],
                                [-75.11640624999995, 19.901416015625017],
                                [-75.151611328125, 20.008349609375045],
                                [-75.29047851562495, 19.893115234375017],
                                [-76.15844726562497, 19.98974609374997],
                                [-77.715087890625, 19.85546874999997],
                                [-77.10380859374999, 20.407519531250017],
                                [-77.22958984374995, 20.64375],
                                [-78.11635742187497, 20.761865234374994],
                                [-78.49077148437493, 21.05371093750003],
                                [-78.72768554687497, 21.592724609374955],
                                [-79.35742187500003, 21.58515625000001],
                                [-80.23134765625, 21.872167968750063],
                                [-80.48544921874998, 22.1234375],
                                [-81.03564453124997, 22.073583984375063],
                                [-81.18549804687495, 22.26796875000005],
                                [-81.284375, 22.109423828125074],
                                [-81.84941406249993, 22.21367187499999],
                                [-82.077734375, 22.3876953125],
                                [-81.71035156250002, 22.496679687500006],
                                [-81.83881835937498, 22.672460937500034],
                                [-82.73803710937497, 22.689257812500074],
                                [-83.37963867187503, 22.222998046875034],
                                [-83.90073242187495, 22.17011718750001],
                                [-84.03095703124993, 21.94311523437503],
                                [-84.502587890625, 21.776171875000045],
                                [-84.50136718750002, 21.930273437499977],
                                [-84.88720703125003, 21.856982421875074],
                                [-84.32636718749998, 22.074316406250034],
                                [-84.36127929687498, 22.37890625],
                                [-84.04492187500003, 22.666015625000057],
                                [-83.25781249999997, 22.967578125000017],
                                [-81.83745117187499, 23.163037109374955]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Cuba",
                    childNum: 4
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-68.75107421874999, 12.059765625],
                            [-68.9951171875, 12.141845703125],
                            [-69.15888671875, 12.380273437499994],
                            [-68.75107421874999, 12.059765625]
                        ]
                    ]
                },
                properties: {
                    name: "CuraÃ§ao",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-81.36953124999997, 19.34887695312497],
                                [-81.10712890624995, 19.305175781250057],
                                [-81.40478515624994, 19.278417968750006],
                                [-81.36953124999997, 19.34887695312497]
                            ]
                        ],
                        [
                            [
                                [-79.823388671875, 19.711914062500057],
                                [-79.90620117187501, 19.702539062499994],
                                [-79.74228515625, 19.757128906250017],
                                [-79.823388671875, 19.711914062500057]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Cayman Is.",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [34.004492187500006, 35.065234375],
                            [33.47578125000001, 35.000341796875],
                            [33.3837890625, 35.1626953125],
                            [32.91953125, 35.087841796875],
                            [32.71269531250002, 35.171044921874994],
                            [32.8798828125, 35.180566406249994],
                            [32.94160156250001, 35.390429687499996],
                            [33.60761718750001, 35.354150390624994],
                            [34.55605468750002, 35.662060546875],
                            [33.941992187500006, 35.292041015624996],
                            [34.004492187500006, 35.065234375]
                        ]
                    ]
                },
                properties: {
                    name: "N. Cyprus",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [32.71269531250002, 35.171044921874994],
                            [32.91953125, 35.087841796875],
                            [33.3837890625, 35.1626953125],
                            [33.47578125000001, 35.000341796875],
                            [34.004492187500006, 35.065234375],
                            [34.05019531250002, 34.98837890625],
                            [33.69941406250001, 34.969873046874994],
                            [33.007910156250006, 34.569580078125],
                            [32.44902343750002, 34.729443359375],
                            [32.31718750000002, 34.9533203125],
                            [32.30097656250001, 35.082958984375],
                            [32.71269531250002, 35.171044921874994]
                        ]
                    ]
                },
                properties: {
                    name: "Cyprus",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [14.809375, 50.858984375],
                            [14.895800781250017, 50.861376953124996],
                            [14.98291015625, 50.886572265625],
                            [14.99375, 51.01435546875],
                            [16.007226562500023, 50.611621093749996],
                            [16.2822265625, 50.655615234375],
                            [16.419726562500017, 50.573632812499994],
                            [16.210351562500023, 50.423730468749994],
                            [16.63916015625, 50.1021484375],
                            [16.989648437500023, 50.2369140625],
                            [16.88007812500001, 50.427050781249996],
                            [17.41523437500001, 50.254785156249994],
                            [17.702246093750006, 50.307177734374996],
                            [17.627050781250006, 50.11640625],
                            [17.874804687500017, 49.972265625],
                            [18.0283203125, 50.03525390625],
                            [18.562402343750023, 49.879345703125],
                            [18.83222656250001, 49.510791015624996],
                            [18.160937500000017, 49.257373046874996],
                            [18.0859375, 49.06513671875],
                            [17.75849609375001, 48.888134765625],
                            [17.135644531250023, 48.841064453125],
                            [16.953125, 48.598828125],
                            [16.543554687500006, 48.796240234375],
                            [16.057226562500006, 48.754785156249994],
                            [15.066796875000023, 48.997851562499996],
                            [14.691308593750023, 48.59921875],
                            [14.049121093750017, 48.602490234375],
                            [13.814746093750017, 48.766943359375],
                            [13.769921875000023, 48.815966796874996],
                            [13.684960937500023, 48.876708984375],
                            [13.547656250000017, 48.95966796875],
                            [13.440722656250017, 48.95556640625],
                            [13.401171875000017, 48.977587890624996],
                            [12.916699218750011, 49.33046875],
                            [12.68115234375, 49.414501953125],
                            [12.390527343750023, 49.739648437499994],
                            [12.5125, 49.87744140625],
                            [12.09921875, 50.310986328125],
                            [12.134863281250006, 50.3109375],
                            [12.1748046875, 50.288378906249996],
                            [12.231152343750011, 50.244873046875],
                            [12.27734375, 50.181445312499996],
                            [12.3056640625, 50.205712890624994],
                            [12.549023437500011, 50.393408203125],
                            [13.016406250000017, 50.490380859374994],
                            [13.18115234375, 50.510498046875],
                            [14.369042968750023, 50.898730468749996],
                            [14.319726562500023, 51.03779296875],
                            [14.545703125000017, 50.993945312499996],
                            [14.559667968750006, 50.954931640625],
                            [14.59521484375, 50.918603515624994],
                            [14.623828125000017, 50.91474609375],
                            [14.613574218750017, 50.85556640625],
                            [14.658203125, 50.8326171875],
                            [14.723339843750011, 50.814697265625],
                            [14.766503906250023, 50.818310546875],
                            [14.797460937500006, 50.842333984374996],
                            [14.809375, 50.858984375]
                        ]
                    ]
                },
                properties: {
                    name: "Czech Rep.",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [14.1982421875, 53.919042968750034],
                                [13.92578125, 53.879052734374966],
                                [13.827734375, 54.12724609374999],
                                [14.1982421875, 53.919042968750034]
                            ]
                        ],
                        [
                            [
                                [13.709179687500011, 54.382714843749994],
                                [13.707324218750074, 54.281152343749994],
                                [13.190039062500034, 54.32563476562501],
                                [13.336816406249994, 54.697119140625006],
                                [13.65761718750008, 54.55957031249997],
                                [13.709179687500011, 54.382714843749994]
                            ]
                        ],
                        [
                            [
                                [9.739746093750028, 54.82553710937498],
                                [10.022167968750011, 54.673925781250006],
                                [9.86865234375, 54.47246093749999],
                                [10.731542968750006, 54.31625976562506],
                                [11.013378906250068, 54.37915039062497],
                                [11.008593750000074, 54.18115234374997],
                                [10.810742187500068, 54.075146484374955],
                                [10.917773437500045, 53.99531250000004],
                                [11.39960937500004, 53.94462890625002],
                                [12.111328125, 54.168310546875006],
                                [12.57539062500004, 54.467382812500006],
                                [13.028613281250017, 54.411035156249994],
                                [13.448046875000017, 54.14086914062503],
                                [13.724218750000063, 54.153222656249966],
                                [13.865527343750074, 53.85336914062498],
                                [14.258886718750006, 53.729638671874994],
                                [14.298730468750051, 53.55644531249999],
                                [14.41455078125, 53.28349609374996],
                                [14.412304687500011, 53.216748046874955],
                                [14.410937500000074, 53.19902343749999],
                                [14.368554687500051, 53.105566406250034],
                                [14.293164062500068, 53.026757812499966],
                                [14.138867187500068, 52.93286132812503],
                                [14.128613281250011, 52.87822265625002],
                                [14.253710937500017, 52.78251953124996],
                                [14.514062500000023, 52.645605468750034],
                                [14.619433593750017, 52.52851562499998],
                                [14.569726562499994, 52.431103515624955],
                                [14.554589843750023, 52.35966796874996],
                                [14.573925781250068, 52.31416015625001],
                                [14.615625, 52.277636718750045],
                                [14.679882812500068, 52.25],
                                [14.752539062500034, 52.08183593750002],
                                [14.601660156250034, 51.832373046875006],
                                [14.738671875000051, 51.62714843750004],
                                [14.7109375, 51.54492187499997],
                                [14.724707031250063, 51.523876953124955],
                                [14.90595703125004, 51.463330078124955],
                                [14.935546875000028, 51.435351562500045],
                                [14.9638671875, 51.095117187499994],
                                [14.917480468750057, 51.00874023437498],
                                [14.814257812499989, 50.871630859375045],
                                [14.809375, 50.858984375000034],
                                [14.797460937500034, 50.84233398437502],
                                [14.766503906250051, 50.81831054687501],
                                [14.72333984375004, 50.81469726562497],
                                [14.658203125, 50.832617187500006],
                                [14.613574218750045, 50.85556640625006],
                                [14.623828125000017, 50.91474609375004],
                                [14.595214843750057, 50.91860351562502],
                                [14.559667968750006, 50.954931640625034],
                                [14.545703124999989, 50.99394531249999],
                                [14.319726562500051, 51.037792968749955],
                                [14.36904296875008, 50.89873046874996],
                                [13.18115234375, 50.510498046875],
                                [13.016406250000017, 50.490380859374994],
                                [12.549023437500011, 50.393408203125034],
                                [12.3056640625, 50.205712890624994],
                                [12.27734375, 50.18144531250002],
                                [12.231152343749983, 50.24487304687497],
                                [12.174804687500057, 50.28837890624996],
                                [12.134863281250006, 50.31093750000002],
                                [12.099218750000034, 50.31098632812504],
                                [12.089843749999972, 50.30175781250003],
                                [12.089746093750051, 50.2685546875],
                                [12.294598214285761, 50.13608119419641],
                                [12.5125, 49.87744140625],
                                [12.390527343750051, 49.739648437499994],
                                [12.68115234375, 49.41450195312501],
                                [12.91669921875004, 49.33046875000002],
                                [13.401171875000074, 48.97758789062499],
                                [13.440722656250045, 48.95556640625003],
                                [13.547656250000074, 48.95966796874998],
                                [13.684960937500051, 48.87670898437506],
                                [13.769921875000051, 48.81596679687502],
                                [13.814746093750017, 48.76694335937498],
                                [13.802929687500011, 48.74750976562501],
                                [13.798828124999972, 48.62167968750006],
                                [13.785351562499983, 48.58745117187502],
                                [13.486621093750074, 48.58183593750002],
                                [13.471679687500028, 48.57182617187502],
                                [13.459863281250023, 48.564550781250034],
                                [13.409375, 48.39414062500006],
                                [13.322851562500006, 48.33125],
                                [13.215234375000023, 48.301904296874994],
                                [12.760351562500063, 48.10698242187499],
                                [12.95351562500008, 47.890625],
                                [12.897656250000068, 47.721875],
                                [13.054101562500051, 47.655126953125034],
                                [13.047949218750034, 47.57915039062502],
                                [13.031542968750074, 47.50800781250001],
                                [13.01435546875004, 47.478076171875045],
                                [12.968066406250017, 47.475683593750006],
                                [12.878906250000057, 47.506445312500034],
                                [12.809375, 47.542187499999955],
                                [12.782812500000034, 47.56416015624998],
                                [12.781152343750051, 47.590429687500006],
                                [12.796191406249989, 47.60703125],
                                [12.771386718750023, 47.63940429687503],
                                [12.685839843750074, 47.66933593750002],
                                [12.209277343750074, 47.71826171875003],
                                [12.196875, 47.709082031250034],
                                [12.203808593750011, 47.64672851562503],
                                [12.185644531250063, 47.61953125],
                                [11.041992187500028, 47.39311523437496],
                                [10.98085937499999, 47.39814453125001],
                                [10.893945312500051, 47.470458984375],
                                [10.870605468750028, 47.500781250000045],
                                [10.873046874999972, 47.52021484375001],
                                [10.741601562500023, 47.52412109375001],
                                [10.65869140625, 47.547216796875006],
                                [10.482812500000051, 47.54179687499996],
                                [10.439453125000028, 47.55156249999999],
                                [10.403906250000063, 47.41699218750003],
                                [10.369140625, 47.366064453125034],
                                [10.18300781250008, 47.27880859375003],
                                [10.200292968750063, 47.36342773437505],
                                [10.066308593750023, 47.39335937500002],
                                [10.064575892857171, 47.42369419642856],
                                [10.059863281250045, 47.44907226562498],
                                [10.034082031250023, 47.47358398437501],
                                [9.971582031249994, 47.50532226562498],
                                [9.839160156250017, 47.55229492187496],
                                [9.748925781250023, 47.575537109375006],
                                [9.524023437500034, 47.52421875000002],
                                [8.572656250000023, 47.775634765625],
                                [8.435742187500011, 47.73134765625002],
                                [8.403417968750006, 47.687792968750045],
                                [8.413281250000068, 47.66269531249998],
                                [8.451757812500006, 47.65180664062498],
                                [8.552343750000063, 47.65913085937498],
                                [8.56708984375004, 47.65190429687502],
                                [8.57050781250004, 47.63779296874998],
                                [8.55947265625008, 47.62402343750003],
                                [8.477636718750034, 47.61269531250002],
                                [8.454003906249994, 47.59619140625003],
                                [7.615625, 47.59272460937504],
                                [7.616601562500023, 48.15678710937502],
                                [8.134863281250006, 48.97358398437498],
                                [7.450585937500051, 49.152197265625034],
                                [6.735449218750006, 49.16059570312498],
                                [6.344335937500006, 49.45273437499998],
                                [6.4873046875, 49.798486328124994],
                                [6.204882812500017, 49.915136718750034],
                                [6.13818359375, 49.97431640625001],
                                [6.10976562500008, 50.034375],
                                [6.116503906250045, 50.120996093749966],
                                [6.340917968750006, 50.451757812500034],
                                [5.993945312500017, 50.75043945312504],
                                [6.048437500000034, 50.90488281250006],
                                [5.857519531250034, 51.030126953125006],
                                [6.129980468750034, 51.14741210937501],
                                [6.198828125000034, 51.45],
                                [5.948730468750057, 51.80268554687501],
                                [6.800390625, 51.96738281249998],
                                [6.724511718749994, 52.080224609374966],
                                [7.035156250000057, 52.38022460937498],
                                [6.748828125000074, 52.464013671874994],
                                [6.710742187500045, 52.61787109374998],
                                [7.033007812500045, 52.65136718749997],
                                [7.197265625000028, 53.28227539062499],
                                [7.074316406250034, 53.477636718750006],
                                [7.285253906250034, 53.68134765625001],
                                [8.00927734375, 53.69072265624999],
                                [8.108496093750063, 53.46767578125002],
                                [8.245214843750006, 53.44531249999997],
                                [8.333886718750051, 53.606201171875],
                                [8.495214843750063, 53.39423828124998],
                                [8.618945312500045, 53.875],
                                [9.20556640625, 53.85595703124997],
                                [9.783984375000074, 53.554638671874955],
                                [9.31201171875, 53.859130859375],
                                [8.92041015625, 53.96533203125006],
                                [8.906640625000023, 54.26079101562502],
                                [8.625781250000017, 54.35395507812501],
                                [8.951855468750011, 54.46757812499996],
                                [8.670312500000023, 54.903417968750034],
                                [9.739746093750028, 54.82553710937498]
                            ]
                        ],
                        [
                            [
                                [8.307714843750034, 54.786962890625034],
                                [8.451464843750017, 55.05537109374998],
                                [8.3798828125, 54.89985351562501],
                                [8.629589843750068, 54.891748046874966],
                                [8.307714843750034, 54.786962890625034]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Germany",
                    childNum: 4
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [43.24599609375002, 11.499804687499989],
                            [42.92275390625002, 10.999316406249989],
                            [42.557714843750006, 11.080761718749997],
                            [41.79824218750002, 10.98046875],
                            [41.79267578125001, 11.68603515625],
                            [42.378515625, 12.46640625],
                            [42.40859375000002, 12.494384765625],
                            [42.45, 12.521337890624991],
                            [42.47939453125002, 12.513623046874997],
                            [42.703710937500006, 12.380322265624997],
                            [42.76748046875002, 12.4228515625],
                            [42.825292968750006, 12.5693359375],
                            [42.86591796875001, 12.622802734375],
                            [42.88330078125, 12.621289062499997],
                            [43.00566406250002, 12.662304687499997],
                            [43.11669921875, 12.70859375],
                            [43.353515625, 12.367041015624991],
                            [43.38027343750002, 12.091259765624997],
                            [42.64003906250002, 11.560107421874989],
                            [42.52177734375002, 11.572167968749994],
                            [42.58378906250002, 11.496777343749997],
                            [43.04277343750002, 11.588476562499991],
                            [43.24599609375002, 11.499804687499989]
                        ]
                    ]
                },
                properties: {
                    name: "Djibouti",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-61.281689453125, 15.2490234375],
                            [-61.37539062499999, 15.227294921875],
                            [-61.45810546874999, 15.633105468750003],
                            [-61.277246093749994, 15.526708984374991],
                            [-61.281689453125, 15.2490234375]
                        ]
                    ]
                },
                properties: {
                    name: "Dominica",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [11.361425781250006, 54.891650390625045],
                                [11.739550781250017, 54.80742187500002],
                                [11.765917968750074, 54.67944335937506],
                                [11.457421875000023, 54.628857421874955],
                                [11.035546875000051, 54.77309570312505],
                                [11.058593750000028, 54.940576171874966],
                                [11.361425781250006, 54.891650390625045]
                            ]
                        ],
                        [
                            [
                                [12.549218750000051, 54.96577148437504],
                                [12.11884765625004, 54.91440429687506],
                                [12.274023437500034, 55.064111328124994],
                                [12.549218750000051, 54.96577148437504]
                            ]
                        ],
                        [
                            [
                                [10.061230468750068, 54.88637695312502],
                                [9.80625, 54.90600585937503],
                                [9.78125, 55.06904296875001],
                                [10.061230468750068, 54.88637695312502]
                            ]
                        ],
                        [
                            [
                                [10.734082031250011, 54.750732421875],
                                [10.621679687500006, 54.851416015625006],
                                [10.95107421875008, 55.15620117187501],
                                [10.734082031250011, 54.750732421875]
                            ]
                        ],
                        [
                            [
                                [15.087695312500017, 55.021875],
                                [14.684179687500063, 55.10224609375004],
                                [14.765332031250068, 55.296728515625034],
                                [15.132617187500017, 55.14453125000003],
                                [15.087695312500017, 55.021875]
                            ]
                        ],
                        [
                            [
                                [10.645117187500006, 55.60981445312498],
                                [10.785253906250034, 55.13339843749998],
                                [10.44277343750008, 55.04877929687498],
                                [9.988769531250028, 55.163183593750006],
                                [9.860644531250045, 55.515478515625034],
                                [10.645117187500006, 55.60981445312498]
                            ]
                        ],
                        [
                            [
                                [12.665722656250068, 55.596533203125006],
                                [12.550878906250034, 55.55625],
                                [12.59921875, 55.68022460937502],
                                [12.665722656250068, 55.596533203125006]
                            ]
                        ],
                        [
                            [
                                [12.56875, 55.785058593749966],
                                [12.215039062500011, 55.46650390624998],
                                [12.413085937500028, 55.28618164062502],
                                [12.089941406250006, 55.18813476562505],
                                [12.050390625000034, 54.81533203125002],
                                [11.8623046875, 54.77260742187502],
                                [11.653808593750057, 55.186914062499966],
                                [11.286328125000068, 55.20444335937498],
                                [10.978906250000051, 55.721533203125006],
                                [11.322265625000028, 55.752539062500006],
                                [11.627734375000074, 55.95688476562498],
                                [11.819726562500023, 55.69765625000002],
                                [11.86640625000004, 55.968164062499966],
                                [12.218945312499983, 56.11865234374997],
                                [12.578710937500006, 56.06406250000006],
                                [12.56875, 55.785058593749966]
                            ]
                        ],
                        [
                            [
                                [11.052148437500051, 57.25253906250006],
                                [10.873828125000045, 57.26225585937499],
                                [11.174511718750011, 57.322900390624994],
                                [11.052148437500051, 57.25253906250006]
                            ]
                        ],
                        [
                            [
                                [9.739746093750028, 54.82553710937498],
                                [8.670312500000023, 54.903417968750034],
                                [8.61591796875004, 55.41821289062503],
                                [8.132128906250074, 55.59980468749998],
                                [8.16396484375008, 56.60688476562498],
                                [8.671679687500045, 56.49565429687496],
                                [8.88808593750008, 56.73505859374998],
                                [9.06708984375004, 56.79384765625005],
                                [9.196386718750006, 56.70166015625],
                                [9.2548828125, 57.01171875000003],
                                [8.992773437499977, 57.01611328125003],
                                [8.771972656250028, 56.72529296875004],
                                [8.468359375, 56.66455078125],
                                [8.284082031250023, 56.85234374999999],
                                [8.618554687500051, 57.11127929687498],
                                [9.43359375, 57.17431640625003],
                                [9.96230468750008, 57.580957031249994],
                                [10.609960937500034, 57.73691406249998],
                                [10.282714843750057, 56.620507812499994],
                                [10.926171875000051, 56.44326171875002],
                                [10.753417968750028, 56.24199218749999],
                                [10.31875, 56.212890625],
                                [10.18300781250008, 55.86518554687504],
                                [9.903710937500023, 55.84282226562502],
                                [10.02363281250004, 55.76142578125004],
                                [9.591113281250017, 55.49321289062502],
                                [9.670996093750063, 55.26640624999999],
                                [9.453710937500006, 55.03955078125006],
                                [9.732324218750023, 54.96801757812506],
                                [9.739746093750028, 54.82553710937498]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Denmark",
                    childNum: 10,
                    cp: [10.2768332, 56.1773879]
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-71.647216796875, 19.195947265624994],
                            [-71.746484375, 19.285839843749997],
                            [-71.71147460937499, 19.486572265625],
                            [-71.75742187499999, 19.688183593749997],
                            [-71.779248046875, 19.718164062499994],
                            [-71.6673828125, 19.8486328125],
                            [-70.95415039062499, 19.913964843749994],
                            [-70.19384765625, 19.63803710937499],
                            [-69.95683593749999, 19.671875],
                            [-69.739404296875, 19.29921875],
                            [-69.23247070312499, 19.27182617187499],
                            [-69.60595703125, 19.206494140624997],
                            [-69.62363281249999, 19.117822265624994],
                            [-68.684765625, 18.90478515625],
                            [-68.33916015624999, 18.611523437499997],
                            [-68.68740234375, 18.21494140624999],
                            [-68.9349609375, 18.408007812500003],
                            [-69.27451171874999, 18.43984375],
                            [-69.770654296875, 18.443554687499997],
                            [-70.479931640625, 18.21728515625],
                            [-70.644677734375, 18.336230468750003],
                            [-71.02783203125, 18.273193359375],
                            [-71.43896484375, 17.63559570312499],
                            [-71.63173828125, 17.773632812499997],
                            [-71.768310546875, 18.03916015624999],
                            [-71.76376953124999, 18.20395507812499],
                            [-71.737255859375, 18.270800781250003],
                            [-71.7619140625, 18.34130859375],
                            [-71.87255859375, 18.416210937499997],
                            [-71.940380859375, 18.512597656249994],
                            [-72.000390625, 18.597900390625],
                            [-71.98686523437499, 18.6103515625],
                            [-71.86650390624999, 18.614160156249994],
                            [-71.74321289062499, 18.73291015625],
                            [-71.72705078125, 18.80322265625],
                            [-71.733642578125, 18.856396484374997],
                            [-71.80712890625, 18.987011718749997],
                            [-71.647216796875, 19.195947265624994]
                        ]
                    ]
                },
                properties: {
                    name: "Dominican Rep.",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [8.207617187500006, 36.518945312499994],
                            [8.348730468750006, 36.36796875],
                            [8.318066406250011, 35.654931640624994],
                            [8.31640625, 35.403125],
                            [8.35986328125, 35.299609375],
                            [8.394238281250011, 35.203857421875],
                            [8.312109375, 35.084619140624994],
                            [8.27685546875, 34.9794921875],
                            [8.24560546875, 34.73408203125],
                            [7.513867187500011, 34.080517578125],
                            [7.534375, 33.717919921874994],
                            [7.877246093750017, 33.172119140625],
                            [8.1125, 33.055322265624994],
                            [8.333398437500023, 32.543603515624994],
                            [9.044042968750006, 32.07236328125],
                            [9.160253906250006, 31.621337890625],
                            [9.224023437500023, 31.373681640624994],
                            [9.51875, 30.229394531249994],
                            [9.310253906250011, 30.115234375],
                            [9.805273437500006, 29.176953125],
                            [9.916015625, 27.785693359374996],
                            [9.74755859375, 27.330859375],
                            [9.883203125000023, 26.630810546874997],
                            [9.491406250000011, 26.333740234375],
                            [9.4482421875, 26.067138671875],
                            [10.000683593750011, 25.332080078125003],
                            [10.255859375, 24.591015625],
                            [10.395898437500023, 24.485595703125],
                            [10.686132812500006, 24.55136718749999],
                            [11.507617187500017, 24.314355468749994],
                            [11.967871093750006, 23.517871093750003],
                            [7.481738281250017, 20.873095703125003],
                            [5.836621093750011, 19.479150390624994],
                            [4.227636718750006, 19.142773437499997],
                            [3.3564453125, 18.986621093750003],
                            [3.119726562500006, 19.103173828124994],
                            [3.255859375, 19.4109375],
                            [3.130273437500023, 19.85019531249999],
                            [1.685449218750023, 20.378369140624997],
                            [1.610644531250017, 20.555566406249994],
                            [1.165722656250011, 20.817431640625003],
                            [1.1455078125, 21.102246093749997],
                            [-1.947900390624994, 23.124804687500003],
                            [-4.822607421874977, 24.99560546875],
                            [-8.683349609375, 27.2859375],
                            [-8.683349609375, 27.656445312499997],
                            [-8.683349609375, 27.900390625],
                            [-8.659912109375, 28.718603515625],
                            [-7.485742187499994, 29.392236328124994],
                            [-7.427685546874983, 29.425],
                            [-7.142431640624977, 29.619580078124997],
                            [-6.855566406249977, 29.601611328124996],
                            [-6.755126953125, 29.583837890625],
                            [-6.635351562499977, 29.568798828124997],
                            [-6.597753906249977, 29.578955078125],
                            [-6.520556640624989, 29.659863281249997],
                            [-6.479736328125, 29.820361328124996],
                            [-6.00429687499999, 29.83125],
                            [-5.448779296874989, 29.956933593749994],
                            [-5.293652343749983, 30.058642578124996],
                            [-5.180126953124983, 30.166162109374994],
                            [-4.96826171875, 30.465380859374996],
                            [-4.778515624999983, 30.552392578124994],
                            [-4.529150390624977, 30.625537109374996],
                            [-4.322851562499977, 30.698876953124994],
                            [-4.148779296874977, 30.8095703125],
                            [-3.626904296874983, 31.000927734374997],
                            [-3.833398437499994, 31.197802734374996],
                            [-3.837109374999983, 31.512353515624994],
                            [-3.768164062499977, 31.68955078125],
                            [-3.700244140624989, 31.700097656249994],
                            [-3.604589843749977, 31.686767578125],
                            [-3.439794921874977, 31.704541015624997],
                            [-3.017382812499989, 31.834277343749996],
                            [-2.988232421874983, 31.87421875],
                            [-2.930859374999983, 32.042529296874996],
                            [-2.863427734374994, 32.07470703125],
                            [-1.275341796874983, 32.089013671874994],
                            [-1.16259765625, 32.399169921875],
                            [-1.111035156249983, 32.552294921874996],
                            [-1.188232421875, 32.60849609375],
                            [-1.29638671875, 32.675683593749994],
                            [-1.352148437499977, 32.703369140625],
                            [-1.45, 32.784814453124994],
                            [-1.510009765625, 32.87763671875],
                            [-1.550732421874983, 33.073583984375],
                            [-1.67919921875, 33.318652343749996],
                            [-1.795605468749983, 34.751904296875],
                            [-2.131787109374983, 34.970849609374994],
                            [-2.190771484374977, 35.02978515625],
                            [-2.219628906249994, 35.10419921875],
                            [-1.673632812499989, 35.18310546875],
                            [-.426123046874977, 35.8615234375],
                            [-.048242187499994, 35.8328125],
                            [.312207031250011, 36.162353515625],
                            [.9716796875, 36.4439453125],
                            [2.593359375, 36.60068359375],
                            [2.972851562500011, 36.784472656249996],
                            [3.779003906250011, 36.89619140625],
                            [4.758105468750017, 36.896337890625],
                            [5.29541015625, 36.648242187499996],
                            [6.486523437500011, 37.085742187499996],
                            [6.927539062500017, 36.91943359375],
                            [7.238476562500011, 36.968505859375],
                            [7.204296875000011, 37.0923828125],
                            [7.910449218750017, 36.856347656249994],
                            [8.576562500000023, 36.93720703125],
                            [8.601269531250011, 36.833935546875],
                            [8.207617187500006, 36.518945312499994]
                        ]
                    ]
                },
                properties: {
                    name: "Algeria",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-80.131591796875, -2.973144531249957],
                                [-80.27294921875003, -2.995898437499974],
                                [-80.22368164062502, -2.753125],
                                [-80.08076171874995, -2.668847656249966],
                                [-79.90903320312495, -2.725585937499972],
                                [-80.131591796875, -2.973144531249957]
                            ]
                        ],
                        [
                            [
                                [-90.42392578125, -1.339941406250034],
                                [-90.51953124999994, -1.299121093749974],
                                [-90.47719726562494, -1.22099609374996],
                                [-90.42392578125, -1.339941406250034]
                            ]
                        ],
                        [
                            [
                                [-89.41889648437498, -.911035156249966],
                                [-89.60859374999998, -.888574218750009],
                                [-89.28784179687503, -.689843750000023],
                                [-89.41889648437498, -.911035156249966]
                            ]
                        ],
                        [
                            [
                                [-90.33486328125, -.771582031249977],
                                [-90.54213867187502, -.676464843749955],
                                [-90.53168945312493, -.581445312499966],
                                [-90.26938476562498, -.48466796874996],
                                [-90.19272460937498, -.658789062500006],
                                [-90.33486328125, -.771582031249977]
                            ]
                        ],
                        [
                            [
                                [-91.42597656249995, -.460839843749994],
                                [-91.61074218749994, -.44394531250002],
                                [-91.64667968749998, -.284472656249946],
                                [-91.46015625000001, -.255664062500031],
                                [-91.42597656249995, -.460839843749994]
                            ]
                        ],
                        [
                            [
                                [-90.57392578124993, -.333984375],
                                [-90.8677734375, -.271386718750037],
                                [-90.78037109374998, -.160449218749989],
                                [-90.57392578124993, -.333984375]
                            ]
                        ],
                        [
                            [
                                [-91.27216796874998, .025146484374986],
                                [-90.799658203125, -.752050781249991],
                                [-90.90551757812497, -.94052734375002],
                                [-91.13105468750001, -1.019628906249977],
                                [-91.41904296874998, -.996679687500006],
                                [-91.49541015624999, -.860937499999977],
                                [-91.120947265625, -.559082031250028],
                                [-91.36918945312493, -.287207031249977],
                                [-91.42885742187502, -.023388671874955],
                                [-91.59682617187497, .002099609374994],
                                [-91.36137695312496, .125830078124977],
                                [-91.27216796874998, .025146484374986]
                            ]
                        ],
                        [
                            [
                                [-78.90922851562502, 1.252783203124977],
                                [-78.99169921875003, 1.293212890625043],
                                [-78.89980468749997, 1.359765625],
                                [-78.90922851562502, 1.252783203124977]
                            ]
                        ],
                        [
                            [
                                [-75.28447265624999, -.10654296875002],
                                [-75.62626953124999, -.122851562499974],
                                [-75.63203125000001, -.157617187500037],
                                [-75.56059570312502, -.200097656249994],
                                [-75.49106445312498, -.24833984374996],
                                [-75.42470703124997, -.408886718749983],
                                [-75.259375, -.59013671874996],
                                [-75.24960937499998, -.951855468750026],
                                [-75.34819335937499, -.966796874999957],
                                [-75.38012695312503, -.94023437499996],
                                [-75.40805664062503, -.92431640625],
                                [-75.42041015624997, -.962207031250003],
                                [-75.570556640625, -1.53125],
                                [-76.08979492187501, -2.133105468749974],
                                [-76.6791015625, -2.562597656249991],
                                [-77.860595703125, -2.981640625000011],
                                [-78.240380859375, -3.472558593750009],
                                [-78.345361328125, -3.397363281249966],
                                [-78.64799804687499, -4.248144531250006],
                                [-78.68603515625003, -4.562402343749994],
                                [-78.86152343749998, -4.665039062499943],
                                [-78.90761718749997, -4.714453124999977],
                                [-78.92578125, -4.770703124999983],
                                [-78.91420898437497, -4.818652343749974],
                                [-78.919189453125, -4.858398437499986],
                                [-78.97539062499999, -4.873242187499997],
                                [-78.99526367187497, -4.908007812499974],
                                [-79.03330078124998, -4.96914062499999],
                                [-79.07626953125003, -4.990625],
                                [-79.18666992187497, -4.958203124999983],
                                [-79.26811523437493, -4.957617187499949],
                                [-79.33095703124997, -4.92783203125002],
                                [-79.39941406249997, -4.840039062499983],
                                [-79.45576171874998, -4.766210937499949],
                                [-79.50190429687495, -4.670605468750011],
                                [-79.51616210937493, -4.539160156249963],
                                [-79.57768554687496, -4.50058593750002],
                                [-79.638525390625, -4.454882812500031],
                                [-79.71098632812502, -4.467578124999946],
                                [-79.79726562500002, -4.47636718749996],
                                [-79.8451171875, -4.445898437499977],
                                [-79.962890625, -4.390332031250026],
                                [-80.06352539062499, -4.327539062500023],
                                [-80.13955078125002, -4.296093750000011],
                                [-80.19746093750001, -4.311035156249943],
                                [-80.293359375, -4.416796875],
                                [-80.38349609374998, -4.46367187499996],
                                [-80.424169921875, -4.461425781250028],
                                [-80.47856445312499, -4.430078125000037],
                                [-80.48847656249995, -4.393652343749991],
                                [-80.44384765625003, -4.335839843750023],
                                [-80.35288085937495, -4.208496093750014],
                                [-80.453759765625, -4.205175781249963],
                                [-80.48847656249995, -4.165527343749972],
                                [-80.49345703124999, -4.119140625000014],
                                [-80.510009765625, -4.06953125000004],
                                [-80.49013671874994, -4.010058593750003],
                                [-80.43720703125001, -3.978613281249991],
                                [-80.30327148437499, -4.005078124999969],
                                [-80.26689453124993, -3.948828124999963],
                                [-80.23051757812499, -3.924023437499969],
                                [-80.19414062499996, -3.905859375],
                                [-80.24375, -3.576757812500006],
                                [-80.32465820312498, -3.387890625],
                                [-79.96333007812501, -3.15771484375],
                                [-79.72988281249997, -2.579101562499972],
                                [-79.842138671875, -2.0673828125],
                                [-79.92558593749996, -2.548535156249969],
                                [-80.03017578124994, -2.556738281249949],
                                [-80.00664062499993, -2.353808593750003],
                                [-80.28471679687502, -2.706738281249955],
                                [-80.93217773437493, -2.269140624999977],
                                [-80.76059570312498, -1.934570312500028],
                                [-80.90239257812499, -1.078906249999974],
                                [-80.55390624999998, -.847949218749989],
                                [-80.45546875, -.585449218749986],
                                [-80.282373046875, -.620507812500023],
                                [-80.48227539062503, -.368261718749963],
                                [-80.046142578125, .155371093750048],
                                [-80.08828124999997, .78476562500002],
                                [-78.89965820312503, 1.20625],
                                [-78.85966796874996, 1.455371093750031],
                                [-78.1806640625, .968554687499974],
                                [-77.702880859375, .837841796874997],
                                [-77.46767578124997, .636523437500017],
                                [-77.396337890625, .393896484374963],
                                [-76.49462890624997, .23544921875002],
                                [-76.27060546874998, .439404296874997],
                                [-75.77666015624999, .08925781249998],
                                [-75.28447265624999, -.10654296875002]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Ecuador",
                    childNum: 9
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [34.24531250000001, 31.208300781249996],
                            [34.904296875, 29.47734375],
                            [34.736425781250006, 29.27060546875],
                            [34.39970703125002, 28.01601562499999],
                            [34.22011718750002, 27.764306640624994],
                            [33.76025390625, 28.04765625],
                            [33.24775390625001, 28.567724609375],
                            [32.56572265625002, 29.973974609375],
                            [32.35976562500002, 29.630664062499996],
                            [32.89824218750002, 28.565234375],
                            [33.54707031250001, 27.898144531249997],
                            [33.5498046875, 27.607373046874997],
                            [33.84931640625001, 27.184912109375],
                            [33.959082031250006, 26.6490234375],
                            [35.19414062500002, 24.475146484375003],
                            [35.78388671875001, 23.937792968750003],
                            [35.54082031250002, 23.920654296875],
                            [35.50439453125, 23.779296875],
                            [35.697851562500006, 22.946191406249994],
                            [36.22968750000001, 22.628808593749994],
                            [36.87138671875002, 21.996728515624994],
                            [31.434472656250023, 21.995849609375],
                            [31.486132812500017, 22.14780273437499],
                            [31.400292968750023, 22.202441406250003],
                            [31.260644531250023, 22.00229492187499],
                            [31.092675781250023, 21.994873046875],
                            [28.036425781250017, 21.995361328125],
                            [24.980273437500017, 21.995849609375],
                            [24.980273437500017, 25.5888671875],
                            [24.980273437500017, 29.181884765625],
                            [24.703222656250006, 30.201074218749994],
                            [24.96142578125, 30.678515625],
                            [24.85273437500001, 31.334814453125],
                            [25.150488281250006, 31.654980468749997],
                            [25.382226562500023, 31.51279296875],
                            [25.89326171875001, 31.620898437499996],
                            [27.248046875, 31.377880859374997],
                            [27.5400390625, 31.212695312499996],
                            [28.51484375000001, 31.050439453124994],
                            [29.072070312500017, 30.830273437499997],
                            [29.929785156250006, 31.227490234374997],
                            [30.22265625, 31.2583984375],
                            [30.395117187500006, 31.4576171875],
                            [30.92353515625001, 31.566845703124997],
                            [30.56298828125, 31.4169921875],
                            [31.001757812500017, 31.462792968749994],
                            [31.082910156250023, 31.603320312499996],
                            [31.5244140625, 31.458251953125],
                            [31.888964843750017, 31.54140625],
                            [32.13603515625002, 31.341064453125],
                            [31.8921875, 31.482470703124996],
                            [31.77109375, 31.292578125],
                            [32.10175781250001, 31.092822265624996],
                            [32.281835937500006, 31.200878906249997],
                            [32.21621093750002, 31.29375],
                            [32.60332031250002, 31.06875],
                            [33.66650390625, 31.130419921874996],
                            [34.19814453125002, 31.322607421875],
                            [34.24531250000001, 31.208300781249996]
                        ]
                    ]
                },
                properties: {
                    name: "Egypt",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [40.141210937500006, 15.696142578125034],
                                [40.399023437500006, 15.579882812500045],
                                [39.975195312500006, 15.612451171875023],
                                [39.94746093750004, 15.696142578125034],
                                [40.07050781250004, 15.676611328125034],
                                [39.93994140625003, 15.744531250000023],
                                [39.9567382812501, 15.889404296875057],
                                [40.141210937500006, 15.696142578125034]
                            ]
                        ],
                        [
                            [
                                [40.07646484375002, 16.082421875000023],
                                [40.11005859375004, 15.985742187500051],
                                [39.99609375000003, 16.04267578125001],
                                [40.07646484375002, 16.082421875000023]
                            ]
                        ],
                        [
                            [
                                [40.938574218750006, 13.983105468749997],
                                [40.82011718750002, 14.111669921874991],
                                [40.22148437500002, 14.431152343749972],
                                [39.531835937500006, 14.53671875],
                                [39.198046875000074, 14.479394531250037],
                                [39.1354492187501, 14.581884765625034],
                                [39.07421874999997, 14.628222656249974],
                                [39.02382812499999, 14.628222656249974],
                                [38.99570312500006, 14.586865234374983],
                                [38.81201171875003, 14.482324218750009],
                                [38.50439453124997, 14.42441406250002],
                                [38.43144531250002, 14.428613281249994],
                                [38.221484375000074, 14.649658203124986],
                                [38.002539062500006, 14.737109375000045],
                                [37.94345703125006, 14.810546875],
                                [37.884179687499994, 14.852294921874972],
                                [37.82031250000003, 14.708496093749986],
                                [37.70839843750005, 14.45722656250004],
                                [37.64843750000003, 14.32255859375006],
                                [37.571191406249994, 14.149072265624966],
                                [37.546777343749994, 14.143847656249974],
                                [37.507226562499994, 14.156396484375037],
                                [37.257226562499994, 14.453759765625051],
                                [37.024511718750006, 14.271972656250057],
                                [36.81191406250005, 14.315039062500034],
                                [36.67910156250005, 14.307568359375026],
                                [36.542382812499994, 14.25820312499999],
                                [36.52431640625005, 14.256835937499986],
                                [36.492285156250006, 14.544335937500023],
                                [36.470800781250006, 14.736474609375009],
                                [36.448144531249994, 14.940087890625009],
                                [36.42675781249997, 15.132080078125043],
                                [36.566015625, 15.362109375],
                                [36.9137695312501, 16.296191406250045],
                                [36.887792968750006, 16.624658203124994],
                                [36.9787109375001, 16.800585937500045],
                                [36.9757812500001, 16.866552734375006],
                                [36.99521484375006, 17.020556640625017],
                                [37.00898437500004, 17.058886718750017],
                                [37.06152343749997, 17.061279296875057],
                                [37.16953125000006, 17.04140625],
                                [37.41103515625005, 17.061718749999955],
                                [37.452929687500074, 17.108691406250017],
                                [37.51015625, 17.28813476562499],
                                [37.54746093750006, 17.32412109375005],
                                [37.78242187500004, 17.458007812500057],
                                [38.253515625, 17.584765625000017],
                                [38.26728515625004, 17.616699218750057],
                                [38.28984375000002, 17.637011718750017],
                                [38.34736328125004, 17.68359375],
                                [38.37373046875004, 17.717333984375045],
                                [38.42246093750006, 17.823925781249983],
                                [38.60947265625006, 18.00507812500004],
                                [39.03447265625002, 17.085546875000034],
                                [39.298925781250006, 15.921093750000011],
                                [39.78554687499999, 15.124853515624991],
                                [39.86376953124997, 15.470312500000034],
                                [40.20410156250003, 15.014111328124983],
                                [41.17646484375004, 14.620312500000054],
                                [41.65820312499997, 13.983056640624994],
                                [42.24511718749997, 13.587646484374986],
                                [42.39931640625005, 13.212597656249969],
                                [42.522851562499994, 13.221484375],
                                [42.796191406250074, 12.864257812500057],
                                [42.96953125000002, 12.808349609375028],
                                [42.99902343750003, 12.899511718750048],
                                [43.08291015625005, 12.824609374999966],
                                [43.11669921874997, 12.708593749999963],
                                [43.00566406250002, 12.66230468750004],
                                [42.88330078124997, 12.621289062500026],
                                [42.86591796875004, 12.622802734374986],
                                [42.82529296875006, 12.569335937500014],
                                [42.767480468749994, 12.422851562500014],
                                [42.70371093750006, 12.380322265625054],
                                [42.479394531249994, 12.513623046875026],
                                [42.45, 12.521337890625006],
                                [42.40859375, 12.494384765625014],
                                [42.37851562500006, 12.46640625],
                                [42.28994140625005, 12.570214843750009],
                                [42.225, 12.661962890624963],
                                [42.13427734374997, 12.771435546874969],
                                [41.95214843749997, 12.88232421875],
                                [41.85957031250004, 13.025878906250028],
                                [41.76503906250005, 13.183935546874991],
                                [41.362890625, 13.499804687500031],
                                [40.938574218750006, 13.983105468749997]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Eritrea",
                    childNum: 3
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-17.887939453125, 27.809570312500057],
                                [-17.984765625000023, 27.646386718750023],
                                [-18.160546874999937, 27.76147460937503],
                                [-17.887939453125, 27.809570312500057]
                            ]
                        ],
                        [
                            [
                                [-15.400585937499955, 28.147363281250023],
                                [-15.436767578124972, 27.810693359375023],
                                [-15.71030273437492, 27.784082031250023],
                                [-15.809472656249966, 27.994482421874977],
                                [-15.682763671874994, 28.15405273437497],
                                [-15.400585937499955, 28.147363281250023]
                            ]
                        ],
                        [
                            [
                                [-17.184667968749977, 28.02197265624997],
                                [-17.324902343749955, 28.11767578125003],
                                [-17.25859375, 28.203173828125045],
                                [-17.103759765624943, 28.111132812500017],
                                [-17.184667968749977, 28.02197265624997]
                            ]
                        ],
                        [
                            [
                                [-16.33447265624997, 28.37993164062499],
                                [-16.41821289062497, 28.15141601562496],
                                [-16.65800781249999, 28.007177734374977],
                                [-16.905322265625017, 28.33959960937503],
                                [-16.12363281249992, 28.57597656249996],
                                [-16.33447265624997, 28.37993164062499]
                            ]
                        ],
                        [
                            [
                                [-14.196777343749943, 28.169287109375063],
                                [-14.332617187500006, 28.056005859374977],
                                [-14.49179687499992, 28.100927734374977],
                                [-14.231982421875017, 28.21582031250003],
                                [-14.003369140624983, 28.706689453125023],
                                [-13.85722656249996, 28.73803710937503],
                                [-13.928027343749989, 28.25346679687499],
                                [-14.196777343749943, 28.169287109375063]
                            ]
                        ],
                        [
                            [
                                [-17.83427734374999, 28.49321289062496],
                                [-18.00078124999999, 28.758251953124955],
                                [-17.928808593749977, 28.844580078125063],
                                [-17.7265625, 28.724462890625006],
                                [-17.83427734374999, 28.49321289062496]
                            ]
                        ],
                        [
                            [
                                [-13.715966796874966, 28.911230468750034],
                                [-13.85991210937496, 28.869091796874983],
                                [-13.823632812499966, 29.013330078124966],
                                [-13.463574218749955, 29.237207031250023],
                                [-13.477929687499966, 29.00659179687503],
                                [-13.715966796874966, 28.911230468750034]
                            ]
                        ],
                        [
                            [
                                [1.593945312500068, 38.672070312499955],
                                [1.40576171875, 38.670996093750006],
                                [1.436328125000017, 38.768212890624994],
                                [1.593945312500068, 38.672070312499955]
                            ]
                        ],
                        [
                            [
                                [1.445214843750051, 38.91870117187503],
                                [1.223339843750068, 38.90385742187502],
                                [1.3486328125, 39.080810546875],
                                [1.564453125, 39.12104492187504],
                                [1.623632812499977, 39.03881835937497],
                                [1.445214843750051, 38.91870117187503]
                            ]
                        ],
                        [
                            [
                                [3.145312500000017, 39.79008789062499],
                                [3.461816406250023, 39.69775390625003],
                                [3.072851562500006, 39.30126953124997],
                                [2.799804687500057, 39.38505859374999],
                                [2.700585937500023, 39.54213867187502],
                                [2.49951171875, 39.47788085937498],
                                [2.37001953125008, 39.57207031249999],
                                [3.15869140625, 39.97050781249999],
                                [3.145312500000017, 39.79008789062499]
                            ]
                        ],
                        [
                            [
                                [4.293652343750011, 39.84184570312499],
                                [3.8671875, 39.958740234375],
                                [3.853417968750051, 40.06303710937502],
                                [4.22578125000004, 40.032373046874966],
                                [4.293652343750011, 39.84184570312499]
                            ]
                        ],
                        [
                            [
                                [-1.794042968749949, 43.407324218750006],
                                [-1.410693359374932, 43.240087890625034],
                                [-1.460839843749937, 43.05175781250006],
                                [-1.300048828124943, 43.10097656250002],
                                [-.586425781249943, 42.798974609374966],
                                [.631640625000045, 42.689599609374994],
                                [.696875, 42.84511718750005],
                                [1.428320312499977, 42.59589843749998],
                                [1.414843750000074, 42.54838867187499],
                                [1.448828124999977, 42.43745117187504],
                                [1.534082031250051, 42.44169921875002],
                                [1.7060546875, 42.50332031250005],
                                [1.859765625000051, 42.457080078125045],
                                [1.927929687500068, 42.42631835937499],
                                [2.032714843750028, 42.353515625],
                                [3.21142578125, 42.43115234375],
                                [3.248046875, 41.94423828125002],
                                [3.0048828125, 41.76743164062506],
                                [2.082617187500063, 41.287402343750045],
                                [1.032910156250068, 41.06206054687496],
                                [.714648437500074, 40.822851562500006],
                                [.891113281250057, 40.72236328125004],
                                [.59609375000008, 40.614501953125],
                                [-.327001953124949, 39.519873046875006],
                                [-.204931640624949, 39.062597656250034],
                                [.20156250000008, 38.75917968750002],
                                [-.520800781249989, 38.317285156249966],
                                [-.814648437500011, 37.76992187500002],
                                [-.721582031249966, 37.63105468749998],
                                [-1.327539062499937, 37.561132812500034],
                                [-1.640966796874949, 37.38696289062497],
                                [-2.111523437499983, 36.77666015624999],
                                [-4.366845703124994, 36.71811523437506],
                                [-4.67412109374996, 36.506445312500006],
                                [-5.171484374999949, 36.423779296874955],
                                [-5.3609375, 36.134912109374994],
                                [-5.62548828125, 36.02592773437499],
                                [-6.040673828124937, 36.18842773437498],
                                [-6.38413085937492, 36.63701171874996],
                                [-6.216796875000028, 36.91357421875],
                                [-6.396191406249983, 36.831640625],
                                [-6.863769531250028, 37.27890625],
                                [-7.406152343749937, 37.17944335937497],
                                [-7.44394531249992, 37.72827148437497],
                                [-6.957568359374932, 38.18789062499999],
                                [-7.106396484374983, 38.181005859375006],
                                [-7.343017578124943, 38.45742187500002],
                                [-6.997949218749994, 39.05644531250002],
                                [-7.53569335937496, 39.66157226562501],
                                [-7.117675781249972, 39.681689453125045],
                                [-6.975390624999932, 39.79838867187502],
                                [-6.896093749999949, 40.02182617187506],
                                [-7.032617187499966, 40.16791992187498],
                                [-6.8101562499999, 40.343115234375034],
                                [-6.928466796874972, 41.009130859375006],
                                [-6.2125, 41.53203125],
                                [-6.542187499999955, 41.672509765624994],
                                [-6.61826171874992, 41.9423828125],
                                [-7.147119140625023, 41.98115234374998],
                                [-7.40361328124996, 41.833691406249955],
                                [-8.152490234374937, 41.81196289062498],
                                [-8.266064453124983, 42.13740234375001],
                                [-8.777148437500017, 41.941064453124994],
                                [-8.887207031249943, 42.105273437500045],
                                [-8.690917968749943, 42.274169921875],
                                [-8.815820312499966, 42.285253906250034],
                                [-8.730029296874989, 42.411718750000034],
                                [-8.8115234375, 42.64033203124998],
                                [-9.033105468750023, 42.593847656250006],
                                [-8.927197265624926, 42.79858398437497],
                                [-9.235205078124977, 42.97690429687498],
                                [-9.178076171874977, 43.17402343749998],
                                [-8.248925781249937, 43.43940429687498],
                                [-8.256738281249937, 43.57988281249999],
                                [-8.004687499999932, 43.69438476562496],
                                [-7.503613281249983, 43.73994140625001],
                                [-7.060986328124955, 43.55395507812503],
                                [-5.846679687499943, 43.645068359375045],
                                [-4.52304687499992, 43.41572265625004],
                                [-3.604638671874966, 43.51948242187504],
                                [-3.045605468749926, 43.37158203125],
                                [-2.875048828125017, 43.454443359375006],
                                [-2.337109374999926, 43.32802734375002],
                                [-1.794042968749949, 43.407324218750006]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Spain",
                    childNum: 12,
                    cp: [-2.9366964, 40.3438963]
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [22.61738281250004, 58.62124023437502],
                                [23.323242187500057, 58.45083007812502],
                                [22.730273437500045, 58.23066406250001],
                                [22.371679687499977, 58.217138671875006],
                                [21.996875, 57.93134765624998],
                                [22.187695312500068, 58.15434570312502],
                                [21.88212890624999, 58.262353515624994],
                                [21.862304687500057, 58.497167968750034],
                                [22.61738281250004, 58.62124023437502]
                            ]
                        ],
                        [
                            [
                                [23.343554687500017, 58.550341796875045],
                                [23.10908203125004, 58.65922851562502],
                                [23.332812500000045, 58.648583984374994],
                                [23.343554687500017, 58.550341796875045]
                            ]
                        ],
                        [
                            [
                                [22.923730468750023, 58.826904296875],
                                [22.54218750000001, 58.68999023437499],
                                [22.411035156250023, 58.863378906250034],
                                [22.05625, 58.94360351562506],
                                [22.6494140625, 59.08710937499998],
                                [22.90986328125004, 58.99121093749997],
                                [22.923730468750023, 58.826904296875]
                            ]
                        ],
                        [
                            [
                                [28.0125, 59.484277343749966],
                                [28.15107421875004, 59.374414062499966],
                                [27.434179687500006, 58.787255859374994],
                                [27.502441406250057, 58.221337890624994],
                                [27.778515625000068, 57.87070312500006],
                                [27.542089843750063, 57.799414062500006],
                                [27.4, 57.66679687499999],
                                [27.35195312500005, 57.528125],
                                [26.96601562500001, 57.60913085937506],
                                [26.532617187499994, 57.53100585937503],
                                [26.29804687500001, 57.60107421875],
                                [25.66015625, 57.920166015625],
                                [25.27265625000001, 58.009375],
                                [25.11103515625004, 58.06342773437498],
                                [24.45888671875005, 57.907861328124994],
                                [24.3625, 57.86616210937501],
                                [24.322558593750074, 57.87060546875003],
                                [24.529101562500045, 58.35424804687497],
                                [24.114843750000034, 58.26611328125006],
                                [23.767578125000057, 58.36083984374997],
                                [23.50927734375003, 58.65854492187498],
                                [23.680761718750063, 58.787158203125074],
                                [23.43203125, 58.920654296875],
                                [23.494433593750017, 59.19565429687498],
                                [24.083398437500023, 59.29189453125005],
                                [24.38037109375003, 59.47265625],
                                [25.44375, 59.52114257812502],
                                [25.50927734374997, 59.63901367187506],
                                [26.974707031250006, 59.450634765624955],
                                [28.0125, 59.484277343749966]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Estonia",
                    childNum: 4
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [38.43144531250002, 14.428613281249994],
                            [38.50439453125, 14.424414062499991],
                            [38.81201171875, 14.482324218749994],
                            [38.995703125, 14.586865234374997],
                            [39.02382812500002, 14.628222656250003],
                            [39.07421875, 14.628222656250003],
                            [39.13544921875001, 14.581884765624991],
                            [39.19804687500002, 14.479394531249994],
                            [39.531835937500006, 14.53671875],
                            [40.22148437500002, 14.43115234375],
                            [40.82011718750002, 14.111669921874991],
                            [40.938574218750006, 13.983105468749997],
                            [41.362890625, 13.499804687500003],
                            [41.76503906250002, 13.183935546874991],
                            [41.85957031250001, 13.02587890625],
                            [41.9521484375, 12.88232421875],
                            [42.13427734375, 12.771435546874997],
                            [42.225, 12.661962890624991],
                            [42.28994140625002, 12.570214843749994],
                            [42.378515625, 12.46640625],
                            [41.79267578125001, 11.68603515625],
                            [41.79824218750002, 10.98046875],
                            [42.557714843750006, 11.080761718749997],
                            [42.92275390625002, 10.999316406249989],
                            [42.65644531250001, 10.6],
                            [42.84160156250002, 10.203076171874997],
                            [43.181640625, 9.879980468749991],
                            [43.482519531250006, 9.379492187499991],
                            [43.98378906250002, 9.008837890624989],
                            [46.97822265625001, 7.9970703125],
                            [47.97822265625001, 7.9970703125],
                            [44.940527343750006, 4.912011718749994],
                            [43.988867187500006, 4.950537109374991],
                            [43.58349609375, 4.85498046875],
                            [43.12568359375001, 4.644482421874997],
                            [42.85664062500001, 4.32421875],
                            [42.02412109375001, 4.137939453125],
                            [41.91533203125002, 4.031298828124989],
                            [41.88398437500001, 3.977734375],
                            [41.73769531250002, 3.979052734374989],
                            [41.48193359375, 3.96328125],
                            [41.37246093750002, 3.946191406249994],
                            [41.22089843750001, 3.943554687499997],
                            [41.02080078125002, 4.057470703124991],
                            [40.765234375, 4.27304687499999],
                            [39.84218750000002, 3.851464843749994],
                            [39.79033203125002, 3.754248046874991],
                            [39.65751953125002, 3.577832031249997],
                            [39.49443359375002, 3.456103515624989],
                            [38.608007812500006, 3.60009765625],
                            [38.45156250000002, 3.604833984374991],
                            [38.22529296875001, 3.618994140624991],
                            [38.08613281250001, 3.64882812499999],
                            [37.15458984375002, 4.254541015624994],
                            [36.90556640625002, 4.411474609374991],
                            [36.02197265625, 4.468115234374991],
                            [35.76308593750002, 4.808007812499994],
                            [35.75615234375002, 4.950488281249989],
                            [35.779296875, 5.105566406249991],
                            [35.80029296875, 5.156933593749997],
                            [35.74501953125002, 5.343994140625],
                            [35.325292968750006, 5.364892578124994],
                            [35.2646484375, 5.412060546874997],
                            [35.26386718750001, 5.457910156249994],
                            [35.26835937500002, 5.492285156249991],
                            [34.98359375000001, 5.858300781249994],
                            [34.71064453125001, 6.660302734374994],
                            [34.06425781250002, 7.225732421874994],
                            [33.902441406250006, 7.509521484375],
                            [32.99892578125002, 7.899511718749991],
                            [33.28105468750002, 8.437255859375],
                            [33.95332031250001, 8.443505859374994],
                            [34.07275390625, 8.545263671874991],
                            [34.078125, 9.461523437499991],
                            [34.31123046875001, 10.190869140624997],
                            [34.34394531250001, 10.658642578124997],
                            [34.571875, 10.880175781249989],
                            [34.77128906250002, 10.746191406249991],
                            [34.93144531250002, 10.864794921874989],
                            [35.1123046875, 11.816552734374994],
                            [35.67021484375002, 12.623730468749997],
                            [36.12519531250001, 12.75703125],
                            [36.52431640625002, 14.2568359375],
                            [36.54238281250002, 14.25820312499999],
                            [36.67910156250002, 14.307568359374997],
                            [36.81191406250002, 14.315039062499991],
                            [37.024511718750006, 14.27197265625],
                            [37.25722656250002, 14.453759765624994],
                            [37.50722656250002, 14.156396484374994],
                            [37.54677734375002, 14.143847656250003],
                            [37.57119140625002, 14.149072265624994],
                            [37.6484375, 14.322558593750003],
                            [37.70839843750002, 14.457226562499997],
                            [37.8203125, 14.70849609375],
                            [37.88417968750002, 14.852294921875],
                            [37.943457031250006, 14.810546875],
                            [38.002539062500006, 14.737109375],
                            [38.22148437500002, 14.649658203125],
                            [38.43144531250002, 14.428613281249994]
                        ]
                    ]
                },
                properties: {
                    name: "Ethiopia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [22.17509765624999, 60.370751953124994],
                                [22.41552734375003, 60.30336914062505],
                                [22.36054687500004, 60.165576171875045],
                                [22.07714843750003, 60.286328124999955],
                                [22.17509765624999, 60.370751953124994]
                            ]
                        ],
                        [
                            [
                                [21.450878906250068, 60.529589843750045],
                                [21.3, 60.47978515625002],
                                [21.224707031250006, 60.62060546875003],
                                [21.450878906250068, 60.529589843750045]
                            ]
                        ],
                        [
                            [
                                [21.2177734375, 63.241308593750034],
                                [21.415625, 63.19736328125006],
                                [21.25341796875, 63.152001953124966],
                                [21.08388671875008, 63.277539062499955],
                                [21.2177734375, 63.241308593750034]
                            ]
                        ],
                        [
                            [
                                [24.848242187500034, 64.99101562499999],
                                [24.576562500000023, 65.04287109375],
                                [24.970605468750023, 65.05532226562502],
                                [24.848242187500034, 64.99101562499999]
                            ]
                        ],
                        [
                            [
                                [28.96582031250003, 69.02197265625],
                                [28.414062500000057, 68.90415039062506],
                                [28.77285156250005, 68.84003906249995],
                                [28.470703125000057, 68.48837890625],
                                [28.685156250000034, 68.189794921875],
                                [29.343847656250006, 68.06186523437506],
                                [29.988085937500017, 67.66826171874999],
                                [29.066210937500045, 66.89174804687497],
                                [30.102734375000097, 65.72626953125004],
                                [29.715917968750063, 65.62456054687502],
                                [29.608007812500006, 65.248681640625],
                                [29.826953125000017, 65.14506835937502],
                                [29.60419921875004, 64.968408203125],
                                [30.072851562500063, 64.76503906250005],
                                [30.04189453125005, 64.44335937499997],
                                [30.513769531250006, 64.2],
                                [30.50390625000003, 64.02060546875],
                                [29.991503906250074, 63.73515625000002],
                                [31.180859375000097, 63.208300781250074],
                                [31.533984375000017, 62.885400390624994],
                                [31.18671875000004, 62.48139648437504],
                                [29.69013671875004, 61.54609375000001],
                                [27.797656250000074, 60.53613281250003],
                                [26.53466796874997, 60.412890625000074],
                                [26.56933593750003, 60.62456054687502],
                                [26.377734375000074, 60.42407226562503],
                                [25.955957031250023, 60.474218750000034],
                                [26.03583984375004, 60.34150390625001],
                                [25.75800781250004, 60.26752929687504],
                                [25.65644531250004, 60.33320312499998],
                                [24.44560546874999, 60.021289062500045],
                                [23.46357421875004, 59.986230468749994],
                                [23.021289062500074, 59.81601562500006],
                                [23.19843750000001, 60.02182617187498],
                                [22.911718750000063, 60.20971679687497],
                                [22.749804687500017, 60.057275390624994],
                                [22.462695312500045, 60.029199218749966],
                                [22.5849609375, 60.380566406249955],
                                [21.436035156250057, 60.596386718749955],
                                [21.605957031250057, 61.59155273437503],
                                [21.255957031250063, 61.98964843750005],
                                [21.143847656250045, 62.73999023437506],
                                [21.650976562500063, 63.039306640625],
                                [21.545117187499983, 63.204296874999955],
                                [22.31972656250005, 63.310449218749994],
                                [22.532324218750034, 63.647851562499994],
                                [23.598925781250074, 64.04091796874997],
                                [24.557910156250045, 64.801025390625],
                                [25.288183593750063, 64.8603515625],
                                [25.34785156250004, 65.47924804687497],
                                [24.674902343750006, 65.67070312499999],
                                [24.628027343750034, 65.85917968750002],
                                [24.15546875000004, 65.80527343750006],
                                [23.700292968750034, 66.25263671874998],
                                [23.988574218750045, 66.81054687500003],
                                [23.64150390625005, 67.12939453124997],
                                [23.733593750000068, 67.42290039062499],
                                [23.454882812500045, 67.46025390625007],
                                [23.63886718750004, 67.95439453125002],
                                [22.854101562500034, 68.36733398437502],
                                [21.99746093750005, 68.52060546874998],
                                [20.622167968750006, 69.036865234375],
                                [21.065722656250017, 69.04174804687503],
                                [21.06611328125001, 69.21411132812497],
                                [21.59375, 69.273583984375],
                                [22.410937500000074, 68.719873046875],
                                [23.324023437500017, 68.64897460937502],
                                [23.85400390625, 68.80590820312503],
                                [24.94140625000003, 68.59326171875006],
                                [25.748339843750017, 68.99013671875],
                                [26.07246093750004, 69.69155273437497],
                                [26.525390625000057, 69.91503906250003],
                                [27.127539062500063, 69.90649414062497],
                                [27.747851562500045, 70.06484375],
                                [29.14160156250003, 69.67143554687505],
                                [29.33339843750005, 69.47299804687503],
                                [28.846289062500006, 69.17690429687502],
                                [28.96582031250003, 69.02197265625]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Finland",
                    childNum: 5
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [178.48789062500018, -18.97412109375],
                                [177.95869140624998, -19.121582031250014],
                                [178.33427734375013, -18.93447265625001],
                                [178.48789062500018, -18.97412109375]
                            ]
                        ],
                        [
                            [
                                [179.34931640625015, -18.10234375000003],
                                [179.25351562500018, -18.030566406249974],
                                [179.30644531250013, -17.944042968750026],
                                [179.34931640625015, -18.10234375000003]
                            ]
                        ],
                        [
                            [
                                [178.28017578124994, -17.37197265625001],
                                [178.59160156249996, -17.651464843750006],
                                [178.66767578125004, -18.080859375],
                                [177.95546875000005, -18.264062500000023],
                                [177.32138671875, -18.077539062500037],
                                [177.26396484375007, -17.86347656250004],
                                [177.5044921875, -17.539550781250043],
                                [177.81796875000012, -17.38847656249999],
                                [178.28017578124994, -17.37197265625001]
                            ]
                        ],
                        [
                            [
                                [180, -16.96308593750001],
                                [179.89697265625003, -16.96406250000004],
                                [180, -16.785742187500034],
                                [180, -16.96308593750001]
                            ]
                        ],
                        [
                            [
                                [-179.97490234374996, -16.92480468750003],
                                [-180, -16.96298828124999],
                                [-180, -16.907812500000034],
                                [-180, -16.82431640624999],
                                [-180, -16.78554687499999],
                                [-179.86098632812502, -16.68828124999999],
                                [-179.97490234374996, -16.92480468750003]
                            ]
                        ],
                        [
                            [
                                [-179.92944335937503, -16.502832031250037],
                                [-179.999951171875, -16.540039062499986],
                                [-179.900927734375, -16.431542968749994],
                                [-179.92944335937503, -16.502832031250037]
                            ]
                        ],
                        [
                            [
                                [179.99921875000004, -16.168554687499977],
                                [179.56416015625004, -16.636914062499997],
                                [179.56816406249996, -16.747460937499966],
                                [179.93037109375004, -16.51943359375005],
                                [179.9279296875001, -16.74443359374996],
                                [179.41933593750005, -16.80654296875001],
                                [179.20234375000004, -16.71269531249999],
                                [179.00683593750003, -16.90019531249999],
                                [178.70664062500018, -16.97617187500002],
                                [178.4974609375, -16.78789062500003],
                                [178.58359375000012, -16.621875],
                                [178.80507812499994, -16.631445312500034],
                                [179.55175781250003, -16.249902343750023],
                                [180, -16.15292968749999],
                                [179.99921875000004, -16.168554687499977]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Fiji",
                    childNum: 7
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-61.01875, -51.7857421875],
                                [-60.87597656250003, -51.79423828125004],
                                [-60.94755859374996, -51.94628906250002],
                                [-61.14501953125003, -51.83945312500001],
                                [-61.01875, -51.7857421875]
                            ]
                        ],
                        [
                            [
                                [-60.28623046874995, -51.461914062500014],
                                [-59.38759765625002, -51.35996093750003],
                                [-59.26806640625, -51.42753906250003],
                                [-59.92138671874997, -51.969531250000045],
                                [-60.246337890625, -51.98642578125003],
                                [-60.35346679687498, -52.13994140625004],
                                [-60.686376953125034, -52.18837890624996],
                                [-60.96142578125003, -52.05732421874999],
                                [-60.23847656249998, -51.771972656250036],
                                [-60.58251953125, -51.71269531250004],
                                [-60.24516601562493, -51.638867187500004],
                                [-60.56845703124998, -51.357812499999945],
                                [-60.28623046874995, -51.461914062500014]
                            ]
                        ],
                        [
                            [
                                [-60.11171875000002, -51.39589843749998],
                                [-60.275341796874955, -51.28056640625002],
                                [-60.06982421875, -51.307910156249996],
                                [-60.11171875000002, -51.39589843749998]
                            ]
                        ],
                        [
                            [
                                [-58.85019531249995, -51.26992187499998],
                                [-58.42583007812502, -51.32421875000003],
                                [-58.508935546874994, -51.48359375],
                                [-58.271582031250034, -51.57470703124999],
                                [-58.25922851562501, -51.417089843750034],
                                [-57.976513671874955, -51.384375],
                                [-57.80849609375002, -51.51796875],
                                [-57.96044921874997, -51.58320312500003],
                                [-57.79179687499999, -51.63613281249998],
                                [-58.68349609375002, -51.93623046875001],
                                [-58.65278320312498, -52.09921875],
                                [-59.19584960937496, -52.01767578125],
                                [-59.06801757812502, -52.17304687500003],
                                [-59.341503906249955, -52.19599609375],
                                [-59.395654296874966, -52.308007812499994],
                                [-59.64873046875002, -52.134375],
                                [-59.57080078124994, -51.92539062500003],
                                [-59.05952148437498, -51.685449218749994],
                                [-59.09663085937498, -51.49140624999998],
                                [-58.85019531249995, -51.26992187499998]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Falkland Is.",
                    childNum: 4
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [55.79736328125003, -21.33935546875003],
                                [55.36269531250005, -21.27363281250004],
                                [55.23281250000005, -21.05839843749999],
                                [55.311328125000074, -20.90410156249999],
                                [55.661914062500074, -20.90625],
                                [55.8390625000001, -21.13857421874998],
                                [55.79736328125003, -21.33935546875003]
                            ]
                        ],
                        [
                            [
                                [45.180273437500006, -12.97675781250004],
                                [45.069433593750006, -12.895605468750034],
                                [45.09238281250006, -12.653027343749997],
                                [45.22314453124997, -12.752148437500026],
                                [45.180273437500006, -12.97675781250004]
                            ]
                        ],
                        [
                            [
                                [-51.65253906249998, 4.061279296874972],
                                [-52.327880859375, 3.18173828125002],
                                [-52.58300781250003, 2.528906249999977],
                                [-52.90346679687502, 2.211523437499977],
                                [-53.76777343749998, 2.354833984375048],
                                [-54.13007812499998, 2.121044921875026],
                                [-54.43310546875, 2.207519531250057],
                                [-54.51508789062498, 2.245458984374963],
                                [-54.55048828125001, 2.293066406249991],
                                [-54.59194335937502, 2.313769531250031],
                                [-54.61625976562499, 2.326757812500006],
                                [-54.60473632812497, 2.335791015624991],
                                [-54.56840820312502, 2.342578125000031],
                                [-54.53593749999999, 2.343310546875003],
                                [-54.48554687500001, 2.416113281250006],
                                [-54.402001953124966, 2.46152343750002],
                                [-54.25673828125002, 2.713720703124977],
                                [-54.19550781249998, 2.817871093750057],
                                [-54.17070312499999, 2.993603515624969],
                                [-54.203125, 3.138183593750028],
                                [-54.18803710937499, 3.178759765625031],
                                [-54.063183593749955, 3.353320312499989],
                                [-54.00957031249993, 3.448535156250017],
                                [-54.03422851562499, 3.62939453125],
                                [-54.350732421874994, 4.054101562500023],
                                [-54.47968749999998, 4.836523437499991],
                                [-53.91992187499997, 5.768994140624983],
                                [-52.899316406249966, 5.425048828124986],
                                [-52.29052734375003, 4.942187500000031],
                                [-52.324609374999966, 4.770898437500037],
                                [-52.21997070312494, 4.862792968750014],
                                [-52.05810546875003, 4.717382812499963],
                                [-52.00292968749997, 4.352294921875014],
                                [-51.82753906250002, 4.635693359375026],
                                [-51.65253906249998, 4.061279296874972]
                            ]
                        ],
                        [
                            [
                                [-60.826269531250006, 14.494482421874991],
                                [-61.063720703125, 14.467089843750017],
                                [-61.01132812499998, 14.601904296875034],
                                [-61.21333007812501, 14.848583984375011],
                                [-60.927148437499966, 14.755175781249989],
                                [-60.826269531250006, 14.494482421874991]
                            ]
                        ],
                        [
                            [
                                [-61.23046875000003, 15.889941406250074],
                                [-61.310742187499955, 15.894677734374966],
                                [-61.25, 16.006298828124983],
                                [-61.23046875000003, 15.889941406250074]
                            ]
                        ],
                        [
                            [
                                [-61.58955078125001, 16.006933593750006],
                                [-61.759423828124966, 16.062060546875045],
                                [-61.74804687499997, 16.355273437500017],
                                [-61.55234374999998, 16.270898437499966],
                                [-61.58955078125001, 16.006933593750006]
                            ]
                        ],
                        [
                            [
                                [-61.3271484375, 16.230419921874983],
                                [-61.522167968749955, 16.22802734375003],
                                [-61.47119140624994, 16.506640625000045],
                                [-61.17260742187497, 16.25610351562497],
                                [-61.3271484375, 16.230419921874983]
                            ]
                        ],
                        [
                            [
                                [9.480371093750023, 42.80541992187503],
                                [9.550683593750051, 42.12973632812506],
                                [9.186132812500034, 41.38491210937502],
                                [8.80751953125008, 41.58837890625],
                                [8.886816406249977, 41.70068359375003],
                                [8.621875, 41.93071289062502],
                                [8.700976562500045, 42.09560546875002],
                                [8.565625, 42.35771484374996],
                                [8.81484375000008, 42.60791015625003],
                                [9.313378906250023, 42.71318359374999],
                                [9.363183593750051, 43.01738281249996],
                                [9.480371093750023, 42.80541992187503]
                            ]
                        ],
                        [
                            [
                                [-1.17832031249992, 45.904052734375],
                                [-1.213574218750011, 45.81660156250004],
                                [-1.388671874999972, 46.05039062500006],
                                [-1.17832031249992, 45.904052734375]
                            ]
                        ],
                        [
                            [
                                [5.789746093749983, 49.53828125000001],
                                [5.823437500000011, 49.50507812499998],
                                [5.9013671875, 49.48974609374997],
                                [5.928906250000011, 49.47753906249997],
                                [5.959472656250028, 49.45463867187502],
                                [6.01142578125004, 49.44545898437502],
                                [6.074121093750023, 49.45463867187502],
                                [6.119921875000017, 49.485205078125034],
                                [6.181054687500051, 49.498925781249966],
                                [6.344335937500006, 49.45273437499998],
                                [6.735449218750006, 49.16059570312498],
                                [7.450585937500051, 49.152197265625034],
                                [8.134863281250006, 48.97358398437498],
                                [7.616601562500023, 48.15678710937502],
                                [7.615625, 47.59272460937504],
                                [7.343164062499994, 47.43310546875003],
                                [7.136035156249989, 47.489843750000034],
                                [6.968359375000034, 47.453222656250034],
                                [6.900390625000028, 47.39423828125001],
                                [7.000585937500034, 47.339453125000034],
                                [7.000585937500034, 47.32250976562506],
                                [6.978515625000057, 47.30205078124996],
                                [6.95205078125008, 47.26718750000006],
                                [6.820703125000051, 47.163183593750006],
                                [6.688085937500034, 47.05825195312505],
                                [6.66689453125008, 47.026513671874966],
                                [6.624804687500017, 47.00434570312498],
                                [6.45625, 46.948339843750034],
                                [6.438646763392874, 46.774418247767855],
                                [6.129687500000045, 46.56699218750006],
                                [6.118111049107182, 46.447459542410726],
                                [6.095898437500011, 46.279394531250006],
                                [5.970019531250045, 46.214697265625034],
                                [5.971484375000074, 46.151220703125006],
                                [6.006640625000045, 46.14233398437506],
                                [6.086621093750068, 46.14702148437502],
                                [6.19941406250004, 46.19306640624998],
                                [6.234667968750045, 46.332617187500006],
                                [6.321875, 46.39370117187502],
                                [6.428906250000011, 46.43051757812506],
                                [6.578222656250034, 46.437353515625034],
                                [6.758105468750017, 46.41577148437497],
                                [6.772070312500006, 46.16513671874998],
                                [6.897265625000017, 46.05175781249997],
                                [6.953710937500063, 46.017138671875045],
                                [7.00390625, 45.95883789062506],
                                [7.021093750000034, 45.92578124999997],
                                [6.790917968750023, 45.740869140624966],
                                [7.146386718750051, 45.381738281249994],
                                [7.07832031250004, 45.23994140624998],
                                [6.634765625000028, 45.06816406249996],
                                [6.99267578125, 44.82729492187502],
                                [6.900195312499989, 44.33574218749996],
                                [7.318554687500068, 44.13798828125002],
                                [7.637207031250057, 44.16484375],
                                [7.4931640625, 43.767138671875045],
                                [6.570214843750023, 43.199072265625034],
                                [6.115917968750011, 43.07236328124998],
                                [5.406542968750074, 43.228515625],
                                [5.05976562500004, 43.44453125000004],
                                [4.712109375000011, 43.373291015625],
                                [3.910839843750011, 43.563085937500034],
                                [3.258886718750063, 43.193212890625006],
                                [3.051757812500057, 42.915136718750006],
                                [3.21142578125, 42.43115234375],
                                [2.032714843750028, 42.353515625],
                                [1.927929687500068, 42.42631835937499],
                                [1.859765625000051, 42.457080078125045],
                                [1.7060546875, 42.50332031250005],
                                [1.709863281250051, 42.604443359374955],
                                [1.568164062500045, 42.63500976562506],
                                [1.501367187500023, 42.64272460937502],
                                [1.428320312499977, 42.59589843749998],
                                [.696875, 42.84511718750005],
                                [.631640625000045, 42.689599609374994],
                                [-.586425781249943, 42.798974609374966],
                                [-1.300048828124943, 43.10097656250002],
                                [-1.460839843749937, 43.05175781250006],
                                [-1.410693359374932, 43.240087890625034],
                                [-1.794042968749949, 43.407324218750006],
                                [-1.484863281249943, 43.56376953124999],
                                [-1.245507812499937, 44.55986328124999],
                                [-1.07695312499996, 44.68984375],
                                [-1.152880859374989, 44.764013671875006],
                                [-1.245214843749977, 44.66669921874998],
                                [-1.081005859374983, 45.532421874999955],
                                [-.548486328124966, 45.00058593750006],
                                [-.790771484375028, 45.46801757812497],
                                [-1.195996093749983, 45.714453125],
                                [-1.03173828125, 45.741064453125006],
                                [-1.14628906249996, 46.311376953125034],
                                [-1.786523437499937, 46.51484375000001],
                                [-2.059375, 46.81030273437497],
                                [-2.01889648437492, 47.03764648437502],
                                [-2.197070312499989, 47.16293945312506],
                                [-2.027587890625028, 47.27358398437502],
                                [-1.742529296874949, 47.21596679687502],
                                [-1.97539062499996, 47.31069335937505],
                                [-2.503125, 47.31206054687496],
                                [-2.427685546874983, 47.47089843749998],
                                [-2.770312499999989, 47.513867187499955],
                                [-2.787207031249949, 47.62553710937496],
                                [-4.312109374999949, 47.82290039062502],
                                [-4.678808593749949, 48.03950195312501],
                                [-4.32944335937492, 48.169970703125045],
                                [-4.577148437499943, 48.2900390625],
                                [-4.241406249999926, 48.30366210937501],
                                [-4.719384765624966, 48.363134765625034],
                                [-4.7625, 48.45024414062502],
                                [-4.531201171874983, 48.61997070312506],
                                [-3.231445312499972, 48.84082031250003],
                                [-2.692333984374983, 48.53681640624998],
                                [-2.446191406249937, 48.64829101562506],
                                [-2.00371093749996, 48.58208007812499],
                                [-1.905712890624955, 48.69711914062506],
                                [-1.376464843749972, 48.65258789062503],
                                [-1.565478515624932, 48.805517578125034],
                                [-1.583105468749977, 49.20239257812506],
                                [-1.856445312499972, 49.68378906249998],
                                [-1.258642578124949, 49.68017578125006],
                                [-1.138525390624977, 49.38789062500001],
                                [-.163476562499937, 49.296777343749994],
                                [.41689453125008, 49.448388671874994],
                                [.129394531250028, 49.508447265624966],
                                [.186718749999983, 49.703027343749994],
                                [1.245507812500051, 49.99824218750001],
                                [1.5927734375, 50.25219726562506],
                                [1.672265625000023, 50.885009765625],
                                [2.52490234375, 51.097119140624955],
                                [2.759375, 50.750634765624994],
                                [3.10683593750008, 50.779443359374994],
                                [3.27333984375008, 50.53154296875002],
                                [3.595410156250068, 50.47734374999999],
                                [3.689355468750023, 50.30605468750002],
                                [4.174609375000017, 50.24648437500005],
                                [4.149316406250023, 49.971582031249994],
                                [4.545019531250063, 49.96025390624999],
                                [4.818652343750045, 50.153173828125034],
                                [4.867578125000051, 49.78813476562502],
                                [5.50732421875, 49.51088867187502],
                                [5.789746093749983, 49.53828125000001]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "France",
                    childNum: 10,
                    cp: [2.8719426, 46.8222422]
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-7.186865234374949, 62.139306640624966],
                                [-7.116796874999977, 62.046826171874955],
                                [-7.379101562499926, 62.07480468749998],
                                [-7.186865234374949, 62.139306640624966]
                            ]
                        ],
                        [
                            [
                                [-6.631054687499955, 62.22788085937498],
                                [-6.655810546874932, 62.09360351562498],
                                [-6.840527343749983, 62.119287109374994],
                                [-6.725195312499949, 61.95146484374999],
                                [-7.17216796874996, 62.28559570312501],
                                [-6.631054687499955, 62.22788085937498]
                            ]
                        ],
                        [
                            [
                                [-6.406054687499932, 62.258642578125034],
                                [-6.544140624999926, 62.20561523437499],
                                [-6.554589843749994, 62.35566406250001],
                                [-6.406054687499932, 62.258642578125034]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Faeroe Is.",
                    childNum: 3
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [158.31484375, 6.813671875],
                                [158.18339843750002, 6.801269531250057],
                                [158.13476562499997, 6.944824218749986],
                                [158.29462890625004, 6.951074218750023],
                                [158.31484375, 6.813671875]
                            ]
                        ],
                        [
                            [
                                [138.14267578125006, 9.50068359375004],
                                [138.06708984375004, 9.419042968750006],
                                [138.18583984375007, 9.593310546874989],
                                [138.14267578125006, 9.50068359375004]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Micronesia",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [13.293554687500006, 2.161572265624997],
                            [13.172167968750017, 1.78857421875],
                            [13.21630859375, 1.2484375],
                            [13.851367187500017, 1.41875],
                            [14.180859375000011, 1.370214843749991],
                            [14.429882812500011, .901464843749991],
                            [14.32421875, .62421875],
                            [13.949609375000023, .353808593749989],
                            [13.860058593750011, -.203320312500011],
                            [14.47412109375, -.573437500000011],
                            [14.383984375000011, -1.890039062500009],
                            [14.162890625000017, -2.217578125],
                            [14.199804687500006, -2.354199218750011],
                            [13.993847656250011, -2.490625],
                            [13.886914062500011, -2.465429687500006],
                            [13.733789062500023, -2.138476562500003],
                            [13.464941406250006, -2.395410156250009],
                            [12.991992187500017, -2.313378906250009],
                            [12.793554687500006, -1.931835937500011],
                            [12.590429687500006, -1.826855468750011],
                            [12.43212890625, -1.928906250000011],
                            [12.446386718750006, -2.329980468750009],
                            [12.064453125, -2.41259765625],
                            [11.60546875, -2.342578125],
                            [11.537792968750011, -2.83671875],
                            [11.760156250000023, -2.983105468750011],
                            [11.715429687500006, -3.176953125000011],
                            [11.934179687500006, -3.318554687500011],
                            [11.8798828125, -3.665917968750009],
                            [11.685742187500011, -3.68203125],
                            [11.504296875000023, -3.5203125],
                            [11.234472656250006, -3.690820312500009],
                            [11.130175781250017, -3.916308593750003],
                            [10.34765625, -3.013085937500009],
                            [9.722070312500023, -2.467578125],
                            [10.06201171875, -2.549902343750006],
                            [9.624609375, -2.367089843750009],
                            [9.298925781250006, -1.903027343750011],
                            [9.483203125000017, -1.894628906250006],
                            [9.265625, -1.825097656250009],
                            [9.036328125000011, -1.308886718750003],
                            [9.31884765625, -1.632031250000011],
                            [9.501074218750006, -1.55517578125],
                            [9.295800781250023, -1.515234375],
                            [9.3466796875, -1.325],
                            [9.203808593750011, -1.382421875],
                            [9.064648437500011, -1.29833984375],
                            [8.703125, -.591015625000011],
                            [8.946386718750006, -.688769531250003],
                            [9.296679687500017, -.351269531250011],
                            [9.354882812500023, .343603515624991],
                            [9.468164062500023, .15976562499999],
                            [9.796777343750023, .044238281249989],
                            [10.00146484375, .194970703124994],
                            [9.546484375, .295947265624989],
                            [9.324804687500006, .552099609374991],
                            [9.495312500000011, .664843749999989],
                            [9.617968750000017, .576513671874991],
                            [9.5908203125, 1.031982421875],
                            [9.636132812500023, 1.046679687499989],
                            [9.676464843750011, 1.07470703125],
                            [9.70458984375, 1.079980468749994],
                            [9.760546875000017, 1.07470703125],
                            [9.788671875, 1.025683593749989],
                            [9.803906250000011, .998730468749997],
                            [9.90673828125, .960107421874994],
                            [11.335351562500023, .999707031249997],
                            [11.332324218750017, 1.528369140624989],
                            [11.328710937500006, 2.167431640624997],
                            [11.348437500000017, 2.299707031249994],
                            [11.558984375000023, 2.302197265624997],
                            [13.2203125, 2.256445312499991],
                            [13.293554687500006, 2.161572265624997]
                        ]
                    ]
                },
                properties: {
                    name: "Gabon",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-1.065576171874966, 50.69023437500002],
                                [-1.25146484375, 50.58881835937498],
                                [-1.563427734374955, 50.666113281250006],
                                [-1.31279296874996, 50.77348632812502],
                                [-1.065576171874966, 50.69023437500002]
                            ]
                        ],
                        [
                            [
                                [-4.196777343749972, 53.321435546874966],
                                [-4.04936523437496, 53.30576171874998],
                                [-4.373046875, 53.13417968750002],
                                [-4.56787109375, 53.386474609375],
                                [-4.315087890625023, 53.41723632812503],
                                [-4.196777343749972, 53.321435546874966]
                            ]
                        ],
                        [
                            [
                                [-6.218017578125, 54.08872070312506],
                                [-6.649804687499937, 54.05864257812496],
                                [-7.007714843749937, 54.40668945312501],
                                [-7.324511718750017, 54.13344726562502],
                                [-7.606542968750006, 54.14384765625002],
                                [-8.118261718749977, 54.41425781250004],
                                [-7.75439453125, 54.59492187499998],
                                [-7.910595703124955, 54.698339843750006],
                                [-7.55039062499992, 54.767968749999966],
                                [-7.218652343749937, 55.09199218749998],
                                [-6.475048828124955, 55.24101562499999],
                                [-6.035791015624994, 55.14453125000003],
                                [-5.71684570312496, 54.817480468750034],
                                [-5.878613281249955, 54.64130859375001],
                                [-5.582519531249943, 54.66342773437498],
                                [-5.470410156249926, 54.500195312499955],
                                [-5.671093749999955, 54.54975585937501],
                                [-5.60678710937492, 54.272558593750034],
                                [-6.019042968749972, 54.05126953124997],
                                [-6.218017578125, 54.08872070312506]
                            ]
                        ],
                        [
                            [
                                [-5.105419921875011, 55.448828125000034],
                                [-5.331494140624955, 55.481054687500034],
                                [-5.318115234375, 55.709179687499955],
                                [-5.105419921875011, 55.448828125000034]
                            ]
                        ],
                        [
                            [
                                [-6.128906249999972, 55.93056640625002],
                                [-6.055322265624994, 55.69531249999997],
                                [-6.305078124999966, 55.60693359375],
                                [-6.286425781249989, 55.77250976562499],
                                [-6.491357421874994, 55.697314453125045],
                                [-6.462841796874955, 55.808251953124994],
                                [-6.128906249999972, 55.93056640625002]
                            ]
                        ],
                        [
                            [
                                [-5.970068359374949, 55.814550781250034],
                                [-6.071972656250011, 55.893115234375045],
                                [-5.72514648437496, 56.118554687499966],
                                [-5.970068359374949, 55.814550781250034]
                            ]
                        ],
                        [
                            [
                                [-5.77788085937496, 56.344335937500034],
                                [-6.313427734374983, 56.29365234375001],
                                [-6.138867187499955, 56.490625],
                                [-6.286328124999983, 56.61186523437502],
                                [-6.102734374999955, 56.645654296874966],
                                [-5.760839843749949, 56.49067382812501],
                                [-5.77788085937496, 56.344335937500034]
                            ]
                        ],
                        [
                            [
                                [-7.249853515624977, 57.115332031250006],
                                [-7.410546874999937, 57.38110351562506],
                                [-7.26713867187496, 57.37177734375001],
                                [-7.249853515624977, 57.115332031250006]
                            ]
                        ],
                        [
                            [
                                [-6.144726562499983, 57.50498046874998],
                                [-6.135546874999989, 57.31425781250002],
                                [-5.672460937499977, 57.252685546875],
                                [-5.94907226562492, 57.045166015625],
                                [-6.034375, 57.20122070312499],
                                [-6.322705078124926, 57.20249023437498],
                                [-6.761132812499994, 57.4423828125],
                                [-6.305957031249989, 57.67197265624998],
                                [-6.144726562499983, 57.50498046874998]
                            ]
                        ],
                        [
                            [
                                [-7.205566406250028, 57.682958984375006],
                                [-7.182617187499972, 57.53330078125006],
                                [-7.514746093749949, 57.60195312500002],
                                [-7.205566406250028, 57.682958984375006]
                            ]
                        ],
                        [
                            [
                                [-6.198681640624983, 58.36328125000003],
                                [-6.554589843749994, 58.092871093750006],
                                [-6.425195312499937, 58.02128906249999],
                                [-6.983105468749983, 57.75],
                                [-7.083447265624926, 57.81376953124999],
                                [-6.856835937499937, 57.92353515624998],
                                [-7.085253906249932, 58.18217773437499],
                                [-6.726464843749937, 58.189404296874955],
                                [-6.776464843750006, 58.30151367187497],
                                [-6.237451171874966, 58.50283203125005],
                                [-6.198681640624983, 58.36328125000003]
                            ]
                        ],
                        [
                            [
                                [-3.109667968749932, 58.515478515625034],
                                [-3.212353515624983, 58.32124023437501],
                                [-3.99003906249996, 57.95903320312502],
                                [-4.035595703124926, 57.85200195312498],
                                [-3.857128906249983, 57.81855468750001],
                                [-4.134521484375, 57.57773437500006],
                                [-3.402783203124955, 57.708251953125],
                                [-2.074072265624977, 57.70239257812506],
                                [-1.780664062499994, 57.474023437499966],
                                [-2.592675781249937, 56.56157226562499],
                                [-3.309960937499966, 56.36347656250004],
                                [-2.885156249999937, 56.397509765625045],
                                [-2.674267578124955, 56.25341796875],
                                [-3.362255859374955, 56.02763671875002],
                                [-3.789062499999972, 56.09521484375],
                                [-3.048730468749937, 55.951953125000045],
                                [-2.599316406249955, 56.02729492187501],
                                [-2.14707031249992, 55.90297851562502],
                                [-1.655371093749949, 55.57036132812502],
                                [-1.232421874999943, 54.703710937500034],
                                [-.084375, 54.118066406249994],
                                [-.20556640625, 54.021728515625],
                                [.115332031250006, 53.609277343749994],
                                [-.270019531249972, 53.73676757812504],
                                [-.659912109375, 53.72402343750002],
                                [-.293701171875, 53.69233398437504],
                                [.270996093750028, 53.33549804687499],
                                [.355761718750045, 53.15996093750002],
                                [.0458984375, 52.90561523437498],
                                [.279785156250028, 52.80869140625006],
                                [.55878906250004, 52.96694335937505],
                                [1.05556640625008, 52.95898437500003],
                                [1.656738281249972, 52.753710937500045],
                                [1.74658203125, 52.46899414062503],
                                [1.59140625, 52.11977539062502],
                                [1.232421875000057, 51.97124023437496],
                                [1.188476562500057, 51.803369140624966],
                                [.752246093750017, 51.729589843750034],
                                [.890917968750017, 51.571435546874966],
                                [.42451171875004, 51.465625],
                                [1.414941406250023, 51.36328125],
                                [1.397558593750034, 51.18203125000002],
                                [.960156250000011, 50.92587890624998],
                                [.299707031249994, 50.775976562500006],
                                [-.785253906249949, 50.76542968749999],
                                [-1.416455078124955, 50.896875],
                                [-1.334472656249943, 50.82080078124997],
                                [-1.516748046874937, 50.747460937499966],
                                [-2.031054687499932, 50.72539062499999],
                                [-2.035839843749926, 50.603076171875045],
                                [-2.999414062499937, 50.71660156249999],
                                [-3.40458984374996, 50.63242187499998],
                                [-3.679785156250006, 50.239941406249955],
                                [-4.194580078124972, 50.39331054687503],
                                [-4.727978515624926, 50.29047851562504],
                                [-5.11850585937492, 50.038330078125],
                                [-5.622119140624932, 50.05068359375002],
                                [-4.188183593749926, 51.18852539062502],
                                [-3.135986328124972, 51.20502929687501],
                                [-2.433056640624926, 51.74072265625],
                                [-3.293115234374994, 51.390429687500045],
                                [-3.890771484374994, 51.591650390625006],
                                [-4.234570312499955, 51.56909179687503],
                                [-4.091015624999926, 51.65991210937506],
                                [-4.38627929687496, 51.74106445312506],
                                [-4.902294921874926, 51.626269531250045],
                                [-5.168359374999937, 51.74072265625],
                                [-5.183349609374972, 51.94965820312501],
                                [-4.217724609374983, 52.277441406250006],
                                [-3.980322265624949, 52.54174804687503],
                                [-4.101464843750023, 52.915478515624955],
                                [-4.683056640624926, 52.80615234374997],
                                [-4.268554687499943, 53.14453125],
                                [-3.427734374999972, 53.34067382812498],
                                [-3.097558593749937, 53.260302734375045],
                                [-3.064746093749932, 53.426855468750034],
                                [-2.74951171875, 53.310205078124994],
                                [-3.064599609374994, 53.512841796874966],
                                [-2.84648437499996, 54.135302734375045],
                                [-3.165966796874955, 54.12792968750006],
                                [-3.56938476562496, 54.46757812499996],
                                [-3.464599609374943, 54.77309570312505],
                                [-3.036230468749977, 54.95307617187501],
                                [-3.550439453124937, 54.94741210937502],
                                [-3.957910156249994, 54.780957031249955],
                                [-4.818066406249983, 54.84614257812501],
                                [-4.911230468749949, 54.68945312500006],
                                [-5.032324218749949, 54.76137695312505],
                                [-5.172705078124949, 54.98588867187496],
                                [-4.676757812499972, 55.50131835937498],
                                [-4.871679687499977, 55.87392578125005],
                                [-4.58408203124992, 55.93867187500001],
                                [-4.844091796874949, 56.05117187499999],
                                [-4.80029296875, 56.158349609374994],
                                [-5.228222656249983, 55.886328125],
                                [-5.084326171874977, 56.197460937499955],
                                [-5.41044921874996, 55.995361328125],
                                [-5.55644531249996, 55.389599609374955],
                                [-5.730664062499926, 55.33413085937502],
                                [-5.504492187499949, 55.80239257812502],
                                [-5.609570312499955, 56.055273437500034],
                                [-5.188378906249937, 56.75805664062503],
                                [-5.652441406249977, 56.531982421875],
                                [-6.133691406249966, 56.706689453124966],
                                [-5.730615234374994, 56.853076171875045],
                                [-5.86142578124992, 56.902685546875006],
                                [-5.561914062499994, 57.23271484375002],
                                [-5.794921874999972, 57.37880859375002],
                                [-5.581787109374972, 57.546777343749966],
                                [-5.744921874999989, 57.668310546875034],
                                [-5.608349609374955, 57.88134765625],
                                [-5.157226562499972, 57.88134765625],
                                [-5.413183593750006, 58.06972656250002],
                                [-5.338281250000023, 58.23872070312498],
                                [-5.008300781250028, 58.262646484374955],
                                [-5.016748046874966, 58.566552734374966],
                                [-4.433251953124937, 58.51284179687505],
                                [-3.25913085937492, 58.65],
                                [-3.053076171874949, 58.63481445312502],
                                [-3.109667968749932, 58.515478515625034]
                            ]
                        ],
                        [
                            [
                                [-3.057421874999932, 59.02963867187498],
                                [-2.793017578124989, 58.906933593749955],
                                [-3.331640624999949, 58.97124023437499],
                                [-3.31035156249996, 59.13081054687498],
                                [-3.057421874999932, 59.02963867187498]
                            ]
                        ],
                        [
                            [
                                [-1.30810546875, 60.5375],
                                [-1.052441406249955, 60.44448242187502],
                                [-1.299462890624994, 59.87866210937503],
                                [-1.290917968749937, 60.153466796874966],
                                [-1.663769531249983, 60.282519531250074],
                                [-1.374609374999949, 60.33291015625002],
                                [-1.571777343749972, 60.494433593750074],
                                [-1.363964843750011, 60.60957031249998],
                                [-1.30810546875, 60.5375]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "United Kingdom",
                    childNum: 14,
                    cp: [-2.5830348, 54.4598409]
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [46.30546875000002, 41.507714843749994],
                            [46.61894531250002, 41.34375],
                            [46.67255859375001, 41.28681640625],
                            [46.66240234375002, 41.245507812499994],
                            [46.62636718750002, 41.15966796875],
                            [46.534375, 41.08857421875],
                            [46.43095703125002, 41.077050781249994],
                            [46.086523437500006, 41.183837890625],
                            [45.28095703125001, 41.449560546875],
                            [45.21718750000002, 41.423193359375],
                            [45.00136718750002, 41.290966796875],
                            [44.97587890625002, 41.277490234374994],
                            [44.81132812500002, 41.259375],
                            [44.077246093750006, 41.182519531249994],
                            [43.43339843750002, 41.155517578125],
                            [43.20546875000002, 41.199169921875],
                            [43.15283203125, 41.23642578125],
                            [43.14101562500002, 41.26484375],
                            [43.17128906250002, 41.287939453125],
                            [43.149023437500006, 41.30712890625],
                            [43.05712890625, 41.352832031249996],
                            [42.90673828125, 41.466845703124996],
                            [42.82167968750002, 41.4923828125],
                            [42.78789062500002, 41.563720703125],
                            [42.75410156250001, 41.57890625],
                            [42.68242187500002, 41.585742187499996],
                            [42.60683593750002, 41.57880859375],
                            [42.590429687500006, 41.57070312499999],
                            [42.5673828125, 41.55927734375],
                            [42.46640625, 41.43984375],
                            [41.92578125, 41.495654296874996],
                            [41.82353515625002, 41.432373046875],
                            [41.779394531250006, 41.44052734375],
                            [41.701757812500006, 41.471582031249994],
                            [41.57656250000002, 41.497314453125],
                            [41.51005859375002, 41.517480468749994],
                            [41.701757812500006, 41.705419921875],
                            [41.76298828125002, 41.970019531249996],
                            [41.48876953125, 42.659326171874994],
                            [40.83662109375001, 43.0634765625],
                            [40.46210937500001, 43.145703125],
                            [39.97832031250002, 43.419824218749994],
                            [40.02373046875002, 43.48486328125],
                            [40.084570312500006, 43.553125],
                            [40.648046875, 43.53388671875],
                            [40.941992187500006, 43.41806640625],
                            [41.083105468750006, 43.374462890625],
                            [41.35820312500002, 43.333398437499994],
                            [41.46074218750002, 43.276318359375],
                            [41.58056640625, 43.21923828125],
                            [42.76064453125002, 43.169580078124994],
                            [42.99160156250002, 43.09150390625],
                            [43.00019531250001, 43.049658203125],
                            [43.08916015625002, 42.9890625],
                            [43.55781250000001, 42.844482421875],
                            [43.623046875, 42.80771484375],
                            [43.78261718750002, 42.747021484375],
                            [43.79873046875002, 42.727783203125],
                            [43.79541015625, 42.702978515625],
                            [43.74990234375002, 42.657519531249996],
                            [43.738378906250006, 42.616992187499996],
                            [43.759863281250006, 42.59384765625],
                            [43.82597656250002, 42.571533203125],
                            [43.95742187500002, 42.566552734374994],
                            [44.00468750000002, 42.595605468749994],
                            [44.10273437500001, 42.616357421874994],
                            [44.32949218750002, 42.70351562499999],
                            [44.505859375, 42.7486328125],
                            [44.77109375, 42.616796875],
                            [44.85048828125002, 42.746826171875],
                            [44.87099609375002, 42.756396484374996],
                            [44.943359375, 42.730273437499996],
                            [45.07158203125002, 42.694140625],
                            [45.160253906250006, 42.675],
                            [45.34375, 42.52978515625],
                            [45.56289062500002, 42.5357421875],
                            [45.70527343750001, 42.498095703124996],
                            [45.7275390625, 42.475048828125],
                            [45.63427734375, 42.234716796875],
                            [45.63857421875002, 42.205078125],
                            [46.21269531250002, 41.989892578124994],
                            [46.42988281250001, 41.890966796875],
                            [46.18427734375001, 41.7021484375],
                            [46.30546875000002, 41.507714843749994]
                        ]
                    ]
                },
                properties: {
                    name: "Georgia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-.068603515625, 11.115625],
                            [.009423828125023, 11.02099609375],
                            [-.08632812499999, 10.673046875],
                            [.380859375, 10.291845703124991],
                            [.264550781250023, 9.644726562499997],
                            [.342578125000017, 9.604150390624994],
                            [.2333984375, 9.463525390624994],
                            [.525683593750017, 9.398486328124989],
                            [.48876953125, 8.851464843749994],
                            [.37255859375, 8.75927734375],
                            [.686328125000017, 8.354882812499994],
                            [.5, 7.546875],
                            [.634765625, 7.353662109374994],
                            [.525585937500011, 6.850927734374991],
                            [.736914062500006, 6.452587890624997],
                            [1.187207031250011, 6.089404296874989],
                            [.94970703125, 5.810253906249997],
                            [.259667968750023, 5.75732421875],
                            [-2.001855468749994, 4.762451171875],
                            [-3.114013671875, 5.088671874999989],
                            [-2.815673828125, 5.153027343749997],
                            [-2.754980468749977, 5.432519531249994],
                            [-2.793652343749983, 5.60009765625],
                            [-2.998291015625, 5.71132812499999],
                            [-3.227148437499977, 6.749121093749991],
                            [-2.959082031249977, 7.454541015624997],
                            [-2.789746093749983, 7.931933593749989],
                            [-2.668847656249994, 8.022216796875],
                            [-2.613378906249977, 8.046679687499989],
                            [-2.600976562499994, 8.082226562499997],
                            [-2.619970703124977, 8.12109375],
                            [-2.61171875, 8.147558593749991],
                            [-2.538281249999983, 8.171630859375],
                            [-2.505859375, 8.208740234375],
                            [-2.600390624999989, 8.800439453124994],
                            [-2.649218749999989, 8.956591796874989],
                            [-2.689892578124983, 9.025097656249997],
                            [-2.746923828124977, 9.045117187499997],
                            [-2.705761718749983, 9.351367187499989],
                            [-2.695849609374989, 9.481347656249994],
                            [-2.706201171874994, 9.533935546875],
                            [-2.765966796874977, 9.658056640624991],
                            [-2.780517578125, 9.745849609375],
                            [-2.791162109374994, 10.432421874999989],
                            [-2.914892578124977, 10.592333984374989],
                            [-2.829931640624977, 10.998388671874991],
                            [-1.04248046875, 11.010058593749989],
                            [-.627148437499983, 10.927392578124994],
                            [-.299462890624994, 11.166894531249994],
                            [-.068603515625, 11.115625]
                        ]
                    ]
                },
                properties: {
                    name: "Ghana",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-11.389404296875, 12.404394531249991],
                            [-11.502197265625, 12.198632812499994],
                            [-11.30517578125, 12.015429687499989],
                            [-10.933203124999977, 12.205175781249991],
                            [-10.709228515625, 11.898730468749989],
                            [-10.274853515624983, 12.212646484375],
                            [-9.754003906249977, 12.029931640624994],
                            [-9.358105468749983, 12.255419921874989],
                            [-9.395361328124977, 12.464648437499989],
                            [-9.043066406249977, 12.40234375],
                            [-8.818310546874983, 11.922509765624994],
                            [-8.822021484375, 11.673242187499994],
                            [-8.398535156249977, 11.366552734374991],
                            [-8.666699218749983, 11.009472656249997],
                            [-8.33740234375, 10.990625],
                            [-8.266650390624989, 10.485986328124994],
                            [-8.007275390624983, 10.321875],
                            [-7.990625, 10.1625],
                            [-8.155175781249994, 9.973193359374989],
                            [-8.136962890625, 9.49570312499999],
                            [-7.896191406249983, 9.415869140624991],
                            [-7.918066406249977, 9.188525390624989],
                            [-7.839404296874989, 9.151611328125],
                            [-7.7998046875, 9.115039062499989],
                            [-7.777978515624994, 9.080859374999989],
                            [-7.902099609375, 9.01708984375],
                            [-7.938183593749983, 8.979785156249989],
                            [-7.950976562499989, 8.786816406249997],
                            [-7.719580078124977, 8.643017578124997],
                            [-7.696093749999989, 8.375585937499991],
                            [-7.823583984374977, 8.467675781249994],
                            [-7.953125, 8.477734375],
                            [-8.236962890624994, 8.455664062499991],
                            [-8.244140625, 8.407910156249997],
                            [-8.256103515625, 8.253710937499989],
                            [-8.217138671874977, 8.219677734374997],
                            [-8.140625, 8.181445312499989],
                            [-8.048583984375, 8.169726562499989],
                            [-8.009863281249977, 8.07851562499999],
                            [-8.126855468749994, 7.867724609374989],
                            [-8.115429687499983, 7.7607421875],
                            [-8.205957031249994, 7.59023437499999],
                            [-8.231884765624983, 7.556738281249991],
                            [-8.429980468749989, 7.601855468749989],
                            [-8.486425781249977, 7.558496093749994],
                            [-8.659765624999977, 7.688378906249994],
                            [-8.8896484375, 7.2626953125],
                            [-9.11757812499999, 7.215917968749991],
                            [-9.463818359374983, 7.415869140624991],
                            [-9.369140625, 7.703808593749997],
                            [-9.518261718749983, 8.34609375],
                            [-9.781982421875, 8.537695312499991],
                            [-10.064355468749994, 8.429882812499997],
                            [-10.147412109374983, 8.519726562499997],
                            [-10.233056640624994, 8.488818359374989],
                            [-10.283203125, 8.485156249999989],
                            [-10.360058593749983, 8.495507812499994],
                            [-10.394433593749994, 8.48095703125],
                            [-10.496435546874977, 8.362109374999989],
                            [-10.557714843749977, 8.315673828125],
                            [-10.686962890624983, 8.321679687499994],
                            [-10.712109374999983, 8.335253906249989],
                            [-10.677343749999977, 8.400585937499997],
                            [-10.500537109374989, 8.687548828124989],
                            [-10.615966796875, 9.059179687499991],
                            [-10.726855468749989, 9.081689453124994],
                            [-10.747021484374983, 9.095263671874989],
                            [-10.749951171874983, 9.122363281249989],
                            [-10.687646484374994, 9.261132812499994],
                            [-10.682714843749977, 9.289355468749989],
                            [-10.758593749999989, 9.385351562499991],
                            [-11.047460937499977, 9.786328125],
                            [-11.180859374999983, 9.925341796874989],
                            [-11.205664062499977, 9.977734375],
                            [-11.273632812499983, 9.996533203124997],
                            [-11.911083984374983, 9.993017578124991],
                            [-12.142333984375, 9.87539062499999],
                            [-12.427978515625, 9.898144531249997],
                            [-12.557861328125, 9.704980468749994],
                            [-12.755859375, 9.373583984374989],
                            [-12.958789062499989, 9.263330078124994],
                            [-13.077294921874994, 9.069628906249989],
                            [-13.292675781249983, 9.04921875],
                            [-13.436279296875, 9.4203125],
                            [-13.691357421874983, 9.535791015624994],
                            [-13.689794921874977, 9.927783203124989],
                            [-13.820117187499989, 9.88720703125],
                            [-14.045019531249977, 10.141259765624994],
                            [-14.426904296874994, 10.248339843749989],
                            [-14.609570312499983, 10.549853515624989],
                            [-14.593505859375, 10.766699218749991],
                            [-14.677343749999977, 10.68896484375],
                            [-14.775927734374989, 10.931640625],
                            [-14.88671875, 10.968066406249989],
                            [-14.975, 10.803417968749997],
                            [-15.051220703124983, 10.834570312499991],
                            [-15.043017578124989, 10.940136718749997],
                            [-14.9990234375, 10.9921875],
                            [-14.944433593749977, 11.072167968749994],
                            [-14.779296875, 11.405517578125],
                            [-14.720263671874989, 11.48193359375],
                            [-14.682958984374977, 11.508496093749997],
                            [-14.604785156249989, 11.511621093749994],
                            [-14.452441406249989, 11.556201171874989],
                            [-14.327832031249983, 11.629785156249994],
                            [-14.265576171874983, 11.659912109375],
                            [-14.122314453125, 11.65195312499999],
                            [-13.953222656249977, 11.664599609374989],
                            [-13.732763671874977, 11.736035156249997],
                            [-13.730664062499983, 11.959863281249994],
                            [-13.737988281249983, 12.009667968749994],
                            [-13.816308593749994, 12.054492187499989],
                            [-13.948876953124994, 12.178173828124997],
                            [-13.8875, 12.246875],
                            [-13.759765625, 12.262353515624994],
                            [-13.673535156249983, 12.478515625],
                            [-13.732617187499983, 12.592822265624989],
                            [-13.729248046875, 12.673925781249991],
                            [-13.082910156249994, 12.633544921875],
                            [-13.061279296875, 12.489990234375],
                            [-12.930712890624989, 12.532275390624989],
                            [-12.399072265624994, 12.340087890625],
                            [-11.389404296875, 12.404394531249991]
                        ]
                    ]
                },
                properties: {
                    name: "Guinea",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-16.763330078124994, 13.064160156249997],
                            [-16.824804687499977, 13.341064453125],
                            [-16.669335937499994, 13.475],
                            [-16.41337890624999, 13.269726562499997],
                            [-15.427490234375, 13.46835937499999],
                            [-16.135449218749983, 13.4482421875],
                            [-16.351806640625, 13.34335937499999],
                            [-16.56230468749999, 13.587304687499994],
                            [-15.509667968749994, 13.586230468750003],
                            [-15.426855468749977, 13.727001953124997],
                            [-15.108349609374983, 13.81210937499999],
                            [-14.405468749999983, 13.503710937500003],
                            [-13.977392578124977, 13.54345703125],
                            [-13.826708984374989, 13.4078125],
                            [-14.246777343749983, 13.23583984375],
                            [-15.151123046875, 13.556494140624991],
                            [-15.286230468749977, 13.39599609375],
                            [-15.814404296874983, 13.325146484374997],
                            [-15.834277343749989, 13.156445312499997],
                            [-16.648779296874977, 13.154150390624991],
                            [-16.763330078124994, 13.064160156249997]
                        ]
                    ]
                },
                properties: {
                    name: "Gambia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-15.895898437499966, 11.082470703124969],
                                [-15.963964843749977, 11.05898437499998],
                                [-15.937695312499955, 11.192773437499966],
                                [-15.895898437499966, 11.082470703124969]
                            ]
                        ],
                        [
                            [
                                [-16.11450195312503, 11.059423828124977],
                                [-16.236425781249977, 11.113427734374966],
                                [-16.06733398437501, 11.197216796874983],
                                [-16.11450195312503, 11.059423828124977]
                            ]
                        ],
                        [
                            [
                                [-15.901806640624926, 11.4658203125],
                                [-16.02319335937497, 11.477148437499991],
                                [-15.964550781249926, 11.59829101562498],
                                [-15.901806640624926, 11.4658203125]
                            ]
                        ],
                        [
                            [
                                [-15.986425781249949, 11.882031249999969],
                                [-16.038330078124943, 11.759716796875011],
                                [-16.15244140624992, 11.876806640624963],
                                [-15.986425781249949, 11.882031249999969]
                            ]
                        ],
                        [
                            [
                                [-13.759765625, 12.262353515624994],
                                [-13.8875, 12.246875],
                                [-13.948876953124966, 12.178173828124997],
                                [-13.737988281250011, 12.009667968750037],
                                [-13.730664062499926, 11.959863281250009],
                                [-13.73276367187492, 11.736035156249983],
                                [-13.953222656249977, 11.664599609374989],
                                [-14.265576171874926, 11.659912109375014],
                                [-14.327832031250011, 11.629785156250009],
                                [-14.452441406249989, 11.556201171875017],
                                [-14.604785156249932, 11.511621093749994],
                                [-14.682958984374949, 11.508496093749983],
                                [-14.720263671875017, 11.481933593749986],
                                [-14.779296874999972, 11.405517578125057],
                                [-14.944433593749949, 11.072167968749994],
                                [-14.999023437499972, 10.992187500000043],
                                [-15.04301757812496, 10.940136718750011],
                                [-15.09375, 11.011035156249974],
                                [-15.054589843749994, 11.141943359375006],
                                [-15.222119140624926, 11.030908203125037],
                                [-15.216699218749994, 11.15625],
                                [-15.39311523437496, 11.217236328124983],
                                [-15.354687499999955, 11.396337890624963],
                                [-15.479492187499972, 11.410302734374966],
                                [-15.072656249999937, 11.597802734374966],
                                [-15.230371093750023, 11.686767578124972],
                                [-15.412988281249994, 11.615234374999972],
                                [-15.501904296875011, 11.723779296874966],
                                [-15.467187499999937, 11.842822265624974],
                                [-15.078271484374937, 11.968994140625014],
                                [-15.941748046875006, 11.786621093749986],
                                [-15.92021484374996, 11.93779296874996],
                                [-16.138427734375, 11.917285156250045],
                                [-16.32807617187501, 12.051611328124963],
                                [-16.244580078124955, 12.237109375],
                                [-16.43681640624996, 12.204150390625045],
                                [-16.711816406249937, 12.354833984375006],
                                [-16.656933593749955, 12.364355468749991],
                                [-16.52133789062495, 12.348632812499986],
                                [-16.41630859374996, 12.367675781250057],
                                [-16.24150390624996, 12.443310546875011],
                                [-16.144189453124937, 12.457421875000037],
                                [-15.839550781249955, 12.437890624999966],
                                [-15.57480468749992, 12.490380859375009],
                                [-15.19609375, 12.679931640624986],
                                [-14.3492187499999, 12.67641601562498],
                                [-14.064843749999966, 12.675292968750014],
                                [-13.729248046875, 12.673925781250006],
                                [-13.732617187499983, 12.592822265625003],
                                [-13.673535156249926, 12.478515624999986],
                                [-13.759765625, 12.262353515624994]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Guinea-Bissau",
                    childNum: 5
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [11.332324218750017, 1.528369140624989],
                                [11.335351562500023, .999707031250011],
                                [9.906738281250028, .960107421875037],
                                [9.80390625000004, .998730468749997],
                                [9.788671875000034, 1.025683593749974],
                                [9.760546874999989, 1.074707031250014],
                                [9.704589843750057, 1.079980468750023],
                                [9.676464843750011, 1.074707031250014],
                                [9.636132812500051, 1.046679687499989],
                                [9.590820312500057, 1.031982421875014],
                                [9.599414062500045, 1.054443359374972],
                                [9.509863281250006, 1.114794921875017],
                                [9.385937500000068, 1.13925781250002],
                                [9.807031250000051, 1.927490234375028],
                                [9.77968750000008, 2.068212890625006],
                                [9.800781250000028, 2.304443359375],
                                [9.826171875000057, 2.297802734374969],
                                [9.8369140625, 2.242382812500054],
                                [9.870117187500028, 2.21328125],
                                [9.979882812499994, 2.167773437500045],
                                [10.790917968750023, 2.167578125],
                                [11.096582031250051, 2.167480468749986],
                                [11.328710937500006, 2.167431640624969],
                                [11.332324218750017, 1.528369140624989]
                            ]
                        ],
                        [
                            [
                                [8.735742187500023, 3.758300781249972],
                                [8.910058593750023, 3.758203125000051],
                                [8.946093750000074, 3.627539062499977],
                                [8.704003906250051, 3.223632812500028],
                                [8.474902343749989, 3.264648437500043],
                                [8.464648437500045, 3.450585937499994],
                                [8.735742187500023, 3.758300781249972]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Eq. Guinea",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [23.852246093749983, 35.53544921874999],
                                [24.166015625000057, 35.59521484375],
                                [24.108984374999977, 35.49580078124998],
                                [24.35400390625, 35.359472656250034],
                                [25.73017578125004, 35.34858398437501],
                                [25.791308593750074, 35.122851562500045],
                                [26.32021484375008, 35.315136718749955],
                                [26.165625, 35.018603515625045],
                                [24.79980468750003, 34.93447265625002],
                                [24.70888671875008, 35.08906250000001],
                                [24.463671875000045, 35.160351562499955],
                                [23.59277343749997, 35.257226562499966],
                                [23.56982421875, 35.534765625000034],
                                [23.67265624999999, 35.51391601562506],
                                [23.736914062500034, 35.65551757812503],
                                [23.852246093749983, 35.53544921874999]
                            ]
                        ],
                        [
                            [
                                [27.17607421874999, 35.46528320312498],
                                [27.070703125000023, 35.59775390624998],
                                [27.22314453125, 35.820458984374966],
                                [27.17607421874999, 35.46528320312498]
                            ]
                        ],
                        [
                            [
                                [23.053808593750034, 36.18979492187498],
                                [22.91083984375004, 36.220996093750045],
                                [22.950488281250045, 36.38393554687502],
                                [23.053808593750034, 36.18979492187498]
                            ]
                        ],
                        [
                            [
                                [27.84277343750003, 35.929296875000034],
                                [27.71552734375004, 35.95732421874996],
                                [27.71630859375003, 36.17158203125001],
                                [28.23183593750005, 36.43364257812502],
                                [28.087792968750023, 36.06533203125002],
                                [27.84277343750003, 35.929296875000034]
                            ]
                        ],
                        [
                            [
                                [25.48242187500003, 36.39262695312502],
                                [25.37050781250005, 36.35893554687499],
                                [25.408984375000074, 36.473730468750006],
                                [25.48242187500003, 36.39262695312502]
                            ]
                        ],
                        [
                            [
                                [26.46064453125001, 36.58540039062501],
                                [26.270019531250057, 36.54692382812499],
                                [26.370019531250023, 36.63857421875002],
                                [26.46064453125001, 36.58540039062501]
                            ]
                        ],
                        [
                            [
                                [26.94960937500005, 36.72709960937502],
                                [27.214941406250006, 36.89863281249998],
                                [27.352148437499977, 36.86889648437506],
                                [26.94960937500005, 36.72709960937502]
                            ]
                        ],
                        [
                            [
                                [25.859375, 36.79042968750005],
                                [25.74316406250003, 36.78974609374998],
                                [26.06445312500003, 36.90273437500002],
                                [25.859375, 36.79042968750005]
                            ]
                        ],
                        [
                            [
                                [27.01972656250004, 36.95903320312502],
                                [26.91992187500003, 36.94521484375005],
                                [26.88867187499997, 37.087255859375034],
                                [27.01972656250004, 36.95903320312502]
                            ]
                        ],
                        [
                            [
                                [25.278906250000034, 37.06840820312502],
                                [25.105468750000057, 37.034960937500045],
                                [25.235058593750068, 37.148535156250006],
                                [25.278906250000034, 37.06840820312502]
                            ]
                        ],
                        [
                            [
                                [25.54589843749997, 36.96757812499999],
                                [25.45673828125001, 36.9296875],
                                [25.361914062500063, 37.07041015624998],
                                [25.52529296875005, 37.19638671875006],
                                [25.54589843749997, 36.96757812499999]
                            ]
                        ],
                        [
                            [
                                [24.523535156250063, 37.125097656250006],
                                [24.42480468750003, 37.131982421874994],
                                [24.48378906250005, 37.21020507812503],
                                [24.523535156250063, 37.125097656250006]
                            ]
                        ],
                        [
                            [
                                [25.402734375000023, 37.419140624999955],
                                [25.312695312500068, 37.48930664062496],
                                [25.462988281250063, 37.47109375],
                                [25.402734375000023, 37.419140624999955]
                            ]
                        ],
                        [
                            [
                                [26.029296875000057, 37.529394531250034],
                                [26.086328125000023, 37.63491210937505],
                                [26.351367187500017, 37.67431640625],
                                [26.029296875000057, 37.529394531250034]
                            ]
                        ],
                        [
                            [
                                [25.255859375000057, 37.59960937500006],
                                [25.156347656250034, 37.54506835937505],
                                [24.99648437500005, 37.676904296874994],
                                [25.255859375000057, 37.59960937500006]
                            ]
                        ],
                        [
                            [
                                [24.35595703125003, 37.57685546875004],
                                [24.28896484375005, 37.52827148437498],
                                [24.37910156250004, 37.682714843750006],
                                [24.35595703125003, 37.57685546875004]
                            ]
                        ],
                        [
                            [
                                [26.82441406250004, 37.81142578125005],
                                [27.05507812500005, 37.70927734375002],
                                [26.84492187500004, 37.64472656250001],
                                [26.58105468750003, 37.723730468750034],
                                [26.82441406250004, 37.81142578125005]
                            ]
                        ],
                        [
                            [
                                [20.888476562500074, 37.805371093749955],
                                [20.993945312500074, 37.70800781250003],
                                [20.81855468750004, 37.66474609375001],
                                [20.61953125000008, 37.855029296875045],
                                [20.691503906250006, 37.929541015625034],
                                [20.888476562500074, 37.805371093749955]
                            ]
                        ],
                        [
                            [
                                [24.991699218750057, 37.75961914062506],
                                [24.962207031250074, 37.69238281250003],
                                [24.7001953125, 37.961669921875],
                                [24.956347656250045, 37.90478515625006],
                                [24.991699218750057, 37.75961914062506]
                            ]
                        ],
                        [
                            [
                                [20.61230468750003, 38.38334960937502],
                                [20.761328125, 38.07055664062497],
                                [20.523535156250063, 38.106640624999955],
                                [20.4521484375, 38.23417968750002],
                                [20.35253906250003, 38.179882812499955],
                                [20.563183593750068, 38.474951171875034],
                                [20.61230468750003, 38.38334960937502]
                            ]
                        ],
                        [
                            [
                                [26.094042968750017, 38.21806640625002],
                                [25.891894531250045, 38.243310546874994],
                                [25.991406250000068, 38.353515625],
                                [25.846093750000023, 38.57402343749996],
                                [26.16035156250001, 38.54072265625001],
                                [26.094042968750017, 38.21806640625002]
                            ]
                        ],
                        [
                            [
                                [20.68671875000001, 38.60869140625002],
                                [20.5546875, 38.58256835937502],
                                [20.69414062499999, 38.84423828125003],
                                [20.68671875000001, 38.60869140625002]
                            ]
                        ],
                        [
                            [
                                [24.67470703125005, 38.80922851562502],
                                [24.54101562499997, 38.788671875],
                                [24.485644531250074, 38.980273437500045],
                                [24.67470703125005, 38.80922851562502]
                            ]
                        ],
                        [
                            [
                                [23.41542968750008, 38.958642578124994],
                                [23.525, 38.8134765625],
                                [24.127539062500034, 38.648486328125045],
                                [24.27578125000005, 38.22001953124996],
                                [24.58837890625003, 38.12397460937504],
                                [24.53652343750005, 37.97973632812506],
                                [24.212011718750006, 38.11752929687506],
                                [24.040136718750006, 38.389990234375034],
                                [23.65078125000008, 38.44306640625001],
                                [23.25214843750004, 38.80122070312498],
                                [22.870312500000068, 38.870507812499966],
                                [23.258203125000023, 39.03134765625006],
                                [23.41542968750008, 38.958642578124994]
                            ]
                        ],
                        [
                            [
                                [26.41015625000003, 39.329443359375034],
                                [26.59560546875005, 39.04882812499997],
                                [26.488671875000023, 39.074804687500034],
                                [26.46875, 38.97280273437502],
                                [26.10791015625, 39.08105468749997],
                                [26.273144531249983, 39.19755859374999],
                                [26.072363281250034, 39.095605468749994],
                                [25.84414062500008, 39.20004882812506],
                                [26.16542968750008, 39.37353515625006],
                                [26.41015625000003, 39.329443359375034]
                            ]
                        ],
                        [
                            [
                                [20.077929687500045, 39.432714843750034],
                                [19.883984375000068, 39.461523437500034],
                                [19.646484375, 39.76708984375003],
                                [19.926074218750017, 39.773730468750045],
                                [19.8466796875, 39.66811523437502],
                                [20.077929687500045, 39.432714843750034]
                            ]
                        ],
                        [
                            [
                                [25.43769531250004, 39.98330078125002],
                                [25.357031250000063, 39.80810546875003],
                                [25.24941406250005, 39.89414062500006],
                                [25.06220703125004, 39.852392578125006],
                                [25.05800781250005, 39.999658203124966],
                                [25.43769531250004, 39.98330078125002]
                            ]
                        ],
                        [
                            [
                                [24.774218750000074, 40.615185546874955],
                                [24.515527343750023, 40.64702148437496],
                                [24.623339843750045, 40.79291992187501],
                                [24.774218750000074, 40.615185546874955]
                            ]
                        ],
                        [
                            [
                                [26.03896484375008, 40.726757812499955],
                                [25.10449218750003, 40.994726562500006],
                                [24.792968750000057, 40.857519531250034],
                                [24.47705078125, 40.94775390625003],
                                [24.082324218750074, 40.72407226562504],
                                [23.762792968750063, 40.74780273437497],
                                [23.866796875000034, 40.41855468750006],
                                [24.21279296875008, 40.32778320312502],
                                [24.343359375000034, 40.14770507812503],
                                [23.913183593750063, 40.35878906250005],
                                [23.72792968750008, 40.329736328124994],
                                [23.96748046875001, 40.11455078125002],
                                [23.947070312500045, 39.96557617187506],
                                [23.66455078125003, 40.22382812499998],
                                [23.42626953125, 40.26396484374999],
                                [23.62734375, 39.92407226562503],
                                [22.896484375000057, 40.39990234374997],
                                [22.92226562500008, 40.59086914062499],
                                [22.629492187500034, 40.49555664062501],
                                [22.59218750000005, 40.03691406250002],
                                [23.327734374999977, 39.174902343750006],
                                [23.15468750000008, 39.10146484375005],
                                [23.16171875, 39.25776367187501],
                                [22.92138671874997, 39.30634765625004],
                                [22.886035156250074, 39.16997070312496],
                                [23.066699218750017, 39.03793945312498],
                                [22.569140625000074, 38.86748046874999],
                                [23.25292968750003, 38.66123046875006],
                                [23.68398437500008, 38.35244140625002],
                                [23.96699218750001, 38.275],
                                [24.024511718750006, 38.139794921874966],
                                [24.01972656250001, 37.67773437499997],
                                [23.50175781249999, 38.03486328124998],
                                [23.03632812500004, 37.87836914062501],
                                [23.48925781250003, 37.440185546875],
                                [23.16152343750005, 37.333837890625006],
                                [22.725390625000017, 37.542138671874966],
                                [23.16015625000003, 36.448095703125034],
                                [22.717187500000023, 36.79394531250006],
                                [22.42773437500003, 36.47578124999998],
                                [22.08046875000008, 37.028955078124966],
                                [21.95556640625003, 36.990087890625034],
                                [21.892382812500045, 36.73730468749997],
                                [21.58291015625005, 37.080957031249994],
                                [21.678906250000068, 37.38720703125003],
                                [21.124707031250068, 37.89160156250003],
                                [21.40371093750005, 38.19667968750002],
                                [21.658398437500068, 38.17509765624996],
                                [21.82470703125003, 38.328125],
                                [22.846386718750068, 37.96757812499996],
                                [23.18349609375008, 38.133691406249966],
                                [22.421679687500045, 38.43852539062499],
                                [22.319921875, 38.35683593750005],
                                [21.96533203124997, 38.412451171875006],
                                [21.47255859375005, 38.321386718750006],
                                [21.3310546875, 38.48730468749997],
                                [21.303320312500034, 38.373925781249966],
                                [21.113183593750023, 38.38466796875002],
                                [20.768554687500057, 38.874414062499966],
                                [21.111621093750045, 38.89628906249999],
                                [21.11835937500001, 39.029980468749955],
                                [20.71337890625, 39.03515625000003],
                                [20.300781250000057, 39.32709960937501],
                                [20.19140625, 39.545800781249966],
                                [20.099414062500074, 39.641259765624966],
                                [20.001269531250074, 39.70942382812501],
                                [20.022558593750063, 39.710693359375],
                                [20.059765624999983, 39.69912109375002],
                                [20.13105468750004, 39.66162109375003],
                                [20.206835937500017, 39.65351562499998],
                                [20.382421875, 39.802636718749994],
                                [20.381640625000017, 39.84179687500006],
                                [20.311328125000074, 39.95078125000006],
                                [20.311132812500034, 39.97944335937504],
                                [20.338476562500006, 39.991064453125006],
                                [20.38369140625008, 40.0171875],
                                [20.408007812500074, 40.049462890624994],
                                [20.4560546875, 40.065576171874994],
                                [20.657421875000068, 40.11738281249998],
                                [20.881640625000017, 40.467919921874994],
                                [21.030859375000034, 40.62246093750002],
                                [20.95576171875001, 40.775292968749994],
                                [20.96425781250005, 40.84990234374999],
                                [21.575781250000034, 40.86894531249996],
                                [21.627539062500006, 40.896337890625034],
                                [21.77949218750004, 40.95043945312506],
                                [21.99335937500001, 41.13095703125006],
                                [22.18447265625005, 41.15864257812501],
                                [22.49355468750005, 41.118505859375006],
                                [22.603613281249977, 41.14018554687499],
                                [22.724804687500068, 41.17851562499999],
                                [22.78388671875004, 41.33198242187498],
                                [23.155957031250068, 41.32207031249999],
                                [23.239843750000034, 41.38496093750001],
                                [23.372070312500057, 41.3896484375],
                                [23.433398437500017, 41.39873046874999],
                                [23.53583984375001, 41.38603515624999],
                                [23.63515625000008, 41.386767578125045],
                                [24.011328124999977, 41.460058593750034],
                                [24.03291015625004, 41.469091796875034],
                                [24.05605468750005, 41.527246093749966],
                                [24.38671875, 41.523535156250006],
                                [24.487890625, 41.55522460937499],
                                [24.518261718750068, 41.55253906249996],
                                [24.773730468750045, 41.356103515624994],
                                [24.99355468750008, 41.36499023437503],
                                [25.133398437500063, 41.31577148437506],
                                [25.251171875000068, 41.243554687499994],
                                [25.923339843750057, 41.311914062499966],
                                [26.066406250000057, 41.35068359375006],
                                [26.135351562499977, 41.3857421875],
                                [26.155175781250023, 41.43486328124999],
                                [26.143554687500057, 41.52153320312496],
                                [26.085546875000063, 41.704150390625045],
                                [26.10742187499997, 41.72568359374998],
                                [26.20058593750005, 41.74379882812502],
                                [26.320898437500034, 41.716552734375],
                                [26.581347656250074, 41.60126953125004],
                                [26.62490234375008, 41.401757812499994],
                                [26.330664062499977, 41.23876953125],
                                [26.331054687500057, 40.954492187499994],
                                [26.03896484375008, 40.726757812499955]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Greece",
                    childNum: 29
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-61.71552734375, 12.012646484374997],
                            [-61.714990234374994, 12.18515625],
                            [-61.60703125, 12.223291015624994],
                            [-61.71552734375, 12.012646484374997]
                        ]
                    ]
                },
                properties: {
                    name: "Grenada",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-46.266699218750006, 60.781396484374994],
                                [-46.381542968749955, 60.66030273437502],
                                [-46.7880859375, 60.758398437500034],
                                [-46.205224609374994, 60.943505859374994],
                                [-46.266699218750006, 60.781396484374994]
                            ]
                        ],
                        [
                            [
                                [-37.03125, 65.53198242187497],
                                [-37.23842773437494, 65.60986328125003],
                                [-37.047509765624966, 65.722265625],
                                [-37.03125, 65.53198242187497]
                            ]
                        ],
                        [
                            [
                                [-51.01367187499994, 69.55249023437497],
                                [-51.202050781249966, 69.525],
                                [-51.33886718749994, 69.73203125000006],
                                [-51.094580078125006, 69.92416992187503],
                                [-50.67900390624999, 69.84853515625],
                                [-51.01367187499994, 69.55249023437497]
                            ]
                        ],
                        [
                            [
                                [-52.73115234375001, 69.94472656250005],
                                [-52.0453125, 69.8072265625],
                                [-51.90019531249999, 69.60478515625007],
                                [-53.57841796874996, 69.25664062500002],
                                [-54.18271484374995, 69.40351562500001],
                                [-53.65830078124998, 69.46513671875005],
                                [-53.825, 69.54033203124999],
                                [-54.91914062499998, 69.71362304687503],
                                [-54.78789062499996, 69.94985351562502],
                                [-54.322607421875034, 69.94189453125],
                                [-54.83076171875001, 70.13295898437502],
                                [-54.37163085937499, 70.31728515625],
                                [-53.296728515625034, 70.20537109375002],
                                [-52.73115234375001, 69.94472656250005]
                            ]
                        ],
                        [
                            [
                                [-51.67514648437498, 70.855224609375],
                                [-52.11938476562497, 70.87065429687502],
                                [-52.10673828124999, 70.96801757812497],
                                [-51.67514648437498, 70.855224609375]
                            ]
                        ],
                        [
                            [
                                [-25.43232421875001, 70.92133789062495],
                                [-25.402246093749994, 70.65268554687503],
                                [-26.217871093749977, 70.45405273437498],
                                [-26.604687499999926, 70.55336914062497],
                                [-28.03525390624995, 70.48681640625],
                                [-27.61723632812496, 70.91376953125001],
                                [-26.621777343749955, 70.87563476562497],
                                [-25.81889648437499, 71.04365234375001],
                                [-25.43232421875001, 70.92133789062495]
                            ]
                        ],
                        [
                            [
                                [-53.53520507812493, 71.04082031250005],
                                [-53.9578125, 71.12773437499999],
                                [-53.58447265625003, 71.29707031249995],
                                [-53.53520507812493, 71.04082031250005]
                            ]
                        ],
                        [
                            [
                                [-55.01689453124999, 72.79111328125003],
                                [-55.56660156249998, 72.56435546875002],
                                [-56.214794921874955, 72.71918945312495],
                                [-55.01689453124999, 72.79111328125003]
                            ]
                        ],
                        [
                            [
                                [-18.000537109374932, 75.40732421875003],
                                [-17.391992187499937, 75.03691406250007],
                                [-18.670800781249966, 75.00166015624998],
                                [-18.856054687499977, 75.31914062500002],
                                [-18.000537109374932, 75.40732421875003]
                            ]
                        ],
                        [
                            [
                                [-18.58261718749995, 76.042333984375],
                                [-19.085351562499966, 76.43037109375001],
                                [-18.882470703124937, 76.70380859375001],
                                [-18.58261718749995, 76.042333984375]
                            ]
                        ],
                        [
                            [
                                [-71.667333984375, 77.32529296874998],
                                [-72.48955078124999, 77.43164062499997],
                                [-71.43344726562495, 77.394384765625],
                                [-71.667333984375, 77.32529296874998]
                            ]
                        ],
                        [
                            [
                                [-17.6125, 79.82587890624995],
                                [-18.662011718749966, 79.72001953125005],
                                [-19.13828125, 79.85234375000002],
                                [-17.98291015625, 80.05517578125003],
                                [-17.471386718749955, 80.02871093749997],
                                [-17.6125, 79.82587890624995]
                            ]
                        ],
                        [
                            [
                                [-44.86455078124999, 82.08364257812502],
                                [-46.75190429687501, 82.34819335937502],
                                [-47.27226562499996, 82.65693359375001],
                                [-46.399169921875, 82.692138671875],
                                [-44.91748046875003, 82.48051757812505],
                                [-44.86455078124999, 82.08364257812502]
                            ]
                        ],
                        [
                            [
                                [-29.952880859375, 83.56484374999997],
                                [-25.795068359374994, 83.26098632812497],
                                [-31.99267578125, 83.0853515625],
                                [-32.03271484374997, 82.98344726562502],
                                [-25.12338867187495, 83.15961914062501],
                                [-24.47031249999995, 82.87739257812498],
                                [-21.582519531249943, 82.6341796875],
                                [-23.118066406249966, 82.32470703125003],
                                [-29.57939453124996, 82.16118164062502],
                                [-29.887402343749983, 82.05483398437502],
                                [-29.543847656249994, 81.93994140624997],
                                [-27.839501953124966, 82.04887695312505],
                                [-25.148828124999966, 82.001123046875],
                                [-24.293066406249977, 81.70097656250005],
                                [-23.103710937499983, 82.01181640625003],
                                [-21.337988281249977, 82.068701171875],
                                [-21.230517578125017, 81.60136718749999],
                                [-23.11772460937499, 80.77817382812498],
                                [-19.62993164062499, 81.63989257812503],
                                [-17.456054687499943, 81.397705078125],
                                [-16.12070312499995, 81.776611328125],
                                [-14.241992187500017, 81.81386718750005],
                                [-12.434423828125006, 81.68251953125002],
                                [-11.430664062499972, 81.45683593750005],
                                [-13.126220703124972, 81.08779296875],
                                [-14.452343749999955, 80.99311523437498],
                                [-14.503564453124994, 80.76328125000006],
                                [-16.76059570312492, 80.573388671875],
                                [-15.937255859374972, 80.42763671874997],
                                [-16.48876953124997, 80.25195312499997],
                                [-18.070947265624994, 80.17207031249995],
                                [-19.429199218749943, 80.25771484375],
                                [-20.150146484375, 80.01123046874997],
                                [-18.99199218749996, 79.17836914062502],
                                [-21.133740234374926, 78.65864257812501],
                                [-21.729589843749977, 77.70854492187499],
                                [-20.862597656249932, 77.91186523437503],
                                [-19.490429687499983, 77.71889648437497],
                                [-19.46752929687503, 77.56582031250005],
                                [-20.162060546874926, 77.68984375],
                                [-20.680810546875023, 77.61899414062503],
                                [-20.23193359374997, 77.36840820312497],
                                [-19.30029296874997, 77.22236328124995],
                                [-18.442626953124943, 77.259375],
                                [-18.51030273437496, 76.77817382812498],
                                [-20.48671875, 76.92080078125],
                                [-21.614697265624926, 76.68789062499997],
                                [-22.18525390625001, 76.79409179687502],
                                [-22.609326171874983, 76.70429687500004],
                                [-21.877343749999966, 76.57348632812503],
                                [-21.488232421874926, 76.271875],
                                [-20.10361328124992, 76.21909179687503],
                                [-19.508984374999926, 75.75751953124995],
                                [-19.52636718750003, 75.18022460937505],
                                [-20.484960937500006, 75.31425781249999],
                                [-21.649316406249966, 75.02343749999997],
                                [-22.232861328124926, 75.11972656249998],
                                [-21.69511718749999, 74.96445312500003],
                                [-20.985791015624983, 75.07436523437497],
                                [-20.86157226562497, 74.63593750000001],
                                [-20.41708984374995, 74.9751953125],
                                [-19.98491210937499, 74.9751953125],
                                [-19.287011718750023, 74.54638671875006],
                                [-19.36914062499997, 74.28403320312498],
                                [-20.256445312499977, 74.2828125],
                                [-20.653125, 74.13735351562502],
                                [-21.954931640624977, 74.24428710937497],
                                [-21.942919921874932, 74.56572265624999],
                                [-22.32158203124999, 74.30253906250002],
                                [-22.134814453124932, 73.99047851562503],
                                [-20.36728515624992, 73.8482421875],
                                [-20.509667968749966, 73.49287109375001],
                                [-22.346875, 73.26923828125001],
                                [-23.23320312499999, 73.39770507812497],
                                [-24.157714843749943, 73.76445312499999],
                                [-24.67724609375, 73.602197265625],
                                [-25.521289062500017, 73.85161132812499],
                                [-24.79125976562497, 73.51127929687502],
                                [-26.062304687500017, 73.25302734375],
                                [-27.270410156250023, 73.43627929687503],
                                [-26.541845703125006, 73.24897460937495],
                                [-27.561621093750006, 73.13847656250002],
                                [-27.348046875000023, 73.06782226562501],
                                [-25.057031250000023, 73.396484375],
                                [-24.132666015625006, 73.409375],
                                [-22.036328124999955, 72.91845703125006],
                                [-22.29321289062497, 72.11953125],
                                [-24.06904296875001, 72.49873046874998],
                                [-24.629980468749977, 73.03764648437499],
                                [-26.657617187499966, 72.71582031249997],
                                [-24.81333007812492, 72.90151367187497],
                                [-24.65, 72.58251953125],
                                [-25.117871093749983, 72.34697265625005],
                                [-24.66684570312492, 72.437353515625],
                                [-21.959667968749955, 71.74467773437502],
                                [-22.479638671874937, 71.38344726562497],
                                [-22.417578125, 71.24868164062505],
                                [-22.29902343750001, 71.43232421874998],
                                [-21.75224609374999, 71.47832031250002],
                                [-21.522656249999926, 70.52622070312503],
                                [-22.38413085937492, 70.46240234375],
                                [-22.437011718749943, 70.860009765625],
                                [-22.690673828124943, 70.43730468750002],
                                [-23.327832031249983, 70.45097656250007],
                                [-23.97138671875001, 70.64946289062499],
                                [-24.562207031249926, 71.22353515624997],
                                [-25.885156249999966, 71.571923828125],
                                [-27.08720703124999, 71.6265625],
                                [-27.107031250000034, 71.53266601562498],
                                [-25.842724609374955, 71.48017578124995],
                                [-25.74223632812499, 71.18359375],
                                [-26.717919921874994, 70.95048828125005],
                                [-28.39843749999997, 70.99291992187497],
                                [-27.99218749999997, 70.89521484374998],
                                [-28.06987304687499, 70.69902343750005],
                                [-29.07207031249999, 70.444970703125],
                                [-26.621777343749955, 70.46337890625],
                                [-26.576806640625023, 70.35708007812502],
                                [-27.560839843749932, 70.12446289062498],
                                [-27.384179687500023, 69.9916015625],
                                [-27.027734374999966, 70.20122070312499],
                                [-25.529882812499977, 70.35317382812502],
                                [-23.66733398437495, 70.139306640625],
                                [-22.28447265624996, 70.12583007812498],
                                [-22.287060546874955, 70.03339843749998],
                                [-23.03364257812501, 69.90083007812498],
                                [-23.04956054687497, 69.79272460937497],
                                [-23.86572265624997, 69.73671875000002],
                                [-23.739404296874994, 69.58862304687497],
                                [-24.296679687500017, 69.58554687500006],
                                [-24.295556640624966, 69.439306640625],
                                [-25.188574218750006, 69.26054687500002],
                                [-25.092431640624937, 69.16518554687502],
                                [-25.697998046874943, 68.889892578125],
                                [-26.48291015624997, 68.67592773437502],
                                [-29.24951171874997, 68.29877929687501],
                                [-29.86850585937495, 68.31157226562505],
                                [-30.318115234375, 68.19331054687501],
                                [-30.72001953124999, 68.25117187499998],
                                [-30.610742187499994, 68.11791992187503],
                                [-30.97856445312499, 68.06132812500005],
                                [-32.32744140624999, 68.43730468749999],
                                [-32.16455078125, 67.99111328125002],
                                [-33.15698242187497, 67.62670898437506],
                                [-34.1982421875, 66.65507812499999],
                                [-35.18857421874995, 66.25029296875002],
                                [-35.86723632812502, 66.44140624999997],
                                [-35.630078124999926, 66.13994140625002],
                                [-36.37919921874996, 65.830810546875],
                                [-36.52724609375002, 66.00771484375],
                                [-36.665185546874966, 65.79008789062507],
                                [-37.06279296874996, 65.87143554687503],
                                [-37.410058593749994, 65.65634765625],
                                [-37.954785156249955, 65.63359375000007],
                                [-37.278710937499994, 66.30439453124995],
                                [-38.156640624999966, 66.38559570312498],
                                [-37.75234375000002, 66.26152343750002],
                                [-38.13994140625002, 65.90351562499998],
                                [-38.52036132812498, 66.00966796875002],
                                [-38.20336914062497, 65.71171874999999],
                                [-40.17353515624998, 65.55615234375],
                                [-39.57792968749996, 65.34077148437501],
                                [-39.937255859375, 65.14160156250003],
                                [-40.253125, 65.04887695312505],
                                [-41.08442382812501, 65.10083007812497],
                                [-40.966015624999955, 64.86884765624995],
                                [-40.655468749999926, 64.91533203125002],
                                [-40.18222656249998, 64.47993164062495],
                                [-40.78173828125, 64.22177734375003],
                                [-41.581005859374926, 64.29833984375],
                                [-41.03056640624996, 64.12104492187504],
                                [-40.61777343749998, 64.13173828125],
                                [-40.550390625000034, 63.72524414062505],
                                [-40.77519531249999, 63.53364257812501],
                                [-41.04873046875002, 63.51381835937505],
                                [-41.387890624999926, 63.06186523437498],
                                [-41.84448242187497, 63.07026367187501],
                                [-42.174511718749955, 63.20878906249999],
                                [-41.63447265624998, 62.972460937500074],
                                [-41.90898437499996, 62.73710937499999],
                                [-42.94165039062503, 62.72021484375003],
                                [-42.15297851562502, 62.568457031250006],
                                [-42.32148437499998, 62.15273437500005],
                                [-42.110205078125006, 61.857226562500074],
                                [-42.58530273437498, 61.71748046875001],
                                [-42.34736328125001, 61.61743164062497],
                                [-42.717041015625, 60.767480468749994],
                                [-43.04409179687502, 60.523681640625],
                                [-43.92270507812495, 60.59536132812502],
                                [-43.21298828124998, 60.390673828125074],
                                [-43.122900390625006, 60.06123046875001],
                                [-43.32011718749993, 59.928125],
                                [-43.95502929687498, 60.025488281250006],
                                [-43.65791015625001, 59.85864257812503],
                                [-43.90654296874996, 59.815478515625045],
                                [-44.11699218750002, 59.83193359375002],
                                [-44.06547851562499, 59.92480468750003],
                                [-44.412939453125006, 59.922607421875],
                                [-44.22436523437494, 60.273535156250006],
                                [-44.61328124999997, 60.01665039062499],
                                [-45.37924804687495, 60.20292968750002],
                                [-45.367773437500006, 60.37294921875002],
                                [-44.97470703124995, 60.457226562499955],
                                [-44.756738281249966, 60.66459960937502],
                                [-45.38051757812494, 60.444921875],
                                [-46.04663085937503, 60.61572265625],
                                [-46.141943359375006, 60.776513671874994],
                                [-45.87021484374998, 61.21831054687502],
                                [-46.87446289062501, 60.81640625000003],
                                [-48.180810546874966, 60.76923828125001],
                                [-47.77031249999999, 60.99775390625001],
                                [-48.386425781249926, 61.004736328125034],
                                [-48.42817382812501, 61.18740234375002],
                                [-48.92207031249998, 61.27744140624998],
                                [-49.28906249999997, 61.58994140625006],
                                [-49.380273437499994, 61.89018554687502],
                                [-48.82871093749998, 62.0796875],
                                [-49.62377929687494, 61.99858398437499],
                                [-49.553466796875, 62.23271484374999],
                                [-50.319238281249966, 62.473193359375045],
                                [-50.298730468749966, 62.72197265625002],
                                [-49.793115234374994, 63.04462890625004],
                                [-50.39008789062501, 62.82202148437497],
                                [-51.46884765624995, 63.64228515625001],
                                [-51.547509765624994, 64.00610351562497],
                                [-50.260693359374955, 64.21425781250002],
                                [-50.48662109374996, 64.20888671875],
                                [-50.43706054687499, 64.31284179687503],
                                [-51.58491210937498, 64.10317382812502],
                                [-51.70786132812498, 64.205078125],
                                [-51.403759765624926, 64.46318359375002],
                                [-50.49208984375002, 64.69316406250005],
                                [-50.00898437500001, 64.44726562499997],
                                [-50.12163085937493, 64.703759765625],
                                [-50.51699218750002, 64.76650390625],
                                [-50.96064453124998, 65.20112304687498],
                                [-50.721582031249966, 64.79760742187503],
                                [-51.22060546875002, 64.62846679687502],
                                [-51.25537109375, 64.75810546875005],
                                [-51.92260742187503, 64.21875],
                                [-52.259033203125, 65.154931640625],
                                [-52.537695312500034, 65.32880859374998],
                                [-51.61914062500003, 65.71318359375002],
                                [-51.091894531250006, 65.77578125],
                                [-51.7234375, 65.723486328125],
                                [-52.55126953125003, 65.46137695312498],
                                [-52.760937499999926, 65.59082031249997],
                                [-53.198974609375, 65.59404296875002],
                                [-53.106347656249966, 65.97714843749998],
                                [-53.39204101562498, 66.04833984375],
                                [-51.225, 66.88154296875001],
                                [-53.035791015624966, 66.20141601562503],
                                [-53.538769531249955, 66.13935546874998],
                                [-53.41875, 66.64853515624998],
                                [-53.038281249999955, 66.82680664062497],
                                [-52.38686523437502, 66.88115234375005],
                                [-53.44360351562503, 66.924658203125],
                                [-53.88442382812502, 67.13554687499999],
                                [-53.79858398437494, 67.41816406250001],
                                [-52.666455078124955, 67.74970703124995],
                                [-50.613476562499955, 67.5279296875],
                                [-51.171044921874966, 67.693603515625],
                                [-50.96884765624998, 67.80664062500003],
                                [-51.765234375000034, 67.73784179687505],
                                [-52.34482421874998, 67.83691406249997],
                                [-53.735205078125006, 67.54902343750004],
                                [-53.151562499999926, 68.20776367187503],
                                [-51.779980468749926, 68.05673828124998],
                                [-51.456494140624926, 68.116064453125],
                                [-51.21015625000001, 68.419921875],
                                [-52.19853515624993, 68.22080078125],
                                [-53.38315429687495, 68.29736328124997],
                                [-53.03945312500002, 68.61088867187499],
                                [-52.60458984374998, 68.70874023437503],
                                [-51.62314453124995, 68.53481445312505],
                                [-50.945703124999966, 68.68266601562505],
                                [-50.807714843750006, 68.81699218749998],
                                [-51.24941406250002, 68.73994140625001],
                                [-51.084863281249994, 69.12827148437498],
                                [-50.29736328124994, 69.17060546874998],
                                [-51.07695312499996, 69.20947265625],
                                [-50.291699218749955, 70.01445312500005],
                                [-52.254638671875, 70.05893554687503],
                                [-53.02304687499995, 70.30190429687497],
                                [-54.01445312499996, 70.42167968750005],
                                [-54.53076171875, 70.69926757812502],
                                [-54.16582031249999, 70.82011718750005],
                                [-52.801953124999955, 70.7505859375],
                                [-50.87236328124993, 70.36489257812502],
                                [-50.66328124999998, 70.417578125],
                                [-51.32285156249998, 70.58876953124997],
                                [-51.25659179687497, 70.85268554687502],
                                [-51.77431640625002, 71.01044921875001],
                                [-51.018945312499966, 71.001318359375],
                                [-51.37666015625001, 71.11904296875],
                                [-53.007568359375, 71.17998046874999],
                                [-52.89184570312497, 71.457666015625],
                                [-51.76992187500002, 71.67172851562498],
                                [-53.44008789062502, 71.57900390625002],
                                [-53.14453125000003, 71.80742187500002],
                                [-53.65214843749996, 72.36264648437506],
                                [-53.92773437499997, 72.31879882812501],
                                [-53.47758789062502, 71.84995117187506],
                                [-54.01992187500002, 71.657861328125],
                                [-53.96298828124995, 71.45898437499997],
                                [-54.6890625, 71.36723632812505],
                                [-55.59404296874999, 71.55351562500005],
                                [-55.315576171874994, 72.11069335937498],
                                [-54.84013671874996, 72.35610351562497],
                                [-55.581445312499994, 72.178857421875],
                                [-55.63583984374998, 72.300439453125],
                                [-55.29570312499996, 72.35439453124997],
                                [-55.60170898437494, 72.453466796875],
                                [-54.924951171874994, 72.57197265624998],
                                [-54.737939453124994, 72.87250976562501],
                                [-55.07309570312498, 73.01513671875003],
                                [-55.28891601562498, 72.93320312500003],
                                [-55.66855468749998, 73.00791015624998],
                                [-55.288281249999955, 73.32709960937498],
                                [-56.10405273437496, 73.55815429687499],
                                [-55.83828125, 73.75971679687501],
                                [-56.22539062499999, 74.12910156249995],
                                [-57.23056640624995, 74.12529296875007],
                                [-56.70634765625002, 74.21918945312501],
                                [-56.717675781249994, 74.42924804687499],
                                [-56.25546874999998, 74.52680664062498],
                                [-58.56552734374998, 75.35273437500001],
                                [-58.249658203124994, 75.50668945312503],
                                [-58.51621093749995, 75.68906250000006],
                                [-61.18823242187494, 76.157861328125],
                                [-63.29130859374996, 76.35205078125003],
                                [-63.84306640624999, 76.21713867187498],
                                [-64.307275390625, 76.31650390624998],
                                [-65.36992187499993, 76.13056640625004],
                                [-65.87573242187494, 76.23833007812505],
                                [-66.46577148437498, 76.13916015625],
                                [-66.99257812500002, 76.21293945312502],
                                [-66.67480468750003, 75.977392578125],
                                [-68.14873046875002, 76.06704101562497],
                                [-69.48408203125001, 76.39916992187503],
                                [-68.1142578125, 76.65063476562503],
                                [-69.67382812499994, 76.73588867187507],
                                [-69.69423828125002, 76.98945312500004],
                                [-70.613134765625, 76.82182617187499],
                                [-71.14145507812498, 77.02866210937503],
                                [-70.86284179687496, 77.175439453125],
                                [-68.97832031250002, 77.19531250000006],
                                [-68.13554687499999, 77.37958984375001],
                                [-66.38945312499999, 77.28027343750003],
                                [-66.69121093749999, 77.68120117187502],
                                [-67.68808593749995, 77.523779296875],
                                [-68.62153320312498, 77.60185546875002],
                                [-69.35136718749999, 77.467138671875],
                                [-70.53540039062497, 77.699560546875],
                                [-70.11445312500001, 77.84135742187505],
                                [-71.27163085937494, 77.81313476562497],
                                [-72.81806640624995, 78.1943359375],
                                [-72.47250976562498, 78.48203125],
                                [-71.65131835937493, 78.62314453124998],
                                [-68.99345703124999, 78.857421875],
                                [-68.37705078124998, 79.037841796875],
                                [-65.82553710937503, 79.17373046874997],
                                [-64.79228515624993, 80.00063476562502],
                                [-64.17915039062498, 80.09926757812497],
                                [-66.84365234374997, 80.07622070312507],
                                [-67.05063476562503, 80.384521484375],
                                [-64.51552734374997, 81],
                                [-63.72197265624993, 81.05732421875001],
                                [-63.028662109375006, 80.88955078125002],
                                [-62.90336914062496, 81.21835937500003],
                                [-61.43598632812498, 81.13359375000002],
                                [-60.842871093750034, 81.85537109374997],
                                [-59.28193359374998, 81.88403320312503],
                                [-56.615136718749994, 81.362890625],
                                [-59.26181640624998, 82.00664062500005],
                                [-54.54887695312496, 82.35063476562505],
                                [-53.671337890624955, 82.16406249999997],
                                [-53.55566406250003, 81.65327148437501],
                                [-53.022558593750034, 82.32172851562504],
                                [-50.894433593749994, 81.89521484375001],
                                [-49.54106445312496, 81.91806640625003],
                                [-50.93554687500003, 82.38281250000003],
                                [-50.03710937499994, 82.472412109375],
                                [-44.7294921875, 81.77983398437505],
                                [-44.23886718749998, 82.3681640625],
                                [-45.55654296875002, 82.74702148437498],
                                [-41.87646484375, 82.680322265625],
                                [-41.36962890625003, 82.75],
                                [-46.136816406250006, 82.85883789062504],
                                [-46.169042968750006, 83.06386718749997],
                                [-45.41459960937496, 83.01767578124998],
                                [-43.00927734375003, 83.26459960937501],
                                [-41.300146484375006, 83.10078125000004],
                                [-40.35683593750002, 83.332177734375],
                                [-38.15625, 82.9986328125],
                                [-38.74956054687496, 83.37084960937497],
                                [-37.72333984374998, 83.49775390624998],
                                [-29.952880859375, 83.56484374999997]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Greenland",
                    childNum: 14
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-89.2328125, 15.888671875],
                            [-88.89404296875, 15.890625],
                            [-88.60336914062499, 15.76416015625],
                            [-88.5939453125, 15.950292968749991],
                            [-88.22832031249999, 15.72900390625],
                            [-88.271435546875, 15.694873046875003],
                            [-88.36455078124999, 15.616015625],
                            [-88.68447265625, 15.360498046874994],
                            [-88.96098632812499, 15.152441406249991],
                            [-89.142578125, 15.072314453125003],
                            [-89.22236328125, 14.866064453124991],
                            [-89.16220703124999, 14.669238281250003],
                            [-89.17177734375, 14.606884765624997],
                            [-89.28671875, 14.529980468749997],
                            [-89.36259765624999, 14.416015625],
                            [-89.5736328125, 14.390087890624997],
                            [-89.54716796874999, 14.241259765625003],
                            [-90.04814453124999, 13.904052734375],
                            [-90.09521484375, 13.736523437499997],
                            [-90.60693359375, 13.929003906250003],
                            [-91.37734375, 13.990185546874997],
                            [-92.23515624999999, 14.54541015625],
                            [-92.15854492187499, 14.963574218749997],
                            [-92.14423828125, 15.001953125],
                            [-92.09873046874999, 15.026757812499994],
                            [-92.07480468749999, 15.07421875],
                            [-92.187158203125, 15.320898437499991],
                            [-92.08212890624999, 15.495556640624997],
                            [-91.9572265625, 15.703222656249991],
                            [-91.736572265625, 16.07016601562499],
                            [-91.433984375, 16.070458984374994],
                            [-90.97958984374999, 16.07080078125],
                            [-90.70322265624999, 16.071044921875],
                            [-90.52197265625, 16.071191406249994],
                            [-90.44716796875, 16.072705078124997],
                            [-90.45986328125, 16.162353515625],
                            [-90.450146484375, 16.261376953124994],
                            [-90.4169921875, 16.351318359375],
                            [-90.4169921875, 16.39101562499999],
                            [-90.47109375, 16.43955078124999],
                            [-90.57578125, 16.467822265625003],
                            [-90.63408203124999, 16.5107421875],
                            [-90.634375, 16.565136718749997],
                            [-90.65996093749999, 16.630908203125003],
                            [-90.710693359375, 16.70810546874999],
                            [-90.975830078125, 16.867822265624994],
                            [-91.409619140625, 17.255859375],
                            [-91.1955078125, 17.254101562499997],
                            [-90.99296874999999, 17.25244140625],
                            [-90.98916015625, 17.81640625],
                            [-89.16147460937499, 17.81484375],
                            [-89.2328125, 15.888671875]
                        ]
                    ]
                },
                properties: {
                    name: "Guatemala",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [144.74179687500003, 13.25927734375],
                            [144.64931640625002, 13.4287109375],
                            [144.87539062500002, 13.614648437499994],
                            [144.94082031250002, 13.5703125],
                            [144.74179687500003, 13.25927734375]
                        ]
                    ]
                },
                properties: {
                    name: "Guam",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-57.194775390625, 5.5484375],
                            [-57.3185546875, 5.335351562499994],
                            [-57.20981445312499, 5.195410156249991],
                            [-57.331005859375, 5.020166015624994],
                            [-57.711083984374994, 4.991064453124991],
                            [-57.91704101562499, 4.820410156249991],
                            [-57.84599609374999, 4.668164062499997],
                            [-58.05429687499999, 4.101660156249991],
                            [-57.646728515625, 3.39453125],
                            [-57.303662109375, 3.377099609374994],
                            [-57.19736328124999, 2.853271484375],
                            [-56.704345703125, 2.036474609374991],
                            [-56.4828125, 1.942138671875],
                            [-56.96953124999999, 1.91640625],
                            [-57.03759765625, 1.936474609374997],
                            [-57.092675781249994, 2.005810546874997],
                            [-57.118896484375, 2.013964843749989],
                            [-57.31748046874999, 1.963476562499991],
                            [-57.41269531249999, 1.908935546875],
                            [-57.500439453125, 1.77382812499999],
                            [-57.54575195312499, 1.72607421875],
                            [-57.59443359375, 1.7041015625],
                            [-57.795654296875, 1.7],
                            [-57.8734375, 1.667285156249989],
                            [-57.9828125, 1.6484375],
                            [-58.03466796875, 1.520263671875],
                            [-58.34067382812499, 1.587548828124994],
                            [-58.38037109375, 1.530224609374997],
                            [-58.39580078124999, 1.481738281249989],
                            [-58.5060546875, 1.438671875],
                            [-58.511865234374994, 1.28466796875],
                            [-58.68461914062499, 1.281054687499989],
                            [-58.73032226562499, 1.247509765624997],
                            [-58.78720703124999, 1.20849609375],
                            [-58.82177734375, 1.201220703124989],
                            [-59.231201171875, 1.376025390624989],
                            [-59.53569335937499, 1.7],
                            [-59.66660156249999, 1.746289062499997],
                            [-59.66850585937499, 1.842333984374989],
                            [-59.74072265625, 1.874169921874994],
                            [-59.75620117187499, 1.900634765625],
                            [-59.75522460937499, 2.274121093749997],
                            [-59.8896484375, 2.362939453124994],
                            [-59.9943359375, 2.689990234374989],
                            [-59.854394531249994, 3.5875],
                            [-59.55112304687499, 3.933544921874997],
                            [-59.557763671874994, 3.960009765624989],
                            [-59.62021484374999, 4.023144531249997],
                            [-59.73857421874999, 4.226757812499997],
                            [-59.69970703125, 4.353515625],
                            [-60.1486328125, 4.533251953124989],
                            [-59.990673828125, 5.082861328124991],
                            [-60.142041015625, 5.238818359374989],
                            [-60.241650390625, 5.257958984374994],
                            [-60.335205078125, 5.199316406249991],
                            [-60.45952148437499, 5.188085937499991],
                            [-60.6513671875, 5.221142578124997],
                            [-60.742138671875, 5.202050781249994],
                            [-61.37680664062499, 5.906982421875],
                            [-61.3908203125, 5.938769531249989],
                            [-61.303125, 6.049511718749997],
                            [-61.22495117187499, 6.129199218749989],
                            [-61.15947265624999, 6.174414062499991],
                            [-61.12871093749999, 6.214306640624997],
                            [-61.152294921875, 6.385107421874991],
                            [-61.151025390624994, 6.446533203125],
                            [-61.181591796875, 6.513378906249997],
                            [-61.20361328125, 6.58837890625],
                            [-61.14560546874999, 6.69453125],
                            [-60.717919921874994, 6.768310546875],
                            [-60.35209960937499, 7.002880859374997],
                            [-60.32207031249999, 7.092041015625],
                            [-60.32548828124999, 7.133984375],
                            [-60.34506835937499, 7.15],
                            [-60.46494140624999, 7.166552734374989],
                            [-60.523193359375, 7.143701171874994],
                            [-60.583203125, 7.156201171874997],
                            [-60.63330078125, 7.211083984374994],
                            [-60.718652343749994, 7.535937499999989],
                            [-60.513623046875, 7.813183593749997],
                            [-60.032421875, 8.053564453124991],
                            [-59.99072265625, 8.162011718749994],
                            [-59.96484375, 8.191601562499997],
                            [-59.849072265625, 8.248681640624994],
                            [-59.83164062499999, 8.305957031249989],
                            [-60.017529296875, 8.54931640625],
                            [-59.20024414062499, 8.07460937499999],
                            [-58.51108398437499, 7.39804687499999],
                            [-58.48056640624999, 7.038134765624989],
                            [-58.67294921874999, 6.390771484374994],
                            [-58.414990234375, 6.85117187499999],
                            [-57.982568359374994, 6.785888671875],
                            [-57.54013671874999, 6.33154296875],
                            [-57.2275390625, 6.178417968749997],
                            [-57.194775390625, 5.5484375]
                        ]
                    ]
                },
                properties: {
                    name: "Guyana",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [73.70742187500002, -53.13710937499999],
                            [73.46513671875002, -53.184179687500006],
                            [73.25117187500001, -52.97578125000001],
                            [73.83779296875002, -53.11279296875],
                            [73.70742187500002, -53.13710937499999]
                        ]
                    ]
                },
                properties: {
                    name: "Heard I. and McDonald Is.",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-83.635498046875, 14.876416015624997],
                            [-84.53764648437496, 14.633398437499963],
                            [-84.64594726562498, 14.661083984375011],
                            [-84.86044921874998, 14.809765625000011],
                            [-84.98515624999999, 14.752441406249972],
                            [-85.059375, 14.582958984374997],
                            [-85.20834960937498, 14.311816406250003],
                            [-85.73393554687496, 13.85869140625006],
                            [-85.75341796875, 13.852050781250028],
                            [-85.78671874999995, 13.844433593749997],
                            [-85.98378906249997, 13.965673828125006],
                            [-86.04038085937503, 14.050146484374977],
                            [-86.33173828124995, 13.770068359375031],
                            [-86.37695312500003, 13.755664062500031],
                            [-86.61025390624997, 13.774853515625026],
                            [-86.73364257812494, 13.763476562500017],
                            [-86.75898437499995, 13.746142578125045],
                            [-86.77060546875003, 13.698730468749972],
                            [-86.763525390625, 13.635253906250014],
                            [-86.72958984375, 13.4072265625],
                            [-86.710693359375, 13.31337890624998],
                            [-86.72929687499996, 13.284375],
                            [-86.79213867187497, 13.279785156249972],
                            [-86.87353515624994, 13.266503906250023],
                            [-86.918212890625, 13.223583984374983],
                            [-87.00932617187499, 13.007812499999986],
                            [-87.0591796875, 12.991455078125028],
                            [-87.337255859375, 12.979248046875028],
                            [-87.48911132812503, 13.352929687500051],
                            [-87.814208984375, 13.399169921875057],
                            [-87.781884765625, 13.521386718749994],
                            [-87.71533203125003, 13.812695312500011],
                            [-87.73144531250003, 13.841064453125014],
                            [-87.80224609374997, 13.889990234375034],
                            [-87.89199218749997, 13.894970703124983],
                            [-87.99101562499996, 13.879638671874972],
                            [-88.15102539062497, 13.987353515624974],
                            [-88.44912109374994, 13.850976562499994],
                            [-88.48266601562503, 13.854248046875043],
                            [-88.49765624999998, 13.904541015624986],
                            [-88.50434570312501, 13.964208984374963],
                            [-88.51254882812498, 13.97895507812504],
                            [-89.12050781249994, 14.370214843749991],
                            [-89.36259765624996, 14.416015625],
                            [-89.17177734375, 14.606884765624983],
                            [-89.16220703125, 14.669238281249989],
                            [-89.22236328125001, 14.86606445312502],
                            [-89.142578125, 15.072314453125031],
                            [-88.96098632812496, 15.15244140625002],
                            [-88.68447265625002, 15.360498046875037],
                            [-88.36455078124996, 15.616015625000045],
                            [-88.27143554687498, 15.694873046875045],
                            [-88.22832031249999, 15.729003906249972],
                            [-88.131103515625, 15.701025390625034],
                            [-87.87495117187495, 15.879345703124955],
                            [-86.35664062499998, 15.783203125],
                            [-85.93627929687497, 15.953417968750045],
                            [-85.98564453124999, 16.02416992187497],
                            [-85.48369140624996, 15.899511718749977],
                            [-84.97373046874998, 15.989892578124994],
                            [-84.55966796875, 15.802001953125],
                            [-84.26142578124998, 15.822607421875034],
                            [-83.765283203125, 15.405468750000054],
                            [-83.972802734375, 15.519628906250034],
                            [-84.11132812499997, 15.492431640625],
                            [-84.09506835937503, 15.400927734375017],
                            [-83.92744140624998, 15.394042968750028],
                            [-83.76044921874998, 15.220361328124994],
                            [-83.49794921874997, 15.222119140624997],
                            [-83.64638671875, 15.368408203125043],
                            [-83.36918945312493, 15.239990234375],
                            [-83.29086914062498, 15.078906250000045],
                            [-83.2255859375, 15.042285156250045],
                            [-83.15751953124999, 14.993066406249966],
                            [-83.41503906249994, 15.008056640625],
                            [-83.5365234375, 14.977001953124983],
                            [-83.635498046875, 14.876416015624997]
                        ]
                    ]
                },
                properties: {
                    name: "Honduras",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [17.60781250000005, 42.76904296875],
                                [17.744238281250063, 42.70034179687505],
                                [17.34414062500008, 42.790380859375006],
                                [17.60781250000005, 42.76904296875]
                            ]
                        ],
                        [
                            [
                                [16.650683593750017, 42.99658203125],
                                [17.188281250000045, 42.917041015625045],
                                [16.850683593750006, 42.8955078125],
                                [16.650683593750017, 42.99658203125]
                            ]
                        ],
                        [
                            [
                                [17.667578125000063, 42.897119140624994],
                                [18.436328125000017, 42.559716796874994],
                                [18.517480468750023, 42.43291015624999],
                                [17.823828125, 42.79741210937502],
                                [17.045410156250057, 43.014892578125],
                                [17.667578125000063, 42.897119140624994]
                            ]
                        ],
                        [
                            [
                                [16.785253906250006, 43.270654296874966],
                                [16.490332031250034, 43.28618164062502],
                                [16.44892578125004, 43.38706054687506],
                                [16.89130859375001, 43.314648437499955],
                                [16.785253906250006, 43.270654296874966]
                            ]
                        ],
                        [
                            [
                                [15.371386718750074, 43.973828124999955],
                                [15.437207031250068, 43.899511718750006],
                                [15.270019531250028, 44.01074218750003],
                                [15.371386718750074, 43.973828124999955]
                            ]
                        ],
                        [
                            [
                                [14.488085937500074, 44.66005859375005],
                                [14.31240234375008, 44.90039062499997],
                                [14.33125, 45.16499023437498],
                                [14.488085937500074, 44.66005859375005]
                            ]
                        ],
                        [
                            [
                                [14.810253906250068, 44.97705078124997],
                                [14.45039062500004, 45.079199218750006],
                                [14.571093750000017, 45.224755859374994],
                                [14.810253906250068, 44.97705078124997]
                            ]
                        ],
                        [
                            [
                                [18.905371093750006, 45.931738281250034],
                                [18.839062499999983, 45.83574218750002],
                                [19.064257812500045, 45.51499023437506],
                                [19.004687500000074, 45.39951171875006],
                                [19.4, 45.2125],
                                [19.062890625000023, 45.13720703125],
                                [19.007128906250045, 44.86918945312502],
                                [18.83642578125, 44.883251953124955],
                                [18.66259765625, 45.07744140624999],
                                [17.812792968750074, 45.078125],
                                [16.918652343749983, 45.27656249999998],
                                [16.53066406250008, 45.21669921875002],
                                [16.29335937500005, 45.00883789062496],
                                [16.028320312500057, 45.18959960937502],
                                [15.788085937500057, 45.17895507812497],
                                [15.736621093750045, 44.76582031250001],
                                [16.10341796875008, 44.52099609375006],
                                [16.300097656250017, 44.12451171875],
                                [17.27382812500005, 43.44575195312501],
                                [17.650488281250063, 43.006591796875],
                                [17.585156250000068, 42.93837890625005],
                                [16.903125, 43.392431640625006],
                                [16.393945312500023, 43.54335937500002],
                                [15.985546875000068, 43.519775390625],
                                [15.185839843750017, 44.17211914062503],
                                [15.122949218749994, 44.256787109374955],
                                [15.470996093750045, 44.27197265625003],
                                [14.981347656250023, 44.60292968750005],
                                [14.854589843750034, 45.08100585937501],
                                [14.550488281249983, 45.297705078125006],
                                [14.31269531250004, 45.33779296875002],
                                [13.86074218750008, 44.83740234375003],
                                [13.517187500000063, 45.481787109375034],
                                [13.878710937500017, 45.428369140624994],
                                [14.369921875000074, 45.48144531250006],
                                [14.427343750000034, 45.50576171875002],
                                [14.56884765625, 45.65722656249997],
                                [14.591796875000057, 45.65126953125002],
                                [14.649511718750006, 45.57148437500001],
                                [14.793066406250034, 45.47822265625001],
                                [14.95458984375, 45.499902343749994],
                                [15.110449218750034, 45.450781250000034],
                                [15.242089843750023, 45.44140624999997],
                                [15.339453125000063, 45.46704101562506],
                                [15.326660156250028, 45.502294921875034],
                                [15.291210937500011, 45.541552734375045],
                                [15.283593750000051, 45.5796875],
                                [15.35371093750004, 45.659912109375],
                                [15.27705078125004, 45.73261718749998],
                                [15.652148437500074, 45.86215820312498],
                                [15.675585937500045, 45.98369140624996],
                                [15.666210937500011, 46.04848632812502],
                                [15.596875, 46.10922851562506],
                                [15.592578125000017, 46.139990234375006],
                                [15.608984374999977, 46.171923828125045],
                                [16.1064453125, 46.382226562499994],
                                [16.32119140625005, 46.53461914062504],
                                [16.42763671875005, 46.5244140625],
                                [16.516210937499977, 46.499902343749966],
                                [16.569921875, 46.48500976562505],
                                [16.748046875000057, 46.41640625000002],
                                [16.87148437500008, 46.33930664062504],
                                [17.310644531250006, 45.99614257812502],
                                [17.80712890625, 45.79042968750002],
                                [18.358300781250023, 45.75302734375006],
                                [18.533593750000023, 45.79614257812503],
                                [18.56464843750004, 45.81328124999999],
                                [18.666015625, 45.90747070312497],
                                [18.905371093750006, 45.931738281250034]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Croatia",
                    childNum: 8
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-72.80458984374997, 18.777685546875063],
                                [-72.82221679687501, 18.707128906249977],
                                [-73.07797851562498, 18.790917968749994],
                                [-73.27641601562499, 18.95405273437501],
                                [-72.80458984374997, 18.777685546875063]
                            ]
                        ],
                        [
                            [
                                [-71.647216796875, 19.195947265624994],
                                [-71.80712890624997, 18.987011718749983],
                                [-71.733642578125, 18.85639648437501],
                                [-71.72705078125, 18.80322265625003],
                                [-71.74321289062502, 18.73291015625],
                                [-71.86650390624999, 18.61416015625005],
                                [-71.98686523437499, 18.61035156249997],
                                [-72.000390625, 18.59790039062503],
                                [-71.94038085937493, 18.51259765625005],
                                [-71.87255859374997, 18.416210937499955],
                                [-71.76191406249998, 18.34130859374997],
                                [-71.73725585937495, 18.27080078124999],
                                [-71.76831054687497, 18.039160156250063],
                                [-71.85292968749997, 18.119140625],
                                [-71.94609375, 18.186083984375045],
                                [-72.05986328124993, 18.228564453125017],
                                [-72.87666015624998, 18.151757812499994],
                                [-73.38515625000002, 18.251171874999983],
                                [-73.747314453125, 18.190234375000017],
                                [-73.88496093749998, 18.041894531249994],
                                [-74.478125, 18.45],
                                [-74.3875, 18.624707031249983],
                                [-74.22773437499998, 18.662695312499977],
                                [-72.78935546874996, 18.434814453125],
                                [-72.37607421874998, 18.57446289062503],
                                [-72.34765624999994, 18.674951171874994],
                                [-72.81108398437496, 19.071582031250074],
                                [-72.70322265625, 19.441064453125023],
                                [-73.43837890624994, 19.722119140624983],
                                [-73.21777343750003, 19.88369140625005],
                                [-72.63701171875002, 19.90087890625],
                                [-72.21982421875003, 19.744628906250057],
                                [-71.834716796875, 19.696728515624983],
                                [-71.77924804687498, 19.718164062499994],
                                [-71.75742187499998, 19.68818359375001],
                                [-71.71147460937493, 19.486572265625057],
                                [-71.74648437499997, 19.28583984375001],
                                [-71.647216796875, 19.195947265624994]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Haiti",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [22.1318359375, 48.405322265624996],
                            [22.253710937500017, 48.407373046874994],
                            [22.582421875000023, 48.134033203125],
                            [22.769140625, 48.109619140625],
                            [22.87666015625001, 47.947265625],
                            [21.99970703125001, 47.505029296874994],
                            [21.121679687500006, 46.282421875],
                            [20.76025390625, 46.246240234374994],
                            [20.613671875000023, 46.13349609375],
                            [20.508105468750017, 46.166943359375],
                            [20.28095703125001, 46.1330078125],
                            [20.241796875, 46.10859375],
                            [20.21015625000001, 46.126025390624996],
                            [20.161425781250017, 46.141894531249996],
                            [19.93408203125, 46.161474609375],
                            [19.84443359375001, 46.145898437499994],
                            [19.61347656250001, 46.169189453125],
                            [19.421289062500023, 46.064453125],
                            [18.666015625, 45.907470703125],
                            [18.56464843750001, 45.81328125],
                            [18.533593750000023, 45.796142578125],
                            [18.358300781250023, 45.75302734375],
                            [17.80712890625, 45.790429687499994],
                            [17.310644531250006, 45.996142578124996],
                            [16.871484375000023, 46.339306640625],
                            [16.748046875, 46.41640625],
                            [16.569921875, 46.485009765624994],
                            [16.516210937500006, 46.499902343749994],
                            [16.283593750000023, 46.857275390625],
                            [16.093066406250017, 46.86328125],
                            [16.453417968750017, 47.006787109375],
                            [16.44287109375, 47.39951171875],
                            [16.676562500000017, 47.536035156249994],
                            [16.421289062500023, 47.674462890624994],
                            [17.06660156250001, 47.707568359374996],
                            [17.147363281250023, 48.00595703125],
                            [17.76191406250001, 47.770166015624994],
                            [18.72421875, 47.787158203124996],
                            [18.791894531250023, 48.000292968749996],
                            [19.625390625000023, 48.223095703125],
                            [19.95039062500001, 48.146630859374994],
                            [20.333789062500017, 48.295556640624994],
                            [20.490039062500017, 48.526904296874996],
                            [21.45136718750001, 48.55224609375],
                            [21.766992187500023, 48.3380859375],
                            [22.1318359375, 48.405322265624996]
                        ]
                    ]
                },
                properties: {
                    name: "Hungary",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [122.9489257812501, -10.90927734375002],
                                [122.82617187500003, -10.899121093749983],
                                [122.84570312500003, -10.761816406249991],
                                [123.37109375000003, -10.474902343749989],
                                [123.41816406250004, -10.651269531250037],
                                [122.9489257812501, -10.90927734375002]
                            ]
                        ],
                        [
                            [
                                [121.8830078125001, -10.590332031249957],
                                [121.70468750000006, -10.5556640625],
                                [121.99833984375002, -10.446972656249983],
                                [121.8830078125001, -10.590332031249957]
                            ]
                        ],
                        [
                            [
                                [123.41621093750004, -10.302636718749966],
                                [123.3255859375, -10.264160156249943],
                                [123.45878906250002, -10.13994140624996],
                                [123.41621093750004, -10.302636718749966]
                            ]
                        ],
                        [
                            [
                                [120.0125, -9.374707031250026],
                                [120.78447265625002, -9.95703125],
                                [120.83261718750006, -10.0375],
                                [120.69804687500002, -10.206640624999949],
                                [120.4391601562501, -10.294042968749991],
                                [120.14482421875002, -10.200097656249952],
                                [119.60107421874997, -9.773535156250006],
                                [119.08544921875003, -9.706933593750023],
                                [118.95878906250002, -9.519335937500003],
                                [119.29589843749997, -9.3671875],
                                [119.9420898437501, -9.301464843750026],
                                [120.0125, -9.374707031250026]
                            ]
                        ],
                        [
                            [
                                [125.06816406250002, -9.511914062499997],
                                [124.42753906250002, -10.14863281250004],
                                [123.7472656250001, -10.347167968749986],
                                [123.60478515625002, -10.270117187500006],
                                [123.71640625000012, -10.078613281249986],
                                [123.5892578125, -9.966796875000028],
                                [123.709375, -9.61484375],
                                [124.0363281250001, -9.341601562500031],
                                [124.28232421875012, -9.427929687500026],
                                [124.44443359375012, -9.190332031250023],
                                [124.92226562500005, -8.942480468749977],
                                [124.93681640625007, -9.053417968750026],
                                [125.14902343750012, -9.042578125000034],
                                [125.10048828125, -9.189843750000023],
                                [124.96015625000004, -9.213769531250009],
                                [125.06816406250002, -9.511914062499997]
                            ]
                        ],
                        [
                            [
                                [115.60996093750012, -8.769824218749974],
                                [115.48046875000003, -8.715429687500006],
                                [115.56142578125, -8.669921874999972],
                                [115.60996093750012, -8.769824218749974]
                            ]
                        ],
                        [
                            [
                                [122.97734375000002, -8.54521484374996],
                                [122.88779296875006, -8.587304687500009],
                                [123.01054687500002, -8.448339843750034],
                                [123.153125, -8.475781250000026],
                                [122.97734375000002, -8.54521484374996]
                            ]
                        ],
                        [
                            [
                                [119.46406250000004, -8.741015624999974],
                                [119.38554687500002, -8.736035156250026],
                                [119.4464843750001, -8.429199218749957],
                                [119.55722656250012, -8.518847656250003],
                                [119.46406250000004, -8.741015624999974]
                            ]
                        ],
                        [
                            [
                                [123.31748046875012, -8.354785156249974],
                                [123.02500000000012, -8.395507812500014],
                                [123.21708984375002, -8.235449218750006],
                                [123.33603515625006, -8.269042968750014],
                                [123.31748046875012, -8.354785156249974]
                            ]
                        ],
                        [
                            [
                                [116.64082031250004, -8.613867187500006],
                                [116.51425781250012, -8.820996093750011],
                                [116.58652343750012, -8.886132812499966],
                                [116.23935546875006, -8.912109375000014],
                                [115.85732421875005, -8.787890625000017],
                                [116.07646484375002, -8.744921874999974],
                                [116.06113281250006, -8.437402343750023],
                                [116.4015625000001, -8.204199218750034],
                                [116.7189453125001, -8.336035156249977],
                                [116.64082031250004, -8.613867187500006]
                            ]
                        ],
                        [
                            [
                                [124.28662109375003, -8.32949218749998],
                                [124.14667968750004, -8.531445312499997],
                                [123.92773437500003, -8.448925781249969],
                                [124.23955078125002, -8.20341796874996],
                                [124.28662109375003, -8.32949218749998]
                            ]
                        ],
                        [
                            [
                                [123.92480468750003, -8.2724609375],
                                [123.55302734375007, -8.566796875],
                                [123.23007812500006, -8.530664062500023],
                                [123.47587890625007, -8.322265625000014],
                                [123.39121093750012, -8.280468750000026],
                                [123.77597656250006, -8.190429687499986],
                                [123.92480468750003, -8.2724609375]
                            ]
                        ],
                        [
                            [
                                [138.89511718750006, -8.388671874999957],
                                [138.56337890625, -8.30908203125],
                                [138.79619140625007, -8.173632812500017],
                                [138.89511718750006, -8.388671874999957]
                            ]
                        ],
                        [
                            [
                                [117.55634765625004, -8.367285156249949],
                                [117.49052734375007, -8.183398437499974],
                                [117.66503906249997, -8.148242187500003],
                                [117.55634765625004, -8.367285156249949]
                            ]
                        ],
                        [
                            [
                                [124.5755859375, -8.140820312499997],
                                [125.05029296874997, -8.179589843749994],
                                [125.13173828125, -8.326464843749989],
                                [124.38066406250002, -8.41513671875002],
                                [124.43066406249997, -8.18320312500002],
                                [124.5755859375, -8.140820312499997]
                            ]
                        ],
                        [
                            [
                                [127.8234375000001, -8.098828124999969],
                                [128.11923828125012, -8.17070312499996],
                                [128.02353515625006, -8.255371093749972],
                                [127.82089843750012, -8.190234375000031],
                                [127.8234375000001, -8.098828124999969]
                            ]
                        ],
                        [
                            [
                                [122.7829101562501, -8.61171875],
                                [121.65136718749997, -8.898730468749946],
                                [121.41464843750006, -8.81484375],
                                [121.32832031250004, -8.916894531250009],
                                [121.03525390625012, -8.935449218749966],
                                [120.55048828125004, -8.80185546875002],
                                [119.909375, -8.857617187500011],
                                [119.80791015625002, -8.697656250000023],
                                [119.87480468750007, -8.419824218749994],
                                [120.61025390625005, -8.24042968750004],
                                [121.44453125000004, -8.57783203125004],
                                [121.96650390625004, -8.455175781250006],
                                [122.32324218749997, -8.628320312500023],
                                [122.85048828125, -8.304394531250011],
                                [122.91914062500004, -8.221875],
                                [122.75859375000002, -8.185937499999952],
                                [122.91699218749997, -8.105566406250006],
                                [123.00595703125006, -8.329101562499986],
                                [122.7829101562501, -8.61171875]
                            ]
                        ],
                        [
                            [
                                [130.86220703125, -8.31875],
                                [130.77519531250002, -8.34990234374996],
                                [131.02011718750012, -8.091308593749943],
                                [131.17636718750006, -8.130761718749994],
                                [130.86220703125, -8.31875]
                            ]
                        ],
                        [
                            [
                                [118.24238281250004, -8.317773437499994],
                                [118.61191406250006, -8.28066406249998],
                                [118.71386718749997, -8.41494140624998],
                                [118.926171875, -8.297656249999974],
                                [119.12968750000002, -8.668164062499969],
                                [118.74589843750002, -8.735449218749991],
                                [118.83261718750012, -8.833398437499966],
                                [118.47861328125012, -8.856445312499957],
                                [118.37890625000003, -8.674609375000031],
                                [118.18994140624997, -8.840527343749997],
                                [117.06132812500002, -9.099023437499994],
                                [116.78847656250005, -9.006347656250028],
                                [116.83505859375012, -8.532421875000026],
                                [117.16484375000007, -8.367187500000014],
                                [117.56708984375004, -8.426367187499991],
                                [117.80605468750005, -8.711132812500011],
                                [117.96953125000002, -8.728027343749986],
                                [118.23486328124997, -8.591894531249963],
                                [117.81484375000005, -8.342089843749974],
                                [117.7552734375, -8.149511718749991],
                                [118.11748046875007, -8.12226562500004],
                                [118.24238281250004, -8.317773437499994]
                            ]
                        ],
                        [
                            [
                                [115.44785156250012, -8.155175781249994],
                                [115.70429687500004, -8.40712890624998],
                                [115.14492187500005, -8.849023437500037],
                                [115.05507812500005, -8.573046874999946],
                                [114.61318359375, -8.37832031249998],
                                [114.46757812500007, -8.166308593749946],
                                [114.93847656249997, -8.18710937500002],
                                [115.15400390625004, -8.065722656249974],
                                [115.44785156250012, -8.155175781249994]
                            ]
                        ],
                        [
                            [
                                [129.83886718749997, -7.954589843749986],
                                [129.71347656250012, -8.04072265625004],
                                [129.60898437500006, -7.803417968750011],
                                [129.81298828124997, -7.819726562499952],
                                [129.83886718749997, -7.954589843749986]
                            ]
                        ],
                        [
                            [
                                [126.80097656250004, -7.667871093750009],
                                [126.4720703125, -7.950390625000011],
                                [126.04003906250003, -7.885839843750006],
                                [125.79824218750005, -7.984570312499969],
                                [125.97529296875004, -7.663378906249989],
                                [126.21367187500002, -7.706738281250026],
                                [126.60957031250004, -7.571777343749972],
                                [126.80097656250004, -7.667871093750009]
                            ]
                        ],
                        [
                            [
                                [127.41943359375003, -7.623046875000028],
                                [127.37070312500012, -7.512792968749949],
                                [127.47519531250012, -7.531054687500031],
                                [127.41943359375003, -7.623046875000028]
                            ]
                        ],
                        [
                            [
                                [138.53535156250004, -8.273632812499969],
                                [138.2962890625, -8.405175781250037],
                                [137.65039062499997, -8.386132812499966],
                                [138.08183593750002, -7.566210937500003],
                                [138.29550781250012, -7.4384765625],
                                [138.76982421875002, -7.390429687499974],
                                [138.98906250000002, -7.696093749999989],
                                [138.53535156250004, -8.273632812499969]
                            ]
                        ],
                        [
                            [
                                [131.3255859375, -7.999511718749986],
                                [131.11376953125003, -7.997363281249989],
                                [131.13779296875012, -7.684863281250017],
                                [131.64345703125, -7.11279296875],
                                [131.73613281250007, -7.197070312500017],
                                [131.64384765625002, -7.266894531249946],
                                [131.62441406250005, -7.626171874999955],
                                [131.3255859375, -7.999511718749986]
                            ]
                        ],
                        [
                            [
                                [131.98203125000006, -7.202050781249966],
                                [131.75078125000002, -7.116796875],
                                [131.92226562500005, -7.104492187499986],
                                [131.98203125000006, -7.202050781249966]
                            ]
                        ],
                        [
                            [
                                [128.6701171875001, -7.183300781249969],
                                [128.52978515625003, -7.134570312499989],
                                [128.62773437500007, -7.06875],
                                [128.6701171875001, -7.183300781249969]
                            ]
                        ],
                        [
                            [
                                [120.77441406250003, -7.118945312500003],
                                [120.64082031250004, -7.115820312499991],
                                [120.63339843750006, -7.018261718750011],
                                [120.77441406250003, -7.118945312500003]
                            ]
                        ],
                        [
                            [
                                [113.84453125000007, -7.105371093749994],
                                [113.12695312499997, -7.224121093750028],
                                [112.72587890625007, -7.072753906250014],
                                [112.86806640625, -6.899902343749972],
                                [113.06738281250003, -6.879980468749991],
                                [113.97470703125012, -6.873046875],
                                [114.0736328125, -6.960156249999983],
                                [113.84453125000007, -7.105371093749994]
                            ]
                        ],
                        [
                            [
                                [115.37705078125006, -6.97080078125002],
                                [115.22031250000012, -6.952539062500037],
                                [115.24052734375007, -6.861230468749994],
                                [115.54609375000004, -6.938671874999955],
                                [115.37705078125006, -6.97080078125002]
                            ]
                        ],
                        [
                            [
                                [105.25283203125005, -6.640429687499946],
                                [105.12138671875007, -6.614941406249997],
                                [105.26054687500002, -6.523925781250014],
                                [105.25283203125005, -6.640429687499946]
                            ]
                        ],
                        [
                            [
                                [134.53681640625004, -6.442285156249994],
                                [134.32275390624997, -6.84873046875002],
                                [134.09082031249997, -6.833789062500003],
                                [134.10703125000006, -6.471582031250009],
                                [134.19462890625007, -6.459765625],
                                [134.11464843750005, -6.190820312500009],
                                [134.53681640625004, -6.442285156249994]
                            ]
                        ],
                        [
                            [
                                [107.37392578125005, -6.007617187499989],
                                [107.66679687500002, -6.215820312499957],
                                [108.33017578125012, -6.286035156249966],
                                [108.67783203125006, -6.790527343749972],
                                [110.42626953124997, -6.947265625000028],
                                [110.83476562500002, -6.424218749999952],
                                [110.97226562500012, -6.435644531249977],
                                [111.18154296875005, -6.686718749999969],
                                [111.54033203125002, -6.648242187500031],
                                [112.0873046875, -6.89335937499996],
                                [112.53925781250004, -6.926464843749955],
                                [112.64873046875007, -7.221289062499977],
                                [112.7943359375, -7.304492187499974],
                                [112.79453125000012, -7.55244140625004],
                                [113.01357421875005, -7.657714843749986],
                                [113.49765625000006, -7.723828124999955],
                                [114.07070312500005, -7.633007812500011],
                                [114.40927734375012, -7.79248046875],
                                [114.38691406250004, -8.405175781250037],
                                [114.58378906250002, -8.769628906250034],
                                [113.25332031250005, -8.286718749999963],
                                [112.67880859375006, -8.409179687499957],
                                [111.50996093750004, -8.30507812499998],
                                [110.60722656250002, -8.149414062499972],
                                [109.28164062500005, -7.704882812500003],
                                [108.74121093749997, -7.667089843750034],
                                [108.45175781250006, -7.79697265625002],
                                [107.91748046875003, -7.724121093750014],
                                [107.28496093750007, -7.471679687500014],
                                [106.45527343750004, -7.368652343749986],
                                [106.51972656250004, -7.053710937499943],
                                [106.19824218749997, -6.927832031249977],
                                [105.25546875000012, -6.835253906250031],
                                [105.37089843750002, -6.664355468750031],
                                [105.48369140625007, -6.781542968750017],
                                [105.65507812500002, -6.469531249999946],
                                [105.78691406250002, -6.456933593749966],
                                [105.86826171875006, -6.11640625000004],
                                [106.075, -5.914160156249963],
                                [106.82519531249997, -6.098242187499977],
                                [107.0462890625, -5.90419921874998],
                                [107.37392578125005, -6.007617187499989]
                            ]
                        ],
                        [
                            [
                                [120.52832031249997, -6.2984375],
                                [120.48730468749997, -6.464843749999972],
                                [120.47734375000007, -5.775292968750009],
                                [120.52832031249997, -6.2984375]
                            ]
                        ],
                        [
                            [
                                [112.7194335937501, -5.81103515625],
                                [112.58603515625006, -5.803613281249994],
                                [112.69003906250006, -5.726171875000034],
                                [112.7194335937501, -5.81103515625]
                            ]
                        ],
                        [
                            [
                                [132.80712890625003, -5.850781250000011],
                                [132.68144531250002, -5.91259765625],
                                [132.63017578125002, -5.60703125],
                                [132.80712890625003, -5.850781250000011]
                            ]
                        ],
                        [
                            [
                                [134.74697265625, -5.707031249999957],
                                [134.71416015625007, -6.29511718750004],
                                [134.44111328125004, -6.334863281249966],
                                [134.15488281250006, -6.06289062499998],
                                [134.3019531250001, -6.009765624999986],
                                [134.34306640625002, -5.833007812499943],
                                [134.20537109375002, -5.707226562499997],
                                [134.34130859375003, -5.712890624999986],
                                [134.57080078124997, -5.42734375],
                                [134.74697265625, -5.707031249999957]
                            ]
                        ],
                        [
                            [
                                [132.92626953124997, -5.902050781249983],
                                [132.84501953125002, -5.987988281249997],
                                [133.13847656250002, -5.317871093749986],
                                [133.11962890625003, -5.575976562499989],
                                [132.92626953124997, -5.902050781249983]
                            ]
                        ],
                        [
                            [
                                [102.36718750000003, -5.478710937499983],
                                [102.1107421875, -5.32255859374996],
                                [102.3717773437501, -5.366406250000011],
                                [102.36718750000003, -5.478710937499983]
                            ]
                        ],
                        [
                            [
                                [123.62675781250007, -5.271582031249963],
                                [123.58261718750006, -5.36738281250004],
                                [123.54277343750002, -5.271093749999963],
                                [123.62675781250007, -5.271582031249963]
                            ]
                        ],
                        [
                            [
                                [122.04296874999997, -5.437988281250028],
                                [121.80849609375, -5.256152343750017],
                                [121.91367187500012, -5.072265624999957],
                                [122.04101562500003, -5.158789062499991],
                                [122.04296874999997, -5.437988281250028]
                            ]
                        ],
                        [
                            [
                                [122.64511718750012, -5.26943359374998],
                                [122.5638671875, -5.3875],
                                [122.28310546875, -5.319531249999969],
                                [122.39628906250002, -5.069824218749986],
                                [122.36894531250007, -4.767187499999977],
                                [122.70195312500002, -4.61865234375],
                                [122.75986328125012, -4.933886718750003],
                                [122.61406250000007, -5.138671874999986],
                                [122.64511718750012, -5.26943359374998]
                            ]
                        ],
                        [
                            [
                                [123.17978515625006, -4.551171875000023],
                                [123.195703125, -4.82265625],
                                [123.05517578124997, -4.748242187500026],
                                [122.97167968750003, -5.138476562500031],
                                [123.18730468750007, -5.333007812499957],
                                [122.96875, -5.405761718749943],
                                [122.81210937500012, -5.671289062499952],
                                [122.64501953124997, -5.663378906250031],
                                [122.58642578124997, -5.488867187500006],
                                [122.76650390625005, -5.210156249999983],
                                [122.85332031250007, -4.618359375000026],
                                [123.074609375, -4.38691406250004],
                                [123.17978515625006, -4.551171875000023]
                            ]
                        ],
                        [
                            [
                                [133.57080078124997, -4.245898437500003],
                                [133.621875, -4.299316406249957],
                                [133.32089843750006, -4.111035156249969],
                                [133.57080078124997, -4.245898437500003]
                            ]
                        ],
                        [
                            [
                                [123.2423828125001, -4.112988281250011],
                                [123.07617187499997, -4.227148437499991],
                                [122.96904296875002, -4.029980468749969],
                                [123.21191406250003, -3.997558593750028],
                                [123.2423828125001, -4.112988281250011]
                            ]
                        ],
                        [
                            [
                                [128.56259765625012, -3.58544921875],
                                [128.39160156250003, -3.637890625000026],
                                [128.45156250000005, -3.514746093749991],
                                [128.56259765625012, -3.58544921875]
                            ]
                        ],
                        [
                            [
                                [128.2755859375001, -3.67460937499996],
                                [127.97802734374997, -3.770996093749972],
                                [127.925, -3.69931640625002],
                                [128.32910156249997, -3.51591796874996],
                                [128.2755859375001, -3.67460937499996]
                            ]
                        ],
                        [
                            [
                                [116.42412109375007, -3.464453124999963],
                                [116.38779296875012, -3.636718749999972],
                                [116.3265625, -3.539062499999972],
                                [116.42412109375007, -3.464453124999963]
                            ]
                        ],
                        [
                            [
                                [116.30332031250006, -3.868164062499957],
                                [116.05878906250004, -4.006933593749991],
                                [116.06357421875006, -3.457910156249952],
                                [116.26972656250004, -3.251074218750006],
                                [116.30332031250006, -3.868164062499957]
                            ]
                        ],
                        [
                            [
                                [126.86113281250007, -3.087890624999986],
                                [127.22734375000007, -3.391015625],
                                [127.22958984375006, -3.633007812500011],
                                [126.68632812500007, -3.823632812500037],
                                [126.21455078125004, -3.605175781250026],
                                [126.05654296875, -3.420996093749991],
                                [126.08828125, -3.105468750000014],
                                [126.86113281250007, -3.087890624999986]
                            ]
                        ],
                        [
                            [
                                [106.88642578125004, -3.005273437500023],
                                [106.7428710937501, -2.932812500000011],
                                [106.91064453124997, -2.93398437499998],
                                [106.88642578125004, -3.005273437500023]
                            ]
                        ],
                        [
                            [
                                [129.75468750000007, -2.865820312500034],
                                [130.3791015625001, -2.989355468749977],
                                [130.56992187500006, -3.130859375000028],
                                [130.85996093750006, -3.570312500000028],
                                [130.805078125, -3.85771484374996],
                                [129.844140625, -3.327148437499957],
                                [129.51171875000003, -3.32851562499998],
                                [129.46767578125005, -3.453222656249977],
                                [128.8625, -3.234960937500006],
                                [128.51660156249997, -3.449121093750037],
                                [128.13203125000004, -3.157421875000026],
                                [127.90234374999997, -3.496289062499955],
                                [127.87792968749997, -3.222070312499966],
                                [128.19853515625002, -2.865917968749969],
                                [128.99111328125, -2.82851562499998],
                                [129.17441406250006, -2.933496093749966],
                                [129.48417968750002, -2.785742187499977],
                                [129.75468750000007, -2.865820312500034]
                            ]
                        ],
                        [
                            [
                                [100.42509765625007, -3.182910156249974],
                                [100.46513671875007, -3.32851562499998],
                                [100.20429687500004, -2.98681640625],
                                [100.19853515625002, -2.785546875000023],
                                [100.45458984375003, -3.001953124999972],
                                [100.42509765625007, -3.182910156249974]
                            ]
                        ],
                        [
                            [
                                [108.2072265625001, -2.997656249999977],
                                [108.05527343750006, -3.22685546874996],
                                [107.85820312500002, -3.086328125000023],
                                [107.61445312500004, -3.209375],
                                [107.56347656250003, -2.920117187499997],
                                [107.66630859375002, -2.566308593750037],
                                [107.83779296875005, -2.530273437499972],
                                [108.21513671875002, -2.696972656250011],
                                [108.29062500000012, -2.829980468750023],
                                [108.2072265625001, -2.997656249999977]
                            ]
                        ],
                        [
                            [
                                [100.20410156249997, -2.741015625000017],
                                [100.01494140625007, -2.819726562499966],
                                [99.98789062500006, -2.525390624999957],
                                [100.20410156249997, -2.741015625000017]
                            ]
                        ],
                        [
                            [
                                [99.84306640625007, -2.343066406250031],
                                [99.60703125000012, -2.257519531250011],
                                [99.57216796875005, -2.025781249999966],
                                [99.84306640625007, -2.343066406250031]
                            ]
                        ],
                        [
                            [
                                [126.055078125, -2.451269531249963],
                                [125.86289062500006, -2.077148437499943],
                                [125.92275390625, -1.974804687499969],
                                [126.055078125, -2.451269531249963]
                            ]
                        ],
                        [
                            [
                                [126.02421875000007, -1.789746093750011],
                                [126.33173828125004, -1.822851562500006],
                                [125.47919921875004, -1.940039062499991],
                                [125.38720703124997, -1.843066406249946],
                                [126.02421875000007, -1.789746093750011]
                            ]
                        ],
                        [
                            [
                                [130.35332031250007, -1.690527343749963],
                                [130.41884765625, -1.971289062499963],
                                [130.24804687500003, -2.047753906249994],
                                [129.7376953125, -1.866894531250011],
                                [130.35332031250007, -1.690527343749963]
                            ]
                        ],
                        [
                            [
                                [124.96953125000007, -1.70546875],
                                [125.18789062500005, -1.712890624999986],
                                [125.31406250000006, -1.877148437499969],
                                [124.41777343750002, -2.005175781250031],
                                [124.32968750000012, -1.858886718749972],
                                [124.41757812500006, -1.659277343749991],
                                [124.96953125000007, -1.70546875]
                            ]
                        ],
                        [
                            [
                                [135.47421875000006, -1.591796875000014],
                                [136.89257812500003, -1.799707031249994],
                                [136.22812500000012, -1.893652343749949],
                                [135.47421875000006, -1.591796875000014]
                            ]
                        ],
                        [
                            [
                                [108.953125, -1.61962890625],
                                [108.83789062499997, -1.661621093750028],
                                [108.80371093750003, -1.567773437499994],
                                [108.953125, -1.61962890625]
                            ]
                        ],
                        [
                            [
                                [106.04570312500002, -1.669433593750014],
                                [106.36591796875004, -2.464843749999972],
                                [106.81845703125006, -2.573339843749963],
                                [106.6120117187501, -2.895507812499957],
                                [106.66718750000004, -3.071777343749986],
                                [105.99873046875004, -2.824902343749955],
                                [105.7858398437501, -2.18134765625004],
                                [105.13339843750012, -2.042578125],
                                [105.45957031250006, -1.574707031249986],
                                [105.58544921875003, -1.526757812499994],
                                [105.7008789062501, -1.731054687499963],
                                [105.7204101562501, -1.533886718750026],
                                [105.91005859375, -1.504980468749991],
                                [106.04570312500002, -1.669433593750014]
                            ]
                        ],
                        [
                            [
                                [123.59755859375, -1.704296875000011],
                                [123.48251953125006, -1.681445312499974],
                                [123.52851562500004, -1.502832031250009],
                                [123.59755859375, -1.704296875000011]
                            ]
                        ],
                        [
                            [
                                [128.1530273437501, -1.66054687499998],
                                [127.56162109375012, -1.728515624999972],
                                [127.39501953125003, -1.589843749999972],
                                [127.64667968750004, -1.332421875],
                                [128.1530273437501, -1.66054687499998]
                            ]
                        ],
                        [
                            [
                                [123.2123046875, -1.171289062499966],
                                [123.23779296874997, -1.389355468749983],
                                [123.43476562500004, -1.236816406249986],
                                [123.54726562500005, -1.337402343749957],
                                [123.51191406250004, -1.447363281249977],
                                [123.27490234374997, -1.437207031249955],
                                [123.17294921875006, -1.616015624999974],
                                [123.15039062500003, -1.304492187500003],
                                [122.89042968750007, -1.58720703124996],
                                [122.81083984375002, -1.432128906249986],
                                [122.90800781250002, -1.182226562499963],
                                [123.2123046875, -1.171289062499966]
                            ]
                        ],
                        [
                            [
                                [109.71025390625007, -1.1806640625],
                                [109.46367187500002, -1.277539062500026],
                                [109.4759765625, -.9853515625],
                                [109.74335937500004, -1.039355468749989],
                                [109.71025390625007, -1.1806640625]
                            ]
                        ],
                        [
                            [
                                [134.96533203124997, -1.116015624999974],
                                [134.86171875, -1.114160156249952],
                                [134.82792968750002, -.978808593750003],
                                [134.99628906250004, -1.03408203124998],
                                [134.96533203124997, -1.116015624999974]
                            ]
                        ],
                        [
                            [
                                [99.16386718750007, -1.777929687500006],
                                [98.82773437500006, -1.609960937499977],
                                [98.60175781250004, -1.197851562499949],
                                [98.67607421875007, -.970507812500003],
                                [98.93261718750003, -.954003906250009],
                                [99.2672851562501, -1.62773437499996],
                                [99.16386718750007, -1.777929687500006]
                            ]
                        ],
                        [
                            [
                                [131.00185546875005, -1.315527343750034],
                                [130.78232421875006, -1.255468749999963],
                                [130.67294921875006, -.959765625000031],
                                [131.03300781250007, -.917578124999963],
                                [131.00185546875005, -1.315527343750034]
                            ]
                        ],
                        [
                            [
                                [135.38300781250004, -.6513671875],
                                [135.89355468749997, -.725781249999969],
                                [136.37529296875007, -1.094042968750031],
                                [136.1647460937501, -1.214746093750023],
                                [135.91503906250003, -1.178417968749997],
                                [135.74707031249997, -.823046874999974],
                                [135.64570312500004, -.881933593749991],
                                [135.38300781250004, -.6513671875]
                            ]
                        ],
                        [
                            [
                                [127.30039062500012, -.780957031250026],
                                [127.1564453125001, -.760937500000026],
                                [127.20908203125006, -.619335937499955],
                                [127.30039062500012, -.780957031250026]
                            ]
                        ],
                        [
                            [
                                [130.6266601562501, -.528710937499966],
                                [130.46542968750006, -.486523437499983],
                                [130.6159179687501, -.417285156250003],
                                [130.6266601562501, -.528710937499966]
                            ]
                        ],
                        [
                            [
                                [121.86435546875012, -.406835937500006],
                                [121.88125, -.502636718749983],
                                [121.65527343749997, -.526171874999989],
                                [121.86435546875012, -.406835937500006]
                            ]
                        ],
                        [
                            [
                                [140.97343750000007, -2.609765625],
                                [140.97353515625, -2.803417968750026],
                                [140.975, -6.346093750000023],
                                [140.86230468749997, -6.740039062499989],
                                [140.97519531250006, -6.90537109375002],
                                [140.97617187500012, -9.11875],
                                [140.00292968749997, -8.19550781250004],
                                [140.11699218750002, -7.923730468750009],
                                [139.93476562500004, -8.101171875],
                                [139.38564453125, -8.189062499999963],
                                [139.24882812500002, -7.982421874999972],
                                [138.890625, -8.237792968749943],
                                [139.08798828125012, -7.587207031250017],
                                [138.74794921875, -7.25146484375],
                                [139.17685546875006, -7.1904296875],
                                [138.84570312500003, -7.13632812499999],
                                [138.60136718750007, -6.936523437499972],
                                [138.86455078125007, -6.858398437499943],
                                [138.43867187500004, -6.343359375],
                                [138.2962890625, -5.94902343749996],
                                [138.37460937500006, -5.84365234374998],
                                [138.19960937500005, -5.80703125],
                                [138.33964843750007, -5.675683593749966],
                                [138.08710937500004, -5.70917968750004],
                                [138.06083984375002, -5.46523437499998],
                                [137.27978515624997, -4.945410156249949],
                                [136.61884765625004, -4.81875],
                                [135.97968750000004, -4.530859374999963],
                                [135.19560546875007, -4.450683593749972],
                                [134.67968749999997, -4.079101562499943],
                                [134.70654296875003, -3.954785156250026],
                                [134.88652343750007, -3.938476562499986],
                                [134.26621093750012, -3.945800781249972],
                                [134.14707031250006, -3.79677734374998],
                                [133.97382812500004, -3.817968750000034],
                                [133.67832031250006, -3.4794921875],
                                [133.8415039062501, -3.054785156249991],
                                [133.70039062500004, -3.0875],
                                [133.653125, -3.364355468749991],
                                [133.51816406250012, -3.411914062500003],
                                [133.40087890625003, -3.899023437500034],
                                [133.24873046875004, -4.062304687499989],
                                [132.91445312500005, -4.05693359374996],
                                [132.75390625000003, -3.703613281250014],
                                [132.86972656250006, -3.550976562499997],
                                [132.75136718750005, -3.294628906249997],
                                [131.97119140624997, -2.788574218750014],
                                [132.2306640625001, -2.680371093749997],
                                [132.725, -2.789062500000028],
                                [133.19101562500006, -2.43779296874996],
                                [133.70009765625005, -2.624609375],
                                [133.75332031250005, -2.450683593750014],
                                [133.90488281250012, -2.390917968750003],
                                [133.79101562500003, -2.293652343749997],
                                [133.92158203125004, -2.102050781249957],
                                [132.96279296875005, -2.272558593749963],
                                [132.30761718749997, -2.24228515625002],
                                [132.02343749999997, -1.99033203125002],
                                [131.93037109375004, -1.559667968750034],
                                [131.29375, -1.393457031250009],
                                [130.99589843750007, -1.42470703124998],
                                [131.1908203125, -1.165820312500003],
                                [131.2572265625, -.855468750000014],
                                [131.80429687500006, -.703808593750026],
                                [132.39375, -.355468750000028],
                                [132.85644531250003, -.417382812500023],
                                [133.47265624999997, -.726171874999963],
                                [133.97451171875, -.744335937500026],
                                [134.11152343750004, -.84677734375002],
                                [134.07197265625004, -1.001855468749994],
                                [134.25957031250007, -1.362988281250026],
                                [134.105859375, -1.720996093749946],
                                [134.19482421875003, -2.309082031249943],
                                [134.45996093749997, -2.83232421874996],
                                [134.48330078125, -2.583007812499972],
                                [134.62744140624997, -2.536718749999963],
                                [134.70214843749997, -2.933593749999986],
                                [134.84335937500006, -2.909179687499986],
                                [134.88681640625006, -3.209863281249966],
                                [135.25156250000012, -3.368554687499966],
                                [135.48662109375002, -3.34511718749998],
                                [135.85917968750002, -2.99531250000004],
                                [136.38994140625002, -2.273339843750037],
                                [137.07207031250002, -2.105078124999949],
                                [137.1710937500001, -2.025488281249991],
                                [137.1234375, -1.840917968749963],
                                [137.80625000000012, -1.483203125],
                                [139.78955078125003, -2.34824218750002],
                                [140.62255859374997, -2.44580078125],
                                [140.74746093750005, -2.607128906249997],
                                [140.97343750000007, -2.609765625]
                            ]
                        ],
                        [
                            [
                                [104.47421875000012, -.334667968749955],
                                [104.59013671875002, -.466601562500017],
                                [104.36318359375, -.658593749999966],
                                [104.25712890625002, -.463281249999966],
                                [104.47421875000012, -.334667968749955]
                            ]
                        ],
                        [
                            [
                                [127.56699218750006, -.318945312499949],
                                [127.68242187500002, -.46835937500002],
                                [127.60498046874997, -.610156249999946],
                                [127.88017578125002, -.808691406249991],
                                [127.7611328125, -.883691406249994],
                                [127.62382812500002, -.76601562499999],
                                [127.46269531250002, -.80595703124996],
                                [127.46865234375, -.64296875],
                                [127.3, -.500292968749946],
                                [127.32509765625, -.335839843750023],
                                [127.45517578125012, -.406347656249991],
                                [127.56699218750006, -.318945312499949]
                            ]
                        ],
                        [
                            [
                                [127.24990234375005, -.4953125],
                                [127.11914062500003, -.520507812499986],
                                [127.12646484375003, -.278613281250003],
                                [127.29003906250003, -.284375],
                                [127.24990234375005, -.4953125]
                            ]
                        ],
                        [
                            [
                                [103.73652343750004, -.347949218750003],
                                [103.461328125, -.357617187500011],
                                [103.54892578125006, -.227539062499986],
                                [103.73652343750004, -.347949218750003]
                            ]
                        ],
                        [
                            [
                                [130.81328125000007, -.004101562500026],
                                [131.27685546875003, -.149804687499952],
                                [131.33974609375005, -.290332031249989],
                                [131.00537109374997, -.360742187500037],
                                [130.62216796875006, -.0859375],
                                [130.89921875000002, -.344433593749997],
                                [130.7501953125001, -.44384765625],
                                [130.6886718750001, -.296582031250011],
                                [130.55078124999997, -.366406250000026],
                                [130.23662109375002, -.209667968749983],
                                [130.3625, -.072851562500006],
                                [130.81328125000007, -.004101562500026]
                            ]
                        ],
                        [
                            [
                                [98.45927734375007, -.530468749999969],
                                [98.30966796875012, -.531835937499977],
                                [98.4271484375, -.226464843750037],
                                [98.3229492187501, -.000781249999974],
                                [98.54414062500004, -.257617187499989],
                                [98.45927734375007, -.530468749999969]
                            ]
                        ],
                        [
                            [
                                [104.77861328125007, -.175976562499955],
                                [105.00537109374997, -.282812499999963],
                                [104.44707031250002, -.189160156249983],
                                [104.54267578125004, .01772460937498],
                                [104.77861328125007, -.175976562499955]
                            ]
                        ],
                        [
                            [
                                [103.28447265625002, .541943359375011],
                                [103.13955078125, .549072265625043],
                                [103.18740234375, .699755859375017],
                                [103.28447265625002, .541943359375011]
                            ]
                        ],
                        [
                            [
                                [103.0275390625001, .746630859374974],
                                [102.4904296875001, .856640625],
                                [102.50664062500002, 1.088769531250037],
                                [103.00244140624997, .859277343750009],
                                [103.0275390625001, .746630859374974]
                            ]
                        ],
                        [
                            [
                                [103.42392578125012, 1.048339843749972],
                                [103.31542968750003, 1.071289062500028],
                                [103.37998046875006, 1.133642578125034],
                                [103.42392578125012, 1.048339843749972]
                            ]
                        ],
                        [
                            [
                                [103.16640625000005, .870166015625003],
                                [102.7018554687501, 1.0537109375],
                                [102.72558593749997, 1.158837890625023],
                                [102.99941406250005, 1.067773437500023],
                                [103.16640625000005, .870166015625003]
                            ]
                        ],
                        [
                            [
                                [104.02480468750005, 1.180566406250009],
                                [104.13984375000004, 1.165576171874974],
                                [104.06611328125004, .989550781249989],
                                [103.93222656250012, 1.071386718749963],
                                [104.02480468750005, 1.180566406250009]
                            ]
                        ],
                        [
                            [
                                [104.58535156250005, 1.21611328124996],
                                [104.66289062500002, 1.04951171875004],
                                [104.57519531250003, .831933593750037],
                                [104.43925781250002, 1.050439453125051],
                                [104.25195312499997, 1.014892578125],
                                [104.36181640624997, 1.18149414062502],
                                [104.58535156250005, 1.21611328124996]
                            ]
                        ],
                        [
                            [
                                [102.4271484375, .990136718750023],
                                [102.27958984375002, 1.075683593750043],
                                [102.25634765625003, 1.397070312499963],
                                [102.44287109374997, 1.234228515625006],
                                [102.4271484375, .990136718750023]
                            ]
                        ],
                        [
                            [
                                [97.48154296875006, 1.465087890624972],
                                [97.93193359375002, .973925781250003],
                                [97.82041015625012, .564453124999986],
                                [97.683984375, .596093750000037],
                                [97.60390625000005, .83388671874998],
                                [97.40537109375012, .946972656250026],
                                [97.07919921875006, 1.425488281249983],
                                [97.35595703124997, 1.539746093749997],
                                [97.48154296875006, 1.465087890624972]
                            ]
                        ],
                        [
                            [
                                [102.49189453125004, 1.459179687500011],
                                [102.49941406250005, 1.330908203124991],
                                [102.02402343750012, 1.607958984375031],
                                [102.49189453125004, 1.459179687500011]
                            ]
                        ],
                        [
                            [
                                [124.88886718750004, .995312500000011],
                                [124.42753906250002, .470605468750051],
                                [123.75380859375, .305517578124991],
                                [123.26542968750007, .326611328125026],
                                [122.996875, .493505859375006],
                                [121.01298828125002, .441699218750017],
                                [120.57900390625, .5283203125],
                                [120.19228515625, .268505859374997],
                                [120.01328125000012, -.196191406249994],
                                [120.062890625, -.555566406250023],
                                [120.240625, -.868261718749949],
                                [120.51757812499997, -1.039453125],
                                [120.66738281250005, -1.370117187499972],
                                [121.14853515625012, -1.33945312500002],
                                [121.5755859375, -.828515625000023],
                                [121.96962890625005, -.933300781249969],
                                [122.27998046875004, -.757031250000026],
                                [122.88876953125006, -.755175781250003],
                                [122.8294921875, -.658886718750026],
                                [123.17148437500012, -.57070312499999],
                                [123.37968750000002, -.648535156249949],
                                [123.43417968750006, -.778222656249994],
                                [123.37792968749997, -1.004101562500011],
                                [122.90283203125003, -.900976562499963],
                                [122.25068359375004, -1.555273437500034],
                                [121.8585937500001, -1.69326171874998],
                                [121.65097656250006, -1.895410156249952],
                                [121.35546874999997, -1.878222656250003],
                                [122.29169921875004, -2.907617187500023],
                                [122.39902343750006, -3.200878906249997],
                                [122.25292968749997, -3.620410156250017],
                                [122.68964843750004, -4.084472656249972],
                                [122.84794921875002, -4.064550781250006],
                                [122.8722656250001, -4.391992187500009],
                                [122.71972656250003, -4.340722656249952],
                                [122.11425781250003, -4.540234375000011],
                                [122.03808593749997, -4.832421875000023],
                                [121.58867187500007, -4.759570312500017],
                                [121.48652343750004, -4.581054687499972],
                                [121.61806640625, -4.092675781249952],
                                [120.89179687500004, -3.520605468750034],
                                [121.05429687500012, -3.167089843749949],
                                [121.0521484375, -2.751660156249955],
                                [120.87939453124997, -2.64560546875002],
                                [120.65361328125002, -2.667578124999977],
                                [120.26103515625007, -2.949316406249991],
                                [120.43662109375012, -3.70732421874996],
                                [120.42011718750004, -4.617382812500011],
                                [120.27929687499997, -5.146093749999977],
                                [120.4303710937501, -5.591015625000026],
                                [119.9515625, -5.577636718749972],
                                [119.71728515625003, -5.693359375000014],
                                [119.55742187500007, -5.611035156250026],
                                [119.36035156249997, -5.314160156250026],
                                [119.59404296875007, -4.523144531249997],
                                [119.62363281250006, -4.034375],
                                [119.46748046875004, -3.512988281249989],
                                [118.99462890624997, -3.537597656250028],
                                [118.86767578124997, -3.39804687500002],
                                [118.78330078125006, -2.720800781249977],
                                [119.09218750000005, -2.482910156250014],
                                [119.32187500000012, -1.929687500000014],
                                [119.308984375, -1.408203125],
                                [119.508203125, -.906738281249972],
                                [119.71132812500005, -.680761718750034],
                                [119.84433593750006, -.861914062499991],
                                [119.721875, -.088476562499991],
                                [119.865625, .040087890625003],
                                [119.80927734375004, .238671875000051],
                                [119.9132812500001, .445068359375],
                                [120.26953125000003, .970800781249991],
                                [120.60253906249997, .854394531249994],
                                [120.86796875000007, 1.25283203124998],
                                [121.0817382812501, 1.327636718750028],
                                [121.40410156250002, 1.243603515624969],
                                [121.59179687499997, 1.067968749999977],
                                [122.43662109375006, 1.018066406250028],
                                [122.83828125, .845703125],
                                [123.06650390625006, .941796875000037],
                                [123.93076171875006, .850439453124977],
                                [124.53369140624997, 1.230468750000043],
                                [124.94707031250002, 1.672167968749974],
                                [125.11093750000012, 1.685693359374966],
                                [125.2337890625, 1.502294921875006],
                                [124.88886718750004, .995312500000011]
                            ]
                        ],
                        [
                            [
                                [101.70810546875006, 2.078417968750045],
                                [101.71943359375004, 1.789160156250006],
                                [101.50078125000002, 1.733203124999974],
                                [101.40966796875003, 2.021679687500026],
                                [101.70810546875006, 2.078417968750045]
                            ]
                        ],
                        [
                            [
                                [127.73271484375007, .848144531250043],
                                [127.8810546875001, .832128906249977],
                                [127.96728515624997, 1.042578125000048],
                                [128.16074218750006, 1.1578125],
                                [128.22246093750002, 1.400634765624986],
                                [128.68837890625, 1.572558593750017],
                                [128.70263671874997, 1.106396484374997],
                                [128.29882812500003, .87680664062502],
                                [128.26064453125, .733789062500023],
                                [128.61123046875, .549951171875051],
                                [128.89960937500004, .216259765625011],
                                [127.9831054687501, .471875],
                                [127.88740234375004, .298339843750043],
                                [127.97783203125002, -.24833984374996],
                                [128.4254882812501, -.892675781249949],
                                [128.04638671875003, -.706054687499943],
                                [127.69160156250004, -.241894531249983],
                                [127.70869140625004, .288085937499986],
                                [127.53710937500003, .610888671875031],
                                [127.60800781250006, .848242187499977],
                                [127.42851562500002, 1.139990234374991],
                                [127.63173828125, 1.843701171875011],
                                [128.03642578125002, 2.199023437500017],
                                [127.88681640625012, 1.83295898437504],
                                [128.0109375000001, 1.701220703125031],
                                [128.01171874999997, 1.331738281249983],
                                [127.65283203124997, 1.013867187499969],
                                [127.73271484375007, .848144531250043]
                            ]
                        ],
                        [
                            [
                                [97.3341796875001, 2.075634765625011],
                                [97.10830078125, 2.216894531250006],
                                [97.29140625, 2.200830078125023],
                                [97.3341796875001, 2.075634765625011]
                            ]
                        ],
                        [
                            [
                                [128.45390625000002, 2.051757812500028],
                                [128.29589843749997, 2.034716796875017],
                                [128.2179687500001, 2.297460937499991],
                                [128.60214843750012, 2.59760742187504],
                                [128.68847656250003, 2.473681640625017],
                                [128.62324218750004, 2.224414062500031],
                                [128.45390625000002, 2.051757812500028]
                            ]
                        ],
                        [
                            [
                                [96.46367187500002, 2.360009765625037],
                                [95.80859374999997, 2.655615234375034],
                                [95.7171875, 2.825976562500017],
                                [95.89580078125007, 2.8890625],
                                [96.41728515625007, 2.515185546875031],
                                [96.46367187500002, 2.360009765625037]
                            ]
                        ],
                        [
                            [
                                [108.8875, 2.905419921875037],
                                [108.7865234375, 2.885644531250009],
                                [108.88574218750003, 2.998974609374997],
                                [108.8875, 2.905419921875037]
                            ]
                        ],
                        [
                            [
                                [105.76035156250006, 2.863037109375014],
                                [105.69218750000002, 3.0625],
                                [105.83671875000007, 2.97651367187504],
                                [105.76035156250006, 2.863037109375014]
                            ]
                        ],
                        [
                            [
                                [106.28525390625006, 3.15712890624998],
                                [106.28369140624997, 3.088232421874977],
                                [106.20097656250002, 3.204882812500031],
                                [106.28525390625006, 3.15712890624998]
                            ]
                        ],
                        [
                            [
                                [117.65839843750004, 3.280517578124986],
                                [117.54785156250003, 3.43198242187502],
                                [117.68085937500004, 3.407519531250017],
                                [117.65839843750004, 3.280517578124986]
                            ]
                        ],
                        [
                            [
                                [125.65810546875, 3.436035156250043],
                                [125.51152343750007, 3.461132812500011],
                                [125.46884765625006, 3.73325195312502],
                                [125.65810546875, 3.436035156250043]
                            ]
                        ],
                        [
                            [
                                [117.88476562499997, 4.186132812500006],
                                [117.92285156250003, 4.054296874999977],
                                [117.73681640624997, 4.004003906250034],
                                [117.64902343750012, 4.168994140624974],
                                [117.88476562499997, 4.186132812500006]
                            ]
                        ],
                        [
                            [
                                [108.31601562500006, 3.689648437500026],
                                [108.10039062500002, 3.70454101562504],
                                [108.24326171875006, 3.810351562500017],
                                [108.00234375, 3.982861328124983],
                                [108.24833984375002, 4.21713867187502],
                                [108.39287109375007, 3.986181640625034],
                                [108.31601562500006, 3.689648437500026]
                            ]
                        ],
                        [
                            [
                                [117.5744140625001, 4.17060546875004],
                                [117.46533203124997, 4.076074218749966],
                                [117.77724609375005, 3.689257812500031],
                                [117.05595703125007, 3.622656249999963],
                                [117.34628906250006, 3.426611328124991],
                                [117.35244140625, 3.19375],
                                [117.61064453125002, 3.064355468749994],
                                [117.56914062500002, 2.92929687500002],
                                [117.69765625, 2.887304687499991],
                                [117.6388671875001, 2.825292968749963],
                                [118.0666015625001, 2.317822265624969],
                                [117.7892578125001, 2.026855468750014],
                                [118.98496093750006, .982128906249983],
                                [118.53476562500006, .813525390625017],
                                [118.19609375000002, .874365234374977],
                                [117.91162109374997, 1.098681640625017],
                                [117.96425781250005, .889550781250051],
                                [117.74511718749997, .72963867187498],
                                [117.52216796875004, .235888671875017],
                                [117.46289062500003, -.323730468749957],
                                [117.5625, -.770898437500009],
                                [116.91396484375, -1.223632812499972],
                                [116.73984375000006, -1.044238281250017],
                                [116.75341796874997, -1.327343749999955],
                                [116.27548828125006, -1.784863281249997],
                                [116.42431640625003, -1.784863281249997],
                                [116.45195312500002, -1.923144531250017],
                                [116.31396484374997, -2.139843750000011],
                                [116.56542968749997, -2.299707031249994],
                                [116.52929687499997, -2.51054687499996],
                                [116.31679687500005, -2.55185546875002],
                                [116.33066406250012, -2.902148437499974],
                                [116.16630859375002, -2.934570312500014],
                                [116.2572265625, -3.126367187500009],
                                [115.95615234375012, -3.595019531250003],
                                [114.6935546875001, -4.169726562500017],
                                [114.5255859375001, -3.376660156250011],
                                [114.44599609375004, -3.481835937500037],
                                [114.34433593750012, -3.444433593749963],
                                [114.34433593750012, -3.23515625],
                                [114.23632812500003, -3.36113281249996],
                                [114.0822265625001, -3.27890625],
                                [113.70507812499997, -3.45527343750004],
                                [113.6100585937501, -3.195703125],
                                [113.34316406250005, -3.246484374999966],
                                [113.03398437500002, -2.933496093749966],
                                [112.97148437500002, -3.187109375000034],
                                [112.75800781250004, -3.322167968750009],
                                [112.60029296875004, -3.400488281249977],
                                [112.28496093750002, -3.32099609375004],
                                [111.85810546875004, -3.551855468750006],
                                [111.82304687500007, -3.057226562499949],
                                [111.69472656250005, -2.88945312499996],
                                [110.93007812500005, -3.071093750000017],
                                [110.82968750000012, -2.9951171875],
                                [110.89931640625, -2.908593749999952],
                                [110.703125, -3.020898437500009],
                                [110.57402343750007, -2.89140625],
                                [110.25605468750004, -2.966113281249946],
                                [110.09658203125, -2.001367187499966],
                                [109.95986328125, -1.862792968749972],
                                [109.98330078125, -1.274804687499994],
                                [109.78740234375007, -1.011328124999963],
                                [109.25878906250003, -.807421874999989],
                                [109.37275390625004, -.638183593749972],
                                [109.12109375000003, -.39091796874996],
                                [109.2575195312501, .031152343750051],
                                [108.94453125000004, .355664062499997],
                                [108.91679687500007, .912646484375045],
                                [108.95859375000006, 1.134619140624963],
                                [109.1315429687501, 1.253857421875011],
                                [109.01025390624997, 1.239648437500051],
                                [109.07587890625004, 1.495898437500031],
                                [109.37851562500006, 1.922705078125034],
                                [109.62890625000003, 2.027539062499983],
                                [109.53896484375, 1.89619140625004],
                                [109.65400390625004, 1.614892578125023],
                                [110.50576171875005, .861962890625023],
                                [111.10136718750002, 1.050537109374986],
                                [111.80898437500005, 1.011669921874969],
                                [112.078515625, 1.143359374999974],
                                [112.1857421875001, 1.4390625],
                                [112.47617187500006, 1.559082031250028],
                                [112.94296875000006, 1.566992187500034],
                                [113.00654296875004, 1.433886718750003],
                                [113.6222656250001, 1.2359375],
                                [113.90234375000003, 1.434277343749997],
                                [114.5125, 1.452001953124963],
                                [114.83056640625003, 1.980029296874989],
                                [114.78642578125002, 2.250488281250014],
                                [115.1791015625, 2.523193359374972],
                                [115.08076171875004, 2.63422851562504],
                                [115.117578125, 2.89487304687502],
                                [115.24697265625005, 3.025927734374989],
                                [115.45439453125002, 3.034326171875009],
                                [115.67880859375006, 4.193017578124994],
                                [115.86074218750005, 4.348046875000037],
                                [116.51474609375006, 4.370800781249969],
                                [117.10058593750003, 4.337060546875023],
                                [117.5744140625001, 4.17060546875004]
                            ]
                        ],
                        [
                            [
                                [126.81660156250004, 4.033496093750003],
                                [126.70449218750005, 4.070996093749997],
                                [126.81357421875006, 4.258496093750011],
                                [126.72207031250005, 4.344189453124969],
                                [126.75732421874997, 4.547900390624989],
                                [126.9210937500001, 4.291015624999972],
                                [126.81660156250004, 4.033496093750003]
                            ]
                        ],
                        [
                            [
                                [96.49257812500005, 5.229345703124991],
                                [97.54716796875002, 5.205859375],
                                [98.2484375, 4.41455078125],
                                [98.3073242187501, 4.09287109375002],
                                [99.73232421875005, 3.183056640625026],
                                [100.523828125, 2.18916015625004],
                                [100.88789062500004, 1.948242187499986],
                                [100.82822265625012, 2.242578125],
                                [101.04619140625002, 2.257470703125023],
                                [101.47666015625006, 1.693066406250054],
                                [102.019921875, 1.442138671875],
                                [102.38994140625007, .84199218750004],
                                [103.03183593750006, .57890625],
                                [103.0075195312501, .415332031249974],
                                [102.55, .216455078124966],
                                [103.33896484375012, .513720703125045],
                                [103.67265625000007, .288916015624977],
                                [103.78671875000012, .046972656249991],
                                [103.42851562500007, -.19179687499998],
                                [103.40517578125005, -.36220703124998],
                                [103.5091796875, -.465527343749969],
                                [103.43857421875006, -.575585937500009],
                                [103.72109375, -.886718749999986],
                                [104.36054687500004, -1.038378906249974],
                                [104.51591796875002, -1.81943359375002],
                                [104.84521484375003, -2.092968749999969],
                                [104.65078125000005, -2.595214843749972],
                                [104.97080078125012, -2.370898437500017],
                                [105.39697265624997, -2.380175781249946],
                                [106.0443359375, -3.10625],
                                [105.84375, -3.61367187499998],
                                [105.93046875000007, -3.833007812499986],
                                [105.83144531250005, -4.16289062499996],
                                [105.88720703124997, -5.009570312499974],
                                [105.74833984375007, -5.818261718749966],
                                [105.34941406250007, -5.549511718750011],
                                [105.08134765625002, -5.74550781249998],
                                [104.63955078125005, -5.520410156250037],
                                [104.68398437500005, -5.89267578125002],
                                [104.60156249999997, -5.90458984374996],
                                [103.8314453125, -5.079589843750028],
                                [102.53769531250006, -4.152148437499989],
                                [102.12753906250006, -3.599218749999963],
                                [101.57861328124997, -3.166992187500014],
                                [100.88955078125, -2.248535156249957],
                                [100.85527343750002, -1.934179687499949],
                                [100.30820312500006, -.82666015625],
                                [99.66982421875005, .045068359375037],
                                [99.15917968749997, .351757812499997],
                                [98.59531250000006, 1.864599609375006],
                                [97.70078125000006, 2.358544921875009],
                                [97.59082031249997, 2.846582031250037],
                                [97.3913085937501, 2.975292968749969],
                                [96.9689453125001, 3.575146484374969],
                                [96.44472656250005, 3.81630859374998],
                                [95.57861328125003, 4.661962890625048],
                                [95.20664062500006, 5.284033203125034],
                                [95.22783203125002, 5.564794921875034],
                                [95.62890625000003, 5.609082031249997],
                                [96.13330078125003, 5.294287109374991],
                                [96.49257812500005, 5.229345703124991]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Indonesia",
                    childNum: 107
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-4.412060546874983, 54.185351562499996],
                            [-4.785351562499983, 54.073046875],
                            [-4.424707031249994, 54.407177734375],
                            [-4.412060546874983, 54.185351562499996]
                        ]
                    ]
                },
                properties: {
                    name: "Isle of Man",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [75.32221348233018, 32.28516356678968],
                                [75.62496871116024, 32.28516356678968],
                                [75.73585997688717, 32.78417426256088],
                                [76.32728006076415, 32.87658365066666],
                                [76.62299010270264, 33.32014871357439],
                                [77.06655516561037, 33.301666835953235],
                                [77.71342088235082, 32.6917648744551],
                                [78.10154031239509, 32.87658365066666],
                                [78.49194250885338, 32.53122786149202],
                                [78.38964843749997, 32.51987304687498],
                                [78.41748046874997, 32.466699218749994],
                                [78.4552734375001, 32.30034179687502],
                                [78.49589843750002, 32.21577148437504],
                                [78.72558593750009, 31.983789062500023],
                                [78.71972656250009, 31.887646484374983],
                                [78.69345703125006, 31.740380859374994],
                                [78.7550781250001, 31.55029296875],
                                [78.74355468750005, 31.323779296875017],
                                [79.10712890625004, 31.402636718750102],
                                [79.38847656250013, 31.064208984375085],
                                [79.66425781250004, 30.96523437499999],
                                [79.92451171875004, 30.888769531250034],
                                [80.20712890625006, 30.683740234375023],
                                [80.19121093750002, 30.56840820312496],
                                [80.87353515625003, 30.290576171875045],
                                [80.98544921875006, 30.23710937499999],
                                [81.01025390625014, 30.164501953125097],
                                [80.96611328125002, 30.180029296875063],
                                [80.90761718750005, 30.171923828125017],
                                [80.84814453125009, 30.139746093750034],
                                [80.81992187500012, 30.119335937499955],
                                [80.68408203125014, 29.994335937500068],
                                [80.54902343750015, 29.899804687499994],
                                [80.40185546875003, 29.730273437500102],
                                [80.31689453125014, 29.572070312500017],
                                [80.25488281250009, 29.423339843750114],
                                [80.25595703125006, 29.318017578125136],
                                [80.23300781250006, 29.194628906250045],
                                [80.16953125000012, 29.124316406250102],
                                [80.13046875000006, 29.100390625000045],
                                [80.08457031249995, 28.994189453125074],
                                [80.05166015625, 28.870312500000068],
                                [80.07070312500005, 28.830175781250063],
                                [80.22656250000003, 28.723339843750125],
                                [80.32480468750012, 28.66640625000008],
                                [80.41855468749995, 28.61201171875001],
                                [80.47910156250012, 28.604882812499994],
                                [80.49580078125015, 28.635791015625074],
                                [80.51787109375002, 28.665185546875023],
                                [80.58701171875006, 28.64960937500004],
                                [81.16894531250014, 28.335009765625074],
                                [81.85263671875018, 27.867089843750136],
                                [81.89687500000011, 27.87446289062504],
                                [81.94521484375005, 27.89926757812495],
                                [81.98769531250016, 27.91376953125004],
                                [82.03701171875, 27.90058593750004],
                                [82.11191406250006, 27.86494140625004],
                                [82.28769531250018, 27.756542968749983],
                                [82.45136718750004, 27.671826171874955],
                                [82.62988281249997, 27.687060546875045],
                                [82.67734375000006, 27.67343749999995],
                                [82.71083984375005, 27.596679687500114],
                                [82.73339843750003, 27.518994140625097],
                                [83.28974609375004, 27.370996093750136],
                                [83.36943359375002, 27.410253906249977],
                                [83.38398437500004, 27.444824218750085],
                                [83.44716796875011, 27.46533203125],
                                [83.55166015625011, 27.456347656249932],
                                [83.74697265625011, 27.395947265625068],
                                [83.8288085937501, 27.377832031250108],
                                [84.09101562499993, 27.491357421875136],
                                [84.22978515625007, 27.427832031250006],
                                [84.48085937500005, 27.348193359375102],
                                [84.61015625000002, 27.298681640624977],
                                [84.64072265625012, 27.249853515624977],
                                [84.65478515625014, 27.20366210937499],
                                [84.65380859375009, 27.09169921875008],
                                [84.68535156250013, 27.041015625000057],
                                [85.19179687500011, 26.766552734375097],
                                [85.29296875000009, 26.741015625000045],
                                [85.56845703125012, 26.839843750000114],
                                [85.64843749999997, 26.829003906250023],
                                [85.69990234375004, 26.781640624999966],
                                [85.73730468750003, 26.639746093750034],
                                [85.79453125000006, 26.60415039062505],
                                [86.00732421875009, 26.64936523437504],
                                [86.70136718750015, 26.435058593750057],
                                [87.01640625000002, 26.555419921875085],
                                [87.2874023437499, 26.360302734375125],
                                [87.41357421875014, 26.42294921875009],
                                [87.84921875000006, 26.43691406250008],
                                [87.99511718750014, 26.38237304687499],
                                [88.02695312500023, 26.395019531250085],
                                [88.05488281250004, 26.43002929687492],
                                [88.11152343750004, 26.58642578125],
                                [88.1615234375, 26.724804687500125],
                                [88.15722656250009, 26.807324218750068],
                                [88.1110351562501, 26.928466796875057],
                                [87.99316406250009, 27.086083984374994],
                                [87.984375, 27.133935546874994],
                                [88.14697265625014, 27.749218750000097],
                                [88.15029296875011, 27.843310546875074],
                                [88.10976562500005, 27.87060546874997],
                                [88.10898437499995, 27.93300781250005],
                                [88.14111328125003, 27.948925781250097],
                                [88.27519531250013, 27.96884765625009],
                                [88.42597656250015, 28.011669921875097],
                                [88.57792968750002, 28.093359375000034],
                                [88.80371093750003, 28.006933593750034],
                                [88.74902343749997, 27.521875000000136],
                                [88.7648437500001, 27.429882812500068],
                                [88.83251953125003, 27.362841796875074],
                                [88.89140625000002, 27.316064453125136],
                                [88.88164062500007, 27.29746093750009],
                                [88.76035156250006, 27.21811523437509],
                                [88.73876953125009, 27.175585937499932],
                                [88.85761718750015, 26.961474609375017],
                                [89.14824218750002, 26.816162109375085],
                                [89.33212890625018, 26.848632812500114],
                                [89.58613281250004, 26.778955078125136],
                                [89.60996093750012, 26.719433593750097],
                                [89.71093750000009, 26.713916015625045],
                                [89.76386718750004, 26.7015625],
                                [89.94316406250013, 26.723925781249932],
                                [90.12294921875011, 26.754589843749983],
                                [90.20605468749997, 26.847509765625063],
                                [90.34589843750004, 26.890332031250097],
                                [90.73964843750005, 26.771679687500068],
                                [91.2865234375, 26.78994140625008],
                                [91.42675781249997, 26.867089843749966],
                                [91.45585937500013, 26.866894531250125],
                                [91.51757812500009, 26.807324218750068],
                                [91.67158203124993, 26.80200195312503],
                                [91.84208984375013, 26.852978515625125],
                                [91.94375, 26.860839843750114],
                                [91.99833984375013, 26.85498046875],
                                [92.04970703125016, 26.87485351562495],
                                [92.73155507489682, 26.833697862861648],
                                [93.30975376159499, 26.784950522650554],
                                [93.61047043679247, 27.32239435188504],
                                [94.06979001484449, 27.589407158584788],
                                [95.10800937321915, 27.749636881153737],
                                [95.74000740838363, 28.116850432722256],
                                [96.19577594042592, 28.04291597700983],
                                [96.96279296875, 27.698291015625017],
                                [96.88359375000013, 27.514843750000125],
                                [96.90195312500012, 27.43959960937508],
                                [97.10371093749993, 27.163330078125114],
                                [97.10205078125003, 27.115429687500125],
                                [96.95341796875013, 27.13330078125003],
                                [96.79785156249997, 27.29619140624999],
                                [96.19082031250005, 27.26127929687499],
                                [95.20146484375007, 26.641406250000017],
                                [95.05976562500015, 26.473974609375006],
                                [95.06894531250006, 26.191113281250097],
                                [95.10839843750014, 26.091406250000034],
                                [95.12929687500011, 26.070410156250034],
                                [95.13242187500006, 26.041259765624943],
                                [94.99199218750002, 25.77045898437504],
                                [94.66777343750007, 25.458886718749966],
                                [94.55302734375013, 25.215722656249994],
                                [94.70371093750012, 25.097851562499955],
                                [94.49316406250003, 24.637646484374983],
                                [94.37724609375002, 24.473730468750006],
                                [94.29306640625012, 24.321875],
                                [94.07480468750006, 23.8720703125],
                                [93.68339843750007, 24.00654296875004],
                                [93.45214843750003, 23.987402343750034],
                                [93.32626953125006, 24.064208984375057],
                                [93.36601562500007, 23.132519531249955],
                                [93.34941406250007, 23.08496093750003],
                                [93.20390625000002, 23.03701171875005],
                                [93.07871093750018, 22.718212890625097],
                                [93.16201171875, 22.360205078125006],
                                [93.07060546875002, 22.20942382812501],
                                [92.96455078125015, 22.003759765625034],
                                [92.90947265625013, 21.988916015625023],
                                [92.85429687500002, 22.010156250000108],
                                [92.77138671875, 22.104785156250017],
                                [92.68896484375009, 22.130957031250006],
                                [92.63037109375014, 22.011328124999977],
                                [92.57490234374993, 21.97807617187496],
                                [92.5612304687501, 22.04804687500001],
                                [92.49140625000004, 22.685400390625006],
                                [92.46445312500006, 22.734423828125045],
                                [92.36162109375002, 22.929003906250074],
                                [92.33378906250002, 23.242382812499955],
                                [92.24609375000003, 23.68359374999997],
                                [92.04404296875006, 23.677783203125017],
                                [91.97851562500003, 23.691992187500063],
                                [91.92958984375011, 23.685986328125097],
                                [91.92949218750019, 23.598242187499977],
                                [91.93789062500011, 23.504687500000102],
                                [91.75419921875013, 23.28730468750004],
                                [91.75097656250003, 23.053515625000017],
                                [91.55351562500013, 22.991552734375006],
                                [91.43623046875004, 23.19990234375001],
                                [91.359375, 23.06835937500003],
                                [91.16044921875019, 23.660644531250085],
                                [91.35019531250012, 24.06049804687501],
                                [91.72656250000003, 24.20507812499997],
                                [91.84619140624997, 24.175292968749943],
                                [92.06416015625004, 24.374365234375006],
                                [92.11748046875002, 24.493945312500017],
                                [92.22666015625012, 24.77099609374997],
                                [92.22832031250002, 24.881347656250085],
                                [92.2512695312499, 24.895068359375045],
                                [92.38496093750004, 24.848779296875023],
                                [92.46835937500018, 24.944140625000074],
                                [92.04970703125016, 25.16948242187499],
                                [90.61308593750002, 25.16772460937497],
                                [90.11962890625003, 25.21997070312497],
                                [89.86630859375012, 25.293164062499955],
                                [89.81406250000006, 25.305371093749955],
                                [89.80087890625012, 25.33613281250001],
                                [89.82490234375004, 25.56015625],
                                [89.82294921875015, 25.94140625000003],
                                [89.67089843750009, 26.213818359375125],
                                [89.57275390625003, 26.13232421875003],
                                [89.54990234375006, 26.00527343750008],
                                [89.28925781250015, 26.037597656250085],
                                [89.01865234375012, 26.410253906249977],
                                [88.95195312500002, 26.412109375],
                                [88.97041015625004, 26.250878906250023],
                                [88.94072265625002, 26.24536132812497],
                                [88.68281250000004, 26.291699218749983],
                                [88.51826171875004, 26.51777343750004],
                                [88.36992187500002, 26.56411132812508],
                                [88.35146484375005, 26.482568359374966],
                                [88.38623046875003, 26.471533203125034],
                                [88.44042968749997, 26.369482421875034],
                                [88.33398437499997, 26.257519531249955],
                                [88.15078125000005, 26.087158203125057],
                                [88.1066406250001, 25.841113281250045],
                                [88.14746093749997, 25.811425781250023],
                                [88.50244140625009, 25.53701171875008],
                                [88.76914062500006, 25.490478515625],
                                [88.85478515625002, 25.333544921875017],
                                [88.94414062500002, 25.290771484375],
                                [88.92978515625012, 25.222998046875063],
                                [88.57382812500006, 25.18789062499999],
                                [88.45625, 25.188427734375125],
                                [88.37294921875016, 24.961523437500063],
                                [88.31337890625011, 24.8818359375],
                                [88.27949218750015, 24.881933593750034],
                                [88.18886718750016, 24.920605468750097],
                                [88.14980468750011, 24.91464843749995],
                                [88.04511718750015, 24.71303710937508],
                                [88.03027343750009, 24.664453125000136],
                                [88.02343750000003, 24.627832031250136],
                                [88.07910156250009, 24.549902343750063],
                                [88.14550781250003, 24.485791015624955],
                                [88.225, 24.460644531249983],
                                [88.3375, 24.45385742187503],
                                [88.49853515625003, 24.34663085937504],
                                [88.64228515625015, 24.325976562500102],
                                [88.72353515625011, 24.27490234375],
                                [88.7335937500001, 24.230908203125097],
                                [88.72656250000009, 24.18623046875004],
                                [88.71376953125016, 24.069628906250102],
                                [88.69980468750006, 24.00253906249992],
                                [88.56738281250009, 23.674414062500034],
                                [88.63574218749997, 23.55],
                                [88.69765625, 23.493017578125034],
                                [88.72441406250002, 23.254980468750034],
                                [88.89707031250018, 23.21040039062501],
                                [88.92812500000011, 23.186621093749977],
                                [88.89970703125002, 22.843505859375057],
                                [88.92070312500002, 22.632031249999955],
                                [89.05, 22.274609374999983],
                                [89.02792968750023, 21.937207031249983],
                                [88.94931640625018, 21.937939453125125],
                                [89.05166015625, 21.654101562500045],
                                [88.85751953125012, 21.744677734375017],
                                [88.74501953125011, 21.584375],
                                [88.74023437500003, 22.005419921875017],
                                [88.64160156250003, 22.121972656250136],
                                [88.58466796875015, 21.659716796874932],
                                [88.44599609375004, 21.614257812500085],
                                [88.28750000000016, 21.758203125000108],
                                [88.25371093750002, 21.622314453124943],
                                [88.0568359375001, 21.694140625000017],
                                [88.19628906249997, 22.139550781249994],
                                [87.94140625000003, 22.374316406250045],
                                [88.15927734375018, 22.12172851562508],
                                [87.82373046875003, 21.727343750000045],
                                [87.20068359375009, 21.544873046874983],
                                [86.95410156250014, 21.365332031250006],
                                [86.84228515625009, 21.106347656249994],
                                [86.97548828125005, 20.70014648437501],
                                [86.75039062500011, 20.313232421875057],
                                [86.37656250000006, 20.006738281249966],
                                [86.24521484375012, 20.05302734374999],
                                [86.27949218750021, 19.919433593749943],
                                [85.575, 19.69291992187499],
                                [85.496875, 19.696923828125108],
                                [85.50410156250004, 19.887695312500057],
                                [85.24863281250006, 19.757666015625034],
                                [85.18076171875018, 19.59487304687508],
                                [85.44160156249993, 19.626562499999977],
                                [84.77099609375009, 19.125390625000023],
                                [84.10410156250018, 18.29267578125001],
                                [82.35957031250004, 17.09619140624997],
                                [82.25878906250014, 16.55986328124996],
                                [81.76191406250015, 16.32949218750008],
                                [81.28613281249997, 16.337060546875023],
                                [80.97871093750004, 15.758349609375074],
                                [80.64658203125006, 15.895019531250028],
                                [80.29345703125014, 15.710742187499989],
                                [80.0534179687501, 15.074023437499932],
                                [80.17871093750003, 14.478320312500074],
                                [80.11171875000005, 14.212207031250045],
                                [80.30654296875016, 13.485058593750054],
                                [80.15625, 13.713769531250108],
                                [80.06210937500006, 13.60625],
                                [80.34238281250006, 13.361328125000071],
                                [80.22910156250018, 12.690332031249966],
                                [79.85849609375018, 11.988769531250043],
                                [79.69316406250007, 11.312548828124946],
                                [79.79902343750004, 11.338671874999932],
                                [79.84863281250009, 11.196875],
                                [79.83818359375002, 10.322558593750045],
                                [79.31455078125018, 10.256689453124949],
                                [78.93994140625009, 9.565771484375063],
                                [79.01992187500005, 9.333349609374963],
                                [79.41142578125002, 9.192382812500014],
                                [78.97958984375018, 9.268554687500085],
                                [78.42148437500006, 9.105029296874989],
                                [78.19248046874995, 8.890869140625057],
                                [78.06015625000006, 8.384570312499932],
                                [77.51757812500003, 8.078320312500068],
                                [77.06591796875003, 8.315917968749986],
                                [76.5534179687501, 8.902783203124997],
                                [76.32460937500016, 9.452099609374997],
                                [76.24238281250004, 9.927099609374949],
                                [76.37558593750006, 9.539892578124935],
                                [76.45878906250013, 9.536230468750077],
                                [76.34648437500002, 9.922119140625],
                                [76.19560546875002, 10.086132812500026],
                                [75.72382812500015, 11.361767578125026],
                                [74.94550781250004, 12.56455078124992],
                                [74.38222656250005, 14.494726562500048],
                                [73.94921875000014, 15.074755859375088],
                                [73.80078125000009, 15.39697265625],
                                [73.93193359375013, 15.39697265625],
                                [73.77177734375013, 15.573046874999989],
                                [73.83281250000013, 15.659375],
                                [73.67988281250015, 15.708886718750136],
                                [73.47607421875003, 16.05424804687496],
                                [72.87548828124997, 18.642822265625114],
                                [72.97207031250011, 19.15332031250003],
                                [72.8346679687501, 18.975585937500057],
                                [72.80302734375013, 19.07929687500004],
                                [72.81162109375, 19.298925781250006],
                                [72.98720703125, 19.27744140625009],
                                [72.78789062500013, 19.362988281250097],
                                [72.66777343750019, 19.83095703125005],
                                [72.89375, 20.672753906250136],
                                [72.81386718750011, 21.117187500000085],
                                [72.62382812500002, 21.371972656250108],
                                [72.73476562500016, 21.470800781250006],
                                [72.61328125000009, 21.461816406250108],
                                [73.1125, 21.750439453125125],
                                [72.54306640625, 21.69658203124999],
                                [72.70019531250003, 21.971923828124943],
                                [72.52226562500013, 21.976220703125108],
                                [72.55302734375007, 22.159960937500074],
                                [72.80917968749995, 22.23330078125008],
                                [72.18281250000015, 22.26972656250004],
                                [72.30644531250002, 22.18920898437497],
                                [72.27441406250009, 22.089746093749966],
                                [72.03720703125006, 21.82304687499999],
                                [72.2103515625, 21.72822265625004],
                                [72.25400390625006, 21.531005859375],
                                [72.01523437500012, 21.155712890625097],
                                [71.0246093750001, 20.73886718750009],
                                [70.71933593750006, 20.740429687500068],
                                [70.12734375, 21.094677734375097],
                                [68.96992187500021, 22.29028320312497],
                                [69.05166015625016, 22.437304687500074],
                                [69.27656250000004, 22.285498046875063],
                                [70.17724609375014, 22.57275390624997],
                                [70.48925781250009, 23.08950195312508],
                                [70.33945312500012, 22.939746093749932],
                                [69.66464843750006, 22.759082031250074],
                                [69.23593749999995, 22.848535156250023],
                                [68.64072265625006, 23.189941406250114],
                                [68.41748046875009, 23.57148437500004],
                                [68.7767578125, 23.852099609375017],
                                [68.23496093749995, 23.596972656250074],
                                [68.16503906250009, 23.857324218749994],
                                [68.28251953125013, 23.927978515625],
                                [68.38125000000016, 23.950878906250068],
                                [68.48867187500011, 23.96723632812501],
                                [68.5866210937501, 23.966601562500074],
                                [68.72412109375003, 23.964697265625034],
                                [68.72812500000012, 24.265625],
                                [68.73964843750016, 24.291992187500085],
                                [68.75898437499993, 24.307226562500006],
                                [68.78115234375011, 24.313720703125085],
                                [68.8, 24.30908203125003],
                                [68.82832031250004, 24.26401367187509],
                                [68.86347656250015, 24.26650390625005],
                                [68.90078125000011, 24.29243164062501],
                                [68.98457031250015, 24.273095703124966],
                                [69.05156250000013, 24.28632812500001],
                                [69.11953125000011, 24.26865234374995],
                                [69.23505859374993, 24.268261718750068],
                                [69.44345703124995, 24.275390625000085],
                                [69.55917968750006, 24.273095703124966],
                                [69.80517578125009, 24.16523437500004],
                                [70.0982421875, 24.2875],
                                [70.28906250000009, 24.356298828125063],
                                [70.54677734375, 24.418310546875063],
                                [70.56503906250006, 24.385791015625017],
                                [70.55585937500015, 24.331103515625074],
                                [70.57929687500015, 24.279052734374943],
                                [70.65947265625013, 24.24609374999997],
                                [70.71630859375009, 24.237988281250097],
                                [70.7672851562501, 24.245410156250017],
                                [70.80507812500011, 24.26196289062503],
                                [70.88623046875014, 24.34375],
                                [70.92812500000016, 24.362353515625045],
                                [70.98281250000011, 24.361035156250125],
                                [71.04404296875006, 24.400097656250097],
                                [71.04531250000005, 24.42998046874996],
                                [70.96982421875012, 24.571875],
                                [70.97636718750013, 24.61875],
                                [71.00234375000016, 24.6539062499999],
                                [71.04785156250003, 24.687744140625085],
                                [71.02070312500021, 24.75766601562492],
                                [70.95087890625015, 24.89160156250003],
                                [70.87773437500019, 25.06298828124997],
                                [70.65205078125004, 25.422900390625102],
                                [70.64843750000003, 25.666943359375068],
                                [70.5695312500001, 25.705957031250023],
                                [70.50585937500009, 25.685302734375085],
                                [70.44853515625013, 25.681347656249983],
                                [70.26464843750009, 25.70654296874997],
                                [70.10019531250006, 25.91005859375005],
                                [70.14921875000002, 26.347558593749994],
                                [70.11464843750016, 26.548046874999983],
                                [69.47001953125002, 26.804443359375],
                                [69.56796875, 27.174609375000102],
                                [69.89628906250007, 27.473632812500085],
                                [70.04980468750009, 27.694726562500023],
                                [70.14453125000003, 27.849023437499994],
                                [70.19394531250006, 27.89487304687492],
                                [70.24433593750004, 27.934130859375102],
                                [70.4037109375, 28.025048828124994],
                                [70.48857421875013, 28.023144531250125],
                                [70.62910156250015, 27.937451171875068],
                                [70.6916015625001, 27.76899414062504],
                                [70.79794921875012, 27.709619140625023],
                                [70.87490234375016, 27.71445312499995],
                                [71.18476562500004, 27.831640625],
                                [71.54296875000003, 27.869873046875],
                                [71.8703125000001, 27.9625],
                                [71.88886718750004, 28.04746093749992],
                                [71.94804687500002, 28.177294921875102],
                                [72.12851562500012, 28.34633789062508],
                                [72.29199218750003, 28.69726562499997],
                                [72.34189453125006, 28.751904296875097],
                                [72.90332031250003, 29.02875976562501],
                                [73.38164062500013, 29.934375],
                                [73.8091796875, 30.093359375],
                                [73.88652343750013, 30.162011718750136],
                                [73.93339843750002, 30.222070312500108],
                                [73.92460937500007, 30.28164062499999],
                                [73.88271484375, 30.352148437499977],
                                [73.89931640625, 30.435351562500045],
                                [74.00898437500004, 30.519677734374994],
                                [74.33935546875003, 30.893554687499943],
                                [74.38037109375003, 30.89340820312509],
                                [74.50976562500009, 30.959667968750097],
                                [74.63281250000014, 31.034667968750114],
                                [74.62578125000002, 31.068750000000108],
                                [74.61035156250009, 31.112841796875045],
                                [74.51767578125012, 31.185595703124932],
                                [74.53496093750007, 31.261376953125108],
                                [74.59394531249993, 31.465380859375102],
                                [74.58183593750013, 31.523925781250114],
                                [74.50996093750015, 31.712939453125074],
                                [74.52597656249995, 31.765136718750057],
                                [74.55556640625011, 31.818554687500097],
                                [74.63574218750003, 31.889746093750034],
                                [74.73945312500015, 31.948828125],
                                [75.07148437500015, 32.08935546875003],
                                [75.13876953125, 32.10478515624999],
                                [75.25410156250004, 32.140332031250125],
                                [75.33349609374997, 32.279199218749994],
                                [75.32221348233018, 32.28516356678968]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "India",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [72.49199218750002, -7.37744140625],
                            [72.42910156250002, -7.435351562500003],
                            [72.34970703125, -7.263378906250011],
                            [72.447265625, -7.395703125000011],
                            [72.44560546875002, -7.220410156250011],
                            [72.49199218750002, -7.37744140625]
                        ]
                    ]
                },
                properties: {
                    name: "Br. Indian Ocean Ter.",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-9.948193359374926, 53.91313476562499],
                                [-10.265722656249949, 53.977685546874994],
                                [-9.99638671874996, 54.00361328125004],
                                [-9.948193359374926, 53.91313476562499]
                            ]
                        ],
                        [
                            [
                                [-6.218017578125, 54.08872070312506],
                                [-6.347607421874926, 53.94130859375005],
                                [-6.027392578124989, 52.927099609375006],
                                [-6.463183593749932, 52.345361328124994],
                                [-6.325, 52.246679687500034],
                                [-6.890234375, 52.15922851562499],
                                [-6.965771484374926, 52.24951171875],
                                [-8.057812499999926, 51.82558593750005],
                                [-8.4091796875, 51.888769531250034],
                                [-8.349121093749943, 51.73930664062496],
                                [-8.813427734374926, 51.584912109374955],
                                [-9.737304687499943, 51.473730468750034],
                                [-9.524902343750028, 51.68110351562501],
                                [-10.120751953124994, 51.60068359375006],
                                [-9.598828124999983, 51.87441406250005],
                                [-10.341064453124943, 51.798925781250034],
                                [-9.909667968749972, 52.122949218749966],
                                [-10.39023437499992, 52.134912109374994],
                                [-10.356689453125, 52.20693359375002],
                                [-9.772119140624937, 52.250097656250034],
                                [-9.90605468749996, 52.403710937499966],
                                [-9.632226562499937, 52.54692382812502],
                                [-8.783447265624943, 52.679638671874955],
                                [-8.990283203124989, 52.755419921875045],
                                [-9.175390624999949, 52.634912109374994],
                                [-9.916601562499977, 52.56972656250005],
                                [-9.46489257812496, 52.82319335937498],
                                [-9.299218749999966, 53.09755859375002],
                                [-8.930126953124983, 53.207080078125045],
                                [-9.51420898437496, 53.23823242187498],
                                [-10.091259765624926, 53.41284179687503],
                                [-10.116992187499932, 53.548535156249955],
                                [-9.720654296874926, 53.6044921875],
                                [-9.901611328124943, 53.72719726562502],
                                [-9.578222656249949, 53.80541992187497],
                                [-9.578857421875, 53.879833984374955],
                                [-9.9140625, 53.863720703124955],
                                [-9.856445312499972, 54.095361328124994],
                                [-10.092675781249966, 54.15576171875003],
                                [-10.056396484374943, 54.25781250000006],
                                [-8.545556640624994, 54.24121093750003],
                                [-8.623144531249977, 54.346875],
                                [-8.133447265624966, 54.64082031250001],
                                [-8.763916015624972, 54.68120117187496],
                                [-8.377294921874977, 54.88945312500002],
                                [-8.274609374999955, 55.146289062500045],
                                [-7.667089843749977, 55.25649414062502],
                                [-7.65874023437496, 54.97094726562503],
                                [-7.308789062500011, 55.365820312500006],
                                [-6.961669921874972, 55.23789062500006],
                                [-7.218652343749937, 55.09199218749998],
                                [-7.55039062499992, 54.767968749999966],
                                [-7.910595703124955, 54.698339843750006],
                                [-7.75439453125, 54.59492187499998],
                                [-8.118261718749977, 54.41425781250004],
                                [-7.606542968750006, 54.14384765625002],
                                [-7.324511718750017, 54.13344726562502],
                                [-7.007714843749937, 54.40668945312501],
                                [-6.649804687499937, 54.05864257812496],
                                [-6.218017578125, 54.08872070312506]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Ireland",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [56.18798828125003, 26.92114257812497],
                                [55.95429687500004, 26.70112304687501],
                                [55.31152343749997, 26.592626953125006],
                                [55.76259765625005, 26.81196289062504],
                                [55.75761718750002, 26.94765625000005],
                                [56.279394531250006, 26.952099609374983],
                                [56.18798828125003, 26.92114257812497]
                            ]
                        ],
                        [
                            [
                                [46.1144531250001, 38.877783203125034],
                                [46.490625, 38.90668945312498],
                                [47.995898437500074, 39.683935546875034],
                                [48.322167968749994, 39.39907226562502],
                                [48.10439453125005, 39.241113281249994],
                                [48.292089843750006, 39.01884765624999],
                                [47.99648437499999, 38.85375976562503],
                                [48.59267578125005, 38.41108398437498],
                                [48.86875, 38.43549804687498],
                                [48.95996093750003, 37.89013671875],
                                [49.171191406250074, 37.60058593749997],
                                [50.13046875, 37.407128906249994],
                                [50.53320312499997, 37.01367187500006],
                                [51.11855468750005, 36.742578124999966],
                                [52.19013671875004, 36.62172851562505],
                                [53.76767578125006, 36.93032226562502],
                                [53.91542968750005, 36.93032226562502],
                                [53.67949218750002, 36.853125],
                                [53.970117187499994, 36.818310546874955],
                                [53.91416015625006, 37.34355468750002],
                                [54.6994140625001, 37.47016601562498],
                                [54.90009765625004, 37.77792968750006],
                                [55.38085937500003, 38.051123046875034],
                                [56.272070312500006, 38.080419921875034],
                                [56.440625, 38.249414062499994],
                                [57.1935546875001, 38.216406250000034],
                                [57.35371093750004, 37.97333984374998],
                                [58.261621093749994, 37.665820312500045],
                                [58.81542968750003, 37.683496093749994],
                                [59.30175781249997, 37.51064453125005],
                                [59.454980468749994, 37.25283203125002],
                                [60.06279296875002, 36.962890625],
                                [60.34130859375003, 36.63764648437501],
                                [61.11962890625003, 36.64257812500003],
                                [61.212011718750006, 36.190527343750034],
                                [61.15292968750006, 35.97675781250001],
                                [61.25214843750004, 35.86762695312498],
                                [61.26201171875002, 35.61958007812498],
                                [61.28183593750006, 35.55341796875001],
                                [61.2785156250001, 35.513769531250006],
                                [61.245507812499994, 35.47407226562501],
                                [61.18925781250002, 35.31201171875003],
                                [61.1, 35.272314453125034],
                                [61.08007812499997, 34.85561523437505],
                                [60.95117187499997, 34.65385742187499],
                                [60.91474609375004, 34.63398437500001],
                                [60.80234375000006, 34.55463867187501],
                                [60.73945312500004, 34.544726562500045],
                                [60.7262695312501, 34.51826171874998],
                                [60.736132812500074, 34.491796875],
                                [60.76259765625005, 34.475244140624994],
                                [60.88945312500002, 34.31943359375006],
                                [60.642675781250006, 34.30717773437496],
                                [60.48574218750005, 34.09477539062502],
                                [60.4859375, 33.7119140625],
                                [60.57382812500006, 33.58833007812498],
                                [60.91699218749997, 33.505224609375006],
                                [60.56054687499997, 33.13784179687502],
                                [60.5765625, 32.99487304687503],
                                [60.71044921874997, 32.6],
                                [60.82929687500004, 32.24941406250005],
                                [60.82724609375006, 32.16796874999997],
                                [60.789941406249994, 31.98710937499999],
                                [60.7875, 31.87719726562497],
                                [60.791601562500006, 31.660595703124983],
                                [60.82070312499999, 31.495166015625045],
                                [60.854101562500006, 31.483251953125006],
                                [61.110742187499994, 31.45112304687504],
                                [61.346484375000074, 31.42163085937497],
                                [61.66015625000003, 31.382421874999977],
                                [61.7550781250001, 31.285302734374994],
                                [61.814257812500074, 31.072558593750017],
                                [61.810839843750074, 30.913281249999983],
                                [61.78417968749997, 30.831933593750023],
                                [61.55947265625005, 30.59936523437497],
                                [61.33164062500006, 30.36372070312501],
                                [60.84335937500006, 29.85869140624999],
                                [61.03417968750003, 29.663427734374977],
                                [61.15214843750002, 29.542724609375],
                                [61.8898437500001, 28.546533203124994],
                                [62.7625, 28.202050781249994],
                                [62.782324218750006, 27.800537109375],
                                [62.75273437500002, 27.265625],
                                [63.16679687500002, 27.25249023437499],
                                [63.19609375000002, 27.243945312500017],
                                [63.25625, 27.20791015625005],
                                [63.30156250000002, 27.151464843750006],
                                [63.30517578124997, 27.124560546875017],
                                [63.242089843749994, 27.07768554687499],
                                [63.25039062499999, 26.879248046875063],
                                [63.24160156250005, 26.86474609375003],
                                [63.18613281250006, 26.83759765625001],
                                [63.168066406250006, 26.66557617187496],
                                [62.31230468750002, 26.490869140624994],
                                [62.23935546875006, 26.357031249999977],
                                [62.12597656249997, 26.368994140625034],
                                [61.842382812500006, 26.225927734375006],
                                [61.809960937499994, 26.165283203125],
                                [61.78076171874997, 25.99584960937503],
                                [61.75439453125003, 25.843359375000063],
                                [61.737695312499994, 25.821093750000045],
                                [61.66865234375004, 25.76899414062501],
                                [61.6618164062501, 25.751269531250017],
                                [61.67138671874997, 25.69238281250003],
                                [61.64013671875003, 25.584619140624994],
                                [61.61542968750004, 25.28613281250003],
                                [61.58789062499997, 25.20234375000001],
                                [61.533105468749994, 25.195507812499955],
                                [61.41220703125006, 25.102099609375017],
                                [60.66386718750002, 25.28222656250003],
                                [60.51054687500002, 25.437060546875045],
                                [60.40019531250002, 25.311572265625074],
                                [59.45605468749997, 25.481494140625045],
                                [59.0460937500001, 25.417285156250017],
                                [58.79785156249997, 25.554589843750023],
                                [57.334570312500006, 25.791552734375074],
                                [57.03603515625005, 26.80068359375005],
                                [56.728125, 27.127685546875057],
                                [56.118066406249994, 27.14311523437499],
                                [54.75927734375003, 26.50507812500004],
                                [54.24707031250003, 26.696630859374977],
                                [53.70576171875004, 26.72558593750003],
                                [52.69160156250004, 27.323388671875023],
                                [52.475878906250074, 27.61650390624999],
                                [52.03076171874997, 27.824414062499955],
                                [51.58906250000004, 27.864208984374983],
                                [51.27890625, 28.13134765624997],
                                [51.06201171874997, 28.72612304687499],
                                [50.86699218750002, 28.870166015625017],
                                [50.87578125000002, 29.062695312499983],
                                [50.67519531250005, 29.146582031250034],
                                [50.64960937500004, 29.420068359374966],
                                [50.16894531250003, 29.921240234375034],
                                [50.071582031250074, 30.198535156250017],
                                [49.55488281250004, 30.028955078125023],
                                [49.028125, 30.333447265624983],
                                [49.224511718749994, 30.472314453125023],
                                [49.00195312500003, 30.506542968749983],
                                [48.91914062500004, 30.120898437500017],
                                [48.54648437500006, 29.962353515624955],
                                [48.47851562499997, 30.003808593749966],
                                [48.43457031249997, 30.03759765625],
                                [48.33105468749997, 30.28544921874996],
                                [48.01494140625002, 30.465625],
                                [48.01064453125005, 30.989794921875017],
                                [47.679492187500074, 31.00239257812501],
                                [47.679492187500074, 31.400585937499955],
                                [47.75390624999997, 31.601367187500017],
                                [47.829980468749994, 31.79443359375],
                                [47.71455078125004, 31.936425781249966],
                                [47.5915039062501, 32.087988281250034],
                                [47.51191406250004, 32.15083007812504],
                                [47.3297851562501, 32.45551757812501],
                                [47.28515625000003, 32.474023437499966],
                                [47.121386718750074, 32.46660156249996],
                                [46.569921875, 32.83393554687501],
                                [46.37705078125006, 32.92924804687499],
                                [46.29824218750005, 32.95024414062502],
                                [46.11279296875003, 32.957666015624994],
                                [46.09306640625002, 32.97587890624999],
                                [46.08046875, 33.028222656249994],
                                [46.0807617187501, 33.08652343750006],
                                [46.14111328125003, 33.174414062500034],
                                [46.145898437499994, 33.229638671874994],
                                [46.01992187500005, 33.41572265624998],
                                [45.39707031250006, 33.970849609374994],
                                [45.542773437500074, 34.21552734375004],
                                [45.459375, 34.470361328124994],
                                [45.50078125000002, 34.58159179687499],
                                [45.6375, 34.573828125],
                                [45.678125, 34.798437500000034],
                                [45.92089843750003, 35.02851562500001],
                                [46.04179687500002, 35.08017578125006],
                                [46.13378906249997, 35.127636718749955],
                                [46.15468750000005, 35.19672851562498],
                                [46.112109375000074, 35.32167968750005],
                                [45.97109375000005, 35.524169921875],
                                [46.03740234375002, 35.67314453124999],
                                [46.180957031250074, 35.71137695312504],
                                [46.2625, 35.74414062500006],
                                [46.27343749999997, 35.77324218750002],
                                [46.16748046874997, 35.820556640625],
                                [45.77636718749997, 35.82182617187499],
                                [45.36162109375002, 36.015332031249955],
                                [45.241113281249994, 36.35595703125],
                                [45.20654296874997, 36.397167968749955],
                                [45.15527343749997, 36.407373046874994],
                                [45.11240234375006, 36.409277343750034],
                                [45.053125, 36.47163085937501],
                                [44.76513671875003, 37.142431640625006],
                                [44.79414062500004, 37.290380859375034],
                                [44.574023437500074, 37.435400390625006],
                                [44.589941406250006, 37.710351562499966],
                                [44.21132812499999, 37.908056640625006],
                                [44.4499023437501, 38.33422851562506],
                                [44.2985351562501, 38.38627929687499],
                                [44.27167968750004, 38.83603515625006],
                                [44.02324218750002, 39.37744140625006],
                                [44.3893554687501, 39.422119140625],
                                [44.58710937500004, 39.76855468750006],
                                [44.81718750000002, 39.65043945312496],
                                [45.4796875000001, 39.00625],
                                [46.1144531250001, 38.877783203125034]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Iran",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [45.6375, 34.573828125],
                            [45.50078125000002, 34.581591796874996],
                            [45.459375, 34.470361328124994],
                            [45.54277343750002, 34.21552734375],
                            [45.397070312500006, 33.970849609374994],
                            [46.01992187500002, 33.41572265625],
                            [46.14589843750002, 33.229638671874994],
                            [46.14111328125, 33.1744140625],
                            [46.08076171875001, 33.0865234375],
                            [46.08046875000002, 33.028222656249994],
                            [46.09306640625002, 32.975878906249996],
                            [46.11279296875, 32.957666015624994],
                            [46.377050781250006, 32.929248046874996],
                            [46.569921875, 32.833935546875],
                            [47.12138671875002, 32.466601562499996],
                            [47.28515625, 32.474023437499994],
                            [47.32978515625001, 32.455517578125],
                            [47.51191406250001, 32.150830078125],
                            [47.59150390625001, 32.08798828125],
                            [47.71455078125001, 31.936425781249994],
                            [47.82998046875002, 31.79443359375],
                            [47.75390625, 31.601367187499996],
                            [47.67949218750002, 31.400585937499997],
                            [47.67949218750002, 31.002392578124997],
                            [48.01064453125002, 30.989794921874996],
                            [48.01494140625002, 30.465625],
                            [48.3310546875, 30.285449218749996],
                            [48.546484375, 29.962353515624997],
                            [48.454199218750006, 29.9384765625],
                            [48.354589843750006, 29.956738281249997],
                            [48.141699218750006, 30.040917968749994],
                            [47.982519531250006, 30.011328125],
                            [47.97871093750001, 29.9828125],
                            [47.64375, 30.097314453124994],
                            [47.14824218750002, 30.0009765625],
                            [46.905859375, 29.5375],
                            [46.76933593750002, 29.347460937499996],
                            [46.69375, 29.259667968749994],
                            [46.53144531250001, 29.096240234374996],
                            [46.3564453125, 29.063671875],
                            [44.71650390625001, 29.193603515625],
                            [43.77373046875002, 29.84921875],
                            [42.07441406250001, 31.080371093749996],
                            [40.47890625000002, 31.893359375],
                            [40.36933593750001, 31.93896484375],
                            [40.02783203125, 31.995019531249994],
                            [39.7041015625, 32.042529296874996],
                            [39.14541015625002, 32.12451171875],
                            [39.29277343750002, 32.24384765625],
                            [39.24746093750002, 32.350976562499994],
                            [39.04140625000002, 32.3056640625],
                            [38.773535156250006, 33.372216796874994],
                            [40.98701171875001, 34.429052734375],
                            [41.19472656250002, 34.768994140625],
                            [41.354101562500006, 35.640429687499996],
                            [41.295996093750006, 36.383349609374996],
                            [41.41679687500002, 36.5146484375],
                            [41.78857421875, 36.59716796875],
                            [42.358984375, 37.10859375],
                            [42.45585937500002, 37.128710937499996],
                            [42.63544921875001, 37.249267578125],
                            [42.74111328125002, 37.3619140625],
                            [42.77460937500001, 37.371875],
                            [42.869140625, 37.334912109375],
                            [42.936621093750006, 37.324755859374996],
                            [43.09248046875001, 37.3673828125],
                            [43.67578125, 37.22724609375],
                            [43.83642578125, 37.223535156249994],
                            [44.01318359375, 37.313525390624996],
                            [44.11445312500001, 37.30185546875],
                            [44.15625, 37.282958984375],
                            [44.19179687500002, 37.249853515625],
                            [44.20839843750002, 37.20263671875],
                            [44.20166015625, 37.051806640624996],
                            [44.281835937500006, 36.97802734375],
                            [44.32558593750002, 37.0107421875],
                            [44.401953125, 37.058496093749994],
                            [44.60595703125, 37.176025390625],
                            [44.66933593750002, 37.173583984375],
                            [44.73095703125, 37.165283203125],
                            [44.76513671875, 37.142431640625],
                            [45.053125, 36.471630859375],
                            [45.112402343750006, 36.40927734375],
                            [45.1552734375, 36.407373046874994],
                            [45.20654296875, 36.39716796875],
                            [45.24111328125002, 36.35595703125],
                            [45.36162109375002, 36.01533203125],
                            [45.7763671875, 35.821826171874996],
                            [46.16748046875, 35.820556640625],
                            [46.2734375, 35.773242187499996],
                            [46.2625, 35.744140625],
                            [46.18095703125002, 35.711376953125],
                            [46.03740234375002, 35.673144531249996],
                            [45.97109375000002, 35.524169921875],
                            [46.11210937500002, 35.321679687499994],
                            [46.15468750000002, 35.196728515625],
                            [46.1337890625, 35.12763671875],
                            [46.04179687500002, 35.08017578125],
                            [45.9208984375, 35.028515625],
                            [45.678125, 34.7984375],
                            [45.6375, 34.573828125]
                        ]
                    ]
                },
                properties: {
                    name: "Iraq",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-15.543115234374994, 66.228515625],
                            [-14.595849609374994, 66.38154296875],
                            [-15.117382812499983, 66.125634765625],
                            [-14.698193359374983, 66.02021484375],
                            [-14.827099609374983, 65.7642578125],
                            [-14.391845703125, 65.78740234375],
                            [-14.473388671875, 65.575341796875],
                            [-14.166943359374983, 65.64228515625],
                            [-13.617871093749983, 65.5193359375],
                            [-13.804785156249977, 65.35478515625],
                            [-13.599316406249983, 65.0359375],
                            [-14.04443359375, 64.74189453125],
                            [-14.385107421874977, 64.74521484375],
                            [-14.475390624999989, 64.493994140625],
                            [-14.927392578124994, 64.319677734375],
                            [-15.832910156249994, 64.17666015625],
                            [-16.640332031249983, 63.865478515625],
                            [-17.81572265624999, 63.71298828125],
                            [-17.946923828124994, 63.5357421875],
                            [-18.65361328124999, 63.406689453125],
                            [-20.198144531249994, 63.555810546874994],
                            [-20.494042968749994, 63.687353515625],
                            [-20.413964843749994, 63.80517578125],
                            [-20.65092773437499, 63.73740234375],
                            [-21.15239257812499, 63.94453125],
                            [-22.652197265624977, 63.827734375],
                            [-22.701171875, 64.083203125],
                            [-22.51005859374999, 63.991455078125],
                            [-22.187597656249977, 64.039208984375],
                            [-21.463330078124983, 64.379150390625],
                            [-22.053369140624994, 64.313916015625],
                            [-21.950341796874994, 64.514990234375],
                            [-21.590625, 64.6263671875],
                            [-22.10600585937499, 64.533056640625],
                            [-22.467041015625, 64.794970703125],
                            [-23.818994140624994, 64.73916015625],
                            [-24.02617187499999, 64.863427734375],
                            [-22.7880859375, 65.046484375],
                            [-21.89213867187499, 65.048779296875],
                            [-21.779980468749983, 65.1876953125],
                            [-22.50908203124999, 65.19677734375],
                            [-21.844384765624994, 65.44736328125],
                            [-22.902490234374994, 65.58046875],
                            [-23.89990234375, 65.407568359375],
                            [-24.475683593749977, 65.5251953125],
                            [-24.248925781249994, 65.614990234375],
                            [-23.85673828124999, 65.53837890625],
                            [-24.092626953124977, 65.77646484375],
                            [-23.615917968749983, 65.67958984375],
                            [-23.285351562499983, 65.75],
                            [-23.832617187499977, 65.84921875],
                            [-23.52495117187499, 65.880029296875],
                            [-23.77734375, 66.017578125],
                            [-23.434472656249994, 66.02421875],
                            [-23.452539062499994, 66.181005859375],
                            [-23.018994140624983, 65.98212890625],
                            [-22.659863281249983, 66.025927734375],
                            [-22.61601562499999, 65.86748046875],
                            [-22.44169921874999, 65.90830078125],
                            [-22.4453125, 66.07001953125],
                            [-22.947900390624994, 66.212744140625],
                            [-22.48442382812499, 66.26630859375],
                            [-23.116943359375, 66.338720703125],
                            [-22.9443359375, 66.429443359375],
                            [-22.426123046874977, 66.430126953125],
                            [-21.406884765624994, 66.0255859375],
                            [-21.374902343749994, 65.74189453125],
                            [-21.658447265625, 65.723583984375],
                            [-21.12968749999999, 65.2666015625],
                            [-20.804345703124994, 65.63642578125],
                            [-20.454833984375, 65.571044921875],
                            [-20.20751953125, 66.10009765625],
                            [-19.489697265624983, 65.76806640625],
                            [-19.382958984374994, 66.07568359375],
                            [-18.845898437499983, 66.183935546875],
                            [-18.141943359374977, 65.73408203125],
                            [-18.29716796874999, 66.157421875],
                            [-17.906982421875, 66.143310546875],
                            [-17.550439453124994, 65.964404296875],
                            [-17.153027343749983, 66.20283203125],
                            [-16.838037109374994, 66.125244140625],
                            [-16.485009765624994, 66.195947265625],
                            [-16.540673828124994, 66.446728515625],
                            [-16.24931640624999, 66.522900390625],
                            [-15.985400390624989, 66.5146484375],
                            [-15.543115234374994, 66.228515625]
                        ]
                    ]
                },
                properties: {
                    name: "Iceland",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [35.78730468750001, 32.734912109374996],
                            [35.572851562500006, 32.640869140625],
                            [35.56904296875001, 32.619873046875],
                            [35.55146484375001, 32.3955078125],
                            [35.484375, 32.401660156249996],
                            [35.40263671875002, 32.450634765625],
                            [35.38671875, 32.493017578125],
                            [35.303808593750006, 32.512939453125],
                            [35.19326171875002, 32.534423828125],
                            [35.065039062500006, 32.46044921875],
                            [35.01054687500002, 32.338183593749996],
                            [34.95595703125002, 32.1609375],
                            [34.98974609375, 31.91328125],
                            [34.97832031250002, 31.86640625],
                            [34.95380859375001, 31.841259765624997],
                            [34.96113281250001, 31.82333984375],
                            [34.983007812500006, 31.81679687499999],
                            [35.05322265625, 31.837939453124996],
                            [35.12714843750001, 31.816748046875],
                            [35.203710937500006, 31.75],
                            [34.95097656250002, 31.602294921875],
                            [34.88046875, 31.3681640625],
                            [35.45058593750002, 31.479296875],
                            [34.97343750000002, 29.555029296875],
                            [34.904296875, 29.47734375],
                            [34.24531250000001, 31.208300781249996],
                            [34.34833984375001, 31.292919921874997],
                            [34.350195312500006, 31.362744140624997],
                            [34.52558593750001, 31.525634765625],
                            [34.47734375000002, 31.584863281249994],
                            [34.483984375, 31.59228515625],
                            [34.67841796875001, 31.895703125],
                            [35.10859375000001, 33.08369140625],
                            [35.411230468750006, 33.07568359375],
                            [35.869140625, 33.43173828125],
                            [35.91347656250002, 32.94960937499999],
                            [35.78730468750001, 32.734912109374996]
                        ]
                    ]
                },
                properties: {
                    name: "Israel",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [15.576562500000051, 38.220312500000034],
                                [15.099511718750023, 37.45859375],
                                [15.295703125000017, 37.05517578124997],
                                [15.112597656250017, 36.687841796875006],
                                [14.501855468750023, 36.798681640625034],
                                [14.142968750000023, 37.103662109374994],
                                [13.90546875000004, 37.10063476562502],
                                [13.169921875000028, 37.47929687499996],
                                [12.640234375000034, 37.594335937500034],
                                [12.435546874999972, 37.819775390624955],
                                [12.734375, 38.18305664062498],
                                [12.902734375000023, 38.03486328124998],
                                [13.291113281250034, 38.19145507812502],
                                [13.788867187499989, 37.981201171875],
                                [15.11875, 38.15273437500002],
                                [15.498730468750011, 38.290869140625006],
                                [15.576562500000051, 38.220312500000034]
                            ]
                        ],
                        [
                            [
                                [8.478906250000023, 39.067529296874966],
                                [8.421484375000034, 38.968652343749994],
                                [8.366796875, 39.115917968749955],
                                [8.478906250000023, 39.067529296874966]
                            ]
                        ],
                        [
                            [
                                [8.28603515625008, 41.03984375],
                                [8.205664062500034, 40.99746093750005],
                                [8.320214843750023, 41.121875],
                                [8.28603515625008, 41.03984375]
                            ]
                        ],
                        [
                            [
                                [9.632031250000011, 40.88203124999998],
                                [9.805273437500063, 40.499560546875045],
                                [9.642968750000023, 40.268408203125006],
                                [9.5625, 39.16601562500006],
                                [9.056347656250068, 39.23916015625002],
                                [8.966601562500074, 38.963720703125034],
                                [8.648535156250034, 38.92656250000002],
                                [8.418164062500068, 39.205712890624966],
                                [8.547753906250023, 39.83920898437506],
                                [8.4078125, 39.91723632812497],
                                [8.471289062500063, 40.29267578124998],
                                [8.189941406250028, 40.651611328125],
                                [8.22421875, 40.91333007812503],
                                [8.571875, 40.85019531250006],
                                [9.228417968750023, 41.257080078125],
                                [9.615332031249977, 41.01728515624998],
                                [9.632031250000011, 40.88203124999998]
                            ]
                        ],
                        [
                            [
                                [10.395117187500034, 42.85815429687503],
                                [10.419335937499994, 42.71318359374999],
                                [10.13125, 42.742041015625006],
                                [10.395117187500034, 42.85815429687503]
                            ]
                        ],
                        [
                            [
                                [13.420996093750006, 46.212304687499994],
                                [13.63251953125004, 46.17705078125002],
                                [13.634960937499983, 46.15776367187499],
                                [13.61660156250008, 46.133105468750045],
                                [13.54804687500004, 46.08911132812503],
                                [13.486425781250034, 46.03955078124997],
                                [13.480273437500017, 46.00922851562501],
                                [13.487695312500023, 45.987109375000045],
                                [13.509179687500051, 45.973779296874994],
                                [13.6005859375, 45.97978515624996],
                                [13.663476562500023, 45.7919921875],
                                [13.831152343750006, 45.680419921875],
                                [13.719824218750063, 45.58759765625001],
                                [13.628320312500051, 45.77094726562498],
                                [13.206347656250074, 45.771386718749966],
                                [12.27431640625008, 45.44604492187503],
                                [12.225683593750034, 45.24150390625002],
                                [12.523437500000028, 44.96796874999998],
                                [12.248339843750045, 44.72250976562498],
                                [12.396289062500074, 44.223876953125],
                                [13.56416015625004, 43.57128906250003],
                                [14.010449218750011, 42.68955078125006],
                                [14.54072265625004, 42.24428710937502],
                                [15.16875, 41.93403320312498],
                                [16.164648437500034, 41.89619140624998],
                                [15.900488281250034, 41.51206054687498],
                                [17.954980468749994, 40.65517578125002],
                                [18.460644531249983, 40.221044921875034],
                                [18.34375, 39.82138671874998],
                                [18.077929687500017, 39.93696289062498],
                                [17.865039062500074, 40.28017578125002],
                                [17.395800781250045, 40.34023437499999],
                                [17.179980468750045, 40.50278320312498],
                                [16.92822265625, 40.45805664062502],
                                [16.521875, 39.74755859375003],
                                [17.114550781250017, 39.38061523437497],
                                [17.174609375000017, 38.998095703125045],
                                [16.61669921875003, 38.800146484375034],
                                [16.54560546875001, 38.40908203125002],
                                [16.05683593750001, 37.941845703124955],
                                [15.72451171875008, 37.93911132812502],
                                [15.645800781250017, 38.034228515625045],
                                [15.87890625, 38.61391601562502],
                                [16.19677734375, 38.759228515624955],
                                [16.20996093750003, 38.94111328124998],
                                [15.692773437499994, 39.99018554687501],
                                [14.95087890625004, 40.23901367187497],
                                [14.94765625000008, 40.469335937500006],
                                [14.765722656250063, 40.66840820312498],
                                [14.339941406250006, 40.59882812500001],
                                [14.460546875000063, 40.72871093750001],
                                [14.04433593750008, 40.81225585937506],
                                [13.733398437500057, 41.23564453124999],
                                [13.088671875000074, 41.243847656249955],
                                [12.630859374999972, 41.469677734374955],
                                [11.637304687500063, 42.287548828124955],
                                [11.141210937499977, 42.38989257812503],
                                [11.167773437500074, 42.53515625000006],
                                [10.708398437500023, 42.93632812499999],
                                [10.514843750000011, 42.96752929687503],
                                [10.188085937500063, 43.947509765625],
                                [8.76582031250004, 44.42231445312501],
                                [8.004980468750006, 43.87675781249999],
                                [7.4931640625, 43.767138671875045],
                                [7.637207031250057, 44.16484375],
                                [7.318554687500068, 44.13798828125002],
                                [6.900195312499989, 44.33574218749996],
                                [6.99267578125, 44.82729492187502],
                                [6.634765625000028, 45.06816406249996],
                                [7.07832031250004, 45.23994140624998],
                                [7.146386718750051, 45.381738281249994],
                                [6.790917968750023, 45.740869140624966],
                                [7.021093750000034, 45.92578124999997],
                                [7.055761718749977, 45.90380859375003],
                                [7.129003906249977, 45.88041992187499],
                                [7.327929687500017, 45.912353515625],
                                [7.9931640625, 46.01591796874996],
                                [8.081542968750057, 46.25600585937502],
                                [8.231933593750057, 46.341210937499966],
                                [8.29853515625004, 46.403417968750034],
                                [8.370703125, 46.44511718750002],
                                [8.458398437500023, 46.24589843750002],
                                [8.818554687500011, 46.0771484375],
                                [8.826757812500006, 46.06103515625],
                                [8.77802734375004, 45.996191406250034],
                                [8.953710937500034, 45.83002929687501],
                                [9.023730468750074, 45.845703125],
                                [9.203417968750017, 46.21923828125],
                                [9.304394531250068, 46.49555664062498],
                                [9.399316406250023, 46.480664062499955],
                                [9.427636718750023, 46.48232421875002],
                                [9.528710937500023, 46.306201171875045],
                                [9.57958984375, 46.29609375000001],
                                [9.639453125000017, 46.29589843749997],
                                [9.78779296875004, 46.34604492187498],
                                [9.884472656250011, 46.36777343750006],
                                [9.939257812500074, 46.36181640625],
                                [10.041015625000028, 46.23808593750002],
                                [10.08056640625, 46.22797851562501],
                                [10.128320312500051, 46.238232421874955],
                                [10.109667968750074, 46.36284179687502],
                                [10.081933593750023, 46.420751953125006],
                                [10.045605468750068, 46.44790039062505],
                                [10.038281250000011, 46.483203125000045],
                                [10.061230468750068, 46.54677734375002],
                                [10.087011718750063, 46.59990234375002],
                                [10.1375, 46.614355468750034],
                                [10.195507812500068, 46.62109374999997],
                                [10.4306640625, 46.55004882812497],
                                [10.409352678571473, 46.6092047991071],
                                [10.39794921875, 46.66503906250006],
                                [10.406054687500045, 46.73486328124997],
                                [10.452832031249983, 46.86494140625001],
                                [10.47939453125008, 46.85512695312505],
                                [10.579785156250011, 46.85371093750001],
                                [10.689257812500017, 46.846386718749955],
                                [10.759765625, 46.79331054687498],
                                [10.828906250000045, 46.775244140625034],
                                [10.927343750000034, 46.76948242187501],
                                [10.993261718750034, 46.77700195312502],
                                [11.02509765625004, 46.796972656250006],
                                [11.063476562500057, 46.85913085937497],
                                [11.133886718750006, 46.93618164062505],
                                [11.244433593750045, 46.975683593750006],
                                [11.433203125000063, 46.983056640624994],
                                [11.527539062500011, 46.99741210937498],
                                [11.775683593750017, 46.986083984375],
                                [12.169433593750028, 47.082128906250006],
                                [12.19716796875008, 47.075],
                                [12.201269531250034, 47.060888671875034],
                                [12.165527343750028, 47.028173828125034],
                                [12.130761718750051, 46.98476562499999],
                                [12.154101562500017, 46.93525390625004],
                                [12.267968750000023, 46.83588867187504],
                                [12.330078125, 46.75981445312499],
                                [12.388281250000034, 46.70263671874997],
                                [12.479199218749983, 46.672509765624966],
                                [13.16875, 46.572656249999966],
                                [13.3515625, 46.55791015624999],
                                [13.490039062500045, 46.55556640625002],
                                [13.7, 46.52026367187503],
                                [13.679687500000057, 46.46289062499997],
                                [13.63710937500008, 46.44853515624999],
                                [13.563281250000045, 46.41508789062502],
                                [13.399511718749977, 46.31752929687502],
                                [13.420996093750006, 46.212304687499994]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Italy",
                    childNum: 6
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-77.261474609375, 18.45742187499999],
                            [-76.349853515625, 18.15185546875],
                            [-76.21079101562499, 17.913525390624997],
                            [-76.524609375, 17.8662109375],
                            [-76.85322265625, 17.97373046874999],
                            [-76.94414062499999, 17.848779296874994],
                            [-77.11948242187499, 17.880078125],
                            [-77.20498046875, 17.71494140624999],
                            [-77.36142578124999, 17.833691406249997],
                            [-77.76816406249999, 17.877392578124997],
                            [-78.04448242187499, 18.173828125],
                            [-78.339501953125, 18.28720703124999],
                            [-78.21669921875, 18.44809570312499],
                            [-77.8734375, 18.522216796875],
                            [-77.261474609375, 18.45742187499999]
                        ]
                    ]
                },
                properties: {
                    name: "Jamaica",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-2.018652343749977, 49.23125],
                            [-2.23583984375, 49.1763671875],
                            [-2.220507812499989, 49.266357421875],
                            [-2.018652343749977, 49.23125]
                        ]
                    ]
                },
                properties: {
                    name: "Jersey",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [39.14541015625002, 32.12451171875],
                            [38.9970703125, 32.007470703124994],
                            [38.96230468750002, 31.994921875],
                            [38.37548828125, 31.847460937499996],
                            [38.111425781250006, 31.781152343749994],
                            [37.49335937500001, 31.625878906249994],
                            [37.215625, 31.556103515624997],
                            [36.95859375, 31.491503906249996],
                            [37.980078125, 30.5],
                            [37.862890625, 30.442626953125],
                            [37.66972656250002, 30.34814453125],
                            [37.64990234375, 30.330957031249994],
                            [37.63359375000002, 30.31328125],
                            [37.55361328125002, 30.144580078124996],
                            [37.49072265625, 30.01171875],
                            [37.46923828125, 29.995068359374997],
                            [36.75527343750002, 29.866015625],
                            [36.70390625000002, 29.831640625],
                            [36.591796875, 29.66611328125],
                            [36.47607421875, 29.4951171875],
                            [36.2828125, 29.355371093749994],
                            [36.068457031250006, 29.200537109375],
                            [34.95078125, 29.353515625],
                            [34.97343750000002, 29.555029296875],
                            [35.45058593750002, 31.479296875],
                            [35.57207031250002, 32.237890625],
                            [35.55146484375001, 32.3955078125],
                            [35.56904296875001, 32.619873046875],
                            [35.572851562500006, 32.640869140625],
                            [35.78730468750001, 32.734912109374996],
                            [36.3720703125, 32.3869140625],
                            [36.818359375, 32.317285156249994],
                            [38.773535156250006, 33.372216796874994],
                            [39.04140625000002, 32.3056640625],
                            [39.24746093750002, 32.350976562499994],
                            [39.29277343750002, 32.24384765625],
                            [39.14541015625002, 32.12451171875]
                        ]
                    ]
                },
                properties: {
                    name: "Jordan",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [123.88867187499997, 24.280126953124977],
                                [123.67978515625012, 24.317773437500023],
                                [123.77148437499997, 24.41445312499999],
                                [123.93486328125002, 24.362011718749983],
                                [123.88867187499997, 24.280126953124977]
                            ]
                        ],
                        [
                            [
                                [124.29316406250004, 24.515917968750074],
                                [124.13574218750003, 24.347607421874983],
                                [124.08476562500002, 24.435839843750017],
                                [124.30195312500004, 24.58710937500001],
                                [124.29316406250004, 24.515917968750074]
                            ]
                        ],
                        [
                            [
                                [125.44414062500002, 24.7431640625],
                                [125.26894531250005, 24.732519531250063],
                                [125.28359375, 24.871923828125034],
                                [125.44414062500002, 24.7431640625]
                            ]
                        ],
                        [
                            [
                                [128.25878906249997, 26.65278320312501],
                                [127.86708984375, 26.442480468749977],
                                [127.80361328125005, 26.152539062499983],
                                [127.653125, 26.0947265625],
                                [127.90722656250003, 26.69360351562497],
                                [128.09765624999997, 26.66777343749996],
                                [128.25488281249997, 26.88188476562496],
                                [128.25878906249997, 26.65278320312501]
                            ]
                        ],
                        [
                            [
                                [128.99814453125012, 27.720800781250006],
                                [128.90000000000012, 27.727783203125],
                                [128.9076171875, 27.897998046875045],
                                [128.99814453125012, 27.720800781250006]
                            ]
                        ],
                        [
                            [
                                [129.45253906250005, 28.20898437499997],
                                [129.3664062500001, 28.127734375000045],
                                [129.16464843750012, 28.24975585937503],
                                [129.68955078125012, 28.517480468750023],
                                [129.45253906250005, 28.20898437499997]
                            ]
                        ],
                        [
                            [
                                [130.6227539062501, 30.262988281250017],
                                [130.44560546875002, 30.264697265625017],
                                [130.38808593750005, 30.38818359375003],
                                [130.49716796875006, 30.465527343749983],
                                [130.64355468749997, 30.388964843750017],
                                [130.6227539062501, 30.262988281250017]
                            ]
                        ],
                        [
                            [
                                [130.95976562500007, 30.39692382812504],
                                [130.87031250000004, 30.444238281249994],
                                [131.06035156250007, 30.828466796875006],
                                [130.95976562500007, 30.39692382812504]
                            ]
                        ],
                        [
                            [
                                [130.38105468750004, 32.42373046875002],
                                [130.24169921874997, 32.462792968749994],
                                [130.46142578124997, 32.515722656250034],
                                [130.38105468750004, 32.42373046875002]
                            ]
                        ],
                        [
                            [
                                [130.08251953124997, 32.22968750000001],
                                [129.9601562500001, 32.24375],
                                [130.00976562499997, 32.521630859374994],
                                [130.16777343750002, 32.54121093749998],
                                [130.19951171875002, 32.34057617187506],
                                [130.08251953124997, 32.22968750000001]
                            ]
                        ],
                        [
                            [
                                [128.66533203125002, 32.783886718749955],
                                [128.89453124999997, 32.65214843750002],
                                [128.69296875000012, 32.60473632812506],
                                [128.66533203125002, 32.783886718749955]
                            ]
                        ],
                        [
                            [
                                [129.07695312500002, 32.84028320312498],
                                [128.99726562500004, 32.95185546874998],
                                [129.10976562500005, 33.13256835937503],
                                [129.18193359375002, 32.99311523437504],
                                [129.07695312500002, 32.84028320312498]
                            ]
                        ],
                        [
                            [
                                [129.49179687500006, 33.22304687499999],
                                [129.37041015625002, 33.176025390625],
                                [129.56992187500006, 33.36103515625004],
                                [129.49179687500006, 33.22304687499999]
                            ]
                        ],
                        [
                            [
                                [129.79570312500007, 33.74882812499999],
                                [129.67480468749997, 33.73969726562498],
                                [129.71728515624997, 33.8583984375],
                                [129.79570312500007, 33.74882812499999]
                            ]
                        ],
                        [
                            [
                                [131.17460937500007, 33.602587890625045],
                                [131.69628906250003, 33.60283203124999],
                                [131.53740234375007, 33.274072265624994],
                                [131.89658203125006, 33.25458984375001],
                                [131.8478515625001, 33.118066406249994],
                                [132.0021484375001, 32.882373046875045],
                                [131.6603515625001, 32.465625],
                                [131.33720703125007, 31.4046875],
                                [131.07080078124997, 31.436865234374977],
                                [131.09843750000002, 31.256152343750017],
                                [130.68574218750004, 31.01513671875003],
                                [130.77626953125, 31.70629882812497],
                                [130.65507812500002, 31.71840820312505],
                                [130.5560546875, 31.563085937500034],
                                [130.58876953125, 31.178515625000017],
                                [130.20068359374997, 31.291894531250023],
                                [130.14726562500002, 31.40849609374996],
                                [130.2941406250001, 31.45068359375003],
                                [130.3219726562501, 31.601464843750023],
                                [130.18789062500005, 31.768847656250017],
                                [130.19443359375012, 32.090771484374955],
                                [130.64052734375005, 32.61923828124998],
                                [130.49785156250002, 32.65693359375001],
                                [130.547265625, 32.83159179687499],
                                [130.2375, 33.177636718749966],
                                [130.12685546875005, 33.10483398437506],
                                [130.175, 32.851318359375],
                                [130.32646484375002, 32.852636718750006],
                                [130.34042968750012, 32.70185546875004],
                                [130.05410156250005, 32.770800781250045],
                                [129.76855468749997, 32.57099609375001],
                                [129.82675781250006, 32.72534179687503],
                                [129.67910156250005, 33.059960937499966],
                                [129.99169921875003, 32.85156249999997],
                                [129.58007812500003, 33.23627929687501],
                                [129.61015625000002, 33.34365234375005],
                                [129.844140625, 33.32177734375003],
                                [129.82568359374997, 33.43701171875006],
                                [130.36503906250007, 33.634472656249955],
                                [130.4837890625, 33.834619140624966],
                                [130.715625, 33.92778320312502],
                                [130.953125, 33.87202148437504],
                                [131.17460937500007, 33.602587890625045]
                            ]
                        ],
                        [
                            [
                                [132.266015625, 33.945166015625006],
                                [132.44492187500006, 33.91318359374998],
                                [132.20878906250007, 33.87285156250002],
                                [132.266015625, 33.945166015625006]
                            ]
                        ],
                        [
                            [
                                [129.27949218750004, 34.123388671875006],
                                [129.18642578125, 34.14501953125006],
                                [129.21484374999997, 34.320654296875034],
                                [129.3371093750001, 34.284765625],
                                [129.27949218750004, 34.123388671875006]
                            ]
                        ],
                        [
                            [
                                [134.35742187500003, 34.25634765625],
                                [134.6375, 34.22661132812499],
                                [134.73886718750012, 33.82050781250001],
                                [134.37705078125012, 33.60839843749997],
                                [134.18164062500003, 33.24721679687502],
                                [133.95869140625004, 33.44833984375006],
                                [133.63203125000004, 33.51098632812503],
                                [133.28593750000007, 33.35996093749998],
                                [132.97724609375004, 32.84199218749998],
                                [132.80429687500006, 32.75200195312502],
                                [132.6417968750001, 32.76245117187503],
                                [132.70898437500003, 32.90249023437505],
                                [132.49511718749997, 32.91660156249998],
                                [132.41279296875004, 33.43046875],
                                [132.0326171875, 33.339990234374994],
                                [132.64306640624997, 33.68994140624997],
                                [132.93515625000006, 34.09531250000006],
                                [133.19306640625004, 33.93320312499998],
                                [133.58203124999997, 34.01713867187502],
                                [133.60263671875006, 34.24384765625001],
                                [133.94833984375006, 34.34804687500002],
                                [134.35742187500003, 34.25634765625]
                            ]
                        ],
                        [
                            [
                                [134.35185546875002, 34.48364257812503],
                                [134.25185546875, 34.42304687500004],
                                [134.18212890625003, 34.51923828124998],
                                [134.35185546875002, 34.48364257812503]
                            ]
                        ],
                        [
                            [
                                [134.9328125000001, 34.28813476562499],
                                [134.82441406250004, 34.202929687500045],
                                [134.66787109375005, 34.294140624999955],
                                [135.00468750000002, 34.54404296874998],
                                [134.9328125000001, 34.28813476562499]
                            ]
                        ],
                        [
                            [
                                [129.38564453125, 34.35366210937502],
                                [129.26669921875012, 34.37045898437506],
                                [129.45107421875005, 34.68657226562499],
                                [129.38564453125, 34.35366210937502]
                            ]
                        ],
                        [
                            [
                                [133.37050781250005, 36.203857421875],
                                [133.23925781249997, 36.178759765625045],
                                [133.20615234375006, 36.293408203124955],
                                [133.29570312500002, 36.34013671874996],
                                [133.37050781250005, 36.203857421875]
                            ]
                        ],
                        [
                            [
                                [138.34404296875007, 37.822119140625006],
                                [138.22519531250006, 37.82939453124996],
                                [138.25, 38.078466796875006],
                                [138.50361328125004, 38.31591796875006],
                                [138.45361328124997, 38.07568359375006],
                                [138.57519531249997, 38.065527343750034],
                                [138.34404296875007, 37.822119140625006]
                            ]
                        ],
                        [
                            [
                                [141.22929687500007, 41.37265625],
                                [141.45546875000005, 41.404736328124955],
                                [141.43046875000002, 40.72333984374998],
                                [141.7970703125001, 40.29116210937502],
                                [141.97695312500005, 39.428808593750034],
                                [141.90078125, 39.111328125],
                                [141.5462890625, 38.762841796874966],
                                [141.4674804687501, 38.404150390625006],
                                [141.10839843750003, 38.33793945312502],
                                [140.9621093750001, 38.148876953124955],
                                [141.00166015625004, 37.11464843750002],
                                [140.57353515625007, 36.23134765625002],
                                [140.87402343749997, 35.72495117187506],
                                [140.457421875, 35.51025390625],
                                [140.35468750000004, 35.18144531249999],
                                [139.8439453125001, 34.914892578125034],
                                [139.82646484375002, 35.29667968750002],
                                [140.096875, 35.58515624999998],
                                [139.83476562500002, 35.658056640625006],
                                [139.65000000000012, 35.40913085937501],
                                [139.675, 35.149267578125006],
                                [139.47441406250002, 35.298535156249955],
                                [139.24941406250005, 35.27802734375004],
                                [139.08603515625006, 34.83916015624999],
                                [138.8375, 34.619238281250034],
                                [138.80273437499997, 34.97480468749998],
                                [138.90361328125002, 35.02524414062506],
                                [138.71962890625, 35.12407226562502],
                                [138.18906250000012, 34.596337890624994],
                                [137.543359375, 34.66420898437505],
                                [137.06171875000004, 34.58281249999999],
                                [137.27519531250002, 34.77250976562499],
                                [136.96328125000005, 34.83491210937501],
                                [136.87128906250004, 34.733105468749955],
                                [136.89707031250006, 35.03554687500002],
                                [136.80419921874997, 35.05029296875],
                                [136.53300781250007, 34.678369140624994],
                                [136.8802734375, 34.43359375000006],
                                [136.8537109375001, 34.324072265625034],
                                [136.32988281250007, 34.17685546875006],
                                [135.91621093750004, 33.561718749999955],
                                [135.69531250000003, 33.48696289062502],
                                [135.4528320312501, 33.55336914062505],
                                [135.12792968749997, 34.006982421874994],
                                [135.10009765624997, 34.288378906250045],
                                [135.41591796875, 34.61748046875002],
                                [134.74003906250007, 34.765234375],
                                [134.246875, 34.71386718750003],
                                [133.96826171874997, 34.52729492187504],
                                [133.14238281250002, 34.30244140624998],
                                [132.65654296875007, 34.24609375000003],
                                [132.31259765625006, 34.32495117187503],
                                [132.14648437499997, 33.83876953125002],
                                [131.74052734375007, 34.05205078125002],
                                [130.91884765625, 33.97573242187502],
                                [130.88925781250012, 34.261816406250034],
                                [131.00419921875007, 34.39257812500003],
                                [131.35439453125, 34.41318359375006],
                                [132.92294921875006, 35.511279296875045],
                                [133.98125, 35.50722656250002],
                                [135.17431640625003, 35.74707031250003],
                                [135.32695312500002, 35.52553710937502],
                                [135.68027343750006, 35.503125],
                                [135.903125, 35.60688476562498],
                                [136.09531250000006, 35.767626953125045],
                                [136.06748046875006, 36.11684570312505],
                                [136.69814453125005, 36.742041015625034],
                                [136.84345703125004, 37.38212890624999],
                                [137.32265625, 37.52207031249998],
                                [136.89990234375003, 37.11767578125],
                                [137.01669921875006, 36.83720703124999],
                                [137.24628906250004, 36.753173828125],
                                [137.5140625, 36.95156250000002],
                                [138.31992187500012, 37.21840820312502],
                                [138.88505859375007, 37.84394531250001],
                                [139.36386718750006, 38.09902343750002],
                                [139.80195312500004, 38.881591796875],
                                [140.06474609375002, 39.624414062499994],
                                [139.99472656250006, 39.855078125],
                                [139.74150390625002, 39.92084960937498],
                                [140.01113281250005, 40.26035156250006],
                                [139.92285156250003, 40.59843750000002],
                                [140.28125, 40.84609375000002],
                                [140.3444335937501, 41.203320312499955],
                                [140.62763671875004, 41.195410156250034],
                                [140.74863281250012, 40.830322265625],
                                [140.93603515625003, 40.940771484375034],
                                [141.1185546875, 40.88227539062501],
                                [141.24423828125006, 41.20561523437499],
                                [140.80058593750002, 41.138818359374966],
                                [140.80185546875012, 41.253662109375],
                                [140.9369140625, 41.50556640624998],
                                [141.22929687500007, 41.37265625]
                            ]
                        ],
                        [
                            [
                                [139.48125, 42.08100585937498],
                                [139.43134765625004, 42.19956054687498],
                                [139.55839843750002, 42.235205078125034],
                                [139.48125, 42.08100585937498]
                            ]
                        ],
                        [
                            [
                                [141.29541015625003, 45.11933593750001],
                                [141.14531250000002, 45.153906250000034],
                                [141.19375, 45.24785156249999],
                                [141.29541015625003, 45.11933593750001]
                            ]
                        ],
                        [
                            [
                                [141.07275390624997, 45.33286132812498],
                                [141.03398437500007, 45.26933593750002],
                                [140.97167968749997, 45.465478515624994],
                                [141.07275390624997, 45.33286132812498]
                            ]
                        ],
                        [
                            [
                                [143.82431640625012, 44.11699218749999],
                                [144.71523437500005, 43.92797851562503],
                                [145.36953125000005, 44.32739257812506],
                                [145.13964843750003, 43.6625],
                                [145.34082031249997, 43.30253906249999],
                                [145.83300781249997, 43.38593750000001],
                                [144.92138671874997, 43.00092773437498],
                                [143.96933593750006, 42.88139648437499],
                                [143.42949218750002, 42.41889648437498],
                                [143.2365234375001, 42.000195312499955],
                                [141.85136718750007, 42.57905273437501],
                                [141.40664062500005, 42.54692382812496],
                                [140.98613281250002, 42.34213867187498],
                                [140.70976562500002, 42.555615234374955],
                                [140.48046875000003, 42.559375],
                                [140.32666015625003, 42.29335937499999],
                                [141.15097656250012, 41.80507812499999],
                                [140.99951171874997, 41.73740234375006],
                                [140.65986328125004, 41.815576171874994],
                                [140.3849609375001, 41.51928710937503],
                                [140.08515625000004, 41.43408203125],
                                [139.99531250000004, 41.57641601562503],
                                [140.10839843749997, 41.912939453125034],
                                [139.83544921874997, 42.278076171875],
                                [139.86015625000002, 42.58173828125004],
                                [140.43222656250012, 42.95410156250006],
                                [140.39238281250002, 43.303125],
                                [141.13818359374997, 43.17993164062506],
                                [141.37412109375006, 43.279638671875006],
                                [141.7609375000001, 44.482519531250034],
                                [141.58300781250003, 45.15595703125001],
                                [141.66796874999997, 45.401269531249966],
                                [141.93769531250004, 45.509521484375],
                                [142.88476562499997, 44.670117187499955],
                                [143.82431640625012, 44.11699218749999]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Japan",
                    childNum: 28
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [77.04863281249999, 35.109912109374996],
                            [76.927734375, 35.346630859375],
                            [76.88222656250002, 35.4357421875],
                            [76.81279296874999, 35.571826171874996],
                            [76.76689453124999, 35.66171875],
                            [76.87890625, 35.61328125],
                            [77.09003906250001, 35.552050781249996],
                            [77.29482421875002, 35.508154296875],
                            [77.44648437500001, 35.4755859375],
                            [77.57255859374999, 35.471826171874994],
                            [77.72402343750002, 35.48056640625],
                            [77.79941406250003, 35.495898437499996],
                            [77.42343750000003, 35.302587890625],
                            [77.16855468750003, 35.171533203124994],
                            [77.04863281249999, 35.109912109374996]
                        ]
                    ]
                },
                properties: {
                    name: "Siachen Glacier",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [50.184472656249994, 44.854638671874994],
                                [49.99511718750003, 44.93696289062498],
                                [50.10986328124997, 45.08193359375002],
                                [50.038867187500074, 44.949121093749966],
                                [50.184472656249994, 44.854638671874994]
                            ]
                        ],
                        [
                            [
                                [87.32285156250012, 49.085791015625006],
                                [86.8083007812501, 49.04970703125002],
                                [86.54941406250012, 48.52861328125002],
                                [85.7494140625, 48.38505859374999],
                                [85.52597656250006, 47.915625],
                                [85.65664062500005, 47.254638671875],
                                [85.484765625, 47.06352539062496],
                                [84.78613281249997, 46.83071289062505],
                                [84.66660156250006, 46.97236328125004],
                                [84.016015625, 46.97050781250002],
                                [83.02949218750004, 47.18593750000002],
                                [82.31523437500002, 45.59492187499998],
                                [82.61162109375007, 45.424267578124955],
                                [82.52148437500003, 45.12548828125],
                                [82.26660156249997, 45.21909179687498],
                                [81.94492187500006, 45.16083984375001],
                                [81.69199218750012, 45.34936523437497],
                                [80.05917968750012, 45.006445312500006],
                                [79.871875, 44.88378906249997],
                                [80.48154296875006, 44.71464843749999],
                                [80.35527343750002, 44.09726562500006],
                                [80.78574218750006, 43.16157226562504],
                                [80.39023437500006, 43.043115234374966],
                                [80.53896484375005, 42.873486328124955],
                                [80.20224609375012, 42.73447265624998],
                                [80.209375, 42.190039062500006],
                                [80.07128906249997, 42.302978515625],
                                [79.92109375000004, 42.41313476562496],
                                [79.49013671875, 42.45756835937496],
                                [79.42822265624997, 42.483496093750006],
                                [79.20302734375005, 42.66601562499997],
                                [79.16484375000007, 42.759033203125],
                                [79.1266601562501, 42.775732421875034],
                                [76.98808593750007, 42.97358398437501],
                                [76.64648437500003, 42.928808593750034],
                                [76.50917968750005, 42.91889648437498],
                                [75.9322265625, 42.92851562499999],
                                [75.84033203125003, 42.9375],
                                [75.78955078124997, 42.93291015624999],
                                [75.68173828125, 42.83046875],
                                [75.04765625000007, 42.904394531250034],
                                [74.20908203125006, 43.24038085937502],
                                [73.88603515625002, 43.132568359375],
                                [73.55625, 43.002783203125006],
                                [73.45019531249997, 42.703027343749966],
                                [73.421875, 42.59350585937503],
                                [73.49296875000007, 42.409033203125034],
                                [73.41162109375003, 42.41977539062498],
                                [73.316015625, 42.46699218750001],
                                [73.2829101562501, 42.50410156250004],
                                [72.85507812500006, 42.561132812500006],
                                [72.75292968750003, 42.63789062500001],
                                [72.54316406250004, 42.67773437500006],
                                [72.27578125, 42.757666015625006],
                                [71.76054687500002, 42.82148437500004],
                                [71.5142578125, 42.766943359375006],
                                [71.42207031250004, 42.78315429687504],
                                [71.25664062500002, 42.733544921874966],
                                [70.89287109375007, 42.339990234374994],
                                [70.94677734374997, 42.24868164062505],
                                [69.15361328125002, 41.42524414062498],
                                [68.58408203125, 40.876269531250045],
                                [68.57265625, 40.62265624999998],
                                [68.29189453125, 40.656103515625034],
                                [68.04765625000007, 40.80927734374998],
                                [68.11308593750007, 41.02861328124999],
                                [67.9357421875001, 41.19658203125002],
                                [66.70966796875004, 41.17915039062501],
                                [66.49863281250006, 41.99487304687503],
                                [66.00957031250007, 42.00488281250003],
                                [66.1002929687501, 42.99082031249998],
                                [65.80302734375002, 42.87695312500006],
                                [65.49619140625, 43.310546875],
                                [64.9054687500001, 43.714697265625006],
                                [64.44316406250007, 43.55117187499999],
                                [63.20703125000003, 43.62797851562502],
                                [61.99023437500003, 43.492138671874955],
                                [61.007910156250006, 44.39379882812497],
                                [58.555273437500006, 45.55537109375001],
                                [55.97568359375006, 44.99492187499996],
                                [55.97744140625005, 41.32221679687504],
                                [55.434375, 41.296289062499994],
                                [54.85380859375002, 41.965185546875006],
                                [54.120996093749994, 42.335205078125],
                                [53.0558593750001, 42.14775390624999],
                                [52.4938476562501, 41.780371093750034],
                                [52.59658203125005, 42.760156249999966],
                                [51.898242187500074, 42.86962890624997],
                                [51.61601562500002, 43.15844726562503],
                                [51.29541015624997, 43.17412109375002],
                                [51.30175781249997, 43.48237304687501],
                                [50.8307617187501, 44.192773437499966],
                                [50.331152343750006, 44.32548828125002],
                                [50.25292968749997, 44.461523437500006],
                                [50.409472656250074, 44.6240234375],
                                [51.543554687500006, 44.53100585937506],
                                [51.009375, 44.92182617187501],
                                [51.4157226562501, 45.35786132812501],
                                [53.20039062500004, 45.33198242187498],
                                [52.77382812499999, 45.57275390625],
                                [53.13525390625003, 46.19165039062497],
                                [53.069433593750006, 46.85605468750006],
                                [52.48320312500002, 46.99067382812504],
                                [52.13828125, 46.82861328124997],
                                [51.178027343750074, 47.110156250000045],
                                [49.886328125, 46.59565429687504],
                                [49.347460937500074, 46.51914062499998],
                                [49.232226562500074, 46.33715820312503],
                                [48.54121093750004, 46.60561523437502],
                                [48.558398437500074, 46.75712890624999],
                                [48.959375, 46.77460937499998],
                                [48.16699218750003, 47.70878906249996],
                                [47.48193359374997, 47.80390624999998],
                                [47.292382812499994, 47.74091796875004],
                                [47.06464843750004, 48.23247070312499],
                                [46.660937500000074, 48.41225585937502],
                                [46.70263671875003, 48.80556640625002],
                                [47.031347656250006, 49.150292968749994],
                                [46.80205078125002, 49.36708984375002],
                                [46.889550781249994, 49.69697265625001],
                                [47.42919921874997, 50.35795898437502],
                                [47.7057617187501, 50.37797851562502],
                                [48.33496093750003, 49.858251953125006],
                                [48.7589843750001, 49.92832031250006],
                                [48.625097656250006, 50.61269531250005],
                                [49.32343750000004, 50.851708984374966],
                                [49.49804687500003, 51.08359375000006],
                                [50.246875, 51.28950195312498],
                                [50.79394531249997, 51.729199218749955],
                                [51.16347656250005, 51.6474609375],
                                [51.344531250000074, 51.47534179687503],
                                [52.21914062499999, 51.709375],
                                [52.57119140625005, 51.481640624999955],
                                [53.33808593750004, 51.48237304687504],
                                [54.139746093750006, 51.04077148437503],
                                [54.555273437500006, 50.535791015624994],
                                [54.64160156250003, 51.011572265625034],
                                [55.68623046875004, 50.582861328125006],
                                [56.49140625000004, 51.01953124999997],
                                [57.01171874999997, 51.06518554687503],
                                [57.44218750000002, 50.88886718749998],
                                [57.83886718750003, 51.091650390625006],
                                [58.359179687500074, 51.063818359375034],
                                [58.88369140625005, 50.694433593750006],
                                [59.4523437500001, 50.62041015625002],
                                [59.523046875, 50.492871093749955],
                                [59.812402343749994, 50.58203125],
                                [60.05859374999997, 50.850292968749955],
                                [60.42480468749997, 50.67915039062498],
                                [60.94228515625005, 50.69550781250004],
                                [61.38945312500002, 50.86103515625001],
                                [61.55468750000003, 51.32460937500005],
                                [60.464746093749994, 51.651171875000045],
                                [60.03027343749997, 51.93325195312505],
                                [60.99453125000005, 52.33686523437504],
                                [60.77441406249997, 52.67578124999997],
                                [61.047460937500006, 52.97246093750002],
                                [62.08271484375004, 53.00541992187499],
                                [61.65986328125004, 53.22846679687504],
                                [61.19921874999997, 53.28715820312502],
                                [61.22890625, 53.445898437500006],
                                [61.53496093750002, 53.52329101562506],
                                [60.97949218749997, 53.62172851562505],
                                [61.231054687500006, 54.01948242187498],
                                [61.92871093750003, 53.94648437500004],
                                [64.46123046875002, 54.38417968750002],
                                [65.08837890624997, 54.340185546875034],
                                [65.476953125, 54.62329101562497],
                                [68.15585937500006, 54.97670898437505],
                                [68.20625, 55.16093750000002],
                                [68.9772460937501, 55.389599609374955],
                                [70.18242187500002, 55.162451171875034],
                                [70.73808593750007, 55.30517578125],
                                [71.18554687500003, 54.59931640624998],
                                [71.09316406250005, 54.21220703124999],
                                [72.00449218750006, 54.20566406249998],
                                [72.18603515625003, 54.32563476562501],
                                [72.44677734375003, 53.94184570312498],
                                [72.62226562500004, 54.13432617187502],
                                [73.22988281250005, 53.957812500000045],
                                [73.71240234375003, 54.04238281250002],
                                [73.30566406250003, 53.707226562499955],
                                [73.40693359375004, 53.44755859374999],
                                [73.85898437500006, 53.61972656249998],
                                [74.35156250000003, 53.487646484375006],
                                [74.45195312500007, 53.64726562500002],
                                [75.22021484374997, 53.89379882812506],
                                [75.43720703125004, 54.08964843749999],
                                [76.8373046875, 54.4423828125],
                                [76.65458984375007, 54.14526367187503],
                                [76.42167968750007, 54.151513671874966],
                                [76.48476562500005, 54.02255859374998],
                                [77.85996093750006, 53.269189453124994],
                                [79.98623046875, 50.774560546874966],
                                [80.42363281250002, 50.94628906249997],
                                [80.44804687500002, 51.18334960937503],
                                [80.73525390625, 51.29340820312498],
                                [81.12724609375002, 51.19106445312502],
                                [81.0714843750001, 50.96875],
                                [81.38828125000006, 50.95649414062501],
                                [81.46591796875006, 50.73984375],
                                [82.49394531250007, 50.72758789062499],
                                [82.76083984375012, 50.89335937500002],
                                [83.35732421875005, 50.99458007812504],
                                [83.94511718750007, 50.774658203125],
                                [84.32324218749997, 50.239160156249966],
                                [84.9894531250001, 50.061425781249994],
                                [85.2326171875001, 49.61582031249998],
                                [86.1808593750001, 49.49931640624996],
                                [86.67548828125004, 49.77729492187501],
                                [86.62646484374997, 49.56269531250001],
                                [87.32285156250012, 49.085791015625006]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Kazakhstan",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [35.325292968750006, 5.364892578124994],
                            [35.745019531249994, 5.343994140625],
                            [35.80029296874997, 5.156933593749983],
                            [35.77929687499997, 5.105566406250006],
                            [35.756152343750074, 4.950488281250031],
                            [35.76308593750005, 4.808007812500051],
                            [36.02197265625003, 4.468115234374991],
                            [36.90556640625002, 4.411474609374991],
                            [37.15458984375002, 4.254541015624994],
                            [37.944921875, 3.746728515625023],
                            [38.0861328125001, 3.648828124999966],
                            [38.22529296875004, 3.61899414062502],
                            [38.45156250000005, 3.604833984374977],
                            [38.608007812500006, 3.600097656249986],
                            [39.49443359375002, 3.45610351562496],
                            [39.65751953125002, 3.577832031249983],
                            [39.79033203125002, 3.754248046875034],
                            [39.8421875, 3.851464843750037],
                            [40.765234375, 4.273046875000034],
                            [41.02080078125002, 4.057470703124991],
                            [41.22089843750004, 3.943554687499969],
                            [41.372460937499994, 3.94619140624998],
                            [41.48193359375003, 3.96328125],
                            [41.737695312499994, 3.979052734375003],
                            [41.88398437500004, 3.977734375000011],
                            [41.6134765625001, 3.59047851562498],
                            [41.34179687499997, 3.20166015625],
                            [40.964453125, 2.814648437500026],
                            [40.9787109375001, -.870312500000011],
                            [41.249804687500074, -1.220507812499946],
                            [41.4269531250001, -1.449511718749974],
                            [41.521875, -1.572265625000028],
                            [41.53271484374997, -1.695312499999957],
                            [41.26748046875005, -1.945019531250026],
                            [40.889746093750006, -2.023535156250034],
                            [40.89824218750002, -2.269921874999966],
                            [40.64414062500006, -2.53945312499998],
                            [40.22246093750002, -2.688378906250037],
                            [40.1154296875001, -3.250585937499991],
                            [39.8609375, -3.576757812500006],
                            [39.49091796875004, -4.478417968750023],
                            [39.221777343750006, -4.692382812500014],
                            [37.608203125000074, -3.497070312500028],
                            [37.643847656250074, -3.045410156250028],
                            [33.90322265625005, -1.002050781250034],
                            [33.94316406250002, .173779296874969],
                            [34.160937500000074, .605175781250026],
                            [34.4108398437501, .867285156250034],
                            [34.48173828125002, 1.042138671875051],
                            [34.79863281250002, 1.24453125],
                            [34.976464843749994, 1.719628906250051],
                            [34.97753906249997, 1.861914062499991],
                            [34.9640625000001, 2.06240234374998],
                            [34.8830078125001, 2.417919921875026],
                            [34.90576171875003, 2.4796875],
                            [34.44785156250006, 3.163476562500037],
                            [34.40722656249997, 3.357519531250034],
                            [34.39941406249997, 3.412695312500006],
                            [34.44179687499999, 3.60625],
                            [34.43769531250004, 3.650585937499969],
                            [34.392871093750074, 3.691503906250048],
                            [34.26708984375003, 3.733154296875],
                            [34.16503906250003, 3.812988281250014],
                            [34.18574218750004, 3.869775390625037],
                            [34.13203125000004, 3.889160156249986],
                            [33.97607421874997, 4.220214843750028],
                            [34.176855468750006, 4.419091796875037],
                            [34.38017578125002, 4.620654296874974],
                            [34.6398437500001, 4.875488281250028],
                            [34.878320312499994, 5.109570312500026],
                            [35.08447265624997, 5.31186523437502],
                            [35.268359375000074, 5.492285156250006],
                            [35.325292968750006, 5.364892578124994]
                        ]
                    ]
                },
                properties: {
                    name: "Kenya",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [72.63994140625002, 39.385986328125],
                            [72.22998046875, 39.20751953125],
                            [72.14736328125002, 39.2607421875],
                            [72.08417968750001, 39.31064453125],
                            [72.04277343750002, 39.3521484375],
                            [71.77861328125002, 39.277978515624994],
                            [71.73222656250002, 39.422998046874994],
                            [71.50332031250002, 39.478808593749996],
                            [71.51738281250002, 39.553857421874994],
                            [71.50302734375, 39.582177734374994],
                            [71.4703125, 39.603662109374994],
                            [70.79931640625, 39.3947265625],
                            [70.50117187500001, 39.587353515625],
                            [69.29765625000002, 39.524804687499994],
                            [69.2447265625, 39.827099609375],
                            [69.27880859375, 39.917773437499996],
                            [69.3072265625, 39.968554687499996],
                            [69.36542968750001, 39.947070312499996],
                            [69.43193359375002, 39.909765625],
                            [69.47626953125001, 39.919726562499996],
                            [69.47099609375002, 39.990625],
                            [69.46875, 40.020751953125],
                            [69.966796875, 40.20224609375],
                            [70.59921875, 39.974511718749994],
                            [70.990625, 40.2548828125],
                            [71.3046875, 40.286914062499996],
                            [71.69248046875, 40.15234375],
                            [72.13125, 40.438623046874994],
                            [72.3892578125, 40.427392578124994],
                            [72.40205078125001, 40.578076171875],
                            [72.6041015625, 40.525439453124996],
                            [73.13212890625002, 40.82851562499999],
                            [72.65830078125, 40.869921875],
                            [72.36406250000002, 41.04345703125],
                            [72.294921875, 41.039941406249994],
                            [72.21308593750001, 41.0142578125],
                            [72.18730468750002, 41.025927734374996],
                            [72.18095703125002, 41.118457031249996],
                            [72.16425781250001, 41.173730468749994],
                            [72.11542968750001, 41.186572265624996],
                            [72.05244140625001, 41.16474609375],
                            [71.95849609375, 41.187060546874996],
                            [71.87861328125001, 41.19501953125],
                            [71.8580078125, 41.311376953125],
                            [71.79248046875, 41.413134765624996],
                            [71.75771484375002, 41.428027343749996],
                            [71.70068359375, 41.454003906249994],
                            [71.66494140625002, 41.5412109375],
                            [71.6375, 41.5341796875],
                            [71.60224609375001, 41.503271484375],
                            [71.60625, 41.367431640625],
                            [71.54560546875001, 41.308056640625],
                            [71.5, 41.307470703125],
                            [71.4208984375, 41.34189453125],
                            [71.40839843750001, 41.136035156249996],
                            [71.39306640625, 41.123388671875],
                            [71.11074218750002, 41.152636718749996],
                            [70.86044921875, 41.224902343749996],
                            [70.734375, 41.400537109374994],
                            [70.18095703125002, 41.571435546874994],
                            [70.85664062500001, 42.030810546874996],
                            [71.0322265625, 42.077783203124994],
                            [71.228515625, 42.162890625],
                            [71.23232421875002, 42.186279296875],
                            [71.21269531250002, 42.206445312499994],
                            [71.12998046875, 42.25],
                            [71.03603515625002, 42.28466796875],
                            [70.97900390625, 42.266552734375],
                            [70.94677734375, 42.248681640624994],
                            [70.89287109375002, 42.339990234374994],
                            [71.25664062500002, 42.733544921874994],
                            [71.42207031250001, 42.783154296875],
                            [71.5142578125, 42.766943359375],
                            [71.76054687500002, 42.821484375],
                            [72.16181640625001, 42.760693359375],
                            [72.27578125000002, 42.757666015625],
                            [72.54316406250001, 42.677734375],
                            [72.7529296875, 42.637890625],
                            [72.855078125, 42.5611328125],
                            [73.28291015625001, 42.5041015625],
                            [73.316015625, 42.4669921875],
                            [73.41162109375, 42.419775390625],
                            [73.49296875000002, 42.409033203125],
                            [73.421875, 42.593505859375],
                            [73.4501953125, 42.703027343749994],
                            [73.55625, 43.002783203125],
                            [73.88603515625002, 43.132568359375],
                            [74.20908203125, 43.240380859374994],
                            [75.04765625000002, 42.90439453125],
                            [75.68173828125, 42.83046875],
                            [75.78955078125, 42.932910156249996],
                            [75.84033203125, 42.9375],
                            [75.9322265625, 42.928515625],
                            [76.50917968750002, 42.918896484375],
                            [76.646484375, 42.92880859375],
                            [76.98808593749999, 42.973583984375],
                            [79.12666015625001, 42.775732421875],
                            [79.20302734375002, 42.666015625],
                            [79.29550781250003, 42.604833984375],
                            [79.36777343750003, 42.547216796875],
                            [79.42822265625, 42.48349609375],
                            [79.92109375000001, 42.413134765624996],
                            [80.0712890625, 42.302978515625],
                            [80.209375, 42.1900390625],
                            [80.24619140625003, 42.059814453125],
                            [80.23515624999999, 42.04345703125],
                            [80.21621093750002, 42.032421875],
                            [79.90966796875, 42.014990234375],
                            [79.84042968750003, 41.995751953124994],
                            [79.76611328125, 41.898876953125],
                            [78.74257812500002, 41.56005859375],
                            [78.54316406250001, 41.4595703125],
                            [78.44287109375, 41.417529296874996],
                            [78.36240234375003, 41.371630859374996],
                            [78.34628906250003, 41.2814453125],
                            [78.12343750000002, 41.075634765625],
                            [77.95644531250002, 41.050683593749994],
                            [77.81523437499999, 41.055615234375],
                            [77.71933593750003, 41.024316406249994],
                            [77.58173828125001, 40.9927734375],
                            [76.98662109374999, 41.03916015625],
                            [76.90771484375, 41.024169921875],
                            [76.82402343749999, 40.982324218749994],
                            [76.70839843750002, 40.818115234375],
                            [76.6611328125, 40.779638671875],
                            [76.63984375000001, 40.742236328124996],
                            [76.62216796875003, 40.662353515625],
                            [76.57792968749999, 40.577880859375],
                            [76.48017578125001, 40.449511718749996],
                            [76.39638671875002, 40.389794921874994],
                            [76.31855468750001, 40.35224609375],
                            [76.25830078125, 40.43076171875],
                            [75.87197265625002, 40.30322265625],
                            [75.67714843750002, 40.305810546874994],
                            [75.55556640625002, 40.6251953125],
                            [75.52080078125002, 40.6275390625],
                            [75.24101562500002, 40.480273437499996],
                            [75.111328125, 40.4541015625],
                            [75.0044921875, 40.449511718749996],
                            [74.865625, 40.493505859375],
                            [74.80126953125, 40.428515625],
                            [74.83046875000002, 40.32851562499999],
                            [74.41191406250002, 40.13720703125],
                            [74.24267578125, 40.092041015625],
                            [74.08515625000001, 40.07431640625],
                            [73.99160156250002, 40.043115234374994],
                            [73.93876953125002, 39.978808593749996],
                            [73.88457031250002, 39.8779296875],
                            [73.85625, 39.828662109374996],
                            [73.83535156250002, 39.800146484375],
                            [73.83974609375002, 39.762841796874994],
                            [73.88251953125001, 39.71455078125],
                            [73.9146484375, 39.606494140624996],
                            [73.90712890625002, 39.57851562499999],
                            [73.87275390625001, 39.53330078125],
                            [73.82294921875001, 39.48896484375],
                            [73.71572265625002, 39.462255859375],
                            [73.63164062500002, 39.448876953124994],
                            [73.47041015625001, 39.460595703124994],
                            [73.38740234375001, 39.442724609375],
                            [73.33613281250001, 39.412353515625],
                            [73.2349609375, 39.374560546874996],
                            [73.10927734375002, 39.3619140625],
                            [72.63994140625002, 39.385986328125]
                        ],
                        [
                            [70.66416015625, 39.85546875],
                            [70.56708984375001, 39.866601562499994],
                            [70.49775390625001, 39.882421875],
                            [70.48281250000002, 39.882714843749994],
                            [70.4892578125, 39.863037109375],
                            [70.5595703125, 39.790917968749994],
                            [70.61210937500002, 39.786767578124994],
                            [70.70166015625, 39.82529296875],
                            [70.66416015625, 39.85546875]
                        ],
                        [
                            [71.20615234375, 39.892578125],
                            [71.22871093750001, 40.048144531249996],
                            [71.08037109375002, 40.079882812499996],
                            [71.02412109375001, 40.149169921875],
                            [71.00546875, 40.152294921875],
                            [70.96064453125001, 40.08798828125],
                            [71.04482421875002, 39.992529296875],
                            [71.04365234375001, 39.976318359375],
                            [71.01171875, 39.8951171875],
                            [71.06425781250002, 39.884912109374994],
                            [71.15625, 39.883447265624994],
                            [71.20615234375, 39.892578125]
                        ]
                    ]
                },
                properties: {
                    name: "Kyrgyzstan",
                    childNum: 3
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [104.42636718750006, 10.411230468749991],
                            [103.87050781250005, 10.655126953125034],
                            [103.58710937500004, 10.552197265625026],
                            [103.54042968750005, 10.668701171875043],
                            [103.721875, 10.890136718750043],
                            [103.5324218750001, 11.146679687499997],
                            [103.35361328125006, 10.921582031250054],
                            [103.15283203124997, 10.913720703125051],
                            [103.12548828124997, 11.460644531250011],
                            [102.9486328125, 11.773486328124974],
                            [102.93388671875002, 11.706689453125037],
                            [102.73662109375007, 12.089794921875011],
                            [102.75566406250002, 12.42626953125],
                            [102.49960937500012, 12.669970703125003],
                            [102.33632812500005, 13.560302734375014],
                            [102.546875, 13.585693359375043],
                            [102.90927734375006, 14.136718750000028],
                            [103.19941406250004, 14.332617187499977],
                            [104.77900390625004, 14.427832031250006],
                            [105.07412109375005, 14.227441406250037],
                            [105.12597656250003, 14.280957031250011],
                            [105.16914062500004, 14.336083984374966],
                            [105.1833007812501, 14.346240234374989],
                            [105.18554687500003, 14.319091796874972],
                            [105.20703125000003, 14.259375],
                            [105.24570312500006, 14.200537109374977],
                            [105.35019531250006, 14.109570312500011],
                            [105.53154296875007, 14.156152343749994],
                            [105.73974609375003, 14.084960937500057],
                            [105.83144531250005, 13.976611328125003],
                            [105.9044921875001, 13.924511718750054],
                            [106.06679687500005, 13.921191406250003],
                            [106.12470703125004, 14.049121093750031],
                            [106.09667968749997, 14.127099609375023],
                            [106.00410156250004, 14.262890624999983],
                            [105.97890625, 14.343017578125043],
                            [106.00839843750012, 14.357177734375],
                            [106.1652343750001, 14.372363281249989],
                            [106.19072265625007, 14.388134765624997],
                            [106.22539062500002, 14.476220703125009],
                            [106.26796875, 14.466210937500009],
                            [106.35498046875003, 14.454785156249997],
                            [106.44697265625004, 14.515039062500009],
                            [106.50146484375003, 14.578222656250006],
                            [106.53115234375005, 14.549414062499991],
                            [106.5636718750001, 14.505078125000026],
                            [106.59921875000006, 14.479394531250037],
                            [106.66542968750005, 14.441308593749994],
                            [106.73818359375005, 14.387744140625017],
                            [106.78349609375002, 14.335107421875037],
                            [106.81992187500006, 14.314697265625057],
                            [106.91318359375006, 14.329394531250031],
                            [106.93808593750006, 14.327343750000054],
                            [106.99218750000003, 14.391015624999966],
                            [107.03017578125, 14.425683593750009],
                            [107.06240234375, 14.415771484375043],
                            [107.109375, 14.416699218750054],
                            [107.29267578125004, 14.592382812500048],
                            [107.37988281250003, 14.555322265625051],
                            [107.41474609375004, 14.56289062499999],
                            [107.51943359375005, 14.705078125],
                            [107.3314453125, 14.126611328125009],
                            [107.60546874999997, 13.437792968750017],
                            [107.47539062500002, 13.030371093749963],
                            [107.50644531250006, 12.364550781250031],
                            [107.39335937500002, 12.260498046874972],
                            [107.21210937500004, 12.30400390624996],
                            [106.70009765625, 11.979296874999974],
                            [106.41386718750002, 11.9484375],
                            [106.39921875000007, 11.687011718750028],
                            [106.0060546875001, 11.758007812500011],
                            [105.85146484375005, 11.635009765625],
                            [105.85605468750006, 11.294287109375048],
                            [106.16093750000002, 11.037109375000057],
                            [106.16396484375005, 10.794921875],
                            [105.85332031250007, 10.86357421874996],
                            [105.75507812500004, 10.989990234375043],
                            [105.40576171875003, 10.95161132812504],
                            [105.3146484375001, 10.845166015625026],
                            [105.04570312500002, 10.911376953125014],
                            [105.04638671874997, 10.701660156250014],
                            [104.85058593749997, 10.534472656249974],
                            [104.42636718750006, 10.411230468749991]
                        ]
                    ]
                },
                properties: {
                    name: "Cambodia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-157.34213867187503, 1.855566406250034],
                                [-157.17578125, 1.73984375],
                                [-157.57895507812498, 1.902050781249997],
                                [-157.43583984374993, 1.84726562500002],
                                [-157.365185546875, 1.94609375],
                                [-157.44189453125003, 2.025048828125009],
                                [-157.321875, 1.968554687500045],
                                [-157.34213867187503, 1.855566406250034]
                            ]
                        ],
                        [
                            [
                                [-159.3390625, 3.923535156249983],
                                [-159.27475585937503, 3.796582031250054],
                                [-159.40903320312503, 3.87324218750004],
                                [-159.3390625, 3.923535156249983]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Kiribati",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [126.32695312500002, 33.2236328125],
                                [126.16562500000012, 33.31201171875],
                                [126.33769531250002, 33.46040039062501],
                                [126.90117187500002, 33.51513671874997],
                                [126.87285156250002, 33.34116210937498],
                                [126.32695312500002, 33.2236328125]
                            ]
                        ],
                        [
                            [
                                [126.23369140625002, 34.370507812499994],
                                [126.12285156250002, 34.443945312500034],
                                [126.34384765625012, 34.544921875],
                                [126.23369140625002, 34.370507812499994]
                            ]
                        ],
                        [
                            [
                                [126.17197265625006, 34.73115234375001],
                                [126.00751953125004, 34.86748046874999],
                                [126.07841796875002, 34.914843750000045],
                                [126.17197265625006, 34.73115234375001]
                            ]
                        ],
                        [
                            [
                                [128.0658203125, 34.80585937500004],
                                [128.05468750000003, 34.70805664062502],
                                [127.87343750000005, 34.73496093749998],
                                [127.8322265625001, 34.87451171875],
                                [128.0658203125, 34.80585937500004]
                            ]
                        ],
                        [
                            [
                                [128.74101562500007, 34.798535156249955],
                                [128.64667968750004, 34.73686523437502],
                                [128.48925781250003, 34.86528320312496],
                                [128.66796875000003, 35.0087890625],
                                [128.74101562500007, 34.798535156249955]
                            ]
                        ],
                        [
                            [
                                [126.52070312500004, 37.73681640625003],
                                [126.516015625, 37.60468750000001],
                                [126.42333984375003, 37.62363281250006],
                                [126.41162109374997, 37.82265625000002],
                                [126.52070312500004, 37.73681640625003]
                            ]
                        ],
                        [
                            [
                                [128.37460937500012, 38.6234375],
                                [129.41826171875002, 37.059033203124955],
                                [129.40351562500004, 36.052148437499994],
                                [129.57285156250006, 36.05053710937503],
                                [129.4191406250001, 35.49785156249996],
                                [129.07675781250006, 35.12270507812502],
                                [128.5109375000001, 35.10097656250002],
                                [128.44394531250012, 34.87036132812503],
                                [128.03623046875006, 35.02197265625],
                                [127.71484374999997, 34.95468749999998],
                                [127.71542968750012, 34.72104492187498],
                                [127.40429687499997, 34.823095703125006],
                                [127.47910156250012, 34.625244140625],
                                [127.324609375, 34.463281249999966],
                                [127.17343750000006, 34.54614257812497],
                                [127.24707031249997, 34.755126953125],
                                [126.89746093749997, 34.438867187499966],
                                [126.75478515625005, 34.511865234374994],
                                [126.53144531250004, 34.31425781249999],
                                [126.26445312500002, 34.67324218750002],
                                [126.52451171875006, 34.697900390624966],
                                [126.59335937500012, 34.824365234374994],
                                [126.42070312500002, 34.823388671874966],
                                [126.29111328125012, 35.154150390625034],
                                [126.61406250000007, 35.57099609375004],
                                [126.4884765625001, 35.647070312500006],
                                [126.75302734375006, 35.871972656249994],
                                [126.5404296875, 36.166162109374966],
                                [126.4876953125, 36.69379882812498],
                                [126.18085937500004, 36.69160156249998],
                                [126.16054687500005, 36.77192382812501],
                                [126.48701171875004, 37.00747070312502],
                                [126.78447265625007, 36.94843749999998],
                                [126.87207031249997, 36.82446289062506],
                                [126.97685546875002, 36.93940429687501],
                                [126.74638671875002, 37.19355468750001],
                                [126.63388671875012, 37.78183593750006],
                                [127.09033203125003, 38.28388671875001],
                                [128.03896484375, 38.30854492187498],
                                [128.37460937500012, 38.6234375]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Korea",
                    childNum: 7
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [48.27539062499997, 29.624316406250017],
                                [48.17968750000003, 29.611425781250063],
                                [48.081445312499994, 29.798925781250063],
                                [48.1847656250001, 29.978857421875034],
                                [48.348242187500006, 29.78266601562504],
                                [48.27539062499997, 29.624316406250017]
                            ]
                        ],
                        [
                            [
                                [48.442480468750006, 28.542919921874983],
                                [47.671289062499994, 28.53315429687504],
                                [47.433203125, 28.989550781250017],
                                [46.53144531250004, 29.09624023437499],
                                [46.69375, 29.259667968749966],
                                [46.76933593750002, 29.347460937500017],
                                [46.90585937500006, 29.5375],
                                [47.14824218750002, 30.0009765625],
                                [47.64375, 30.097314453125023],
                                [47.75390624999997, 30.076611328124955],
                                [47.97871093750004, 29.98281250000005],
                                [48.00566406250002, 29.835791015625034],
                                [48.143457031249994, 29.57246093750001],
                                [47.96962890625005, 29.61669921874997],
                                [47.72265624999997, 29.393017578124955],
                                [48.0514648437501, 29.355371093750023],
                                [48.442480468750006, 28.542919921874983]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Kuwait",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [102.12744140625011, 22.37919921874999],
                            [102.58251953125006, 21.904296875000057],
                            [102.66201171875008, 21.676025390625057],
                            [102.73857421875005, 21.677929687500125],
                            [102.77109375000015, 21.70966796875001],
                            [102.79824218750014, 21.797949218750034],
                            [102.81591796875, 21.807373046875],
                            [102.94960937500008, 21.681347656250068],
                            [102.85117187500009, 21.26591796874999],
                            [102.8837890625, 21.202587890625068],
                            [103.1044921875, 20.89165039062499],
                            [103.21074218749999, 20.840625],
                            [103.46357421874995, 20.779833984375102],
                            [103.6350585937501, 20.697070312500102],
                            [104.10136718750005, 20.945507812500125],
                            [104.1953125, 20.91396484375008],
                            [104.349609375, 20.82109374999999],
                            [104.58320312500001, 20.646679687499955],
                            [104.53271484375, 20.554882812500125],
                            [104.47861328124998, 20.529589843750102],
                            [104.40781250000015, 20.485742187500023],
                            [104.36777343750015, 20.441406250000057],
                            [104.39218750000015, 20.424755859375068],
                            [104.49619140625003, 20.41367187499992],
                            [104.61884765624995, 20.374511718750114],
                            [104.65644531250001, 20.328515624999966],
                            [104.66191406250005, 20.289013671875125],
                            [104.67695312500007, 20.224707031249977],
                            [104.69873046875006, 20.205322265625114],
                            [104.84785156250007, 20.202441406250045],
                            [104.88867187500006, 20.169091796875023],
                            [104.92919921874994, 20.082812500000045],
                            [104.92792968750007, 20.01811523437499],
                            [104.81513671875001, 19.90400390625001],
                            [104.80175781250011, 19.836132812500068],
                            [104.74316406250006, 19.754736328124977],
                            [104.58789062500006, 19.61875],
                            [104.54628906250014, 19.610546875000068],
                            [104.25986328125003, 19.685498046875068],
                            [104.06279296875005, 19.678417968750068],
                            [104.03203124999999, 19.67514648437492],
                            [104.0134765625001, 19.646484374999943],
                            [104.05156250000005, 19.564160156250068],
                            [104.06289062500002, 19.482568359375136],
                            [104.02753906250013, 19.420458984375102],
                            [103.93203125000002, 19.366064453125034],
                            [103.89638671875002, 19.339990234375023],
                            [103.89160156249994, 19.30498046874999],
                            [105.146484375, 18.650976562499977],
                            [105.14541015625014, 18.616796874999977],
                            [105.08701171875015, 18.49624023437508],
                            [105.11455078125005, 18.405273437500057],
                            [105.45820312500007, 18.154296875000057],
                            [105.51855468750011, 18.077441406250045],
                            [105.58847656250015, 17.983691406249932],
                            [105.69140625, 17.737841796874932],
                            [106.00625, 17.415283203124943],
                            [106.26953125, 17.216796875000057],
                            [106.33339843750002, 17.14370117187508],
                            [106.42597656250007, 17.00253906250009],
                            [106.50224609374999, 16.9541015625],
                            [106.52597656250003, 16.876611328125023],
                            [106.53369140625, 16.821044921875057],
                            [106.54619140625005, 16.650732421874977],
                            [106.65644531250013, 16.492626953125125],
                            [106.73955078124999, 16.452539062500136],
                            [106.79160156250015, 16.490332031249977],
                            [106.83242187500008, 16.526269531250023],
                            [106.85107421875, 16.515625],
                            [106.89277343750013, 16.396533203125102],
                            [106.93066406250006, 16.353125],
                            [107.39638671875008, 16.04301757812499],
                            [107.39199218750008, 15.951660156250057],
                            [107.36064453125005, 15.921728515624977],
                            [107.18886718750008, 15.838623046875114],
                            [107.16591796875002, 15.802490234375],
                            [107.27939453125003, 15.618701171875045],
                            [107.33876953125002, 15.560498046875125],
                            [107.56425781249999, 15.3916015625],
                            [107.62167968750015, 15.309863281250045],
                            [107.653125, 15.255224609375091],
                            [107.63369140625008, 15.18984375000008],
                            [107.58964843749999, 15.118457031250102],
                            [107.55527343750009, 15.057031250000023],
                            [107.48037109375014, 14.979882812500136],
                            [107.5046875000001, 14.91591796875008],
                            [107.52451171875003, 14.871826171874943],
                            [107.51376953124998, 14.817382812500057],
                            [107.51943359375008, 14.705078125000114],
                            [107.46513671875005, 14.664990234375125],
                            [107.41474609375007, 14.56289062500008],
                            [107.37988281250006, 14.555322265625136],
                            [107.29267578125007, 14.592382812500034],
                            [107.109375, 14.416699218749955],
                            [107.06240234375008, 14.415771484374943],
                            [107.03017578125008, 14.425683593750023],
                            [106.99218749999994, 14.39101562500008],
                            [106.93808593750015, 14.327343750000068],
                            [106.91318359375003, 14.329394531249932],
                            [106.81992187500003, 14.314697265624943],
                            [106.7834960937501, 14.335107421875023],
                            [106.73818359375008, 14.387744140625102],
                            [106.66542968750002, 14.441308593750023],
                            [106.59921875000003, 14.479394531250136],
                            [106.56367187500007, 14.505078125000011],
                            [106.53115234375002, 14.549414062499977],
                            [106.50146484375, 14.578222656250034],
                            [106.22539062500005, 14.476220703125023],
                            [106.1907226562501, 14.388134765625011],
                            [106.16523437500007, 14.372363281249989],
                            [106.00839843750009, 14.357177734375114],
                            [105.97890625000014, 14.343017578125057],
                            [106.00410156250013, 14.262890625000068],
                            [106.09667968750011, 14.127099609375136],
                            [106.12470703124995, 14.049121093750045],
                            [106.06679687500008, 13.921191406250102],
                            [105.90449218750007, 13.924511718750068],
                            [105.83144531250008, 13.976611328124989],
                            [105.73974609375006, 14.084960937500057],
                            [105.5315429687501, 14.156152343750023],
                            [105.35019531250009, 14.109570312500125],
                            [105.24570312500015, 14.200537109374977],
                            [105.20703125000006, 14.259375],
                            [105.18554687499994, 14.319091796875],
                            [105.18330078125001, 14.346240234374989],
                            [105.24365234375006, 14.367871093749955],
                            [105.34218750000008, 14.416699218749955],
                            [105.42265624999993, 14.471630859374955],
                            [105.47558593750006, 14.530126953124977],
                            [105.49736328125005, 14.590673828125034],
                            [105.52304687500015, 14.843310546874989],
                            [105.54667968749999, 14.932470703125034],
                            [105.53339843750013, 15.041601562500091],
                            [105.49042968750007, 15.127587890625023],
                            [105.49042968750007, 15.256591796875],
                            [105.615625, 15.488281249999943],
                            [105.63886718750013, 15.585937499999943],
                            [105.64101562500002, 15.656542968749932],
                            [105.62207031250006, 15.699951171875114],
                            [105.39892578125011, 15.829882812500102],
                            [105.40625, 15.987451171875023],
                            [105.33066406250003, 16.037890625000045],
                            [105.1487304687501, 16.09355468749999],
                            [105.04716796874999, 16.16025390625009],
                            [104.81933593749994, 16.466064453125057],
                            [104.75058593750015, 16.647558593750034],
                            [104.74355468750014, 16.884375],
                            [104.75898437500013, 17.0771484375],
                            [104.81601562499998, 17.30029296875],
                            [104.73964843750008, 17.461669921875],
                            [104.428125, 17.698974609375057],
                            [104.32265625000002, 17.815820312500023],
                            [104.19619140625002, 17.988378906250034],
                            [104.04873046875002, 18.216699218749966],
                            [103.94960937500008, 18.318994140625023],
                            [103.89882812500002, 18.295312500000023],
                            [103.79228515624999, 18.31650390625009],
                            [103.62968750000005, 18.382568359375057],
                            [103.48798828124995, 18.41816406250001],
                            [103.36699218750005, 18.42333984375],
                            [103.28828124999995, 18.408398437499955],
                            [103.25175781249999, 18.373486328125125],
                            [103.24892578125014, 18.338964843750034],
                            [103.27958984374999, 18.304980468750045],
                            [103.26318359375, 18.278466796875136],
                            [103.19970703125006, 18.25947265625001],
                            [103.14853515625009, 18.221728515624932],
                            [103.09121093750014, 18.13823242187499],
                            [103.05136718750003, 18.02851562500001],
                            [102.80742187500005, 17.945556640625],
                            [102.71757812500005, 17.892236328125136],
                            [102.67519531250014, 17.851757812500068],
                            [102.68007812500008, 17.824121093750136],
                            [102.66064453125, 17.8179687499999],
                            [102.61679687500015, 17.833349609375034],
                            [102.59824218750009, 17.926757812500057],
                            [102.55253906249999, 17.965087890625057],
                            [102.4587890625001, 17.984619140624943],
                            [102.35185546874999, 18.045947265625045],
                            [102.14824218750005, 18.203857421875057],
                            [102.10146484375014, 18.21064453125001],
                            [102.03457031250002, 18.169824218750023],
                            [101.94746093750001, 18.081494140624955],
                            [101.87548828125011, 18.046435546874932],
                            [101.81865234375005, 18.064648437500125],
                            [101.77480468750002, 18.033398437500125],
                            [101.6875, 17.889404296875114],
                            [101.56367187500001, 17.820507812500125],
                            [101.55507812500002, 17.812353515625034],
                            [101.41367187500015, 17.71875],
                            [101.16748046875011, 17.4990234375],
                            [101.10517578125001, 17.479541015625102],
                            [100.9084960937501, 17.583886718750023],
                            [101.14394531250008, 18.14262695312499],
                            [101.1375, 18.286865234375057],
                            [101.0505859375001, 18.407031250000045],
                            [101.04697265625003, 18.441992187500034],
                            [101.28632812499995, 18.977148437500034],
                            [101.19755859374999, 19.327929687500045],
                            [101.22080078125015, 19.486621093750045],
                            [101.21191406250011, 19.548339843750057],
                            [100.51357421875008, 19.553466796875],
                            [100.39765625000013, 19.756103515625057],
                            [100.51953125000006, 20.177929687500068],
                            [100.31796875000003, 20.385888671875136],
                            [100.2180664062501, 20.339599609375114],
                            [100.13974609375015, 20.245410156250102],
                            [100.11494140625007, 20.25766601562492],
                            [100.12246093750002, 20.316650390625057],
                            [100.12968750000005, 20.372216796875023],
                            [100.1838867187501, 20.589111328124943],
                            [100.2493164062501, 20.730273437499932],
                            [100.32607421875008, 20.795703124999932],
                            [100.40742187499995, 20.823242187500057],
                            [100.56513671875013, 20.82509765625008],
                            [100.62294921875002, 20.85957031250001],
                            [100.61767578125, 20.87924804687509],
                            [100.54931640625011, 20.884228515625068],
                            [100.5222656250001, 20.921923828125102],
                            [100.53613281250006, 20.992382812500068],
                            [100.703125, 21.25136718750008],
                            [101.0803710937501, 21.46865234375008],
                            [101.13886718750013, 21.567480468749977],
                            [101.19667968750002, 21.522070312499977],
                            [101.17539062500009, 21.407519531250102],
                            [101.21992187500013, 21.342431640625136],
                            [101.21181640625008, 21.278222656250023],
                            [101.22441406249999, 21.22373046874992],
                            [101.24785156249993, 21.197314453125045],
                            [101.28144531250007, 21.184130859375045],
                            [101.44355468750001, 21.230810546874977],
                            [101.54238281250008, 21.234277343750136],
                            [101.70478515625013, 21.150146484375057],
                            [101.728125, 21.15639648437508],
                            [101.78349609374999, 21.204150390625045],
                            [101.8005859375001, 21.212597656249955],
                            [101.7229492187501, 21.314941406250057],
                            [101.74726562500007, 21.60576171874999],
                            [101.7439453125001, 21.77797851562508],
                            [101.73652343750001, 21.826513671874977],
                            [101.52451171874998, 22.253662109375],
                            [101.56787109375011, 22.2763671875],
                            [101.6199218750001, 22.327441406250102],
                            [101.67148437500009, 22.462304687500023],
                            [101.70751953125, 22.486572265625],
                            [101.73876953125011, 22.495263671874966],
                            [101.75996093750001, 22.490332031250034],
                            [101.841796875, 22.388476562500102],
                            [102.02441406250006, 22.439208984375114],
                            [102.09150390625007, 22.412255859375136],
                            [102.12744140625011, 22.37919921874999]
                        ]
                    ]
                },
                properties: {
                    name: "Lao PDR",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [35.869140625, 33.43173828125],
                            [35.411230468750006, 33.07568359375],
                            [35.10859375000001, 33.08369140625],
                            [35.64785156250002, 34.2482421875],
                            [35.97626953125001, 34.629199218749996],
                            [36.383886718750006, 34.65791015625],
                            [36.32988281250002, 34.499609375],
                            [36.50439453125, 34.432373046875],
                            [36.5849609375, 34.221240234374996],
                            [36.27783203125, 33.92529296875],
                            [36.36503906250002, 33.83935546875],
                            [35.98613281250002, 33.75263671875],
                            [36.03447265625002, 33.58505859375],
                            [35.869140625, 33.43173828125]
                        ]
                    ]
                },
                properties: {
                    name: "Lebanon",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-8.486425781249977, 7.558496093749994],
                            [-8.408740234374989, 7.411816406249997],
                            [-8.324511718749989, 6.920019531249991],
                            [-8.587890625, 6.490527343749989],
                            [-8.287109375, 6.319042968749997],
                            [-7.981591796874994, 6.2861328125],
                            [-7.888623046874983, 6.23486328125],
                            [-7.800927734374994, 6.038916015624991],
                            [-7.730371093749994, 5.919042968749991],
                            [-7.636132812499994, 5.90771484375],
                            [-7.454394531249989, 5.84130859375],
                            [-7.39990234375, 5.550585937499989],
                            [-7.585058593749977, 4.916748046875],
                            [-7.574658203124983, 4.572314453124989],
                            [-7.544970703124989, 4.351318359375],
                            [-8.259033203125, 4.589990234374994],
                            [-9.132177734374977, 5.054638671874997],
                            [-10.2763671875, 6.07763671875],
                            [-11.291601562499977, 6.688232421875],
                            [-11.507519531249983, 6.906542968749989],
                            [-11.267675781249977, 7.232617187499997],
                            [-10.878076171874994, 7.538232421874994],
                            [-10.6474609375, 7.759375],
                            [-10.570849609374989, 8.071142578124991],
                            [-10.516748046874994, 8.125292968749989],
                            [-10.359814453124983, 8.187939453124997],
                            [-10.283203125, 8.485156249999989],
                            [-10.233056640624994, 8.488818359374989],
                            [-10.147412109374983, 8.519726562499997],
                            [-10.064355468749994, 8.429882812499997],
                            [-9.781982421875, 8.537695312499991],
                            [-9.518261718749983, 8.34609375],
                            [-9.369140625, 7.703808593749997],
                            [-9.463818359374983, 7.415869140624991],
                            [-9.11757812499999, 7.215917968749991],
                            [-8.8896484375, 7.2626953125],
                            [-8.659765624999977, 7.688378906249994],
                            [-8.486425781249977, 7.558496093749994]
                        ]
                    ]
                },
                properties: {
                    name: "Liberia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [25.150488281250006, 31.654980468749997],
                            [24.85273437500001, 31.334814453125],
                            [24.96142578125, 30.678515625],
                            [24.703222656250006, 30.201074218749994],
                            [24.980273437500017, 29.181884765625],
                            [24.980273437500017, 25.5888671875],
                            [24.980273437500017, 21.995849609375],
                            [24.9794921875, 20.002587890624994],
                            [23.980273437500017, 19.99594726562499],
                            [23.980273437500017, 19.496630859375003],
                            [20.14765625000001, 21.38925781249999],
                            [15.984082031250011, 23.445214843749994],
                            [14.97900390625, 22.99619140624999],
                            [14.215527343750011, 22.619677734375003],
                            [13.48125, 23.18017578125],
                            [11.967871093750006, 23.517871093750003],
                            [11.507617187500017, 24.314355468749994],
                            [10.686132812500006, 24.55136718749999],
                            [10.395898437500023, 24.485595703125],
                            [10.255859375, 24.591015625],
                            [10.000683593750011, 25.332080078125003],
                            [9.4482421875, 26.067138671875],
                            [9.491406250000011, 26.333740234375],
                            [9.883203125000023, 26.630810546874997],
                            [9.74755859375, 27.330859375],
                            [9.916015625, 27.785693359374996],
                            [9.805273437500006, 29.176953125],
                            [9.310253906250011, 30.115234375],
                            [9.51875, 30.229394531249994],
                            [9.89501953125, 30.3873046875],
                            [9.932519531250023, 30.425341796874996],
                            [10.059765625000011, 30.580078125],
                            [10.21640625, 30.783203125],
                            [10.114941406250011, 31.463769531249994],
                            [10.274609375000011, 31.684960937499994],
                            [10.475781250000011, 31.736035156249997],
                            [10.60888671875, 31.929541015625],
                            [10.826367187500011, 32.0806640625],
                            [11.005175781250017, 32.172705078125],
                            [11.168261718750017, 32.256738281249994],
                            [11.358007812500006, 32.34521484375],
                            [11.504980468750006, 32.413671875],
                            [11.535937500000017, 32.47333984375],
                            [11.533789062500006, 32.524951171874996],
                            [11.453906250000017, 32.642578125],
                            [11.453906250000017, 32.781689453125],
                            [11.459179687500011, 32.897363281249994],
                            [11.467187500000023, 32.965722656249994],
                            [11.504589843750011, 33.181933593749996],
                            [11.657128906250023, 33.118896484375],
                            [11.8134765625, 33.093701171875],
                            [12.279882812500006, 32.858544921874994],
                            [12.753515625, 32.801074218749996],
                            [13.283496093750017, 32.9146484375],
                            [15.176562500000017, 32.391162109374996],
                            [15.705957031250023, 31.426416015624994],
                            [17.830468750000023, 30.927587890625],
                            [18.669824218750023, 30.415673828124994],
                            [19.12373046875001, 30.26611328125],
                            [19.713281250000023, 30.48837890625],
                            [20.11152343750001, 30.963720703125],
                            [19.926367187500006, 31.817529296874994],
                            [20.121484375000023, 32.21875],
                            [20.62109375, 32.58017578125],
                            [21.63593750000001, 32.937304687499996],
                            [22.187402343750023, 32.918261718749996],
                            [23.090625, 32.61875],
                            [23.10625, 32.331445312499994],
                            [23.28632812500001, 32.213818359375],
                            [24.129687500000017, 32.009228515625],
                            [24.878515625, 31.984277343749994],
                            [25.150488281250006, 31.654980468749997]
                        ]
                    ]
                },
                properties: {
                    name: "Libya",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-60.89521484375, 13.821972656249997],
                            [-60.951416015625, 13.717578125],
                            [-61.073144531249994, 13.865576171874991],
                            [-60.908105468749994, 14.09335937499999],
                            [-60.89521484375, 13.821972656249997]
                        ]
                    ]
                },
                properties: {
                    name: "Saint Lucia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [79.87480468750002, 9.050732421875026],
                                [79.90371093750005, 8.975],
                                [79.74765625000006, 9.104589843749991],
                                [79.87480468750002, 9.050732421875026]
                            ]
                        ],
                        [
                            [
                                [79.98232421875, 9.812695312500011],
                                [80.25283203125005, 9.796337890625054],
                                [80.71113281250004, 9.366357421875023],
                                [81.226953125, 8.50551757812498],
                                [81.37285156250002, 8.431445312499989],
                                [81.42216796875007, 8.147851562500023],
                                [81.87412109375012, 7.288330078124986],
                                [81.86142578125012, 6.901269531249994],
                                [81.63740234375004, 6.425146484374991],
                                [80.72412109375003, 5.97905273437496],
                                [80.26738281250007, 6.009765625],
                                [80.09531250000012, 6.153173828125006],
                                [79.859375, 6.829296874999983],
                                [79.71298828125012, 8.18232421875004],
                                [79.74980468750007, 8.294238281250003],
                                [79.78349609375007, 8.018457031250051],
                                [79.92890625000004, 8.899218749999974],
                                [80.09960937499997, 9.209960937500043],
                                [80.08632812500005, 9.577832031250026],
                                [80.42832031250006, 9.480957031250014],
                                [80.04580078125005, 9.649902343749972],
                                [79.98232421875, 9.812695312500011]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Sri Lanka",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [28.646875, -30.1265625],
                            [28.39208984375, -30.147558593750006],
                            [28.128710937500017, -30.52509765625001],
                            [28.05683593750001, -30.63105468750001],
                            [27.753125, -30.6],
                            [27.364062500000017, -30.27919921875001],
                            [27.19355468750001, -29.94130859375001],
                            [27.056933593750017, -29.625585937500006],
                            [27.29453125, -29.519335937500003],
                            [27.73554687500001, -28.940039062500006],
                            [27.959863281250023, -28.873339843750003],
                            [28.084375, -28.77998046875001],
                            [28.23261718750001, -28.701269531250006],
                            [28.471875, -28.615820312500006],
                            [28.583398437500023, -28.594140625],
                            [28.625781250000017, -28.58173828125001],
                            [29.301367187500006, -29.08984375],
                            [29.38671875, -29.31972656250001],
                            [29.34882812500001, -29.441992187500006],
                            [29.293554687500006, -29.56689453125],
                            [29.1421875, -29.700976562500003],
                            [29.098046875000023, -29.919042968750006],
                            [28.646875, -30.1265625]
                        ]
                    ]
                },
                properties: {
                    name: "Lesotho",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [20.957812500000074, 55.27890625000006],
                                [20.89980468750008, 55.286669921875045],
                                [21.11484375, 55.61650390624999],
                                [20.957812500000074, 55.27890625000006]
                            ]
                        ],
                        [
                            [
                                [25.573046875000017, 54.139892578125],
                                [25.497363281250045, 54.17524414062501],
                                [25.52734375000003, 54.21513671874996],
                                [25.505664062500045, 54.26494140624999],
                                [25.46113281250004, 54.29277343749996],
                                [25.179492187500017, 54.214257812499966],
                                [25.111425781250006, 54.15493164062505],
                                [25.04609375000004, 54.13305664062503],
                                [24.869531250000023, 54.14516601562502],
                                [24.82568359374997, 54.118994140625006],
                                [24.78925781250001, 53.99824218750001],
                                [24.768164062499977, 53.97465820312499],
                                [24.31796875, 53.892968749999966],
                                [24.236621093750045, 53.91997070312496],
                                [24.19130859375005, 53.95043945312503],
                                [23.559082031250057, 53.91982421875002],
                                [23.484667968750074, 53.939794921875006],
                                [23.453613281250057, 54.14345703125002],
                                [23.3701171875, 54.20048828124999],
                                [23.282324218750063, 54.240332031250034],
                                [23.17031250000008, 54.28144531249998],
                                [23.0875, 54.299462890624994],
                                [23.042187500000068, 54.30419921875],
                                [23.01552734375005, 54.34833984375001],
                                [22.976757812500068, 54.36635742187505],
                                [22.89394531250008, 54.390527343749994],
                                [22.82373046874997, 54.39580078124999],
                                [22.766210937499977, 54.356787109375034],
                                [22.679882812500068, 54.493017578125006],
                                [22.684472656250023, 54.56293945312504],
                                [22.82470703125, 54.87128906249998],
                                [22.56728515625005, 55.05913085937496],
                                [22.072363281250034, 55.06367187499998],
                                [21.235742187500023, 55.26411132812498],
                                [21.237890625000034, 55.455029296874955],
                                [21.06191406250005, 55.81342773437498],
                                [21.053808593750006, 56.02294921875003],
                                [21.04609375000004, 56.07006835937503],
                                [21.31464843750004, 56.18813476562502],
                                [21.65351562500004, 56.314550781250006],
                                [22.084570312500034, 56.40673828125006],
                                [22.875585937500063, 56.39643554687501],
                                [22.96826171875003, 56.38041992187502],
                                [23.042968750000057, 56.324072265625006],
                                [23.119824218749983, 56.330664062500006],
                                [23.195898437500034, 56.36713867187498],
                                [24.120703125000063, 56.26425781249998],
                                [24.90302734375001, 56.398193359375],
                                [25.069921875, 56.20039062500004],
                                [25.663183593750063, 56.104833984375006],
                                [26.593554687500074, 55.66752929687502],
                                [26.590820312500057, 55.62265625],
                                [26.56660156250001, 55.546484375000034],
                                [26.51923828125004, 55.448144531249994],
                                [26.469531250000045, 55.371923828125006],
                                [26.457617187500006, 55.342480468749955],
                                [26.49531250000004, 55.31801757812502],
                                [26.68125, 55.30644531249999],
                                [26.76015625000008, 55.29335937499999],
                                [26.775683593750045, 55.27309570312502],
                                [26.601171875000034, 55.130175781250045],
                                [26.291796875000074, 55.13959960937501],
                                [26.250781250000045, 55.12451171875006],
                                [26.175195312500023, 55.003271484375034],
                                [26.092968750000068, 54.96230468750005],
                                [25.964453124999977, 54.947167968749966],
                                [25.85927734375005, 54.91928710937498],
                                [25.722460937500074, 54.71787109374998],
                                [25.731640625000068, 54.59038085937502],
                                [25.72480468750001, 54.564257812500045],
                                [25.68515625, 54.53579101562502],
                                [25.62031250000004, 54.46040039062501],
                                [25.56757812500004, 54.377050781250006],
                                [25.54736328125, 54.33183593750002],
                                [25.55751953125005, 54.310693359374994],
                                [25.702539062499994, 54.29296875],
                                [25.765234374999977, 54.179785156250034],
                                [25.573046875000017, 54.139892578125]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Lithuania",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [6.4873046875, 49.798486328124994],
                            [6.344335937500006, 49.452734375],
                            [6.181054687500023, 49.498925781249994],
                            [6.119921875000017, 49.485205078125],
                            [6.074121093750023, 49.454638671874996],
                            [6.011425781250011, 49.445458984374994],
                            [5.95947265625, 49.454638671874996],
                            [5.928906250000011, 49.4775390625],
                            [5.9013671875, 49.48974609375],
                            [5.823437500000011, 49.505078125],
                            [5.789746093750011, 49.53828125],
                            [5.776710379464286, 49.639953962053575],
                            [5.744042968750023, 49.91962890625],
                            [5.7880859375, 49.961230468749996],
                            [5.8173828125, 50.0126953125],
                            [5.866894531250011, 50.0828125],
                            [5.976269531250011, 50.1671875],
                            [6.089062500000011, 50.154589843749996],
                            [6.110058593750011, 50.123779296875],
                            [6.116503906250017, 50.120996093749994],
                            [6.109765625000023, 50.034375],
                            [6.13818359375, 49.97431640625],
                            [6.204882812500017, 49.91513671875],
                            [6.272327008928583, 49.887234933035714],
                            [6.4873046875, 49.798486328124994]
                        ]
                    ]
                },
                properties: {
                    name: "Luxembourg",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [28.14794921875, 56.142919921875],
                            [27.576757812500006, 55.798779296875],
                            [27.052539062500017, 55.83056640625],
                            [26.593554687500017, 55.667529296874996],
                            [25.663183593750006, 56.104833984375],
                            [25.069921875, 56.200390625],
                            [24.90302734375001, 56.398193359375],
                            [24.120703125, 56.2642578125],
                            [23.81269531250001, 56.329248046875],
                            [23.195898437500006, 56.367138671875],
                            [23.11982421875001, 56.3306640625],
                            [23.04296875, 56.324072265625],
                            [22.875585937500006, 56.396435546875],
                            [22.084570312500006, 56.40673828125],
                            [21.730566406250006, 56.325976562499996],
                            [21.65351562500001, 56.31455078125],
                            [21.31464843750001, 56.188134765625],
                            [21.04609375000001, 56.070068359375],
                            [21.0712890625, 56.82373046875],
                            [21.72871093750001, 57.57099609375],
                            [22.554589843750023, 57.724267578125],
                            [23.28730468750001, 57.08974609375],
                            [23.647753906250017, 56.971044921875],
                            [24.382617187500017, 57.250048828124996],
                            [24.322558593750017, 57.87060546875],
                            [24.3625, 57.866162109375],
                            [24.458886718750023, 57.907861328125],
                            [25.11103515625001, 58.063427734375],
                            [25.27265625000001, 58.009375],
                            [25.66015625, 57.920166015625],
                            [26.29804687500001, 57.60107421875],
                            [26.532617187500023, 57.531005859375],
                            [26.96601562500001, 57.609130859375],
                            [27.187109375, 57.538330078125],
                            [27.326562500000023, 57.52548828125],
                            [27.4697265625, 57.5240234375],
                            [27.538671875, 57.42978515625],
                            [27.796875, 57.316943359374996],
                            [27.82861328125, 57.293310546875],
                            [27.838281250000023, 57.247705078125],
                            [27.83027343750001, 57.194482421875],
                            [27.639453125000017, 56.845654296875],
                            [27.806054687500023, 56.86708984375],
                            [27.8486328125, 56.85341796875],
                            [27.89208984375, 56.741064453125],
                            [28.00751953125001, 56.599853515625],
                            [28.103125, 56.545703125],
                            [28.11083984375, 56.510693359375],
                            [28.169238281250017, 56.386865234375],
                            [28.191699218750017, 56.315576171875],
                            [28.202050781250023, 56.260400390625],
                            [28.14794921875, 56.142919921875]
                        ]
                    ]
                },
                properties: {
                    name: "Latvia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [28.2125, 45.450439453125],
                            [28.07470703125, 45.598974609375],
                            [28.23945312500001, 46.6408203125],
                            [28.07177734375, 46.978417968749994],
                            [27.614062500000017, 47.34052734375],
                            [26.980761718750017, 48.155029296875],
                            [26.618945312500017, 48.25986328125],
                            [26.640429687500017, 48.294140625],
                            [26.847070312500023, 48.387158203125],
                            [26.90058593750001, 48.371923828125],
                            [27.228515625, 48.371435546875],
                            [27.549218750000023, 48.477734375],
                            [28.34052734375001, 48.144433593749994],
                            [28.42304687500001, 48.146875],
                            [29.125390625000023, 47.96455078125],
                            [29.134863281250006, 47.489697265625],
                            [29.455664062500006, 47.292626953124994],
                            [29.57197265625001, 46.964013671874994],
                            [29.7197265625, 46.88291015625],
                            [29.877832031250023, 46.82890625],
                            [29.942480468750006, 46.723779296874994],
                            [29.93476562500001, 46.625],
                            [29.92431640625, 46.538867187499996],
                            [30.13105468750001, 46.423095703125],
                            [30.07568359375, 46.377832031249994],
                            [29.878027343750006, 46.360205078125],
                            [29.837890625, 46.350537109375],
                            [29.458789062500017, 46.453759765624994],
                            [29.30488281250001, 46.466601562499996],
                            [29.22382812500001, 46.376953125],
                            [29.20458984375, 46.379345703125],
                            [29.20078125, 46.50498046875],
                            [29.18623046875001, 46.523974609374996],
                            [29.146289062500017, 46.526904296874996],
                            [28.958398437500023, 46.45849609375],
                            [28.92744140625001, 46.424121093749996],
                            [28.930566406250023, 46.362255859375],
                            [28.94375, 46.288427734375],
                            [29.00625, 46.17646484375],
                            [28.971875, 46.12763671875],
                            [28.94775390625, 46.049951171874994],
                            [28.849511718750023, 45.978662109374994],
                            [28.73876953125, 45.937158203124994],
                            [28.729296875000017, 45.852001953125],
                            [28.667578125, 45.793847656249994],
                            [28.562304687500017, 45.735791015625],
                            [28.491601562500023, 45.665771484375],
                            [28.4990234375, 45.517724609374994],
                            [28.310351562500017, 45.498583984374996],
                            [28.26484375000001, 45.48388671875],
                            [28.2125, 45.450439453125]
                        ]
                    ]
                },
                properties: {
                    name: "Moldova",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [49.936425781249994, -16.90292968750002],
                                [49.82402343750002, -17.08652343750002],
                                [50.02304687500006, -16.6953125],
                                [49.936425781249994, -16.90292968750002]
                            ]
                        ],
                        [
                            [
                                [48.3421875, -13.363867187500034],
                                [48.21191406250003, -13.385253906249957],
                                [48.191210937500074, -13.259960937500011],
                                [48.308886718750074, -13.198242187499957],
                                [48.3421875, -13.363867187500034]
                            ]
                        ],
                        [
                            [
                                [49.53828125000004, -12.432128906250014],
                                [49.9375, -13.072265624999957],
                                [50.23535156249997, -14.732031249999963],
                                [50.482714843750074, -15.385644531249994],
                                [50.20898437499997, -15.960449218750028],
                                [50.02041015625005, -15.801757812500028],
                                [49.89257812500003, -15.457714843750011],
                                [49.664355468750074, -15.521582031249977],
                                [49.83906250000004, -16.486523437499997],
                                [49.76718750000006, -16.815136718749983],
                                [49.44931640625006, -17.240625],
                                [49.477832031250074, -17.89853515624999],
                                [49.362890625, -18.336328125],
                                [47.934472656249994, -22.393945312500023],
                                [47.55800781250005, -23.874609374999963],
                                [47.17734375, -24.787207031249977],
                                [46.72851562499997, -25.14990234374997],
                                [46.15869140624997, -25.230371093750023],
                                [45.5080078125001, -25.56318359374997],
                                [45.2057617187501, -25.57050781250004],
                                [44.0353515625001, -24.995703125],
                                [43.670019531250006, -24.30029296875],
                                [43.722265625, -23.529687500000037],
                                [43.2648437500001, -22.38359375],
                                [43.29052734374997, -21.93251953124998],
                                [43.50185546875005, -21.356445312499957],
                                [43.800195312499994, -21.179199218749986],
                                [44.40468750000005, -19.922070312500026],
                                [44.44882812500006, -19.42871093749997],
                                [44.23876953124997, -19.075195312499986],
                                [44.23310546875004, -18.740625],
                                [44.04003906249997, -18.288476562500023],
                                [43.979394531249994, -17.3916015625],
                                [44.42138671874997, -16.70263671874997],
                                [44.476171875, -16.217285156249957],
                                [44.90917968749997, -16.174511718750026],
                                [45.2228515625001, -15.95048828124996],
                                [45.3421875, -16.03671875000002],
                                [45.598242187500006, -15.992578125],
                                [45.70019531249997, -15.813769531249989],
                                [46.157519531250074, -15.738281249999972],
                                [46.3996093750001, -15.924609375000017],
                                [46.331445312499994, -15.713671875000031],
                                [46.47509765625003, -15.513476562500003],
                                [46.942285156249994, -15.219042968749974],
                                [47.09921875, -15.43417968750002],
                                [47.092578125000074, -15.150097656249969],
                                [47.35195312500005, -14.766113281249986],
                                [47.46474609375005, -14.713281249999966],
                                [47.47832031250002, -15.009375],
                                [47.77402343750006, -14.63671875],
                                [47.964160156250074, -14.672558593750026],
                                [47.773339843749994, -14.369921875],
                                [47.995507812499994, -13.960449218749986],
                                [47.88359375000002, -13.807519531250009],
                                [47.94101562500006, -13.662402343750017],
                                [48.03984375000002, -13.596289062499963],
                                [48.25527343750005, -13.719335937499977],
                                [48.796484375, -13.267480468750023],
                                [48.91943359375003, -12.839062499999969],
                                [48.78632812500004, -12.470898437500011],
                                [48.931738281250006, -12.4390625],
                                [49.20703124999997, -12.079589843749957],
                                [49.53828125000004, -12.432128906250014]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Madagascar",
                    childNum: 3
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-91.68369140624998, 18.677343750000034],
                                [-91.81611328124995, 18.675878906250006],
                                [-91.53671874999998, 18.760009765625],
                                [-91.68369140624998, 18.677343750000034]
                            ]
                        ],
                        [
                            [
                                [-86.93964843750001, 20.303320312500006],
                                [-86.97797851562498, 20.489794921875074],
                                [-86.76328124999995, 20.579052734374955],
                                [-86.93964843750001, 20.303320312500006]
                            ]
                        ],
                        [
                            [
                                [-106.50224609374999, 21.61083984375003],
                                [-106.60703124999993, 21.561474609374983],
                                [-106.63935546874995, 21.697851562499977],
                                [-106.50224609374999, 21.61083984375003]
                            ]
                        ],
                        [
                            [
                                [-110.56738281249994, 25.003466796875017],
                                [-110.5388671875, 24.89155273437504],
                                [-110.69926757812499, 25.081445312499994],
                                [-110.56738281249994, 25.003466796875017]
                            ]
                        ],
                        [
                            [
                                [-112.05727539062498, 24.545703125000017],
                                [-112.29677734375002, 24.789648437500063],
                                [-112.15942382812501, 25.28564453125003],
                                [-112.19501953124998, 24.841064453125057],
                                [-112.05727539062498, 24.545703125000017]
                            ]
                        ],
                        [
                            [
                                [-111.10029296874998, 26.020605468750006],
                                [-111.224658203125, 25.83588867187504],
                                [-111.18291015625002, 26.040625],
                                [-111.10029296874998, 26.020605468750006]
                            ]
                        ],
                        [
                            [
                                [-115.17060546875001, 28.06938476562496],
                                [-115.35292968750002, 28.103955078124983],
                                [-115.23354492187495, 28.36835937500004],
                                [-115.17060546875001, 28.06938476562496]
                            ]
                        ],
                        [
                            [
                                [-112.20307617187503, 29.00532226562504],
                                [-112.27841796875, 28.769335937500017],
                                [-112.51406249999997, 28.847607421874955],
                                [-112.42353515625, 29.203662109375017],
                                [-112.28505859374994, 29.240429687499955],
                                [-112.20307617187503, 29.00532226562504]
                            ]
                        ],
                        [
                            [
                                [-113.15561523437502, 29.05224609375],
                                [-113.49633789062497, 29.30761718749997],
                                [-113.58720703125002, 29.57304687499996],
                                [-113.20214843749999, 29.301855468750034],
                                [-113.15561523437502, 29.05224609375]
                            ]
                        ],
                        [
                            [
                                [-97.14624023437494, 25.961474609375045],
                                [-97.66767578124995, 24.389990234374977],
                                [-97.84248046874995, 22.510302734375017],
                                [-97.76328124999998, 22.105859374999966],
                                [-97.31450195312496, 21.56420898437503],
                                [-97.40917968749997, 21.272558593750034],
                                [-97.38344726562497, 21.56669921874999],
                                [-97.75380859375002, 22.02666015624999],
                                [-97.18632812499996, 20.717041015625],
                                [-96.45605468749994, 19.869775390624966],
                                [-96.28955078124994, 19.34375],
                                [-95.778125, 18.805517578125034],
                                [-95.92036132812495, 18.81958007812497],
                                [-95.62680664062503, 18.690576171874994],
                                [-95.71982421874998, 18.768359375000017],
                                [-95.18183593749995, 18.700732421875017],
                                [-94.79814453124996, 18.51459960937501],
                                [-94.45976562499993, 18.166650390624994],
                                [-93.55234375, 18.430468750000017],
                                [-92.88476562499997, 18.468652343749966],
                                [-92.44101562499998, 18.67529296874997],
                                [-91.97377929687502, 18.715869140625074],
                                [-91.91357421875, 18.52851562500001],
                                [-91.53398437499993, 18.45654296875],
                                [-91.27524414062498, 18.62446289062501],
                                [-91.34306640624996, 18.900585937499955],
                                [-91.43666992187502, 18.889794921874966],
                                [-90.73925781249994, 19.352246093749955],
                                [-90.69316406249996, 19.729882812499966],
                                [-90.49169921874997, 19.94677734375003],
                                [-90.353125, 21.009423828124966],
                                [-89.81977539062495, 21.274609374999983],
                                [-88.46669921874997, 21.569384765625017],
                                [-88.0068359375, 21.604052734375045],
                                [-87.25087890625, 21.44697265625004],
                                [-87.18828124999993, 21.546435546875045],
                                [-87.36850585937498, 21.57373046875],
                                [-87.034765625, 21.592236328124955],
                                [-86.824072265625, 21.421679687500017],
                                [-86.77177734374999, 21.150537109375023],
                                [-86.92622070312493, 20.786474609375034],
                                [-87.42138671875, 20.23139648437501],
                                [-87.44174804687498, 19.861523437499983],
                                [-87.68769531249998, 19.63710937499999],
                                [-87.6453125, 19.55390625000001],
                                [-87.42475585937498, 19.583349609375063],
                                [-87.65869140625003, 19.352343750000074],
                                [-87.65576171874997, 19.25786132812499],
                                [-87.50107421874998, 19.287792968749983],
                                [-87.76181640624998, 18.446142578125006],
                                [-87.88198242187497, 18.27387695312501],
                                [-88.05644531249996, 18.524462890625074],
                                [-88.03173828125, 18.838916015625017],
                                [-88.29565429687494, 18.47241210937503],
                                [-88.52299804687499, 18.445898437500063],
                                [-88.80634765624998, 17.965527343749983],
                                [-89.13354492187503, 17.970800781249977],
                                [-89.16147460937503, 17.81484375],
                                [-90.98916015624997, 17.81640624999997],
                                [-90.99296874999993, 17.25244140625],
                                [-91.19550781249998, 17.254101562499983],
                                [-91.40961914062501, 17.255859375],
                                [-90.975830078125, 16.867822265624994],
                                [-90.710693359375, 16.708105468750034],
                                [-90.65996093749996, 16.630908203125045],
                                [-90.634375, 16.565136718749955],
                                [-90.63408203125002, 16.51074218749997],
                                [-90.57578124999995, 16.467822265625017],
                                [-90.47109374999994, 16.439550781250034],
                                [-90.41699218750003, 16.391015625000023],
                                [-90.41699218750003, 16.351318359375],
                                [-90.45014648437493, 16.261376953124994],
                                [-90.45986328124997, 16.16235351562497],
                                [-90.44716796874994, 16.07270507812501],
                                [-90.52197265625, 16.07119140625005],
                                [-90.70322265624998, 16.07104492187503],
                                [-90.97958984374998, 16.07080078124997],
                                [-91.433984375, 16.070458984374994],
                                [-91.736572265625, 16.070166015625006],
                                [-91.95722656250001, 15.703222656250034],
                                [-92.08212890624998, 15.495556640625011],
                                [-92.18715820312497, 15.320898437499963],
                                [-92.07480468749998, 15.074218749999972],
                                [-92.09873046874998, 15.026757812499994],
                                [-92.14423828125001, 15.001953125],
                                [-92.158544921875, 14.963574218749997],
                                [-92.23515625, 14.545410156249986],
                                [-93.91606445312493, 16.053564453125006],
                                [-94.374169921875, 16.284765625000034],
                                [-94.426416015625, 16.22626953125001],
                                [-94.00126953124996, 16.018945312499966],
                                [-94.66152343750002, 16.20190429687503],
                                [-94.58710937499995, 16.315820312499966],
                                [-94.79082031249999, 16.28715820312499],
                                [-94.85869140624996, 16.41972656249999],
                                [-95.02084960937503, 16.277636718750017],
                                [-94.79941406249995, 16.20966796875001],
                                [-95.134375, 16.17695312500001],
                                [-96.21357421874993, 15.693066406250011],
                                [-96.80795898437495, 15.726416015624977],
                                [-97.18466796874998, 15.909277343750006],
                                [-97.75478515624994, 15.966845703125017],
                                [-98.52031249999993, 16.30483398437505],
                                [-98.76220703125, 16.534765624999977],
                                [-99.69067382812499, 16.719628906249994],
                                [-100.847802734375, 17.20048828124999],
                                [-101.91870117187494, 17.959765625000045],
                                [-102.69956054687495, 18.062841796875006],
                                [-103.44160156249995, 18.32539062500001],
                                [-103.91245117187496, 18.828466796875006],
                                [-104.9384765625, 19.309375],
                                [-105.482080078125, 19.97607421875003],
                                [-105.66943359374997, 20.385595703124977],
                                [-105.26015625, 20.579052734374955],
                                [-105.32705078124994, 20.752978515625045],
                                [-105.51083984374999, 20.808740234375023],
                                [-105.23706054687499, 21.119189453125045],
                                [-105.20869140624998, 21.490820312499977],
                                [-105.43144531249997, 21.618261718750006],
                                [-105.64912109375001, 21.988085937500045],
                                [-105.64550781249999, 22.32690429687497],
                                [-105.79179687500003, 22.627490234375017],
                                [-106.93549804687497, 23.88125],
                                [-107.76494140625002, 24.47192382812497],
                                [-107.52724609375001, 24.36005859375001],
                                [-107.51191406249998, 24.489160156250023],
                                [-107.95117187499994, 24.614892578124966],
                                [-108.28076171874994, 25.08154296875],
                                [-108.05146484374995, 25.067041015624994],
                                [-108.69638671874998, 25.382910156250034],
                                [-108.78725585937502, 25.53803710937501],
                                [-109.02880859375003, 25.48046875000003],
                                [-108.886572265625, 25.733447265625045],
                                [-109.19648437499998, 25.59252929687503],
                                [-109.38496093750001, 25.727148437500006],
                                [-109.42563476562495, 26.032568359375063],
                                [-109.19970703125003, 26.30522460937499],
                                [-109.11669921874999, 26.25273437499996],
                                [-109.27626953125, 26.533886718749955],
                                [-109.48286132812498, 26.710351562500023],
                                [-109.75478515624995, 26.702929687500017],
                                [-109.94399414062495, 27.079345703125057],
                                [-110.37729492187495, 27.233300781249966],
                                [-110.59267578124995, 27.544335937500023],
                                [-110.52988281249995, 27.864208984374983],
                                [-111.12138671875002, 27.966992187499983],
                                [-112.16176757812495, 29.018896484375034],
                                [-113.05766601562496, 30.651025390625023],
                                [-113.04672851562495, 31.17924804687499],
                                [-113.62348632812494, 31.34589843750001],
                                [-113.75942382812501, 31.557763671874994],
                                [-113.94775390625001, 31.62934570312501],
                                [-114.14931640624995, 31.507373046875045],
                                [-114.93359374999994, 31.900732421874977],
                                [-114.78989257812498, 31.647119140624994],
                                [-114.88188476562499, 31.156396484375023],
                                [-114.55048828124997, 30.02226562499999],
                                [-113.75546875, 29.367480468750017],
                                [-113.49970703124995, 28.92670898437501],
                                [-113.20556640624997, 28.798779296874955],
                                [-113.09365234375001, 28.511767578125017],
                                [-112.870849609375, 28.42421875000005],
                                [-112.73403320312501, 27.825976562500017],
                                [-112.32919921874996, 27.52343750000003],
                                [-111.86264648437495, 26.678515625000017],
                                [-111.6994140625, 26.58095703125005],
                                [-111.79526367187499, 26.8796875],
                                [-111.56967773437495, 26.707617187500006],
                                [-111.29160156249996, 25.78979492187497],
                                [-110.68676757812501, 24.867675781250057],
                                [-110.65932617187502, 24.34145507812505],
                                [-110.36743164062497, 24.100488281249994],
                                [-110.30375976562497, 24.339453125],
                                [-110.02280273437502, 24.17460937499999],
                                [-109.6765625, 23.66157226562501],
                                [-109.42084960937495, 23.480126953124994],
                                [-109.49570312500002, 23.159814453125023],
                                [-110.00625, 22.894042968750057],
                                [-110.3626953125, 23.60493164062501],
                                [-111.68291015625002, 24.555810546875023],
                                [-111.80249023437494, 24.542529296875074],
                                [-112.07255859374999, 24.84003906250001],
                                [-112.06987304687497, 25.572851562500006],
                                [-112.37724609374997, 26.21391601562496],
                                [-113.02075195312499, 26.58325195312497],
                                [-113.15581054687496, 26.94624023437504],
                                [-113.27226562499997, 26.79096679687501],
                                [-113.59853515625001, 26.721289062500034],
                                [-113.84096679687502, 26.966503906249983],
                                [-114.44526367187503, 27.218164062499994],
                                [-114.53989257812495, 27.431103515624955],
                                [-114.99350585937499, 27.736035156249983],
                                [-115.03647460937495, 27.84184570312496],
                                [-114.57001953124995, 27.78393554687497],
                                [-114.30058593749995, 27.87299804687501],
                                [-114.30224609375003, 27.775732421875006],
                                [-114.0693359375, 27.67568359375005],
                                [-114.15839843750003, 27.919677734375],
                                [-114.26586914062499, 27.934472656249994],
                                [-114.04848632812502, 28.42617187499999],
                                [-114.93730468749999, 29.35161132812496],
                                [-115.67382812500003, 29.756396484375017],
                                [-116.06215820312501, 30.80415039062504],
                                [-116.29628906250001, 30.97050781249999],
                                [-116.33344726562494, 31.202783203124994],
                                [-116.66215820312495, 31.56489257812504],
                                [-116.72207031249998, 31.734570312499955],
                                [-116.62080078124995, 31.85107421874997],
                                [-116.84799804687496, 31.997363281250045],
                                [-117.12827148437495, 32.533349609374994],
                                [-114.72475585937495, 32.71533203125003],
                                [-114.83593749999994, 32.50830078125003],
                                [-111.0419921875, 31.32421875000003],
                                [-108.21445312499993, 31.329443359375034],
                                [-108.21181640625002, 31.779345703125017],
                                [-106.44541015624996, 31.768408203125006],
                                [-106.14804687499995, 31.450927734375],
                                [-104.97880859374996, 30.645947265624955],
                                [-104.50400390624995, 29.677685546874955],
                                [-104.110595703125, 29.386132812499994],
                                [-103.16831054687498, 28.998193359374994],
                                [-102.8919921875, 29.216406250000034],
                                [-102.61494140624994, 29.75234375],
                                [-102.26894531249998, 29.871191406250034],
                                [-101.44038085937503, 29.77685546875],
                                [-100.75458984375001, 29.182519531249994],
                                [-100.29604492187495, 28.32768554687499],
                                [-99.50532226562497, 27.54833984375003],
                                [-99.45654296874999, 27.05668945312496],
                                [-99.10776367187498, 26.446923828124994],
                                [-97.37563476562497, 25.871826171875],
                                [-97.14624023437494, 25.961474609375045]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Mexico",
                    childNum: 10
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [22.344042968750017, 42.31396484375],
                            [22.836816406250023, 41.993603515625],
                            [23.00361328125001, 41.73984375],
                            [22.916015625, 41.336279296875],
                            [22.78388671875001, 41.331982421875],
                            [22.72480468750001, 41.178515625],
                            [22.603613281250006, 41.140185546874996],
                            [22.493554687500023, 41.118505859375],
                            [22.184472656250023, 41.158642578125],
                            [21.99335937500001, 41.13095703125],
                            [21.77949218750001, 40.950439453125],
                            [21.627539062500006, 40.896337890625],
                            [21.57578125, 40.868945312499996],
                            [20.964257812500023, 40.849902343749996],
                            [20.709277343750017, 40.928369140624994],
                            [20.48896484375001, 41.272607421874994],
                            [20.566210937500017, 41.873681640624994],
                            [20.725, 41.87353515625],
                            [20.778125, 42.071044921875],
                            [21.05976562500001, 42.171289062499994],
                            [21.28662109375, 42.100390625],
                            [21.389550781250023, 42.21982421875],
                            [21.560839843750017, 42.24765625],
                            [21.5625, 42.247509765625],
                            [21.81464843750001, 42.303125],
                            [22.344042968750017, 42.31396484375]
                        ]
                    ]
                },
                properties: {
                    name: "Macedonia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [4.227636718750006, 19.142773437499997],
                            [4.234667968750017, 16.996386718750003],
                            [4.121289062500011, 16.357714843750003],
                            [3.842968750000011, 15.701708984375003],
                            [3.5205078125, 15.483105468749997],
                            [3.504296875000023, 15.356347656249994],
                            [3.06015625, 15.427197265624997],
                            [3.001074218750006, 15.340966796874994],
                            [1.300195312500023, 15.272265625],
                            [.947460937500011, 14.982128906249997],
                            [.217480468750011, 14.911474609374991],
                            [-.235888671874989, 15.059423828124991],
                            [-.760449218749983, 15.047753906249994],
                            [-1.049560546875, 14.81953125],
                            [-1.97304687499999, 14.45654296875],
                            [-2.113232421874983, 14.16845703125],
                            [-2.586718749999989, 14.227587890625003],
                            [-2.873925781249994, 13.950732421875003],
                            [-2.950830078124994, 13.6484375],
                            [-3.248632812499977, 13.658349609374994],
                            [-3.3017578125, 13.28076171875],
                            [-3.527636718749989, 13.182714843749991],
                            [-3.947314453124989, 13.402197265624991],
                            [-4.151025390624994, 13.306201171875003],
                            [-4.328710937499977, 13.119042968749994],
                            [-4.227099609374989, 12.793701171875],
                            [-4.480615234374994, 12.672216796874991],
                            [-4.4287109375, 12.337597656249997],
                            [-4.699316406249977, 12.076171875],
                            [-5.288134765624989, 11.827929687499989],
                            [-5.250244140625, 11.375781249999989],
                            [-5.490478515625, 11.042382812499994],
                            [-5.523535156249977, 10.426025390625],
                            [-5.556591796874983, 10.43994140625],
                            [-5.694287109374983, 10.43320312499999],
                            [-5.843847656249977, 10.389550781249994],
                            [-5.896191406249983, 10.354736328125],
                            [-5.907568359374977, 10.307226562499991],
                            [-6.034570312499994, 10.19482421875],
                            [-6.1171875, 10.201904296875],
                            [-6.238378906249977, 10.261621093749994],
                            [-6.241308593749977, 10.279199218749994],
                            [-6.192626953125, 10.369433593749989],
                            [-6.190673828125, 10.400292968749994],
                            [-6.250244140625, 10.717919921874994],
                            [-6.482617187499983, 10.561230468749997],
                            [-6.564599609374994, 10.58642578125],
                            [-6.654150390624977, 10.656445312499997],
                            [-6.676367187499977, 10.6337890625],
                            [-6.686132812499977, 10.578027343749994],
                            [-6.691992187499977, 10.512011718749989],
                            [-6.669335937499994, 10.3921875],
                            [-6.693261718749994, 10.349462890624991],
                            [-6.950341796874994, 10.342333984374989],
                            [-7.01708984375, 10.143261718749997],
                            [-7.385058593749989, 10.340136718749989],
                            [-7.6611328125, 10.427441406249997],
                            [-7.990625, 10.1625],
                            [-8.007275390624983, 10.321875],
                            [-8.266650390624989, 10.485986328124994],
                            [-8.33740234375, 10.990625],
                            [-8.666699218749983, 11.009472656249997],
                            [-8.398535156249977, 11.366552734374991],
                            [-8.822021484375, 11.673242187499994],
                            [-8.818310546874983, 11.922509765624994],
                            [-9.043066406249977, 12.40234375],
                            [-9.395361328124977, 12.464648437499989],
                            [-9.358105468749983, 12.255419921874989],
                            [-9.754003906249977, 12.029931640624994],
                            [-10.274853515624983, 12.212646484375],
                            [-10.709228515625, 11.898730468749989],
                            [-10.933203124999977, 12.205175781249991],
                            [-11.30517578125, 12.015429687499989],
                            [-11.502197265625, 12.198632812499994],
                            [-11.389404296875, 12.404394531249991],
                            [-11.390380859375, 12.941992187499991],
                            [-11.634960937499983, 13.369873046875],
                            [-11.831689453124994, 13.315820312499994],
                            [-12.05419921875, 13.633056640625],
                            [-11.960888671874983, 13.875292968750003],
                            [-12.019189453124994, 14.206494140624997],
                            [-12.228417968749994, 14.45859375],
                            [-12.280615234374977, 14.809033203124997],
                            [-12.104687499999983, 14.745361328125],
                            [-12.08154296875, 14.766357421875],
                            [-12.021582031249977, 14.804931640625],
                            [-11.76015625, 15.425537109375],
                            [-11.675878906249977, 15.512060546874991],
                            [-11.502685546875, 15.636816406249991],
                            [-11.455224609374994, 15.62539062499999],
                            [-10.9482421875, 15.151123046875],
                            [-10.696582031249989, 15.42265625],
                            [-9.94140625, 15.373779296875],
                            [-9.446923828124994, 15.458203125],
                            [-9.447705078124983, 15.574853515624994],
                            [-9.426562499999989, 15.623046875],
                            [-9.3505859375, 15.677392578124994],
                            [-9.33544921875, 15.525683593750003],
                            [-9.293701171875, 15.502832031249994],
                            [-5.5125, 15.496289062499997],
                            [-5.359912109374989, 16.282861328124994],
                            [-5.509619140624977, 16.442041015624994],
                            [-5.628662109375, 16.568652343750003],
                            [-5.65625, 16.8095703125],
                            [-5.684765624999983, 17.058251953124994],
                            [-5.713183593749989, 17.306884765625],
                            [-5.74169921875, 17.555566406249994],
                            [-5.827099609374983, 18.3015625],
                            [-6.026416015624989, 20.0421875],
                            [-6.396582031249977, 23.274804687499994],
                            [-6.482031249999977, 24.020800781250003],
                            [-6.538964843749994, 24.51816406249999],
                            [-6.5673828125, 24.766796875],
                            [-6.594091796874977, 24.99462890625],
                            [-6.287207031249977, 24.994824218749997],
                            [-5.959814453124977, 24.99497070312499],
                            [-5.640771484374994, 24.995166015625003],
                            [-4.822607421874977, 24.99560546875],
                            [-1.947900390624994, 23.124804687500003],
                            [1.1455078125, 21.102246093749997],
                            [1.165722656250011, 20.817431640625003],
                            [1.610644531250017, 20.555566406249994],
                            [1.685449218750023, 20.378369140624997],
                            [3.130273437500023, 19.85019531249999],
                            [3.255859375, 19.4109375],
                            [3.119726562500006, 19.103173828124994],
                            [3.3564453125, 18.986621093750003],
                            [4.227636718750006, 19.142773437499997]
                        ]
                    ]
                },
                properties: {
                    name: "Mali",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [14.566210937499989, 35.85273437499998],
                            [14.436425781250023, 35.82167968750005],
                            [14.351269531250011, 35.978417968749994],
                            [14.566210937499989, 35.85273437499998]
                        ]
                    ]
                },
                properties: {
                    name: "Malta",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [98.18261718749997, 9.933447265625006],
                                [98.11806640625, 9.877880859375054],
                                [98.2916992187501, 10.051318359375031],
                                [98.18261718749997, 9.933447265625006]
                            ]
                        ],
                        [
                            [
                                [98.20976562500002, 10.952734375],
                                [98.27148437499997, 10.73989257812498],
                                [98.08046875000005, 10.886621093750037],
                                [98.20976562500002, 10.952734375]
                            ]
                        ],
                        [
                            [
                                [98.55380859375012, 11.744873046875],
                                [98.52841796875012, 11.538671875],
                                [98.43476562500004, 11.567089843750026],
                                [98.37646484374997, 11.79150390625],
                                [98.55380859375012, 11.744873046875]
                            ]
                        ],
                        [
                            [
                                [98.516015625, 11.905029296875028],
                                [98.46621093750005, 12.08427734374996],
                                [98.60957031250004, 11.956640624999977],
                                [98.516015625, 11.905029296875028]
                            ]
                        ],
                        [
                            [
                                [98.06611328125004, 12.389794921875023],
                                [98.00234375000005, 12.279003906250011],
                                [97.93867187500004, 12.34609375],
                                [98.06611328125004, 12.389794921875023]
                            ]
                        ],
                        [
                            [
                                [98.41396484375005, 12.597949218749974],
                                [98.45947265625003, 12.473730468749991],
                                [98.3138671875, 12.335986328124989],
                                [98.31210937500006, 12.678173828124983],
                                [98.41396484375005, 12.597949218749974]
                            ]
                        ],
                        [
                            [
                                [98.31542968749997, 13.099072265625026],
                                [98.30917968750012, 12.934716796875023],
                                [98.26533203125004, 13.202246093749991],
                                [98.31542968749997, 13.099072265625026]
                            ]
                        ],
                        [
                            [
                                [94.80488281250004, 15.8193359375],
                                [94.73349609375006, 15.823046875000045],
                                [94.82802734375005, 15.933007812499966],
                                [94.80488281250004, 15.8193359375]
                            ]
                        ],
                        [
                            [
                                [94.47675781250004, 15.945947265625023],
                                [94.41191406250007, 15.848388671875057],
                                [94.3878906250001, 15.994140624999972],
                                [94.60126953125004, 16.205517578124983],
                                [94.47675781250004, 15.945947265625023]
                            ]
                        ],
                        [
                            [
                                [97.575, 16.253222656250017],
                                [97.48037109375, 16.305712890625045],
                                [97.54199218749997, 16.505078124999983],
                                [97.575, 16.253222656250017]
                            ]
                        ],
                        [
                            [
                                [93.6908203125, 18.68427734375004],
                                [93.4875, 18.867529296875063],
                                [93.74472656250006, 18.865527343750017],
                                [93.6908203125, 18.68427734375004]
                            ]
                        ],
                        [
                            [
                                [93.71484374999997, 19.558251953124994],
                                [93.94570312500005, 19.428613281249966],
                                [93.90195312500012, 19.33203125],
                                [93.75585937500003, 19.325683593750057],
                                [93.64404296874997, 19.49506835937501],
                                [93.71484374999997, 19.558251953124994]
                            ]
                        ],
                        [
                            [
                                [93.49179687500012, 19.892578125],
                                [93.51328125000006, 19.754785156249994],
                                [93.41289062500002, 19.950341796875023],
                                [93.49179687500012, 19.892578125]
                            ]
                        ],
                        [
                            [
                                [93.01015625000005, 19.923925781249977],
                                [93.02324218750007, 19.82885742187497],
                                [92.91464843750006, 20.086474609375045],
                                [93.01015625000005, 19.923925781249977]
                            ]
                        ],
                        [
                            [
                                [101.1388671875001, 21.567480468749977],
                                [101.08037109375007, 21.468652343749994],
                                [100.703125, 21.251367187499966],
                                [100.613671875, 21.059326171875],
                                [100.56660156250004, 21.038183593750063],
                                [100.53613281250003, 20.992382812499955],
                                [100.52226562500007, 20.92192382812499],
                                [100.54931640624997, 20.884228515624955],
                                [100.61767578125003, 20.879248046875006],
                                [100.62294921875005, 20.859570312499983],
                                [100.5651367187501, 20.825097656249994],
                                [100.4074218750001, 20.823242187500057],
                                [100.32607421875005, 20.795703125000045],
                                [100.24931640625002, 20.730273437500045],
                                [100.18388671875002, 20.589111328125057],
                                [100.12968750000002, 20.372216796874994],
                                [100.12246093750005, 20.316650390625057],
                                [100.0036132812501, 20.37958984375001],
                                [99.9542968750001, 20.415429687500023],
                                [99.8903320312501, 20.424414062499977],
                                [99.72011718750005, 20.32543945312497],
                                [99.45888671875005, 20.363037109375],
                                [99.48593750000006, 20.14985351562501],
                                [99.07421875000003, 20.09936523437503],
                                [98.9166992187501, 19.77290039062504],
                                [98.37128906250004, 19.68916015625004],
                                [98.01503906250005, 19.74951171874997],
                                [97.816796875, 19.459960937500057],
                                [97.74589843750002, 18.58818359374999],
                                [97.37392578125, 18.51796875],
                                [97.63222656250005, 18.290332031250074],
                                [97.7064453125, 17.79711914062503],
                                [98.4388671875, 16.975683593750034],
                                [98.66074218750006, 16.330419921875006],
                                [98.83544921875003, 16.417578125],
                                [98.88828125000006, 16.351904296875034],
                                [98.81796875000012, 16.180810546874994],
                                [98.59238281250006, 16.05068359375005],
                                [98.55693359375007, 15.367675781249986],
                                [98.19101562500012, 15.204101562499972],
                                [98.20214843749997, 14.97592773437502],
                                [98.57001953125004, 14.359912109375031],
                                [99.13681640625006, 13.716699218749994],
                                [99.12392578125, 13.030761718750043],
                                [99.40507812500002, 12.547900390625003],
                                [99.61474609374997, 11.781201171875026],
                                [99.1901367187501, 11.105273437499989],
                                [98.7572265625, 10.660937499999974],
                                [98.70253906250005, 10.19038085937504],
                                [98.56259765625006, 10.034960937499989],
                                [98.46494140625006, 10.675830078124989],
                                [98.67558593750007, 10.986914062500034],
                                [98.74140625000004, 11.591699218749966],
                                [98.87597656250003, 11.719726562500028],
                                [98.63632812500006, 11.738378906250006],
                                [98.69628906250003, 12.225244140624994],
                                [98.6002929687501, 12.2453125],
                                [98.67871093749997, 12.348486328124963],
                                [98.57597656250002, 13.161914062500031],
                                [98.20039062500004, 13.980175781250026],
                                [98.14951171875012, 13.647607421875037],
                                [98.11064453125007, 13.712890625000014],
                                [98.10019531250006, 14.161523437500023],
                                [97.90976562500012, 14.652685546874991],
                                [98.01875, 14.652587890625057],
                                [97.81230468750007, 14.858935546874989],
                                [97.7103515625, 15.875537109375074],
                                [97.58427734375007, 16.019580078125017],
                                [97.72597656250005, 16.56855468750004],
                                [97.37587890625005, 16.52294921874997],
                                [97.20019531249997, 17.095410156249983],
                                [96.85146484375005, 17.401025390624994],
                                [96.90859375000005, 17.03095703125001],
                                [96.76542968750002, 16.710351562499966],
                                [96.43115234374997, 16.504931640625045],
                                [96.18906250000012, 16.768310546875057],
                                [96.32431640625006, 16.444433593750063],
                                [95.76328125000006, 16.169042968750006],
                                [95.38955078125005, 15.722753906250034],
                                [95.30146484375004, 15.756152343749989],
                                [95.34677734375012, 16.09760742187501],
                                [95.17695312500004, 15.825683593750028],
                                [94.9425781250001, 15.818261718750023],
                                [94.89316406250006, 16.182812499999955],
                                [94.66152343750005, 15.904394531250006],
                                [94.70332031250004, 16.511914062499955],
                                [94.4416015625001, 16.094384765624966],
                                [94.22382812500004, 16.016455078125006],
                                [94.58896484375006, 17.5693359375],
                                [94.17070312500007, 18.73242187499997],
                                [94.24570312500006, 18.741162109374983],
                                [94.07001953125004, 18.893408203125006],
                                [94.04492187500003, 19.287402343750074],
                                [93.92919921874997, 18.89965820312503],
                                [93.70546875000005, 19.026904296875017],
                                [93.49306640625005, 19.369482421875006],
                                [93.82490234375004, 19.238476562499955],
                                [93.99814453125006, 19.440869140624983],
                                [93.61171875000005, 19.776074218749983],
                                [93.70703125000003, 19.912158203125074],
                                [93.25, 20.070117187500017],
                                [93.12949218750012, 19.858007812500063],
                                [93.00195312499997, 20.074853515624994],
                                [93.06679687500005, 20.377636718749955],
                                [92.82832031250004, 20.177587890625063],
                                [92.89111328124997, 20.34033203125],
                                [92.73564453125007, 20.56269531250001],
                                [92.72285156250004, 20.29560546875004],
                                [92.32412109375, 20.791845703125063],
                                [92.17958984375005, 21.293115234375023],
                                [92.33056640624997, 21.439794921874977],
                                [92.63164062500002, 21.306201171875045],
                                [92.5934570312501, 21.46733398437499],
                                [92.58281250000002, 21.940332031249994],
                                [92.57490234375004, 21.978076171875045],
                                [92.68896484374997, 22.130957031250006],
                                [92.72099609375002, 22.132421875000063],
                                [92.77138671875, 22.104785156250017],
                                [92.9645507812501, 22.003759765625034],
                                [93.07060546875002, 22.20942382812501],
                                [93.16201171875, 22.360205078125006],
                                [93.07871093750006, 22.71821289062501],
                                [93.20390625000002, 23.03701171875005],
                                [93.34941406250007, 23.08496093750003],
                                [93.36601562500007, 23.132519531249955],
                                [93.32626953125006, 24.064208984375057],
                                [93.45214843750003, 23.987402343750034],
                                [93.68339843750007, 24.00654296875004],
                                [94.07480468750006, 23.8720703125],
                                [94.29306640625012, 24.321875],
                                [94.37724609375002, 24.473730468750006],
                                [94.49316406250003, 24.637646484374983],
                                [94.70371093750012, 25.097851562499955],
                                [94.55302734375007, 25.215722656249994],
                                [94.66777343750007, 25.458886718749966],
                                [94.99199218750002, 25.77045898437504],
                                [95.01523437500006, 25.912939453125006],
                                [95.0929687500001, 25.98730468749997],
                                [95.13242187500006, 26.041259765625057],
                                [95.12929687500005, 26.070410156250034],
                                [95.10839843749997, 26.091406250000034],
                                [95.06894531250006, 26.19111328125001],
                                [95.0597656250001, 26.473974609375006],
                                [95.20146484375007, 26.641406250000017],
                                [96.19082031250005, 27.26127929687499],
                                [96.79785156249997, 27.29619140624999],
                                [96.95341796875002, 27.13330078125003],
                                [97.10205078125003, 27.11542968750004],
                                [97.10371093750004, 27.16333007812503],
                                [96.90195312500012, 27.439599609374994],
                                [96.88359375000002, 27.514843749999955],
                                [96.96279296875, 27.698291015625017],
                                [97.04970703125005, 27.760009765625],
                                [97.34355468750002, 27.982324218749994],
                                [97.30273437499997, 28.08598632812496],
                                [97.3224609375001, 28.21796875000004],
                                [97.35644531249997, 28.254492187500006],
                                [97.43144531250002, 28.353906250000023],
                                [97.53789062500002, 28.510205078124983],
                                [97.59921875000006, 28.51704101562504],
                                [98.06162109375012, 28.185888671874977],
                                [98.29882812499997, 27.550097656250045],
                                [98.4525390625, 27.6572265625],
                                [98.65117187500007, 27.572460937499983],
                                [98.7384765625001, 26.785742187500006],
                                [98.68554687499997, 26.189355468750023],
                                [98.56406250000006, 26.072412109374994],
                                [98.65625, 25.86357421874999],
                                [98.33378906250007, 25.586767578125006],
                                [98.14287109375007, 25.571093750000017],
                                [98.01074218749997, 25.292529296875017],
                                [97.8195312500001, 25.251855468749994],
                                [97.73789062500006, 24.869873046875057],
                                [97.58330078125002, 24.77480468750005],
                                [97.53144531250004, 24.49169921875003],
                                [97.7082031250001, 24.228759765625],
                                [97.56455078125012, 23.911035156250023],
                                [98.2125, 24.110644531250017],
                                [98.83505859375006, 24.121191406250034],
                                [98.67675781250003, 23.905078125000045],
                                [98.8322265625001, 23.624365234374977],
                                [98.86376953125003, 23.191259765625034],
                                [99.41806640625006, 23.069238281250023],
                                [99.50712890625002, 22.959130859374994],
                                [99.19296875000006, 22.12597656249997],
                                [99.9176757812501, 22.02802734375001],
                                [99.94072265625007, 21.75874023437504],
                                [100.14765625000004, 21.480517578125017],
                                [100.60458984375012, 21.471777343750006],
                                [101.07978515625004, 21.75585937499997],
                                [101.1388671875001, 21.567480468749977]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Myanmar",
                    childNum: 15
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [19.21875, 43.449951171875],
                            [19.670996093750006, 43.163964843749994],
                            [20.344335937500006, 42.827929687499996],
                            [20.054296875, 42.760058593749996],
                            [20.06396484375, 42.54726562499999],
                            [19.78828125000001, 42.476171875],
                            [19.65449218750001, 42.628564453124994],
                            [19.280664062500023, 42.17255859375],
                            [19.342382812500006, 41.869091796875],
                            [18.436328125000017, 42.559716796874994],
                            [18.5458984375, 42.6416015625],
                            [18.46601562500001, 42.777246093749994],
                            [18.44384765625, 42.96845703125],
                            [18.46015625000001, 42.997900390625],
                            [18.48847656250001, 43.012158203125],
                            [18.623632812500006, 43.027685546875],
                            [18.621875, 43.124609375],
                            [18.674218750000023, 43.230810546875],
                            [18.74921875000001, 43.283544921875],
                            [18.85107421875, 43.346337890624994],
                            [18.934667968750006, 43.339453125],
                            [18.97871093750001, 43.285400390625],
                            [19.026660156250017, 43.292431640625],
                            [19.03671875, 43.357324218749994],
                            [18.940234375000017, 43.496728515624994],
                            [18.95068359375, 43.526660156249996],
                            [18.97421875, 43.542333984375],
                            [19.0283203125, 43.532519531249996],
                            [19.080078125, 43.517724609374994],
                            [19.11279296875, 43.52773437499999],
                            [19.164355468750017, 43.535449218749996],
                            [19.1943359375, 43.53330078125],
                            [19.21875, 43.449951171875]
                        ]
                    ]
                },
                properties: {
                    name: "Montenegro",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [111.878125, 43.68017578125],
                            [111.00722656250002, 43.34140625],
                            [110.400390625, 42.773681640625],
                            [109.44316406249999, 42.455957031249994],
                            [109.33984375, 42.438378906249994],
                            [108.68730468749999, 42.41611328125],
                            [108.17119140624999, 42.447314453124996],
                            [106.77001953125, 42.288720703124994],
                            [105.86757812500002, 41.993994140625],
                            [105.31435546875002, 41.770898437499994],
                            [105.19707031249999, 41.738037109375],
                            [105.11542968750001, 41.66328125],
                            [105.05058593749999, 41.61591796875],
                            [104.98203125000003, 41.595507812499996],
                            [104.49824218750001, 41.65869140625],
                            [104.49824218750001, 41.877001953124996],
                            [104.30517578125, 41.846142578125],
                            [103.99726562500001, 41.79697265625],
                            [103.71113281250001, 41.751318359375],
                            [103.07285156250003, 42.00595703125],
                            [102.5751953125, 42.092089843749996],
                            [102.15664062500002, 42.158105468749994],
                            [101.97294921874999, 42.215869140624996],
                            [101.65996093749999, 42.500048828124996],
                            [101.5791015625, 42.52353515625],
                            [101.49531250000001, 42.53876953125],
                            [101.09199218750001, 42.551318359374996],
                            [100.51904296875, 42.616796875],
                            [100.08632812500002, 42.670751953125],
                            [99.98378906250002, 42.67734375],
                            [99.46787109375003, 42.568212890625],
                            [97.20566406250003, 42.789794921875],
                            [96.38544921875001, 42.720361328124994],
                            [95.85957031250001, 43.2759765625],
                            [95.52558593750001, 43.953955078125],
                            [95.32558593750002, 44.039355468749996],
                            [95.35029296875001, 44.278076171875],
                            [94.71201171875003, 44.350830078125],
                            [93.51621093750003, 44.944482421874994],
                            [92.78789062499999, 45.0357421875],
                            [92.57890624999999, 45.010986328125],
                            [92.423828125, 45.008935546874994],
                            [92.17265624999999, 45.03525390625],
                            [92.02978515625, 45.068505859374994],
                            [91.584375, 45.076513671875],
                            [91.05, 45.217431640624994],
                            [90.87724609374999, 45.19609375],
                            [90.66181640625001, 45.525244140625],
                            [91.00175781249999, 46.035791015624994],
                            [90.99677734375001, 46.10498046875],
                            [90.94755859374999, 46.177294921874996],
                            [90.91152343750002, 46.270654296874994],
                            [90.98574218750002, 46.7490234375],
                            [90.91054687500002, 46.883251953125],
                            [90.86992187499999, 46.954492187499994],
                            [90.79902343750001, 46.98515625],
                            [90.71552734375001, 47.003857421875],
                            [90.49619140625003, 47.28515625],
                            [90.42519531250002, 47.5041015625],
                            [90.34746093749999, 47.596972656249996],
                            [90.33066406250003, 47.655175781249994],
                            [90.31328124999999, 47.67617187499999],
                            [90.19101562500003, 47.702099609375],
                            [90.10322265625001, 47.745410156249996],
                            [90.02792968750003, 47.877685546875],
                            [89.95869140625001, 47.886328125],
                            [89.91044921874999, 47.8443359375],
                            [89.83134765624999, 47.823291015624996],
                            [89.778125, 47.827001953125],
                            [89.56093750000002, 48.003955078124996],
                            [89.47919921875001, 48.029052734375],
                            [89.04765624999999, 48.0025390625],
                            [88.97109375000002, 48.049951171874994],
                            [88.91777343749999, 48.089013671874994],
                            [88.83828125000002, 48.101708984374994],
                            [88.68183593750001, 48.170556640624994],
                            [88.57597656249999, 48.220166015625],
                            [88.56679687500002, 48.317431640624996],
                            [88.51708984375, 48.38447265625],
                            [88.41396484375002, 48.40341796875],
                            [88.30996093750002, 48.472070312499994],
                            [87.97968750000001, 48.555126953125],
                            [88.06005859375, 48.707177734374994],
                            [87.83183593749999, 48.791650390624994],
                            [87.7431640625, 48.881640625],
                            [87.87216796875003, 49.000146484374994],
                            [87.81630859375002, 49.0802734375],
                            [87.8251953125, 49.11630859375],
                            [87.81425781249999, 49.1623046875],
                            [87.93476562500001, 49.16455078125],
                            [87.98808593749999, 49.186914062499994],
                            [88.02851562500001, 49.219775390624996],
                            [88.11572265625, 49.256298828125],
                            [88.19257812500001, 49.451708984374996],
                            [88.63320312500002, 49.486132812499996],
                            [88.83164062500003, 49.4484375],
                            [88.86386718750003, 49.527636718749996],
                            [88.90019531249999, 49.539697265624994],
                            [88.94541015625003, 49.507666015625],
                            [88.97060546875002, 49.483740234375],
                            [89.00839843750003, 49.472802734374994],
                            [89.10947265625003, 49.501367187499994],
                            [89.17998046874999, 49.5322265625],
                            [89.20292968749999, 49.595703125],
                            [89.24394531249999, 49.62705078125],
                            [89.39560546875003, 49.6115234375],
                            [89.475, 49.66054687499999],
                            [89.57919921875003, 49.69970703125],
                            [89.65410156249999, 49.71748046875],
                            [89.64384765624999, 49.90302734375],
                            [90.0537109375, 50.09375],
                            [90.65507812499999, 50.22236328125],
                            [90.71435546875, 50.259423828124994],
                            [90.7607421875, 50.305957031249996],
                            [91.02158203125003, 50.415478515625],
                            [91.23378906250002, 50.452392578125],
                            [91.30058593749999, 50.46337890625],
                            [91.3408203125, 50.470068359375],
                            [91.4150390625, 50.468017578125],
                            [91.44648437500001, 50.52216796875],
                            [91.80429687500003, 50.693603515625],
                            [92.10400390625, 50.6919921875],
                            [92.1923828125, 50.700585937499994],
                            [92.35478515624999, 50.864160156249994],
                            [92.42636718750003, 50.803076171875],
                            [92.62666015625001, 50.68828125],
                            [92.68134765625001, 50.683203125],
                            [92.73867187500002, 50.7109375],
                            [92.779296875, 50.778662109375],
                            [92.8564453125, 50.789111328124996],
                            [92.94130859375002, 50.778222656249994],
                            [93.103125, 50.60390625],
                            [94.25107421875003, 50.556396484375],
                            [94.35468750000001, 50.221826171874994],
                            [94.61474609375, 50.023730468749996],
                            [94.67548828125001, 50.028076171875],
                            [94.71806640624999, 50.043261718749996],
                            [94.93027343750003, 50.04375],
                            [95.11142578125003, 49.935449218749994],
                            [95.52265625000001, 49.91123046875],
                            [96.06552734375003, 49.99873046875],
                            [96.31503906250003, 49.901123046875],
                            [96.98574218750002, 49.8828125],
                            [97.20859375000003, 49.730810546875],
                            [97.35976562500002, 49.741455078125],
                            [97.58935546875, 49.911474609375],
                            [98.00390625, 50.0142578125],
                            [98.25029296874999, 50.30244140625],
                            [98.27949218750001, 50.533251953124996],
                            [98.14501953125, 50.5685546875],
                            [98.07890624999999, 50.603808593749996],
                            [98.02978515625, 50.64462890625],
                            [97.82529296875003, 50.985253906249994],
                            [98.103125, 51.483544921874994],
                            [98.64052734375002, 51.801171875],
                            [98.89316406250003, 52.11728515625],
                            [99.92167968749999, 51.755517578125],
                            [100.03457031250002, 51.737109375],
                            [100.23037109375002, 51.729833984375],
                            [100.46894531250001, 51.72607421875],
                            [100.53623046875003, 51.7134765625],
                            [101.38125, 51.45263671875],
                            [101.57089843750003, 51.4671875],
                            [101.82119140625002, 51.421044921874994],
                            [102.11152343750001, 51.353466796875],
                            [102.15566406250002, 51.313769531249996],
                            [102.16005859375002, 51.26083984375],
                            [102.14238281249999, 51.216064453125],
                            [102.15195312500003, 51.10751953125],
                            [102.19453125000001, 51.050683593749994],
                            [102.21503906250001, 50.829443359375],
                            [102.31660156250001, 50.71845703125],
                            [102.28837890624999, 50.585107421874994],
                            [103.30439453125001, 50.20029296875],
                            [103.63291015625003, 50.138574218749994],
                            [103.72324218750003, 50.153857421874996],
                            [103.80263671875002, 50.176074218749996],
                            [104.07871093750003, 50.154248046875],
                            [105.38359374999999, 50.47373046875],
                            [106.21787109375003, 50.304589843749994],
                            [106.36845703124999, 50.317578125],
                            [106.57441406250001, 50.32880859375],
                            [106.71113281250001, 50.31259765625],
                            [106.94130859375002, 50.196679687499994],
                            [107.04023437500001, 50.086474609374996],
                            [107.14306640625, 50.033007812499996],
                            [107.23330078125002, 49.989404296874994],
                            [107.34707031250002, 49.986669921875],
                            [107.63095703125003, 49.98310546875],
                            [107.91660156250003, 49.947802734374996],
                            [107.96542968750003, 49.653515625],
                            [108.40693359375001, 49.396386718749994],
                            [108.5224609375, 49.34150390625],
                            [108.61367187500002, 49.322802734374996],
                            [109.23671875000002, 49.334912109375],
                            [109.45371093750003, 49.296337890625],
                            [109.52871093750002, 49.269873046875],
                            [110.19990234375001, 49.17041015625],
                            [110.42783203125003, 49.219970703125],
                            [110.70976562499999, 49.14296875],
                            [110.82792968749999, 49.166162109374994],
                            [111.20419921875003, 49.304296875],
                            [111.33662109375001, 49.35585937499999],
                            [111.42929687500003, 49.342626953125],
                            [112.07968750000003, 49.42421875],
                            [112.49492187499999, 49.53232421875],
                            [112.69736328125003, 49.507275390625],
                            [112.80644531249999, 49.523583984374994],
                            [112.91484374999999, 49.569238281249994],
                            [113.05556640625002, 49.616259765624996],
                            [113.09208984374999, 49.692529296874994],
                            [113.16416015625003, 49.797167968749996],
                            [113.31904296875001, 49.874316406249996],
                            [113.44550781250001, 49.9416015625],
                            [113.57421875, 50.00703125],
                            [114.29707031250001, 50.2744140625],
                            [114.7431640625, 50.233691406249996],
                            [115.00332031250002, 50.138574218749994],
                            [115.27451171875003, 49.948876953124994],
                            [115.36503906249999, 49.911767578124994],
                            [115.42919921875, 49.896484375],
                            [115.58798828125003, 49.886035156249996],
                            [115.7177734375, 49.880615234375],
                            [115.79521484374999, 49.905908203124994],
                            [115.92597656250001, 49.9521484375],
                            [116.13457031249999, 50.010791015624996],
                            [116.216796875, 50.00927734375],
                            [116.35117187500003, 49.978076171874996],
                            [116.55117187500002, 49.9203125],
                            [116.68330078125001, 49.823779296874996],
                            [115.82050781250001, 48.57724609375],
                            [115.79169921875001, 48.455712890624994],
                            [115.79658203125001, 48.346337890624994],
                            [115.78554687500002, 48.2482421875],
                            [115.63945312499999, 48.18623046875],
                            [115.52509765625001, 48.130859375],
                            [115.61640625000001, 47.874804687499996],
                            [115.89824218749999, 47.686914062499994],
                            [115.99384765625001, 47.71132812499999],
                            [116.07480468750003, 47.78955078125],
                            [116.23115234375001, 47.858203125],
                            [116.31718749999999, 47.85986328125],
                            [116.37822265624999, 47.844042968749996],
                            [116.51347656249999, 47.83955078125],
                            [116.65195312500003, 47.864501953125],
                            [116.76054687499999, 47.869775390624994],
                            [116.90117187499999, 47.853076171874996],
                            [116.95166015625, 47.836572265624994],
                            [117.06972656250002, 47.806396484375],
                            [117.28593749999999, 47.666357421875],
                            [117.35078125000001, 47.652197265625],
                            [117.76835937499999, 47.987890625],
                            [118.49843750000002, 47.983984375],
                            [118.56777343750002, 47.943261718749994],
                            [118.69052734375003, 47.822265625],
                            [118.75996093750001, 47.757617187499996],
                            [118.88027343750002, 47.72509765625],
                            [119.017578125, 47.685351562499996],
                            [119.08193359375002, 47.654150390625],
                            [119.71113281250001, 47.15],
                            [119.89785156250002, 46.8578125],
                            [119.8671875, 46.672167968749996],
                            [119.74746093750002, 46.627197265625],
                            [119.70664062500003, 46.606005859374996],
                            [119.62021484375003, 46.603955078125],
                            [119.47402343750002, 46.62666015625],
                            [119.33183593749999, 46.613818359374996],
                            [119.162109375, 46.638671875],
                            [118.95712890625003, 46.73486328125],
                            [118.84394531250001, 46.760205078125],
                            [118.79033203124999, 46.7470703125],
                            [118.72294921874999, 46.69189453125],
                            [118.64873046874999, 46.70166015625],
                            [118.58046875000002, 46.69189453125],
                            [118.40439453125003, 46.703173828124996],
                            [118.30869140625003, 46.717041015625],
                            [118.15683593750003, 46.678564453125],
                            [118.0712890625, 46.6666015625],
                            [117.7412109375, 46.5181640625],
                            [117.546875, 46.58828125],
                            [117.43808593750003, 46.586230468749996],
                            [117.40556640624999, 46.5708984375],
                            [117.39218750000003, 46.53759765625],
                            [117.35634765625002, 46.436669921874994],
                            [117.35693359375, 46.39130859375],
                            [117.33339843750002, 46.36201171875],
                            [116.85908203125001, 46.387939453125],
                            [116.56259765625003, 46.289794921875],
                            [116.21298828125003, 45.8869140625],
                            [116.22910156250003, 45.845751953124996],
                            [116.240625, 45.79599609375],
                            [116.19765625000002, 45.73935546875],
                            [115.68105468750002, 45.458251953125],
                            [115.16259765625, 45.390234375],
                            [114.91923828124999, 45.378271484375],
                            [114.73876953125, 45.41962890625],
                            [114.56015625000003, 45.389990234375],
                            [114.41914062500001, 45.202587890625],
                            [114.16738281250002, 45.049853515624996],
                            [114.08027343750001, 44.971142578125],
                            [113.87705078125003, 44.89619140625],
                            [113.65263671874999, 44.763476562499996],
                            [113.58701171875003, 44.745703125],
                            [113.04941406250003, 44.810351562499996],
                            [112.70673828125001, 44.883447265624994],
                            [112.59677734375003, 44.91767578125],
                            [112.49931640624999, 45.0109375],
                            [112.41132812500001, 45.058203125],
                            [112.11289062500003, 45.062939453125],
                            [112.03261718750002, 45.081640625],
                            [111.89804687500003, 45.0640625],
                            [111.40224609375002, 44.36728515625],
                            [111.93173828125003, 43.81494140625],
                            [111.878125, 43.68017578125]
                        ]
                    ]
                },
                properties: {
                    name: "Mongolia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [145.75195312499997, 15.133154296874991],
                            [145.71318359375007, 15.215283203125026],
                            [145.821875, 15.265380859375014],
                            [145.75195312499997, 15.133154296874991]
                        ]
                    ]
                },
                properties: {
                    name: "N. Mariana Is.",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [32.112890625, -26.839453125],
                            [32.10595703125, -26.52001953125],
                            [32.04140625000002, -26.28125],
                            [32.060546875, -26.018359375],
                            [31.9482421875, -25.957617187500006],
                            [31.98583984375, -24.46064453125001],
                            [31.799609375000017, -23.8921875],
                            [31.54560546875001, -23.48232421875001],
                            [31.287890625000017, -22.40205078125001],
                            [31.429492187500017, -22.298828125],
                            [32.429785156250006, -21.29707031250001],
                            [32.353613281250006, -21.136523437500003],
                            [32.49238281250001, -20.659765625],
                            [32.992773437500006, -19.98486328125],
                            [32.77763671875002, -19.388769531250006],
                            [32.84980468750001, -19.10439453125001],
                            [32.69970703125, -18.94091796875],
                            [32.99306640625002, -18.35957031250001],
                            [32.87626953125002, -16.88359375],
                            [32.94804687500002, -16.71230468750001],
                            [31.939843750000023, -16.428808593750006],
                            [31.236230468750023, -16.02363281250001],
                            [30.437792968750017, -15.995312500000011],
                            [30.39609375, -15.64306640625],
                            [30.231835937500023, -14.990332031250006],
                            [33.201757812500006, -14.013378906250011],
                            [33.63642578125001, -14.568164062500003],
                            [34.375, -14.4248046875],
                            [34.50527343750002, -14.59814453125],
                            [34.54082031250002, -15.297265625],
                            [34.24609375, -15.829394531250003],
                            [34.528125, -16.319140625],
                            [34.93339843750002, -16.760351562500006],
                            [35.11210937500002, -16.898535156250006],
                            [35.06464843750001, -17.07861328125],
                            [35.124609375, -17.127246093750003],
                            [35.20136718750001, -17.13105468750001],
                            [35.272558593750006, -17.118457031250003],
                            [35.29042968750002, -17.096972656250003],
                            [35.28115234375002, -16.80781250000001],
                            [35.22978515625002, -16.639257812500006],
                            [35.178320312500006, -16.573339843750006],
                            [35.16718750000001, -16.56025390625001],
                            [35.242773437500006, -16.375390625],
                            [35.358496093750006, -16.160546875],
                            [35.59931640625001, -16.12587890625001],
                            [35.70888671875002, -16.095800781250006],
                            [35.75527343750002, -16.05830078125001],
                            [35.79121093750001, -15.958691406250011],
                            [35.89277343750001, -14.891796875000011],
                            [35.86669921875, -14.86376953125],
                            [35.84716796875, -14.6708984375],
                            [35.6904296875, -14.465527343750011],
                            [35.48847656250001, -14.201074218750009],
                            [35.37578125000002, -14.058691406250006],
                            [35.24746093750002, -13.896875],
                            [35.01386718750001, -13.643457031250009],
                            [34.61152343750001, -13.437890625],
                            [34.54570312500002, -13.21630859375],
                            [34.542578125, -13.108691406250003],
                            [34.35781250000002, -12.164746093750011],
                            [34.60625, -11.690039062500006],
                            [34.65957031250002, -11.588671875],
                            [34.82656250000002, -11.57568359375],
                            [34.95947265625, -11.578125],
                            [35.1826171875, -11.574804687500006],
                            [35.41826171875002, -11.583203125000011],
                            [35.50439453125, -11.604785156250003],
                            [35.56435546875002, -11.60234375],
                            [35.630957031250006, -11.58203125],
                            [35.78544921875002, -11.452929687500003],
                            [35.91132812500001, -11.4546875],
                            [36.08222656250001, -11.537304687500011],
                            [36.17548828125001, -11.609277343750009],
                            [36.19130859375002, -11.670703125],
                            [36.3056640625, -11.706347656250003],
                            [36.97890625000002, -11.566992187500006],
                            [37.37285156250002, -11.71044921875],
                            [37.54169921875001, -11.675097656250003],
                            [37.72480468750001, -11.580664062500006],
                            [37.92021484375002, -11.294726562500003],
                            [38.491796875, -11.413281250000011],
                            [38.9875, -11.167285156250003],
                            [39.81708984375001, -10.912402343750003],
                            [39.98867187500002, -10.82080078125],
                            [40.46357421875001, -10.46435546875],
                            [40.61171875000002, -10.661523437500009],
                            [40.48662109375002, -10.76513671875],
                            [40.59716796875, -10.830664062500006],
                            [40.40283203125, -11.33203125],
                            [40.53154296875002, -12.004589843750011],
                            [40.48710937500002, -12.4921875],
                            [40.58085937500002, -12.635546875],
                            [40.43681640625002, -12.983105468750011],
                            [40.56875, -12.984667968750003],
                            [40.595703125, -14.122851562500003],
                            [40.715625, -14.214453125],
                            [40.64609375, -14.538671875],
                            [40.775, -14.421289062500009],
                            [40.84453125000002, -14.718652343750009],
                            [40.617773437500006, -15.115527343750003],
                            [40.650976562500006, -15.260937500000011],
                            [39.98359375000001, -16.22548828125001],
                            [39.79091796875002, -16.29453125],
                            [39.84462890625002, -16.435644531250006],
                            [39.084375, -16.97285156250001],
                            [38.14492187500002, -17.242773437500006],
                            [37.24453125000002, -17.73994140625001],
                            [36.93935546875002, -17.993457031250003],
                            [36.40371093750002, -18.76972656250001],
                            [36.26289062500001, -18.71962890625001],
                            [36.23564453125002, -18.861328125],
                            [35.85371093750001, -18.99335937500001],
                            [34.947851562500006, -19.81269531250001],
                            [34.6494140625, -19.70136718750001],
                            [34.75576171875002, -19.82197265625001],
                            [34.705078125, -20.473046875],
                            [34.98232421875002, -20.80625],
                            [35.267675781250006, -21.650976562500006],
                            [35.31572265625002, -22.396875],
                            [35.38300781250001, -22.45458984375],
                            [35.45634765625002, -22.11591796875001],
                            [35.53007812500002, -22.248144531250006],
                            [35.57539062500001, -22.96308593750001],
                            [35.37041015625002, -23.79824218750001],
                            [35.5419921875, -23.82441406250001],
                            [35.48964843750002, -24.065527343750006],
                            [34.99208984375002, -24.65058593750001],
                            [32.96113281250001, -25.49042968750001],
                            [32.590429687500006, -26.00410156250001],
                            [32.84882812500001, -26.26806640625],
                            [32.95488281250002, -26.08359375],
                            [32.93359375, -26.25234375],
                            [32.88916015625, -26.83046875],
                            [32.88613281250002, -26.84931640625001],
                            [32.353515625, -26.861621093750003],
                            [32.19960937500002, -26.83349609375],
                            [32.112890625, -26.839453125]
                        ]
                    ]
                },
                properties: {
                    name: "Mozambique",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-16.37333984374999, 19.706445312499994],
                                [-16.437548828124932, 19.609277343749994],
                                [-16.477001953124983, 19.710351562499994],
                                [-16.343652343749994, 19.86621093750003],
                                [-16.37333984374999, 19.706445312499994]
                            ]
                        ],
                        [
                            [
                                [-5.359912109374989, 16.282861328124994],
                                [-5.5125, 15.496289062499983],
                                [-9.293701171875, 15.502832031249994],
                                [-9.350585937499943, 15.677392578125023],
                                [-9.38535156249992, 15.667626953124994],
                                [-9.4265625, 15.623046875000057],
                                [-9.447705078124926, 15.574853515624994],
                                [-9.446923828124937, 15.458203124999955],
                                [-9.941406249999972, 15.373779296874986],
                                [-10.696582031249989, 15.42265625],
                                [-10.9482421875, 15.151123046875014],
                                [-11.455224609374994, 15.62539062499999],
                                [-11.760156249999937, 15.425537109375057],
                                [-11.828759765624966, 15.244873046875014],
                                [-11.872851562499989, 14.995166015625031],
                                [-12.02158203124992, 14.804931640625],
                                [-12.081542968749972, 14.766357421875057],
                                [-12.104687499999955, 14.745361328125043],
                                [-12.40869140625, 14.889013671874991],
                                [-12.735253906249994, 15.13125],
                                [-13.105273437499989, 15.57177734375],
                                [-13.40966796875, 16.059179687500006],
                                [-13.756640624999989, 16.172509765624994],
                                [-13.868457031249932, 16.14814453125001],
                                [-14.300097656249932, 16.58027343750001],
                                [-14.990625, 16.676904296874994],
                                [-15.768212890624994, 16.485107421875],
                                [-16.23901367187497, 16.53129882812499],
                                [-16.44101562499992, 16.20454101562504],
                                [-16.480078124999977, 16.097216796875017],
                                [-16.50205078124992, 15.917333984375063],
                                [-16.53525390624995, 15.838378906250057],
                                [-16.53574218749995, 16.28681640625001],
                                [-16.463623046875, 16.60151367187501],
                                [-16.030322265625017, 17.88793945312497],
                                [-16.213085937499926, 19.003320312500023],
                                [-16.51445312499996, 19.361962890624994],
                                [-16.305273437499977, 19.51264648437504],
                                [-16.44487304687499, 19.47314453124997],
                                [-16.21044921875003, 20.227929687500023],
                                [-16.42978515624995, 20.652343750000057],
                                [-16.622509765624955, 20.634179687499994],
                                [-16.87607421874992, 21.086132812499955],
                                [-16.998242187499926, 21.039697265625023],
                                [-17.048046874999955, 20.80615234375003],
                                [-17.06396484375, 20.89882812499999],
                                [-16.96455078125001, 21.329248046875023],
                                [-15.231201171875, 21.331298828125],
                                [-14.084667968749926, 21.33271484375001],
                                [-13.626025390624932, 21.33325195312503],
                                [-13.396728515624943, 21.333544921875017],
                                [-13.167431640624926, 21.333789062500074],
                                [-13.016210937499949, 21.33393554687501],
                                [-13.025097656249983, 21.46679687499997],
                                [-13.032226562500028, 21.572070312500017],
                                [-13.041748046875, 21.71381835937504],
                                [-13.051220703124983, 21.854785156250074],
                                [-13.094335937499977, 22.49599609375005],
                                [-13.153271484374983, 22.820507812499983],
                                [-13.031494140624943, 23.000244140625],
                                [-12.895996093749972, 23.08955078125001],
                                [-12.739599609375006, 23.192724609375063],
                                [-12.62041015624996, 23.271337890625006],
                                [-12.559375, 23.290820312500045],
                                [-12.372900390624977, 23.318017578124994],
                                [-12.023437499999943, 23.467578125000017],
                                [-12.016308593749983, 23.97021484375],
                                [-12.016308593749983, 24.378662109375],
                                [-12.016308593749983, 24.923242187499994],
                                [-12.016308593749983, 25.059375],
                                [-12.016308593749983, 25.331689453124994],
                                [-12.016308593749983, 25.740136718749994],
                                [-12.016308593749983, 25.995410156250017],
                                [-10.376123046874966, 25.995458984375034],
                                [-9.444531249999983, 25.99550781250005],
                                [-9.071923828124937, 25.99550781250005],
                                [-8.885644531249994, 25.99550781250005],
                                [-8.682226562499949, 25.99550781250005],
                                [-8.68212890625, 26.109472656250006],
                                [-8.68212890625, 26.273193359375057],
                                [-8.682324218749955, 26.49770507812505],
                                [-8.682617187500028, 26.723144531250057],
                                [-8.682861328124972, 26.92133789062501],
                                [-8.683349609375, 27.285937500000045],
                                [-4.822607421874949, 24.99560546875],
                                [-5.640771484374994, 24.99516601562499],
                                [-5.959814453124977, 24.994970703125063],
                                [-6.287207031249977, 24.99482421875001],
                                [-6.594091796874977, 24.99462890624997],
                                [-6.396582031249977, 23.274804687499994],
                                [-6.02641601562496, 20.04218750000001],
                                [-5.827099609374955, 18.301562500000045],
                                [-5.741699218749943, 17.555566406250023],
                                [-5.713183593750017, 17.306884765625],
                                [-5.684765624999983, 17.058251953124966],
                                [-5.628662109375028, 16.568652343750045],
                                [-5.50961914062492, 16.442041015625023],
                                [-5.359912109374989, 16.282861328124994]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Mauritania",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-62.1484375, 16.74033203124999],
                            [-62.221630859375, 16.699511718750003],
                            [-62.191357421875, 16.804394531249997],
                            [-62.1484375, 16.74033203124999]
                        ]
                    ]
                },
                properties: {
                    name: "Montserrat",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [57.65126953125002, -20.48486328125],
                            [57.31767578125002, -20.42763671875001],
                            [57.416015625, -20.18378906250001],
                            [57.65654296875002, -19.98994140625001],
                            [57.7919921875, -20.21259765625001],
                            [57.65126953125002, -20.48486328125]
                        ]
                    ]
                },
                properties: {
                    name: "Mauritius",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [34.95947265625003, -11.578125],
                            [34.82656250000005, -11.575683593749972],
                            [34.65957031250005, -11.58867187499996],
                            [34.61855468750005, -11.620214843749991],
                            [34.60625, -11.690039062500006],
                            [34.3578125, -12.164746093749997],
                            [34.542578125, -13.108691406250003],
                            [34.54570312500002, -13.21630859375],
                            [34.6115234375001, -13.437890625000023],
                            [35.0138671875001, -13.64345703124998],
                            [35.247460937499994, -13.896875],
                            [35.37578125000002, -14.05869140625002],
                            [35.48847656250004, -14.20107421874998],
                            [35.69042968749997, -14.465527343750026],
                            [35.84716796875003, -14.670898437500043],
                            [35.8927734375001, -14.891796875000011],
                            [35.7912109375001, -15.958691406250026],
                            [35.75527343750005, -16.058300781249983],
                            [35.708886718749994, -16.095800781249977],
                            [35.5993164062501, -16.12587890624998],
                            [35.35849609375006, -16.160546875000023],
                            [35.242773437500006, -16.375390625],
                            [35.16718750000004, -16.56025390625001],
                            [35.178320312500006, -16.57333984375002],
                            [35.22978515625002, -16.639257812500034],
                            [35.281152343749994, -16.8078125],
                            [35.29042968750005, -17.096972656250017],
                            [35.27255859375006, -17.11845703124996],
                            [35.2013671875001, -17.13105468750004],
                            [35.124609375, -17.127246093749974],
                            [35.06464843750004, -17.078613281250014],
                            [35.11210937500002, -16.898535156250006],
                            [34.93339843750002, -16.760351562500006],
                            [34.528125, -16.319140625],
                            [34.24609374999997, -15.829394531249974],
                            [34.54082031250002, -15.297265625],
                            [34.50527343750005, -14.598144531249957],
                            [34.375, -14.4248046875],
                            [33.63642578125004, -14.568164062499974],
                            [33.148046875, -13.94091796875],
                            [32.98125, -14.009375],
                            [32.797460937500006, -13.6884765625],
                            [32.67041015624997, -13.590429687500006],
                            [32.96757812500002, -13.225],
                            [32.97519531250006, -12.701367187499983],
                            [33.51230468750006, -12.347753906249977],
                            [33.340136718750074, -12.308300781250011],
                            [33.25234375000005, -12.112597656250031],
                            [33.3039062500001, -11.69082031249998],
                            [33.23271484375002, -11.417675781250026],
                            [33.26835937500002, -11.403906249999977],
                            [33.379785156249994, -11.15791015625004],
                            [33.29277343750002, -10.85234375],
                            [33.661523437499994, -10.553125],
                            [33.55371093749997, -10.391308593750011],
                            [33.53759765624997, -10.351562499999986],
                            [33.52890625, -10.234667968749974],
                            [33.31152343750003, -10.037988281249966],
                            [33.3371093750001, -9.954003906249994],
                            [33.350976562499994, -9.862207031250037],
                            [33.25, -9.759570312500003],
                            [33.148046875, -9.603515625],
                            [32.99599609375005, -9.622851562499946],
                            [32.91992187500003, -9.407421875000026],
                            [33.88886718750004, -9.670117187499983],
                            [33.99560546875003, -9.495410156250003],
                            [34.32089843750006, -9.731542968749977],
                            [34.56992187500006, -10.241113281249966],
                            [34.66708984375006, -10.792480468750028],
                            [34.60791015624997, -11.08046875],
                            [34.77382812500005, -11.341699218750009],
                            [34.890625, -11.3935546875],
                            [34.93701171874997, -11.463476562500034],
                            [34.95947265625003, -11.578125]
                        ]
                    ]
                },
                properties: {
                    name: "Malawi",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [111.38925781250006, 2.415332031250031],
                                [111.31152343749997, 2.437597656250034],
                                [111.33349609374997, 2.768310546875],
                                [111.38925781250006, 2.415332031250031]
                            ]
                        ],
                        [
                            [
                                [104.22158203125, 2.731738281250003],
                                [104.1291015625001, 2.767236328125037],
                                [104.18476562500004, 2.871728515625009],
                                [104.22158203125, 2.731738281250003]
                            ]
                        ],
                        [
                            [
                                [117.88476562499997, 4.186132812500006],
                                [117.64902343750012, 4.168994140624974],
                                [117.70800781249997, 4.262402343749997],
                                [117.88476562499997, 4.186132812500006]
                            ]
                        ],
                        [
                            [
                                [100.28896484375005, 5.294726562499989],
                                [100.19101562500006, 5.28286132812498],
                                [100.2455078125, 5.467773437499986],
                                [100.33886718749997, 5.410058593750037],
                                [100.28896484375005, 5.294726562499989]
                            ]
                        ],
                        [
                            [
                                [99.848046875, 6.465722656249994],
                                [99.9186523437501, 6.358593750000011],
                                [99.74375, 6.263281249999963],
                                [99.64628906250002, 6.418359375000023],
                                [99.848046875, 6.465722656249994]
                            ]
                        ],
                        [
                            [
                                [102.10107421874997, 6.242236328125031],
                                [102.34013671875002, 6.172021484375023],
                                [102.534375, 5.862548828125028],
                                [103.09707031250005, 5.408447265624986],
                                [103.41582031250007, 4.85029296875004],
                                [103.43945312499997, 2.93310546875],
                                [103.8122070312501, 2.58046875],
                                [104.21855468750002, 1.722851562499997],
                                [104.25009765625012, 1.388574218750009],
                                [104.11494140625004, 1.412255859375037],
                                [103.98144531250003, 1.623632812500034],
                                [103.99150390625002, 1.454785156249997],
                                [103.6945312500001, 1.449658203125026],
                                [103.48027343750007, 1.329492187499966],
                                [103.35683593750005, 1.546142578125057],
                                [102.72714843750012, 1.855566406250034],
                                [101.29550781250012, 2.885205078125011],
                                [101.29990234375012, 3.253271484375034],
                                [100.71542968750006, 3.966210937499966],
                                [100.79550781250012, 4.023388671874983],
                                [100.61455078125002, 4.3734375],
                                [100.34326171874997, 5.984179687500031],
                                [100.11914062499997, 6.441992187500048],
                                [100.26142578125004, 6.682714843749963],
                                [100.3454101562501, 6.549902343750006],
                                [100.75449218750012, 6.460058593749991],
                                [100.87392578125, 6.24541015624996],
                                [101.05351562500002, 6.242578125],
                                [100.98164062500004, 5.771044921875045],
                                [101.1139648437501, 5.636767578125045],
                                [101.5560546875, 5.907763671875003],
                                [101.67841796875004, 5.778808593750028],
                                [101.87363281250012, 5.825292968749991],
                                [102.10107421874997, 6.242236328125031]
                            ]
                        ],
                        [
                            [
                                [117.5744140625001, 4.17060546875004],
                                [117.10058593750003, 4.337060546875023],
                                [116.51474609375006, 4.370800781249969],
                                [115.86074218750005, 4.348046875000037],
                                [115.67880859375006, 4.193017578124994],
                                [115.45439453125002, 3.034326171875009],
                                [115.24697265625005, 3.025927734374989],
                                [115.117578125, 2.89487304687502],
                                [115.08076171875004, 2.63422851562504],
                                [115.1791015625, 2.523193359374972],
                                [114.78642578125002, 2.250488281250014],
                                [114.83056640625003, 1.980029296874989],
                                [114.5125, 1.452001953124963],
                                [113.90234375000003, 1.434277343749997],
                                [113.6222656250001, 1.2359375],
                                [113.00654296875004, 1.433886718750003],
                                [112.94296875000006, 1.566992187500034],
                                [112.47617187500006, 1.559082031250028],
                                [112.1857421875001, 1.4390625],
                                [112.078515625, 1.143359374999974],
                                [111.80898437500005, 1.011669921874969],
                                [111.10136718750002, 1.050537109374986],
                                [110.50576171875005, .861962890625023],
                                [109.65400390625004, 1.614892578125023],
                                [109.53896484375, 1.89619140625004],
                                [109.62890625000003, 2.027539062499983],
                                [109.86484375000012, 1.764453125000031],
                                [110.34921875000012, 1.719726562499972],
                                [111.22324218750012, 1.395849609374991],
                                [111.0287109375, 1.557812500000026],
                                [111.26816406250012, 2.13974609375002],
                                [111.20859375000012, 2.379638671875043],
                                [111.44384765625003, 2.381542968749983],
                                [111.5125, 2.743017578124991],
                                [112.98789062500006, 3.161914062499974],
                                [113.92392578125006, 4.243212890625003],
                                [114.0638671875, 4.592675781249966],
                                [114.65410156250007, 4.037646484375045],
                                [114.84023437500005, 4.393212890625009],
                                [114.74667968750006, 4.718066406250017],
                                [115.02675781250005, 4.899707031249989],
                                [115.10703125000006, 4.390429687499974],
                                [115.290625, 4.352587890624989],
                                [115.1400390625, 4.899755859374991],
                                [115.37490234375, 4.932763671874966],
                                [115.55449218750007, 5.093554687500045],
                                [115.41904296875012, 5.413183593749963],
                                [115.60390625, 5.603417968749994],
                                [115.74082031250012, 5.533007812500045],
                                [115.8771484375001, 5.613525390625014],
                                [116.74980468750007, 6.977099609374989],
                                [116.8498046875001, 6.826708984374989],
                                [116.78808593749997, 6.606103515624994],
                                [117.12851562500012, 6.968896484375009],
                                [117.2298828125, 6.939990234374974],
                                [117.29404296875006, 6.676904296875023],
                                [117.60966796875002, 6.512646484375054],
                                [117.69375, 6.35],
                                [117.64453124999997, 6.001855468749994],
                                [117.5011718750001, 5.884667968750009],
                                [118.00380859375, 6.053320312499991],
                                [118.11582031250006, 5.8625],
                                [117.93476562500004, 5.7875],
                                [117.97363281249997, 5.70625],
                                [118.35312500000012, 5.80605468749998],
                                [118.59482421875006, 5.592089843750003],
                                [119.22343750000007, 5.412646484375031],
                                [119.2663085937501, 5.308105468750057],
                                [119.21962890625, 5.159814453125037],
                                [118.9125, 5.02290039062504],
                                [118.26054687500007, 4.988867187500034],
                                [118.18535156250002, 4.828515625000051],
                                [118.5625, 4.502148437499997],
                                [118.54833984375003, 4.379248046875006],
                                [118.008203125, 4.250244140625014],
                                [117.6964843750001, 4.342822265625045],
                                [117.5744140625001, 4.17060546875004]
                            ]
                        ],
                        [
                            [
                                [117.14160156250003, 7.168212890625028],
                                [117.08066406250006, 7.115283203124989],
                                [117.06425781250007, 7.26069335937504],
                                [117.2640625, 7.351660156250006],
                                [117.26679687500004, 7.220800781249991],
                                [117.14160156250003, 7.168212890625028]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Malaysia",
                    childNum: 8
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [23.380664062500017, -17.640625],
                            [24.27490234375, -17.481054687500006],
                            [24.73291015625, -17.51777343750001],
                            [25.001757812500017, -17.56855468750001],
                            [25.2587890625, -17.793554687500006],
                            [24.909082031250023, -17.821386718750006],
                            [24.530566406250017, -18.052734375],
                            [24.243945312500017, -18.0234375],
                            [23.599707031250006, -18.4599609375],
                            [23.219335937500006, -17.99970703125001],
                            [20.97412109375, -18.31884765625],
                            [20.9794921875, -21.9619140625],
                            [19.977343750000017, -22.00019531250001],
                            [19.98046875, -24.77675781250001],
                            [19.98046875, -28.310351562500003],
                            [19.98046875, -28.451269531250006],
                            [19.539843750000017, -28.574609375],
                            [19.31269531250001, -28.73330078125001],
                            [19.24580078125001, -28.901660156250003],
                            [19.16171875, -28.938769531250003],
                            [18.310839843750017, -28.88623046875],
                            [17.44794921875001, -28.69814453125001],
                            [17.34785156250001, -28.50117187500001],
                            [17.358691406250017, -28.26943359375001],
                            [17.1884765625, -28.13251953125001],
                            [17.05625, -28.031054687500003],
                            [16.93330078125001, -28.069628906250003],
                            [16.875292968750017, -28.1279296875],
                            [16.841210937500023, -28.21894531250001],
                            [16.81015625, -28.26455078125001],
                            [16.7875, -28.39472656250001],
                            [16.755761718750023, -28.4521484375],
                            [16.62617187500001, -28.487890625],
                            [16.487109375000017, -28.572851562500006],
                            [16.447558593750017, -28.617578125],
                            [15.719042968750017, -27.9658203125],
                            [15.341503906250011, -27.386523437500003],
                            [15.139062500000023, -26.50800781250001],
                            [14.9677734375, -26.31806640625001],
                            [14.837109375000011, -25.033203125],
                            [14.5015625, -24.201953125],
                            [14.462792968750023, -22.44912109375001],
                            [13.450585937500023, -20.91669921875001],
                            [13.168359375000023, -20.184667968750006],
                            [12.458203125000011, -18.9267578125],
                            [11.77587890625, -18.001757812500003],
                            [11.733496093750006, -17.7509765625],
                            [11.743066406250023, -17.24921875000001],
                            [11.902539062500011, -17.2265625],
                            [12.013964843750017, -17.168554687500006],
                            [12.21337890625, -17.2099609375],
                            [12.318457031250006, -17.21337890625],
                            [12.359277343750023, -17.205859375],
                            [12.548144531250017, -17.212695312500003],
                            [13.179492187500017, -16.9716796875],
                            [13.475976562500023, -17.0400390625],
                            [14.017480468750023, -17.40888671875001],
                            [16.1484375, -17.390234375],
                            [18.396386718750023, -17.3994140625],
                            [18.95527343750001, -17.803515625],
                            [20.1943359375, -17.863671875],
                            [20.745507812500023, -18.01972656250001],
                            [22.32421875, -17.8375],
                            [23.380664062500017, -17.640625]
                        ]
                    ]
                },
                properties: {
                    name: "Namibia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [167.54443359375003, -22.62324218750001],
                                [167.44375, -22.63916015624997],
                                [167.44345703125006, -22.541406250000037],
                                [167.54443359375003, -22.62324218750001]
                            ]
                        ],
                        [
                            [
                                [168.01093750000004, -21.429980468750017],
                                [168.1390625, -21.44521484375001],
                                [168.12070312500012, -21.615820312500034],
                                [167.96679687500003, -21.641601562499957],
                                [167.81542968749997, -21.392675781249963],
                                [167.9884765625001, -21.337890624999986],
                                [168.01093750000004, -21.429980468750017]
                            ]
                        ],
                        [
                            [
                                [167.40087890625003, -21.16064453125003],
                                [167.07265625, -20.99726562499997],
                                [167.03271484374997, -20.922558593750026],
                                [167.18945312500003, -20.803515625000017],
                                [167.05576171875012, -20.720214843750014],
                                [167.29794921875006, -20.732519531250034],
                                [167.40087890625003, -21.16064453125003]
                            ]
                        ],
                        [
                            [
                                [164.20234375000004, -20.246093749999957],
                                [164.4359375, -20.282226562499957],
                                [165.191796875, -20.768847656249974],
                                [165.66279296875004, -21.267187499999977],
                                [166.94238281250003, -22.09013671875003],
                                [166.97031250000012, -22.32285156250002],
                                [166.77412109375004, -22.37617187500004],
                                [166.4679687500001, -22.256054687499997],
                                [164.92744140625004, -21.289843749999974],
                                [164.16972656250007, -20.48017578125004],
                                [164.05966796875012, -20.141503906249966],
                                [164.20234375000004, -20.246093749999957]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "New Caledonia",
                    childNum: 4
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [14.97900390625, 22.99619140624999],
                            [15.181835937500011, 21.523388671874997],
                            [15.607324218750023, 20.954394531250003],
                            [15.587109375000011, 20.733300781249994],
                            [15.963183593750017, 20.34619140625],
                            [15.735058593750011, 19.904052734375],
                            [15.474316406250011, 16.908398437499997],
                            [14.367968750000017, 15.750146484374994],
                            [13.4482421875, 14.380664062500003],
                            [13.505761718750023, 14.134423828124994],
                            [13.606347656250023, 13.70458984375],
                            [13.426953125000011, 13.701757812499991],
                            [13.323828125, 13.670849609374997],
                            [12.871679687500006, 13.449023437500003],
                            [12.65478515625, 13.3265625],
                            [12.463183593750017, 13.09375],
                            [10.958886718750023, 13.371533203124997],
                            [10.475878906250017, 13.330224609374994],
                            [10.229589843750006, 13.281005859375],
                            [10.184667968750006, 13.270117187499991],
                            [9.615917968750011, 12.810644531249991],
                            [9.201562500000023, 12.821484375],
                            [8.750585937500006, 12.908154296874997],
                            [8.4560546875, 13.059667968749991],
                            [8.095019531250017, 13.291162109374994],
                            [7.955761718750011, 13.32275390625],
                            [7.788671875, 13.337890625],
                            [7.056738281250006, 13.000195312499997],
                            [6.804296875, 13.107666015625],
                            [6.2998046875, 13.658789062499991],
                            [6.184277343750011, 13.66367187499999],
                            [5.838183593750017, 13.765380859375],
                            [5.491992187500017, 13.872851562500003],
                            [5.415820312500017, 13.859179687500003],
                            [5.361621093750017, 13.836865234374997],
                            [5.241894531250011, 13.757226562499994],
                            [4.664843750000017, 13.733203125],
                            [4.147558593750006, 13.457714843749997],
                            [3.947851562500006, 12.775048828124994],
                            [3.646679687500011, 12.529980468749997],
                            [3.595410156250011, 11.6962890625],
                            [2.805273437500006, 12.383837890624989],
                            [2.366015625000017, 12.221923828125],
                            [2.38916015625, 11.897070312499991],
                            [2.072949218750011, 12.309375],
                            [2.226269531250011, 12.466064453125],
                            [2.104589843750006, 12.701269531249991],
                            [1.56494140625, 12.635400390624994],
                            [.9873046875, 13.041894531249994],
                            [.988476562500011, 13.36484375],
                            [1.201171875, 13.357519531249991],
                            [.6181640625, 13.703417968750003],
                            [.42919921875, 13.972119140624997],
                            [.382519531250011, 14.245800781249997],
                            [.163867187500017, 14.497216796874994],
                            [.217480468750011, 14.911474609374991],
                            [.947460937500011, 14.982128906249997],
                            [1.300195312500023, 15.272265625],
                            [3.001074218750006, 15.340966796874994],
                            [3.06015625, 15.427197265624997],
                            [3.504296875000023, 15.356347656249994],
                            [3.5205078125, 15.483105468749997],
                            [3.842968750000011, 15.701708984375003],
                            [4.121289062500011, 16.357714843750003],
                            [4.234667968750017, 16.996386718750003],
                            [4.227636718750006, 19.142773437499997],
                            [5.836621093750011, 19.479150390624994],
                            [7.481738281250017, 20.873095703125003],
                            [11.967871093750006, 23.517871093750003],
                            [13.48125, 23.18017578125],
                            [14.215527343750011, 22.619677734375003],
                            [14.97900390625, 22.99619140624999]
                        ]
                    ]
                },
                properties: {
                    name: "Niger",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [7.30078125, 4.418164062500026],
                                [7.140429687500017, 4.395117187500034],
                                [7.227343750000045, 4.527343749999972],
                                [7.30078125, 4.418164062500026]
                            ]
                        ],
                        [
                            [
                                [6.804296875, 13.107666015625],
                                [7.056738281250006, 13.00019531250004],
                                [7.788671875, 13.337890625],
                                [7.955761718750011, 13.322753906250028],
                                [8.095019531250045, 13.29116210937498],
                                [8.750585937500034, 12.908154296875026],
                                [9.20156250000008, 12.82148437500004],
                                [9.615917968750011, 12.810644531249963],
                                [10.184667968750063, 13.270117187499963],
                                [10.229589843749977, 13.281005859375043],
                                [10.475878906250074, 13.330224609375037],
                                [10.958886718750051, 13.371533203125011],
                                [12.463183593750017, 13.09375],
                                [12.654785156250057, 13.3265625],
                                [13.426953125000068, 13.701757812499963],
                                [13.606347656250023, 13.704589843750014],
                                [13.932324218750011, 13.258496093749997],
                                [14.06396484375, 13.078515625],
                                [14.160058593750023, 12.612792968749986],
                                [14.184863281250017, 12.447216796874997],
                                [14.272851562500023, 12.356494140624989],
                                [14.518945312500051, 12.298242187500023],
                                [14.619726562500063, 12.150976562500048],
                                [14.559765625000011, 11.492285156249963],
                                [14.20234375000004, 11.268164062499963],
                                [14.143261718750068, 11.248535156250043],
                                [14.056738281250034, 11.245019531250037],
                                [13.981445312500057, 11.21186523437504],
                                [13.892089843750057, 11.140087890624983],
                                [13.699902343749983, 10.873144531250048],
                                [13.53535156250004, 10.605078124999963],
                                [13.414550781250028, 10.171435546874989],
                                [13.269921875000051, 10.036181640624974],
                                [13.198730468750028, 9.563769531250003],
                                [12.929492187500074, 9.426269531249972],
                                [12.87568359375004, 9.303515625000017],
                                [12.80654296875008, 8.886621093749994],
                                [12.7822265625, 8.817871093750014],
                                [12.651562500000011, 8.667773437499989],
                                [12.40351562500004, 8.59555664062502],
                                [12.311328125000074, 8.419726562499989],
                                [12.2333984375, 8.282324218749977],
                                [12.016015625000051, 7.589746093750009],
                                [11.809179687500006, 7.345068359374991],
                                [11.767382812500017, 7.272265624999989],
                                [11.861425781249977, 7.11640625000004],
                                [11.657519531250017, 6.951562500000023],
                                [11.580078125000057, 6.88886718750004],
                                [11.551660156250023, 6.697265625],
                                [11.153320312500057, 6.437939453125011],
                                [11.1064453125, 6.457714843750054],
                                [11.032519531250045, 6.697900390625037],
                                [10.954199218750006, 6.7765625],
                                [10.60625, 7.063085937500006],
                                [10.413183593750006, 6.877734375],
                                [10.293066406250034, 6.876757812499974],
                                [10.205468750000051, 6.891601562499986],
                                [10.185546874999972, 6.91279296875004],
                                [10.167773437500017, 6.959179687499983],
                                [10.143554687500057, 6.99643554687502],
                                [10.038867187500045, 6.921386718750014],
                                [9.874218750000068, 6.803271484375017],
                                [9.82070312500008, 6.783935546874986],
                                [9.779882812500034, 6.760156250000023],
                                [9.725585937499972, 6.65],
                                [9.659960937500017, 6.531982421874986],
                                [9.490234375, 6.418652343749997],
                                [8.997167968750006, 5.917724609375],
                                [8.715625, 5.046875],
                                [8.514843750000068, 4.724707031250034],
                                [8.23378906250008, 4.907470703124972],
                                [8.293066406250006, 4.557617187500014],
                                [7.644238281250068, 4.525341796875011],
                                [7.530761718750028, 4.655175781249994],
                                [7.284375, 4.547656250000031],
                                [7.076562500000051, 4.716162109374991],
                                [7.15468750000008, 4.514404296875],
                                [6.92324218750008, 4.390673828125017],
                                [6.767675781250006, 4.724707031250034],
                                [6.860351562500057, 4.373339843750045],
                                [6.633007812500011, 4.340234375000051],
                                [6.579980468750051, 4.475976562499994],
                                [6.554589843750023, 4.34140625000002],
                                [6.263671875, 4.309423828124991],
                                [6.270996093749972, 4.432128906250028],
                                [6.173339843749972, 4.277392578125031],
                                [5.970703125, 4.338574218749983],
                                [5.587792968750051, 4.647216796874972],
                                [5.448144531250023, 4.945849609374974],
                                [5.383300781250057, 5.129003906249977],
                                [5.475976562500023, 5.153857421874989],
                                [5.370019531250023, 5.195019531250026],
                                [5.367968750000045, 5.337744140624963],
                                [5.549707031250023, 5.474218749999963],
                                [5.385839843750034, 5.401757812500037],
                                [5.199218750000028, 5.533544921874977],
                                [5.456640624999977, 5.61171875],
                                [5.327343750000011, 5.707519531249986],
                                [5.112402343750034, 5.64155273437504],
                                [4.861035156250068, 6.026318359374997],
                                [4.431347656250011, 6.348583984375026],
                                [3.450781249999977, 6.427050781250017],
                                [3.71699218750004, 6.597949218750017],
                                [3.430175781250057, 6.525],
                                [3.335546875000063, 6.396923828125011],
                                [2.706445312500051, 6.369238281249963],
                                [2.735644531250045, 6.595703125],
                                [2.753710937499989, 6.661767578124966],
                                [2.774609374999983, 6.711718750000017],
                                [2.752929687500028, 6.771630859374966],
                                [2.731738281250045, 6.852832031249989],
                                [2.721386718750068, 6.980273437500017],
                                [2.75673828125008, 7.067919921875017],
                                [2.750488281250057, 7.39506835937496],
                                [2.765820312500068, 7.422509765625051],
                                [2.783984375000045, 7.443408203125045],
                                [2.78515625, 7.476855468750017],
                                [2.703125, 8.371826171875],
                                [2.774804687500023, 9.048535156250026],
                                [3.044921875, 9.08383789062502],
                                [3.325195312499972, 9.778466796875051],
                                [3.60205078125, 10.004541015625009],
                                [3.646582031250006, 10.408984374999989],
                                [3.771777343750017, 10.417626953124966],
                                [3.83447265625, 10.607421875],
                                [3.7568359375, 10.76875],
                                [3.71640625, 11.07958984375],
                                [3.695312499999972, 11.12031250000004],
                                [3.63886718750004, 11.176855468750006],
                                [3.487792968749972, 11.395410156250037],
                                [3.490527343750017, 11.499218750000054],
                                [3.55390625000004, 11.631884765624989],
                                [3.595410156250068, 11.696289062500057],
                                [3.664746093750068, 11.762451171875028],
                                [3.646679687500011, 12.529980468749983],
                                [3.947851562500006, 12.775048828124994],
                                [4.147558593750006, 13.457714843749983],
                                [4.664843750000045, 13.733203124999974],
                                [5.241894531250011, 13.757226562499994],
                                [5.361621093750074, 13.836865234375054],
                                [5.415820312500017, 13.859179687499974],
                                [5.491992187500074, 13.872851562500003],
                                [6.2998046875, 13.658789062500006],
                                [6.804296875, 13.107666015625]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Nigeria",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-83.6419921875, 10.917236328125],
                            [-83.71293945312499, 10.785888671875],
                            [-83.91928710937499, 10.7353515625],
                            [-84.6341796875, 11.045605468749997],
                            [-84.9091796875, 10.9453125],
                            [-85.5841796875, 11.189453125],
                            [-85.7443359375, 11.06210937499999],
                            [-87.670166015625, 12.965673828124991],
                            [-87.58505859374999, 13.043310546874991],
                            [-87.42436523437499, 12.921142578125],
                            [-87.33725585937499, 12.979248046875],
                            [-87.05917968749999, 12.991455078125],
                            [-87.00932617187499, 13.0078125],
                            [-86.918212890625, 13.223583984374997],
                            [-86.87353515625, 13.266503906249994],
                            [-86.792138671875, 13.27978515625],
                            [-86.72929687499999, 13.284375],
                            [-86.710693359375, 13.313378906249994],
                            [-86.76352539062499, 13.63525390625],
                            [-86.77060546874999, 13.69873046875],
                            [-86.758984375, 13.746142578125003],
                            [-86.733642578125, 13.763476562500003],
                            [-86.61025390625, 13.774853515624997],
                            [-86.376953125, 13.755664062500003],
                            [-86.33173828125, 13.770068359375003],
                            [-86.238232421875, 13.899462890625003],
                            [-86.15122070312499, 13.994580078124997],
                            [-86.0892578125, 14.037207031249991],
                            [-86.04038085937499, 14.050146484374991],
                            [-85.9837890625, 13.965673828124991],
                            [-85.78671875, 13.844433593749997],
                            [-85.75341796875, 13.85205078125],
                            [-85.73393554687499, 13.858691406250003],
                            [-85.727734375, 13.876074218749991],
                            [-85.731201171875, 13.931835937499997],
                            [-85.68193359374999, 13.982568359374994],
                            [-85.20834960937499, 14.311816406250003],
                            [-85.059375, 14.582958984374997],
                            [-84.86044921874999, 14.809765625],
                            [-84.645947265625, 14.661083984374997],
                            [-84.53764648437499, 14.633398437499991],
                            [-83.635498046875, 14.876416015624997],
                            [-83.5365234375, 14.977001953124997],
                            [-83.4150390625, 15.008056640625],
                            [-83.15751953124999, 14.993066406249994],
                            [-83.18535156249999, 14.956396484374991],
                            [-83.21591796874999, 14.932373046875],
                            [-83.27988281249999, 14.812792968750003],
                            [-83.344384765625, 14.902099609375],
                            [-83.413720703125, 14.825341796874994],
                            [-83.29921875, 14.7490234375],
                            [-83.187744140625, 14.340087890625],
                            [-83.4123046875, 13.99648437499999],
                            [-83.567333984375, 13.3203125],
                            [-83.5109375, 12.411816406249997],
                            [-83.627197265625, 12.459326171874991],
                            [-83.59335937499999, 12.713085937499997],
                            [-83.75424804687499, 12.501953125],
                            [-83.680419921875, 12.024316406249994],
                            [-83.7671875, 12.059277343749997],
                            [-83.82890624999999, 11.861035156249997],
                            [-83.70458984375, 11.824560546874991],
                            [-83.6517578125, 11.642041015624997],
                            [-83.86787109375, 11.300048828125],
                            [-83.6419921875, 10.917236328125]
                        ]
                    ]
                },
                properties: {
                    name: "Nicaragua",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-169.80341796875, -19.0830078125],
                            [-169.94833984375, -19.072851562500006],
                            [-169.834033203125, -18.96601562500001],
                            [-169.80341796875, -19.0830078125]
                        ]
                    ]
                },
                properties: {
                    name: "Niue",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-68.205810546875, 12.144580078124989],
                                [-68.25434570312495, 12.032080078124977],
                                [-68.36923828125, 12.301953124999983],
                                [-68.205810546875, 12.144580078124989]
                            ]
                        ],
                        [
                            [
                                [4.226171875000034, 51.38647460937503],
                                [3.902050781250011, 51.20766601562502],
                                [3.43251953125008, 51.24575195312505],
                                [3.35009765625, 51.37768554687503],
                                [4.226171875000034, 51.38647460937503]
                            ]
                        ],
                        [
                            [
                                [3.94912109375008, 51.73945312500001],
                                [4.07509765625008, 51.648779296875006],
                                [3.699023437500017, 51.70991210937501],
                                [3.94912109375008, 51.73945312500001]
                            ]
                        ],
                        [
                            [
                                [4.886132812500023, 53.07070312500005],
                                [4.70917968750004, 53.036035156249994],
                                [4.886425781249983, 53.18330078124998],
                                [4.886132812500023, 53.07070312500005]
                            ]
                        ],
                        [
                            [
                                [4.226171875000034, 51.38647460937503],
                                [3.448925781250068, 51.54077148437503],
                                [3.743945312500017, 51.596044921875006],
                                [4.27412109375004, 51.47163085937498],
                                [4.004785156250051, 51.595849609374966],
                                [4.182617187500057, 51.61030273437498],
                                [3.946875, 51.810546875],
                                [4.482812500000023, 52.30917968749998],
                                [4.76875, 52.941308593749966],
                                [5.061230468750068, 52.96064453125001],
                                [5.532031250000074, 53.268701171874966],
                                [6.062207031250068, 53.407080078125006],
                                [6.816210937500045, 53.44116210937503],
                                [7.197265625000028, 53.28227539062499],
                                [7.033007812500045, 52.65136718749997],
                                [6.710742187500045, 52.61787109374998],
                                [6.748828125000074, 52.464013671874994],
                                [7.035156250000057, 52.38022460937498],
                                [6.724511718749994, 52.080224609374966],
                                [6.800390625, 51.96738281249998],
                                [5.948730468750057, 51.80268554687501],
                                [6.198828125000034, 51.45],
                                [6.129980468750034, 51.14741210937501],
                                [5.857519531250034, 51.030126953125006],
                                [6.048437500000034, 50.90488281250006],
                                [5.993945312500017, 50.75043945312504],
                                [5.693554687500011, 50.774755859375006],
                                [5.796484375000034, 51.153076171875],
                                [5.214160156250045, 51.278955078124966],
                                [5.03095703125004, 51.46909179687498],
                                [4.226171875000034, 51.38647460937503]
                            ]
                        ],
                        [
                            [
                                [5.325781250000063, 53.38574218750003],
                                [5.190234375000074, 53.39179687500001],
                                [5.582617187500063, 53.438085937500034],
                                [5.325781250000063, 53.38574218750003]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Netherlands",
                    childNum: 6,
                    cp: [5.0752777, 52.358465]
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [5.085839843750023, 60.30756835937501],
                                [5.089062500000068, 60.188769531250045],
                                [4.95722656250004, 60.44726562500006],
                                [5.085839843750023, 60.30756835937501]
                            ]
                        ],
                        [
                            [
                                [4.958691406250068, 61.084570312500034],
                                [4.79902343750004, 61.08271484375001],
                                [4.861621093749989, 61.19384765625],
                                [4.958691406250068, 61.084570312500034]
                            ]
                        ],
                        [
                            [
                                [8.10273437500004, 63.33759765625004],
                                [7.804003906250017, 63.413916015625034],
                                [8.073535156250045, 63.47080078124998],
                                [8.10273437500004, 63.33759765625004]
                            ]
                        ],
                        [
                            [
                                [8.470800781250063, 63.66713867187502],
                                [8.287109375000028, 63.68715820312502],
                                [8.764648437500057, 63.804638671874955],
                                [8.78652343750008, 63.703466796875034],
                                [8.470800781250063, 63.66713867187502]
                            ]
                        ],
                        [
                            [
                                [11.2314453125, 64.865869140625],
                                [10.739843750000034, 64.87031250000001],
                                [11.02099609375, 64.97871093749995],
                                [11.2314453125, 64.865869140625]
                            ]
                        ],
                        [
                            [
                                [12.971777343750063, 67.87412109375],
                                [12.824023437500074, 67.82124023437498],
                                [13.068066406250068, 68.07133789062505],
                                [12.971777343750063, 67.87412109375]
                            ]
                        ],
                        [
                            [
                                [13.872851562500045, 68.26533203125004],
                                [14.096777343750034, 68.218603515625],
                                [13.229394531250051, 67.995361328125],
                                [13.300195312499994, 68.16044921875007],
                                [13.872851562500045, 68.26533203125004]
                            ]
                        ],
                        [
                            [
                                [15.207128906250006, 68.943115234375],
                                [15.222070312500023, 68.61630859375003],
                                [14.404687500000051, 68.663232421875],
                                [15.037792968750068, 69.00053710937507],
                                [15.207128906250006, 68.943115234375]
                            ]
                        ],
                        [
                            [
                                [15.760351562500006, 68.56123046875001],
                                [16.328906250000017, 68.87631835937498],
                                [16.519238281250068, 68.63300781249998],
                                [15.975292968750011, 68.402490234375],
                                [14.257519531249983, 68.19077148437503],
                                [15.412597656250028, 68.61582031250003],
                                [15.483007812500006, 69.04345703125003],
                                [16.04804687500001, 69.30205078125002],
                                [15.760351562500006, 68.56123046875001]
                            ]
                        ],
                        [
                            [
                                [17.503027343750034, 69.59624023437502],
                                [18.004101562500068, 69.50498046874998],
                                [17.95068359375003, 69.19814453125],
                                [17.487890625000063, 69.19682617187499],
                                [17.08251953124997, 69.013671875],
                                [16.81044921875008, 69.07070312499997],
                                [17.001757812500045, 69.36191406250006],
                                [17.36083984375003, 69.38149414062497],
                                [17.503027343750034, 69.59624023437502]
                            ]
                        ],
                        [
                            [
                                [29.956152343750006, 69.79677734375002],
                                [29.766210937500006, 69.76752929687501],
                                [29.835839843749994, 69.90556640625005],
                                [29.956152343750006, 69.79677734375002]
                            ]
                        ],
                        [
                            [
                                [20.779199218750023, 70.08974609375002],
                                [20.46425781250005, 70.0765625],
                                [20.492773437500006, 70.20332031249995],
                                [20.78603515625008, 70.21953124999999],
                                [20.779199218750023, 70.08974609375002]
                            ]
                        ],
                        [
                            [
                                [19.25507812500001, 70.06640625000006],
                                [19.607812500000023, 70.019140625],
                                [19.334765625000074, 69.82026367187501],
                                [18.784765625000034, 69.57900390624997],
                                [18.12988281250003, 69.557861328125],
                                [18.34931640625004, 69.76787109374999],
                                [18.67402343750004, 69.78164062500002],
                                [19.13271484375005, 70.24414062500003],
                                [19.25507812500001, 70.06640625000006]
                            ]
                        ],
                        [
                            [
                                [19.76748046875005, 70.21669921875002],
                                [20.005957031250034, 70.07622070312502],
                                [19.599023437499994, 70.26616210937507],
                                [19.76748046875005, 70.21669921875002]
                            ]
                        ],
                        [
                            [
                                [23.615332031250034, 70.54931640625003],
                                [23.15917968750003, 70.28261718750005],
                                [22.941015625000063, 70.444580078125],
                                [23.546679687500017, 70.61708984374997],
                                [23.615332031250034, 70.54931640625003]
                            ]
                        ],
                        [
                            [
                                [24.01757812500003, 70.56738281249997],
                                [23.716601562500074, 70.561865234375],
                                [23.778417968750063, 70.74736328125005],
                                [24.01757812500003, 70.56738281249997]
                            ]
                        ],
                        [
                            [
                                [23.440527343750063, 70.81577148437503],
                                [22.8291015625, 70.54155273437505],
                                [22.358691406250017, 70.514794921875],
                                [21.99453125000008, 70.65712890624997],
                                [23.440527343750063, 70.81577148437503]
                            ]
                        ],
                        [
                            [
                                [30.869726562500006, 69.78344726562506],
                                [30.860742187499994, 69.53842773437503],
                                [30.18017578124997, 69.63583984375],
                                [30.08730468750005, 69.43286132812503],
                                [29.38828125, 69.29814453125005],
                                [28.96582031250003, 69.02197265625],
                                [28.846289062500006, 69.17690429687502],
                                [29.33339843750005, 69.47299804687503],
                                [29.14160156250003, 69.67143554687505],
                                [27.747851562500045, 70.06484375],
                                [27.127539062500063, 69.90649414062497],
                                [26.525390625000057, 69.91503906250003],
                                [26.07246093750004, 69.69155273437497],
                                [25.748339843750017, 68.99013671875],
                                [24.94140625000003, 68.59326171875006],
                                [23.85400390625, 68.80590820312503],
                                [23.324023437500017, 68.64897460937502],
                                [22.410937500000074, 68.719873046875],
                                [21.59375, 69.273583984375],
                                [21.06611328125001, 69.21411132812497],
                                [21.065722656250017, 69.04174804687503],
                                [20.622167968750006, 69.036865234375],
                                [20.116699218750057, 69.02089843750005],
                                [20.348046875000023, 68.84873046875003],
                                [19.969824218750063, 68.35639648437501],
                                [18.303027343750045, 68.55541992187497],
                                [17.91669921875001, 67.96489257812502],
                                [17.324609375000023, 68.10380859374999],
                                [16.783593750000023, 67.89501953125],
                                [16.12744140625, 67.42583007812507],
                                [16.40351562500004, 67.05498046875002],
                                [15.422949218750006, 66.48984374999998],
                                [15.483789062500051, 66.30595703124999],
                                [14.543261718750045, 66.12934570312498],
                                [14.47968750000004, 65.30146484374998],
                                [13.650292968750023, 64.58154296874997],
                                [14.077636718750028, 64.464013671875],
                                [14.141210937500006, 64.17353515624998],
                                [13.960546875000063, 64.01401367187498],
                                [13.203515625000023, 64.07509765625],
                                [12.792773437500017, 64],
                                [12.175195312500051, 63.595947265625],
                                [11.999902343750051, 63.29169921875001],
                                [12.303515625000074, 62.28559570312501],
                                [12.155371093750006, 61.720751953125045],
                                [12.88076171875008, 61.35229492187506],
                                [12.706054687500028, 61.059863281250074],
                                [12.29414062500004, 61.00268554687506],
                                [12.588671874999989, 60.450732421875045],
                                [12.486132812500074, 60.10678710937506],
                                [11.680761718750034, 59.59228515625003],
                                [11.798144531250074, 59.28989257812498],
                                [11.64277343750004, 58.92607421875002],
                                [11.470703125000057, 58.909521484375034],
                                [11.388281250000063, 59.036523437499966],
                                [10.834472656250028, 59.18393554687498],
                                [10.595312500000063, 59.764550781249966],
                                [10.179394531250068, 59.00927734375003],
                                [9.842578125000017, 58.95849609374997],
                                [9.557226562500063, 59.11269531250002],
                                [9.65693359375004, 58.97119140624997],
                                [8.166113281250063, 58.145312500000045],
                                [7.0048828125, 58.024218750000074],
                                [6.877050781250006, 58.15073242187498],
                                [6.590527343750068, 58.09731445312502],
                                [6.659863281250068, 58.26274414062499],
                                [5.706835937500074, 58.52363281250001],
                                [5.55556640625008, 58.975195312500006],
                                [6.099023437500023, 58.87026367187502],
                                [6.363281250000028, 59.00092773437501],
                                [6.099414062500017, 58.951953125000074],
                                [5.88916015625, 59.097949218750045],
                                [5.951855468750068, 59.299072265625],
                                [6.415332031250074, 59.547119140625],
                                [5.17324218750008, 59.16254882812498],
                                [5.2421875, 59.564306640625034],
                                [5.472460937500017, 59.713085937499955],
                                [5.77216796875004, 59.66093749999999],
                                [6.216601562499989, 59.818359375],
                                [5.73046875, 59.863085937500045],
                                [6.348730468750006, 60.35297851562504],
                                [6.57363281250008, 60.36059570312497],
                                [6.526855468750057, 60.152929687500034],
                                [6.995703125, 60.511962890625],
                                [6.1533203125, 60.34624023437499],
                                [5.145800781250074, 59.63881835937502],
                                [5.205664062500006, 60.087939453125045],
                                [5.688574218749977, 60.12319335937502],
                                [5.285839843750011, 60.20571289062505],
                                [5.13710937500008, 60.445605468750074],
                                [5.648339843750051, 60.68798828124997],
                                [5.244042968750023, 60.569580078125],
                                [5.115820312500006, 60.63598632812503],
                                [5.008593750000017, 61.038183593750006],
                                [6.777832031250028, 61.142431640625006],
                                [7.038671875000063, 60.952929687500045],
                                [7.040136718750006, 61.091162109375034],
                                [7.604492187500057, 61.210546875000034],
                                [7.34658203125008, 61.30058593749999],
                                [7.442578125000011, 61.43461914062502],
                                [7.173535156250011, 61.16596679687501],
                                [6.599902343750017, 61.28964843749998],
                                [6.383496093750068, 61.133886718750034],
                                [5.451269531250034, 61.10234375000002],
                                [5.106738281250017, 61.187548828125045],
                                [5.002734375000074, 61.43359375],
                                [5.338671875000017, 61.485498046874994],
                                [4.927832031249977, 61.71069335937506],
                                [4.93007812499999, 61.878320312499994],
                                [6.01582031250004, 61.7875],
                                [6.730761718750045, 61.86977539062505],
                                [5.266894531250045, 61.935595703125045],
                                [5.143164062500063, 62.159912109375],
                                [5.908300781249977, 62.41601562500003],
                                [6.083496093750057, 62.349609375],
                                [6.580078125000057, 62.407275390625045],
                                [6.692382812500028, 62.46806640624999],
                                [6.136132812500051, 62.40747070312497],
                                [6.352929687500051, 62.61113281249999],
                                [7.653125, 62.56401367187499],
                                [7.538378906250074, 62.67207031249998],
                                [8.045507812500006, 62.77124023437503],
                                [6.734960937500006, 62.72070312500003],
                                [6.940429687500028, 62.930468750000045],
                                [7.571875, 63.09951171875002],
                                [8.100585937500028, 63.090966796874966],
                                [8.623144531250006, 62.84624023437502],
                                [8.158007812500017, 63.16152343750005],
                                [8.635546875000045, 63.34233398437502],
                                [8.360742187500023, 63.498876953125034],
                                [8.576171875000028, 63.60117187499998],
                                [9.135839843750006, 63.593652343749966],
                                [9.156054687500045, 63.459326171875034],
                                [9.696875, 63.624560546875045],
                                [10.020996093750028, 63.39082031250004],
                                [10.76015625000008, 63.461279296875006],
                                [10.725292968750068, 63.625],
                                [11.370703125000034, 63.804833984374994],
                                [11.175585937500074, 63.89887695312498],
                                [11.457617187500063, 64.00297851562505],
                                [11.306640625000028, 64.04887695312499],
                                [10.91425781250004, 63.92109374999998],
                                [10.934863281250045, 63.770214843749955],
                                [10.055078125000051, 63.5126953125],
                                [9.567285156250051, 63.70615234374998],
                                [10.565625, 64.418310546875],
                                [11.523828125000051, 64.744384765625],
                                [11.632910156250063, 64.81391601562495],
                                [11.296777343750051, 64.75478515625],
                                [11.489355468750034, 64.975830078125],
                                [12.15966796875, 65.178955078125],
                                [12.508398437499977, 65.09941406250005],
                                [12.915527343750057, 65.33925781249997],
                                [12.417578125000063, 65.18408203124997],
                                [12.133886718749977, 65.27915039062498],
                                [12.68886718750008, 65.90219726562498],
                                [13.033105468750051, 65.95625],
                                [12.783789062500063, 66.10043945312506],
                                [14.034179687500057, 66.29755859374998],
                                [13.118847656250011, 66.23066406250004],
                                [13.211425781250028, 66.64082031250001],
                                [13.959472656250028, 66.79433593750002],
                                [13.651562500000011, 66.90708007812498],
                                [14.10878906250008, 67.11923828125003],
                                [15.41572265625004, 67.20244140625002],
                                [14.441699218750045, 67.27138671875005],
                                [14.961914062500057, 67.57426757812502],
                                [15.59443359375004, 67.34853515625005],
                                [15.691503906250006, 67.52138671875],
                                [15.24873046875004, 67.6021484375],
                                [15.303906250000011, 67.76528320312502],
                                [14.854687500000068, 67.66333007812506],
                                [14.798925781250063, 67.80932617187503],
                                [15.13427734375, 67.97270507812502],
                                [15.621386718750017, 67.94829101562502],
                                [15.316015624999977, 68.06875],
                                [16.007910156250006, 68.22871093750004],
                                [16.312304687500017, 67.88144531249998],
                                [16.20380859375001, 68.31674804687503],
                                [17.552832031250063, 68.42626953125006],
                                [16.51435546875004, 68.53256835937503],
                                [18.101464843749994, 69.15629882812499],
                                [18.259765625, 69.47060546875],
                                [18.915917968750023, 69.33559570312502],
                                [18.614453125000068, 69.49057617187498],
                                [19.197265625000057, 69.74785156249999],
                                [19.722460937500017, 69.78164062500002],
                                [19.64150390625005, 69.42402343750001],
                                [20.324218750000057, 69.94531249999997],
                                [20.054492187500074, 69.33266601562497],
                                [20.486718750000023, 69.54208984375],
                                [20.739453124999983, 69.52050781250003],
                                [20.622070312500057, 69.91391601562498],
                                [21.163085937500057, 69.88950195312498],
                                [21.432910156250045, 70.01318359375006],
                                [21.974707031250034, 69.83457031249998],
                                [21.355761718750045, 70.23339843749997],
                                [22.321972656250068, 70.264501953125],
                                [22.684570312500057, 70.374755859375],
                                [23.35390625000008, 69.98339843750003],
                                [23.3291015625, 70.20722656249995],
                                [24.420019531250034, 70.70200195312503],
                                [24.263476562500017, 70.82631835937497],
                                [24.658007812500017, 71.00102539062505],
                                [25.264648437500057, 70.843505859375],
                                [25.768164062500063, 70.85317382812502],
                                [25.043847656250023, 70.10903320312502],
                                [26.66132812500004, 70.93974609374999],
                                [26.585058593750034, 70.41000976562498],
                                [26.989355468750063, 70.51137695312502],
                                [27.183691406250034, 70.74404296875],
                                [27.546484375000063, 70.80400390625005],
                                [27.23525390625008, 70.94721679687498],
                                [27.59707031250005, 71.09130859375003],
                                [28.392285156250068, 70.97529296875004],
                                [27.898046875, 70.67792968750001],
                                [28.271777343750017, 70.66796875000003],
                                [28.192968750000034, 70.24858398437505],
                                [28.83154296875003, 70.86396484375001],
                                [29.7375, 70.646826171875],
                                [30.065136718750097, 70.70297851562498],
                                [30.944140625000017, 70.27441406249997],
                                [30.262988281250074, 70.12470703125004],
                                [28.804296875000063, 70.09252929687506],
                                [29.601367187500017, 69.97675781249998],
                                [29.792089843750063, 69.727880859375],
                                [30.08828125, 69.71757812500005],
                                [30.237597656250017, 69.86220703125002],
                                [30.428320312500006, 69.722265625],
                                [30.869726562500006, 69.78344726562506]
                            ]
                        ],
                        [
                            [
                                [25.58632812500005, 71.14208984375],
                                [26.13378906250003, 70.99580078125004],
                                [25.582031250000057, 70.960791015625],
                                [25.31494140625, 71.03413085937504],
                                [25.58632812500005, 71.14208984375]
                            ]
                        ],
                        [
                            [
                                [-8.953564453124983, 70.83916015625002],
                                [-8.001367187499966, 71.17768554687495],
                                [-8.002099609374937, 71.04125976562497],
                                [-8.953564453124983, 70.83916015625002]
                            ]
                        ],
                        [
                            [
                                [19.219335937500006, 74.39101562500002],
                                [18.86123046875008, 74.51416015624997],
                                [19.182910156250045, 74.51791992187503],
                                [19.219335937500006, 74.39101562500002]
                            ]
                        ],
                        [
                            [
                                [21.60810546875004, 78.59570312499997],
                                [22.04316406250004, 78.57695312500007],
                                [22.29951171875004, 78.22817382812497],
                                [23.451953125000074, 78.14946289062502],
                                [23.11669921874997, 77.99150390624999],
                                [24.901855468750057, 77.756591796875],
                                [22.55371093750003, 77.26665039062502],
                                [22.685351562500045, 77.55351562500002],
                                [20.928125, 77.45966796874998],
                                [21.653125, 77.92353515624998],
                                [20.22792968750005, 78.47783203125005],
                                [21.60810546875004, 78.59570312499997]
                            ]
                        ],
                        [
                            [
                                [11.250292968750017, 78.610693359375],
                                [12.116406250000068, 78.232568359375],
                                [11.121289062500011, 78.46328125],
                                [10.558203125000063, 78.90292968750003],
                                [11.250292968750017, 78.610693359375]
                            ]
                        ],
                        [
                            [
                                [29.047070312500068, 78.91206054687504],
                                [29.69667968750005, 78.90473632812495],
                                [27.88906250000005, 78.8521484375],
                                [28.511132812500023, 78.96733398437502],
                                [29.047070312500068, 78.91206054687504]
                            ]
                        ],
                        [
                            [
                                [16.786718750000034, 79.90673828125],
                                [17.834570312499977, 79.80004882812503],
                                [17.66875, 79.38593750000004],
                                [18.39736328125008, 79.60517578125001],
                                [18.677832031250006, 79.26171875000003],
                                [19.893554687500057, 79.05620117187499],
                                [20.61103515625004, 79.10664062499998],
                                [21.388769531250034, 78.74042968749998],
                                [19.67675781250003, 78.60957031249995],
                                [16.700488281250045, 76.57929687499995],
                                [14.365820312500034, 77.23447265625003],
                                [13.995703125000034, 77.50820312500002],
                                [14.69501953125004, 77.525048828125],
                                [14.920800781250023, 77.68881835937506],
                                [17.033300781250006, 77.79770507812503],
                                [16.91406250000003, 77.89799804687505],
                                [14.089941406250063, 77.77138671875],
                                [13.680566406250051, 78.028125],
                                [14.307226562500006, 78.00507812500001],
                                [15.783886718750011, 78.32705078125005],
                                [17.00292968750003, 78.36938476562497],
                                [16.44863281250008, 78.50356445312502],
                                [16.78261718750008, 78.66362304687505],
                                [15.417382812500023, 78.47324218749998],
                                [15.384179687500023, 78.77119140625001],
                                [15.01630859375004, 78.63012695312497],
                                [14.689257812500017, 78.720947265625],
                                [14.638281250000034, 78.41459960937502],
                                [14.110449218750063, 78.27089843749997],
                                [13.150195312499989, 78.2375],
                                [11.365429687500011, 78.95039062500004],
                                [12.323437500000068, 78.91425781249995],
                                [12.083984375000028, 79.26752929687498],
                                [11.579785156250068, 79.28349609375005],
                                [11.208105468750034, 79.12963867187503],
                                [10.737597656250017, 79.52016601562502],
                                [10.804003906250045, 79.79877929687504],
                                [11.150390625, 79.71699218749998],
                                [11.702343750000011, 79.82060546875005],
                                [12.287792968750068, 79.713134765625],
                                [12.279980468749983, 79.81596679687507],
                                [13.692871093749972, 79.860986328125],
                                [13.777539062500011, 79.71528320312498],
                                [12.555371093750068, 79.56948242187502],
                                [13.333789062500017, 79.57480468750006],
                                [14.029589843750017, 79.34414062500005],
                                [14.59365234375008, 79.79873046875002],
                                [16.34375, 78.97612304687502],
                                [15.816113281250011, 79.68183593750001],
                                [16.245703125000034, 80.04946289062502],
                                [16.786718750000034, 79.90673828125]
                            ]
                        ],
                        [
                            [
                                [32.52597656250006, 80.119140625],
                                [31.48193359374997, 80.10791015625003],
                                [33.62929687499999, 80.21743164062497],
                                [32.52597656250006, 80.119140625]
                            ]
                        ],
                        [
                            [
                                [20.897851562500023, 80.24995117187501],
                                [22.289746093749983, 80.04921874999997],
                                [22.450781250000034, 80.40224609375005],
                                [23.00800781250004, 80.473974609375],
                                [23.114550781250074, 80.18696289062498],
                                [24.29755859375004, 80.36040039062505],
                                [26.86083984375, 80.16000976562498],
                                [27.19863281250008, 79.90659179687506],
                                [25.641210937500034, 79.40302734374995],
                                [23.94775390625, 79.19428710937498],
                                [22.903710937500023, 79.23066406250001],
                                [22.865527343750045, 79.41186523437497],
                                [20.861132812500017, 79.39785156249997],
                                [20.128222656250074, 79.489599609375],
                                [19.674609375000045, 79.591162109375],
                                [20.784082031250023, 79.74858398437502],
                                [18.725, 79.7607421875],
                                [18.25537109375, 79.92919921875003],
                                [18.855957031250057, 80.03662109375],
                                [17.91689453125005, 80.14311523437502],
                                [19.343359375000063, 80.11640624999998],
                                [19.733300781249994, 80.47783203124999],
                                [20.897851562500023, 80.24995117187501]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Norway",
                    childNum: 27
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [87.984375, 27.133935546874994],
                            [87.9931640625, 27.086083984374994],
                            [88.11103515625001, 26.928466796875],
                            [88.1572265625, 26.807324218749997],
                            [88.16152343750002, 26.724804687499997],
                            [88.11152343750001, 26.58642578125],
                            [88.05488281250001, 26.430029296875],
                            [88.02695312500003, 26.39501953125],
                            [87.9951171875, 26.382373046874996],
                            [87.28740234374999, 26.360302734374997],
                            [87.01640624999999, 26.555419921875],
                            [86.70136718750001, 26.43505859375],
                            [86.00732421875, 26.649365234374997],
                            [85.79453125000003, 26.604150390624994],
                            [85.7373046875, 26.63974609375],
                            [85.6484375, 26.829003906249994],
                            [85.56845703125003, 26.83984375],
                            [85.29296875, 26.741015625],
                            [85.19179687500002, 26.766552734374997],
                            [84.68535156249999, 27.041015625],
                            [84.65380859375, 27.091699218749994],
                            [84.65478515625, 27.203662109374996],
                            [84.64072265625003, 27.249853515625],
                            [84.61015624999999, 27.298681640625],
                            [84.48085937500002, 27.348193359374996],
                            [84.22978515624999, 27.42783203125],
                            [84.09101562500001, 27.491357421874994],
                            [83.82880859375001, 27.377832031249994],
                            [83.74697265625002, 27.395947265624997],
                            [83.55166015625002, 27.456347656249996],
                            [83.44716796875002, 27.46533203125],
                            [83.38398437500001, 27.44482421875],
                            [83.36943359374999, 27.41025390625],
                            [83.28974609375001, 27.370996093749994],
                            [82.7333984375, 27.518994140624997],
                            [82.71083984375002, 27.5966796875],
                            [82.67734375000003, 27.6734375],
                            [82.6298828125, 27.687060546874996],
                            [82.45136718750001, 27.671826171874997],
                            [82.28769531250003, 27.756542968749997],
                            [82.11191406250003, 27.864941406249997],
                            [82.03701171875002, 27.900585937499997],
                            [81.98769531250002, 27.913769531249997],
                            [81.94521484375002, 27.899267578125],
                            [81.896875, 27.874462890624997],
                            [81.85263671875003, 27.867089843749994],
                            [81.1689453125, 28.335009765624996],
                            [80.58701171875003, 28.649609375],
                            [80.51787109374999, 28.665185546874994],
                            [80.49580078125001, 28.635791015624996],
                            [80.47910156250003, 28.604882812499994],
                            [80.41855468750003, 28.612011718749997],
                            [80.32480468750003, 28.66640625],
                            [80.2265625, 28.723339843749997],
                            [80.07070312500002, 28.83017578125],
                            [80.05166015625002, 28.8703125],
                            [80.08457031250003, 28.994189453124996],
                            [80.13046875000003, 29.100390625],
                            [80.16953125000003, 29.124316406249996],
                            [80.23300781250003, 29.194628906249996],
                            [80.25595703125003, 29.318017578124994],
                            [80.2548828125, 29.42333984375],
                            [80.31689453125, 29.572070312499996],
                            [80.40185546875, 29.730273437499996],
                            [80.54902343750001, 29.899804687499994],
                            [80.81992187500003, 30.119335937499997],
                            [80.84814453125, 30.13974609375],
                            [80.90761718750002, 30.171923828124996],
                            [80.96611328124999, 30.180029296875],
                            [81.17714843750002, 30.039892578125],
                            [81.25507812500001, 30.093310546874996],
                            [81.41718750000001, 30.337597656249997],
                            [81.64189453124999, 30.3875],
                            [81.85488281250002, 30.36240234375],
                            [82.04335937500002, 30.3267578125],
                            [82.220703125, 30.063867187499994],
                            [83.15546875000001, 29.612646484375],
                            [83.58349609375, 29.18359375],
                            [83.93593750000002, 29.279492187499997],
                            [84.02197265625, 29.253857421874997],
                            [84.10136718749999, 29.219970703125],
                            [84.12783203125002, 29.156298828124996],
                            [84.17558593749999, 29.036376953125],
                            [84.22871093750001, 28.911767578124994],
                            [84.796875, 28.560205078124994],
                            [84.85507812500003, 28.553613281249994],
                            [85.06914062499999, 28.609667968749996],
                            [85.12636718750002, 28.60263671875],
                            [85.15908203125002, 28.592236328124997],
                            [85.16015625, 28.571875],
                            [85.12148437500002, 28.484277343749994],
                            [85.08857421875001, 28.372265625],
                            [85.12246093750002, 28.315966796874996],
                            [85.21210937500001, 28.292626953124994],
                            [85.41064453125, 28.276025390624994],
                            [85.67832031250003, 28.27744140625],
                            [85.75947265625001, 28.220654296874997],
                            [85.84023437500002, 28.1353515625],
                            [85.92167968749999, 27.989697265624997],
                            [85.9541015625, 27.92822265625],
                            [85.99453125000002, 27.910400390625],
                            [86.06416015625001, 27.934716796874994],
                            [86.07871093750003, 28.08359375],
                            [86.13701171874999, 28.11435546875],
                            [86.21796875000001, 28.0220703125],
                            [86.32861328125, 27.959521484374996],
                            [86.40869140625, 27.928662109374997],
                            [86.51689453124999, 27.963525390624994],
                            [86.55449218749999, 28.085205078125],
                            [86.61445312500001, 28.10302734375],
                            [86.69052734375003, 28.094921875],
                            [86.71962890625002, 28.070654296875],
                            [86.75039062500002, 28.0220703125],
                            [86.93378906250001, 27.968457031249997],
                            [87.02011718750003, 27.928662109374997],
                            [87.14140624999999, 27.838330078124997],
                            [87.29072265625001, 27.821923828124994],
                            [87.62255859375, 27.815185546875],
                            [87.86074218750002, 27.886083984375],
                            [88.10976562500002, 27.87060546875],
                            [87.984375, 27.133935546874994]
                        ]
                    ]
                },
                properties: {
                    name: "Nepal",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [169.17822265624997, -52.497265625],
                                [169.12753906250006, -52.570312499999964],
                                [169.02177734375002, -52.49541015624998],
                                [169.17822265624997, -52.497265625]
                            ]
                        ],
                        [
                            [
                                [166.22109375, -50.76152343749997],
                                [166.2428710937501, -50.84570312499998],
                                [165.88916015624997, -50.80771484374996],
                                [166.10136718750002, -50.538964843750016],
                                [166.26748046875005, -50.558593750000014],
                                [166.22109375, -50.76152343749997]
                            ]
                        ],
                        [
                            [
                                [168.14492187500005, -46.862207031249966],
                                [168.04316406250004, -46.9326171875],
                                [168.2409179687501, -47.070019531250026],
                                [167.52197265624997, -47.258691406249994],
                                [167.80078125000003, -46.90654296875002],
                                [167.78398437500007, -46.699804687500006],
                                [167.9557617187501, -46.69443359374998],
                                [168.14492187500005, -46.862207031249966]
                            ]
                        ],
                        [
                            [
                                [166.97949218749997, -45.17968750000003],
                                [167.02265625000004, -45.299804687499986],
                                [166.89267578125012, -45.24052734374999],
                                [166.97949218749997, -45.17968750000003]
                            ]
                        ],
                        [
                            [
                                [-176.17763671874997, -43.74033203124998],
                                [-176.38173828124997, -43.86679687499998],
                                [-176.40737304687497, -43.7609375],
                                [-176.516552734375, -43.78476562499996],
                                [-176.33359375000003, -44.02529296875004],
                                [-176.51552734374997, -44.11660156249998],
                                [-176.62934570312495, -44.036132812500014],
                                [-176.55512695312504, -43.85195312499998],
                                [-176.84765625000003, -43.82392578125004],
                                [-176.56611328124995, -43.717578125000045],
                                [-176.17763671874997, -43.74033203124998]
                            ]
                        ],
                        [
                            [
                                [173.91464843750018, -40.86367187500004],
                                [173.78085937500012, -40.921777343749966],
                                [173.964453125, -40.71298828124998],
                                [173.91464843750018, -40.86367187500004]
                            ]
                        ],
                        [
                            [
                                [173.11533203125006, -41.27929687499997],
                                [173.94716796875005, -40.92412109375],
                                [173.79785156250003, -41.271972656249986],
                                [173.99941406250005, -40.99326171874996],
                                [174.30253906249996, -41.019531249999986],
                                [174.03857421875003, -41.24189453125],
                                [174.37011718750009, -41.1037109375],
                                [174.06933593750009, -41.42949218750002],
                                [174.08369140625015, -41.67080078124998],
                                [174.2831054687501, -41.740625],
                                [173.22119140624997, -42.976562499999986],
                                [172.62402343749997, -43.27246093749996],
                                [172.73476562500005, -43.35478515625003],
                                [172.52666015625002, -43.464746093749966],
                                [172.69345703125006, -43.444335937499986],
                                [172.80703125000005, -43.620996093749994],
                                [173.07324218750003, -43.676171874999966],
                                [173.065625, -43.87460937499998],
                                [172.50273437500002, -43.84365234374998],
                                [172.48037109375, -43.726660156250034],
                                [172.29658203125004, -43.867871093750026],
                                [172.035546875, -43.70175781250002],
                                [172.17978515625006, -43.895996093749986],
                                [171.24072265624997, -44.26416015625003],
                                [171.14628906250002, -44.9123046875],
                                [170.99902343750003, -44.91142578124999],
                                [171.11328125000003, -45.03925781250001],
                                [170.7005859375, -45.68427734374997],
                                [170.77626953125005, -45.870898437499974],
                                [170.4191406250001, -45.94101562499996],
                                [169.68662109375006, -46.55166015625002],
                                [169.34228515625003, -46.62050781250001],
                                [168.38212890625007, -46.60537109374995],
                                [168.1891601562501, -46.362207031249966],
                                [167.8419921875001, -46.366210937499986],
                                [167.539453125, -46.14853515624996],
                                [167.36894531250007, -46.24150390624999],
                                [166.73154296875006, -46.19785156249998],
                                [166.91669921875004, -45.95722656249998],
                                [166.64990234374997, -46.04169921875004],
                                [166.71796875000004, -45.88935546875001],
                                [166.49316406249997, -45.9638671875],
                                [166.48828124999997, -45.83183593750002],
                                [167.0033203125, -45.71210937500004],
                                [166.79765625000002, -45.64560546874999],
                                [166.99082031250012, -45.531738281249986],
                                [166.73398437500012, -45.54355468749999],
                                [166.74306640625, -45.46845703124997],
                                [166.91992187499997, -45.40791015624998],
                                [166.86923828125006, -45.31123046875],
                                [167.15566406250005, -45.410937499999974],
                                [167.23007812500012, -45.29033203125],
                                [167.02587890624997, -45.12363281249998],
                                [167.25947265625004, -45.08222656249997],
                                [167.19453125000004, -44.963476562500034],
                                [167.41074218750006, -44.82792968750003],
                                [167.4662109375, -44.958300781250045],
                                [167.48496093750006, -44.77138671874998],
                                [167.78701171875, -44.59501953125002],
                                [167.90898437500002, -44.66474609375001],
                                [167.85654296875012, -44.50068359374998],
                                [168.45742187500005, -44.030566406250045],
                                [169.17890625000004, -43.9130859375],
                                [169.16953125000006, -43.77705078125],
                                [169.83388671875, -43.53701171875004],
                                [170.24023437499997, -43.163867187500045],
                                [170.39609375000012, -43.18222656249996],
                                [170.30283203125012, -43.10761718750004],
                                [170.61181640625003, -43.091796875000014],
                                [170.5236328125001, -43.00898437500001],
                                [170.6654296875, -42.961230468749974],
                                [170.73525390625005, -43.029785156249986],
                                [170.96992187500004, -42.71835937499996],
                                [171.01171875000003, -42.88505859374999],
                                [171.027734375, -42.696093750000045],
                                [171.31337890625005, -42.460156250000026],
                                [171.48623046875, -41.7947265625],
                                [171.94804687500002, -41.53867187499996],
                                [172.13945312500002, -40.947265625000014],
                                [172.640625, -40.51826171875001],
                                [172.94365234375007, -40.51875],
                                [172.73261718750004, -40.54375],
                                [172.70439453125002, -40.6677734375],
                                [172.988671875, -40.84824218749999],
                                [173.11533203125006, -41.27929687499997]
                            ]
                        ],
                        [
                            [
                                [175.54316406250015, -36.279296874999986],
                                [175.34619140624997, -36.217773437499986],
                                [175.3895507812501, -36.07773437499996],
                                [175.54316406250015, -36.279296874999986]
                            ]
                        ],
                        [
                            [
                                [173.26943359375, -34.93476562499998],
                                [173.44785156250012, -34.844335937500034],
                                [173.47265625000003, -34.94697265624998],
                                [174.10400390625003, -35.14287109375002],
                                [174.1431640625, -35.3],
                                [174.32031250000003, -35.246679687500034],
                                [174.58066406250018, -35.78554687500004],
                                [174.39580078124996, -35.79736328124996],
                                [174.8021484375, -36.30947265625001],
                                [174.72246093750007, -36.84121093749998],
                                [175.29951171875004, -36.99326171874996],
                                [175.38535156250012, -37.206933593749966],
                                [175.54248046874997, -37.2013671875],
                                [175.46083984375005, -36.475683593750034],
                                [175.77216796875004, -36.73515625],
                                [176.10839843749997, -37.64511718749998],
                                [177.27402343750012, -37.993457031249974],
                                [178.0091796875, -37.55488281249998],
                                [178.53623046875006, -37.69208984375004],
                                [178.26767578125006, -38.551171875],
                                [177.976171875, -38.72226562500005],
                                [177.90878906250012, -39.23955078125],
                                [177.52294921875003, -39.07382812499999],
                                [177.07675781250012, -39.22177734375002],
                                [176.93925781249996, -39.55527343750002],
                                [177.10986328125009, -39.673144531250045],
                                [176.8421875000001, -40.15781250000002],
                                [175.98291015625003, -41.21328125000002],
                                [175.30976562499998, -41.610644531249974],
                                [175.16562500000012, -41.41738281249995],
                                [174.88134765624997, -41.42402343749997],
                                [174.8656250000001, -41.223046874999966],
                                [174.63535156250012, -41.28945312499999],
                                [175.1625, -40.62158203125],
                                [175.25410156250004, -40.28935546875],
                                [175.1559570312501, -40.11494140625],
                                [175.00927734375009, -39.95214843749996],
                                [173.93437500000013, -39.50908203125002],
                                [173.76367187499997, -39.31875],
                                [173.84433593750006, -39.13935546875001],
                                [174.39843749999997, -38.96259765624998],
                                [174.59736328124998, -38.78505859374995],
                                [174.80166015625005, -37.895507812500014],
                                [174.92802734375002, -37.80449218750003],
                                [174.58583984374994, -37.09775390625002],
                                [174.73427734375, -37.21523437499998],
                                [174.92890625000004, -37.084765625000045],
                                [174.78203125000013, -36.94375],
                                [174.47558593750009, -36.94189453124997],
                                [174.1888671875001, -36.492285156250034],
                                [174.4015625000001, -36.60195312499999],
                                [174.39277343750004, -36.24003906249999],
                                [174.26787109375002, -36.16308593750003],
                                [174.25371093749996, -36.24912109374998],
                                [174.03642578125013, -36.12246093750001],
                                [173.91445312499994, -35.908691406249986],
                                [173.91728515625002, -36.01816406249999],
                                [174.16640624999994, -36.327636718749986],
                                [174.05468749999991, -36.35976562500004],
                                [173.41220703125012, -35.542578125],
                                [173.62617187500004, -35.31914062499996],
                                [173.3763671875001, -35.50009765624996],
                                [173.31396484375003, -35.44335937499996],
                                [173.11669921874997, -35.205273437500026],
                                [173.190625, -35.01621093749998],
                                [172.70595703125005, -34.45517578124998],
                                [173.04394531249997, -34.429101562499994],
                                [172.96376953125, -34.53515625000003],
                                [173.26943359375, -34.93476562499998]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "New Zealand",
                    childNum: 9
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [58.722070312499994, 20.21875],
                                [58.640917968750074, 20.210693359375057],
                                [58.64121093750006, 20.33735351562501],
                                [58.884375, 20.680566406250023],
                                [58.95078125000006, 20.516162109375017],
                                [58.722070312499994, 20.21875]
                            ]
                        ],
                        [
                            [
                                [56.38798828125002, 24.97919921875004],
                                [56.640625, 24.4703125],
                                [57.12304687500003, 23.980712890625],
                                [58.773046875, 23.517187499999977],
                                [59.42939453125004, 22.660839843749955],
                                [59.82324218749997, 22.50898437500004],
                                [59.8, 22.21992187500001],
                                [59.37148437500005, 21.498828125000017],
                                [58.89570312500004, 21.11279296874997],
                                [58.47421875000006, 20.406884765624966],
                                [58.20898437500003, 20.423974609374994],
                                [58.245019531249994, 20.599218749999977],
                                [58.16943359375003, 20.58950195312505],
                                [57.86181640624997, 20.24414062500003],
                                [57.71416015625002, 19.678417968749983],
                                [57.81162109375006, 19.01708984374997],
                                [56.825976562500074, 18.753515625],
                                [56.3834960937501, 17.98798828125001],
                                [55.479101562500006, 17.84326171875003],
                                [55.25537109375003, 17.58564453125004],
                                [55.275195312500074, 17.320898437500006],
                                [55.06416015625004, 17.038916015625034],
                                [54.06816406250002, 17.005517578124966],
                                [53.60986328124997, 16.75996093750004],
                                [53.08564453125004, 16.648388671874955],
                                [51.977636718750006, 18.996142578125074],
                                [54.97734375000002, 19.995947265625006],
                                [55.64101562499999, 22.001855468749994],
                                [55.185839843750074, 22.7041015625],
                                [55.1999023437501, 23.034765625000034],
                                [55.53164062499999, 23.81904296875001],
                                [55.4684570312501, 23.94111328125001],
                                [55.98515625000002, 24.063378906249966],
                                [55.92861328125005, 24.215136718750074],
                                [55.76083984375006, 24.24267578125],
                                [55.795703125000074, 24.868115234374955],
                                [56.00058593750006, 24.953222656249977],
                                [56.06386718750005, 24.73876953125],
                                [56.38798828125002, 24.97919921875004]
                            ]
                        ],
                        [
                            [
                                [56.29785156250003, 25.650683593750045],
                                [56.144628906250006, 25.690527343750006],
                                [56.16748046875003, 26.047460937499977],
                                [56.08046875, 26.06264648437505],
                                [56.41308593749997, 26.351171875000034],
                                [56.29785156250003, 25.650683593750045]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Oman",
                    childNum: 3
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [73.08961802927895, 36.86435907947333],
                            [73.08203125000107, 36.43949943991182],
                            [72.31128647748268, 35.77290936638241],
                            [73.13410859949555, 34.82510160558277],
                            [73.19895048106557, 33.88770931468204],
                            [74.00809389139292, 33.25375789331485],
                            [73.98984375, 33.22119140625],
                            [74.30361328125002, 32.991796875],
                            [74.30546875000002, 32.810449218749994],
                            [74.35458984375, 32.768701171874994],
                            [74.58828125000002, 32.753222656249996],
                            [74.632421875, 32.770898437499994],
                            [74.66328125000001, 32.757666015625],
                            [74.64335937500002, 32.607714843749996],
                            [74.68574218750001, 32.493798828124994],
                            [74.78886718750002, 32.4578125],
                            [74.9873046875, 32.462207031249996],
                            [75.33349609375, 32.279199218749994],
                            [75.25410156250001, 32.14033203125],
                            [75.13876953125, 32.104785156249996],
                            [75.07148437500001, 32.08935546875],
                            [74.73945312500001, 31.948828125],
                            [74.6357421875, 31.88974609375],
                            [74.55556640625002, 31.818554687499997],
                            [74.5259765625, 31.76513671875],
                            [74.50996093750001, 31.712939453124996],
                            [74.58183593750002, 31.52392578125],
                            [74.59394531250001, 31.465380859374996],
                            [74.53496093750002, 31.261376953124994],
                            [74.51767578125, 31.185595703124996],
                            [74.6103515625, 31.112841796874996],
                            [74.62578125000002, 31.06875],
                            [74.6328125, 31.03466796875],
                            [74.509765625, 30.959667968749997],
                            [74.38037109375, 30.893408203125],
                            [74.33935546875, 30.8935546875],
                            [74.00898437500001, 30.519677734374994],
                            [73.89931640625002, 30.435351562499996],
                            [73.88271484375002, 30.3521484375],
                            [73.92460937500002, 30.28164062499999],
                            [73.93339843750002, 30.222070312499994],
                            [73.88652343750002, 30.162011718749994],
                            [73.8091796875, 30.093359375],
                            [73.38164062500002, 29.934375],
                            [72.9033203125, 29.028759765624997],
                            [72.34189453125, 28.751904296874997],
                            [72.2919921875, 28.697265625],
                            [72.128515625, 28.346337890624994],
                            [71.94804687500002, 28.177294921874996],
                            [71.88886718750001, 28.0474609375],
                            [71.87031250000001, 27.9625],
                            [71.54296875, 27.869873046875],
                            [71.18476562500001, 27.831640625],
                            [70.87490234375002, 27.714453125],
                            [70.79794921875, 27.709619140624994],
                            [70.69160156250001, 27.768994140624997],
                            [70.62910156250001, 27.937451171874997],
                            [70.40371093750002, 28.025048828124994],
                            [70.24433593750001, 27.934130859374996],
                            [70.1939453125, 27.894873046875],
                            [70.14453125, 27.849023437499994],
                            [70.0498046875, 27.694726562499994],
                            [69.89628906250002, 27.4736328125],
                            [69.56796875, 27.174609375],
                            [69.47001953125002, 26.804443359375],
                            [70.11464843750002, 26.548046875],
                            [70.14921875000002, 26.347558593749994],
                            [70.1001953125, 25.910058593749994],
                            [70.2646484375, 25.70654296875],
                            [70.3251953125, 25.685742187499997],
                            [70.44853515625002, 25.681347656249997],
                            [70.505859375, 25.685302734375],
                            [70.56953125000001, 25.705957031249994],
                            [70.6484375, 25.666943359374997],
                            [70.65205078125001, 25.422900390625003],
                            [70.87773437500002, 25.06298828125],
                            [70.95087890625001, 24.8916015625],
                            [71.02070312500001, 24.75766601562499],
                            [71.0478515625, 24.687744140625],
                            [71.00234375000002, 24.65390625],
                            [70.97636718750002, 24.61875],
                            [70.96982421875, 24.571875],
                            [71.04531250000002, 24.429980468750003],
                            [71.04404296875, 24.400097656249997],
                            [70.98281250000002, 24.361035156249997],
                            [70.928125, 24.362353515625003],
                            [70.88623046875, 24.34375],
                            [70.80507812500002, 24.261962890625],
                            [70.76728515625001, 24.245410156250003],
                            [70.71630859375, 24.237988281249997],
                            [70.65947265625002, 24.24609375],
                            [70.57929687500001, 24.279052734375],
                            [70.55585937500001, 24.331103515625003],
                            [70.5650390625, 24.385791015625003],
                            [70.54677734375002, 24.41831054687499],
                            [70.2890625, 24.35629882812499],
                            [70.0982421875, 24.2875],
                            [69.80517578125, 24.165234375],
                            [69.71621093750002, 24.172607421875],
                            [69.63417968750002, 24.22519531249999],
                            [69.5591796875, 24.273095703124994],
                            [69.44345703125, 24.275390625],
                            [69.23505859375001, 24.268261718749997],
                            [69.11953125000002, 24.26865234374999],
                            [69.05156250000002, 24.286328125],
                            [68.98457031250001, 24.273095703124994],
                            [68.90078125000002, 24.292431640624997],
                            [68.86347656250001, 24.266503906249994],
                            [68.82832031250001, 24.26401367187499],
                            [68.78115234375002, 24.313720703125],
                            [68.75898437500001, 24.30722656249999],
                            [68.73964843750002, 24.2919921875],
                            [68.728125, 24.265625],
                            [68.72412109375, 23.96469726562499],
                            [68.48867187500002, 23.967236328124997],
                            [68.38125, 23.950878906249997],
                            [68.28251953125002, 23.927978515625],
                            [68.1650390625, 23.857324218749994],
                            [68.11552734375002, 23.753369140624997],
                            [67.8599609375, 23.90268554687499],
                            [67.66845703125, 23.810986328124997],
                            [67.309375, 24.1748046875],
                            [67.171484375, 24.756103515625],
                            [66.70302734375002, 24.8609375],
                            [66.69863281250002, 25.226318359375],
                            [66.32421875, 25.601806640625],
                            [66.13115234375002, 25.49326171874999],
                            [66.46767578125002, 25.4453125],
                            [64.77666015625002, 25.307324218749997],
                            [64.65898437500002, 25.18408203125],
                            [64.059375, 25.40292968749999],
                            [63.556640625, 25.353173828124994],
                            [63.49140625000001, 25.210839843749994],
                            [61.56689453125, 25.186328125],
                            [61.587890625, 25.20234375],
                            [61.61542968750001, 25.2861328125],
                            [61.64013671875, 25.584619140624994],
                            [61.67138671875, 25.6923828125],
                            [61.66181640625001, 25.751269531250003],
                            [61.66865234375001, 25.768994140624997],
                            [61.73769531250002, 25.82109375],
                            [61.75439453125, 25.84335937499999],
                            [61.78076171875, 25.995849609375],
                            [61.80996093750002, 26.165283203125],
                            [61.842382812500006, 26.225927734375],
                            [62.1259765625, 26.368994140625],
                            [62.239355468750006, 26.35703125],
                            [62.31230468750002, 26.490869140624994],
                            [63.168066406250006, 26.665576171874996],
                            [63.186132812500006, 26.837597656249997],
                            [63.24160156250002, 26.86474609375],
                            [63.25039062500002, 26.879248046875],
                            [63.24208984375002, 27.077685546874996],
                            [63.30517578125, 27.124560546874996],
                            [63.30156250000002, 27.15146484375],
                            [63.25625, 27.207910156249994],
                            [63.19609375000002, 27.243945312499996],
                            [63.16679687500002, 27.252490234374996],
                            [62.75273437500002, 27.265625],
                            [62.782324218750006, 27.800537109375],
                            [62.7625, 28.202050781249994],
                            [61.88984375000001, 28.546533203124994],
                            [61.15214843750002, 29.542724609375],
                            [61.0341796875, 29.663427734375],
                            [60.843359375, 29.858691406249996],
                            [61.22441406250002, 29.749414062499994],
                            [62.0009765625, 29.530419921874994],
                            [62.4765625, 29.408349609374994],
                            [63.56757812500001, 29.497998046874997],
                            [64.09873046875, 29.391943359375],
                            [64.39375, 29.544335937499994],
                            [65.09550781250002, 29.559472656249994],
                            [66.23125, 29.86572265625],
                            [66.346875, 30.802783203124996],
                            [66.82929687500001, 31.263671875],
                            [67.45283203125001, 31.234619140625],
                            [67.737890625, 31.343945312499997],
                            [67.57822265625, 31.506494140624994],
                            [68.16103515625002, 31.802978515625],
                            [68.59765625, 31.802978515625],
                            [68.86894531250002, 31.634228515624997],
                            [69.279296875, 31.936816406249996],
                            [69.24140625000001, 32.433544921875],
                            [69.5015625, 33.020068359374996],
                            [70.26113281250002, 33.289013671875],
                            [69.8896484375, 34.007275390625],
                            [70.65400390625001, 33.952294921874994],
                            [71.05156250000002, 34.049707031249994],
                            [71.095703125, 34.369433593749996],
                            [70.965625, 34.53037109375],
                            [71.62050781250002, 35.183007812499994],
                            [71.57197265625001, 35.546826171875],
                            [71.18505859375, 36.04208984375],
                            [71.23291015625, 36.12177734375],
                            [72.24980468750002, 36.734716796875],
                            [73.08961802927895, 36.86435907947333]
                        ]
                    ]
                },
                properties: {
                    name: "Pakistan",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-81.60327148437497, 7.332812499999989],
                                [-81.85205078125003, 7.453320312500026],
                                [-81.812158203125, 7.59238281250002],
                                [-81.72875976562494, 7.62119140625002],
                                [-81.60327148437497, 7.332812499999989]
                            ]
                        ],
                        [
                            [
                                [-78.89833984375002, 8.27426757812502],
                                [-78.960595703125, 8.435839843749989],
                                [-78.88325195312495, 8.460253906249989],
                                [-78.89833984375002, 8.27426757812502]
                            ]
                        ],
                        [
                            [
                                [-77.37421874999993, 8.65830078125002],
                                [-77.47851562499994, 8.498437500000037],
                                [-77.19599609374995, 7.972460937500003],
                                [-77.53828124999995, 7.56625976562502],
                                [-77.76191406249995, 7.698828125000034],
                                [-77.90117187499999, 7.229345703125048],
                                [-78.42158203124995, 8.060986328125011],
                                [-78.28735351562497, 8.091796874999972],
                                [-78.14189453125002, 8.386083984374977],
                                [-77.76054687499993, 8.133251953124983],
                                [-78.09946289062498, 8.496972656250009],
                                [-78.22304687500002, 8.396630859374994],
                                [-78.39921874999993, 8.505664062500003],
                                [-78.40986328124998, 8.35532226562502],
                                [-78.51406249999997, 8.628173828125],
                                [-79.08637695312495, 8.997167968750034],
                                [-79.50708007812494, 8.97006835937502],
                                [-79.68745117187493, 8.850976562500009],
                                [-79.81591796875, 8.639208984375031],
                                [-79.75043945312498, 8.595507812500017],
                                [-80.458984375, 8.213867187499972],
                                [-80.45810546875, 8.077050781249994],
                                [-80.01123046875, 7.500048828125031],
                                [-80.66669921874995, 7.225683593750006],
                                [-80.90122070312503, 7.277148437500017],
                                [-81.06386718749994, 7.89975585937502],
                                [-81.26840820312495, 7.625488281250014],
                                [-81.50415039062503, 7.721191406249972],
                                [-81.72763671875, 8.137548828124977],
                                [-82.15986328124995, 8.19482421875],
                                [-82.23544921874998, 8.311035156250057],
                                [-82.67954101562503, 8.321972656249969],
                                [-82.86611328124994, 8.246337890625014],
                                [-82.87934570312498, 8.07065429687502],
                                [-83.02734375, 8.337744140624991],
                                [-82.86162109374999, 8.453515625000037],
                                [-82.84477539062493, 8.489355468749963],
                                [-82.85571289062494, 8.635302734375031],
                                [-82.91704101562502, 8.740332031250034],
                                [-82.88198242187497, 8.805322265625037],
                                [-82.72783203125002, 8.916064453125031],
                                [-82.78305664062498, 8.990283203124974],
                                [-82.88134765625003, 9.055859375000011],
                                [-82.94033203124997, 9.060107421874989],
                                [-82.93984374999994, 9.449169921875026],
                                [-82.92504882812494, 9.469042968749989],
                                [-82.88896484374999, 9.481005859375017],
                                [-82.86015625, 9.511474609375014],
                                [-82.84399414062497, 9.570800781250014],
                                [-82.801025390625, 9.591796875000028],
                                [-82.64409179687502, 9.505859375000028],
                                [-82.56357421875003, 9.576660156249972],
                                [-82.50034179687503, 9.523242187500017],
                                [-82.37080078124993, 9.428564453124991],
                                [-82.33974609375, 9.209179687499983],
                                [-82.18813476562502, 9.191748046874977],
                                [-82.24418945312499, 9.031494140625014],
                                [-82.07788085937503, 8.93486328124996],
                                [-81.78022460937495, 8.957226562499983],
                                [-81.89448242187495, 9.140429687500003],
                                [-81.35478515624996, 8.78056640624996],
                                [-80.83867187499999, 8.887207031250014],
                                [-80.12709960937497, 9.20991210937504],
                                [-79.57729492187497, 9.597851562500026],
                                [-78.08276367187494, 9.236279296874997],
                                [-77.37421874999993, 8.65830078125002]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Panama",
                    childNum: 3
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-73.137353515625, -6.4658203125],
                            [-73.75810546874999, -6.90576171875],
                            [-73.79301757812499, -7.135058593750003],
                            [-73.758203125, -7.172753906250009],
                            [-73.72041015625, -7.309277343750011],
                            [-73.964306640625, -7.37890625],
                            [-73.95849609375, -7.506640625],
                            [-73.98173828124999, -7.535742187500006],
                            [-74.00205078124999, -7.556054687500009],
                            [-73.98173828124999, -7.585058593750006],
                            [-73.946875, -7.611230468750009],
                            [-73.89462890624999, -7.65478515625],
                            [-73.82207031249999, -7.738964843750011],
                            [-73.76689453124999, -7.753515625],
                            [-73.72041015625, -7.782519531250003],
                            [-73.73203125, -7.875390625],
                            [-73.54912109374999, -8.345800781250006],
                            [-73.39814453125, -8.458984375],
                            [-73.36040039062499, -8.479296875],
                            [-73.351708984375, -8.51416015625],
                            [-73.35673828124999, -8.566992187500006],
                            [-73.30244140625, -8.654003906250011],
                            [-73.203125, -8.719335937500006],
                            [-73.0705078125, -8.8828125],
                            [-72.9740234375, -8.9931640625],
                            [-72.970361328125, -9.1201171875],
                            [-73.08984375, -9.265722656250006],
                            [-73.209423828125, -9.411425781250003],
                            [-72.379052734375, -9.51015625],
                            [-72.181591796875, -10.003710937500003],
                            [-71.33940429687499, -9.988574218750003],
                            [-71.11528320312499, -9.852441406250009],
                            [-71.041748046875, -9.81875],
                            [-70.6369140625, -9.478222656250011],
                            [-70.60791015625, -9.463671875],
                            [-70.54111328124999, -9.4375],
                            [-70.57016601562499, -9.48984375],
                            [-70.592236328125, -9.54345703125],
                            [-70.59916992187499, -9.620507812500009],
                            [-70.642333984375, -11.01025390625],
                            [-70.59653320312499, -10.976855468750003],
                            [-70.53325195312499, -10.946875],
                            [-70.45087890625, -11.024804687500009],
                            [-70.39228515625, -11.05859375],
                            [-70.3419921875, -11.066699218750003],
                            [-70.29038085937499, -11.064257812500003],
                            [-70.22006835937499, -11.04765625],
                            [-70.06630859375, -10.982421875],
                            [-69.9603515625, -10.929882812500011],
                            [-69.839794921875, -10.933398437500003],
                            [-69.6740234375, -10.9541015625],
                            [-69.57861328125, -10.951757812500006],
                            [-68.68525390625, -12.501953125],
                            [-68.97861328124999, -12.880078125000011],
                            [-69.07412109375, -13.682812500000011],
                            [-68.87089843749999, -14.169726562500003],
                            [-69.35947265624999, -14.7953125],
                            [-69.37470703125, -14.962988281250006],
                            [-69.17246093749999, -15.236621093750003],
                            [-69.4208984375, -15.640625],
                            [-69.21757812499999, -16.14912109375001],
                            [-68.8427734375, -16.337890625],
                            [-69.03291015625, -16.47597656250001],
                            [-69.020703125, -16.6421875],
                            [-69.62485351562499, -17.2001953125],
                            [-69.645703125, -17.24853515625],
                            [-69.521923828125, -17.388964843750003],
                            [-69.510986328125, -17.46035156250001],
                            [-69.51108398437499, -17.5048828125],
                            [-69.5109375, -17.50605468750001],
                            [-69.58642578125, -17.5732421875],
                            [-69.684765625, -17.64980468750001],
                            [-69.85209960937499, -17.70380859375001],
                            [-69.80258789062499, -17.990234375],
                            [-69.92636718749999, -18.2060546875],
                            [-70.41826171874999, -18.34560546875001],
                            [-71.33696289062499, -17.68251953125001],
                            [-71.5322265625, -17.29433593750001],
                            [-72.46767578125, -16.708105468750006],
                            [-73.727685546875, -16.20166015625],
                            [-75.104248046875, -15.411914062500003],
                            [-75.533642578125, -14.89921875],
                            [-75.93388671874999, -14.63359375],
                            [-76.37646484375, -13.863085937500003],
                            [-76.259228515625, -13.802832031250006],
                            [-76.2236328125, -13.371191406250006],
                            [-76.83212890624999, -12.348730468750006],
                            [-77.152734375, -12.060351562500003],
                            [-77.2203125, -11.663378906250003],
                            [-77.633203125, -11.287792968750011],
                            [-77.736083984375, -10.83671875],
                            [-78.18559570312499, -10.089062500000011],
                            [-78.76225585937499, -8.616992187500003],
                            [-79.37724609374999, -7.835546875],
                            [-79.99497070312499, -6.768945312500009],
                            [-81.142041015625, -6.056738281250006],
                            [-81.164306640625, -5.875292968750003],
                            [-80.9306640625, -5.8408203125],
                            [-80.88193359374999, -5.635058593750003],
                            [-81.33662109375, -4.66953125],
                            [-81.283203125, -4.322265625],
                            [-80.503662109375, -3.49609375],
                            [-80.324658203125, -3.387890625000011],
                            [-80.24375, -3.576757812500006],
                            [-80.19414062499999, -3.905859375],
                            [-80.23051757812499, -3.924023437500011],
                            [-80.26689453124999, -3.948828125],
                            [-80.30327148437499, -4.005078125000011],
                            [-80.43720703125, -3.978613281250006],
                            [-80.49013671875, -4.010058593750003],
                            [-80.510009765625, -4.069531250000011],
                            [-80.49345703124999, -4.119140625],
                            [-80.4884765625, -4.16552734375],
                            [-80.453759765625, -4.205175781250006],
                            [-80.35288085937499, -4.20849609375],
                            [-80.44384765625, -4.335839843750009],
                            [-80.4884765625, -4.393652343750006],
                            [-80.47856445312499, -4.430078125],
                            [-80.42416992187499, -4.46142578125],
                            [-80.38349609375, -4.463671875],
                            [-80.293359375, -4.416796875],
                            [-80.1974609375, -4.31103515625],
                            [-80.13955078125, -4.296093750000011],
                            [-80.06352539062499, -4.327539062500009],
                            [-79.962890625, -4.390332031250011],
                            [-79.8451171875, -4.445898437500006],
                            [-79.797265625, -4.476367187500003],
                            [-79.71098632812499, -4.467578125],
                            [-79.63852539062499, -4.454882812500003],
                            [-79.57768554687499, -4.500585937500006],
                            [-79.51616210937499, -4.539160156250006],
                            [-79.501904296875, -4.670605468750011],
                            [-79.45576171875, -4.766210937500006],
                            [-79.3994140625, -4.840039062500011],
                            [-79.33095703125, -4.927832031250006],
                            [-79.26811523437499, -4.957617187500006],
                            [-79.186669921875, -4.958203125000011],
                            [-79.07626953124999, -4.990625],
                            [-79.03330078124999, -4.969140625],
                            [-78.995263671875, -4.908007812500003],
                            [-78.97539062499999, -4.873242187500011],
                            [-78.919189453125, -4.8583984375],
                            [-78.92578125, -4.770703125000011],
                            [-78.9076171875, -4.714453125],
                            [-78.8615234375, -4.6650390625],
                            [-78.68603515625, -4.562402343750009],
                            [-78.64799804687499, -4.248144531250006],
                            [-78.345361328125, -3.397363281250009],
                            [-78.240380859375, -3.472558593750009],
                            [-77.860595703125, -2.981640625000011],
                            [-76.6791015625, -2.562597656250006],
                            [-76.089794921875, -2.133105468750003],
                            [-75.570556640625, -1.53125],
                            [-75.42041015625, -.962207031250003],
                            [-75.40805664062499, -.92431640625],
                            [-75.24960937499999, -.951855468750011],
                            [-75.259375, -.590136718750003],
                            [-75.42470703125, -.408886718750011],
                            [-75.49106445312499, -.248339843750003],
                            [-75.56059570312499, -.200097656250009],
                            [-75.63203125, -.157617187500009],
                            [-75.62626953124999, -.122851562500003],
                            [-75.340478515625, -.1421875],
                            [-75.13837890625, -.050488281250011],
                            [-74.8017578125, -.200097656250009],
                            [-74.78046875, -.24453125],
                            [-74.75537109375, -.298632812500003],
                            [-74.691650390625, -.335253906250003],
                            [-74.616357421875, -.370019531250009],
                            [-74.555078125, -.429882812500011],
                            [-74.5138671875, -.470117187500009],
                            [-74.46518554687499, -.517675781250006],
                            [-74.41787109375, -.580664062500006],
                            [-74.334423828125, -.850878906250003],
                            [-74.28388671875, -.927832031250006],
                            [-74.24638671874999, -.970605468750009],
                            [-74.05439453125, -1.028613281250003],
                            [-73.98681640625, -1.09814453125],
                            [-73.926953125, -1.125195312500011],
                            [-73.86318359375, -1.196679687500009],
                            [-73.664306640625, -1.248828125],
                            [-73.4962890625, -1.693066406250011],
                            [-73.19697265625, -1.830273437500011],
                            [-73.1544921875, -2.278222656250009],
                            [-72.9896484375, -2.339746093750009],
                            [-72.94111328125, -2.39404296875],
                            [-72.21845703125, -2.400488281250006],
                            [-71.98427734375, -2.3265625],
                            [-71.93247070312499, -2.288671875],
                            [-71.86728515624999, -2.227734375000011],
                            [-71.802734375, -2.166308593750003],
                            [-71.75253906249999, -2.152734375],
                            [-71.55947265625, -2.22421875],
                            [-71.39697265625, -2.334082031250006],
                            [-71.19638671874999, -2.313085937500006],
                            [-71.11337890624999, -2.245410156250003],
                            [-71.027294921875, -2.225781250000011],
                            [-70.96855468749999, -2.206835937500003],
                            [-70.70537109374999, -2.341992187500011],
                            [-70.64799804687499, -2.40576171875],
                            [-70.57587890625, -2.418261718750003],
                            [-70.29462890625, -2.552539062500003],
                            [-70.24443359374999, -2.606542968750006],
                            [-70.16474609375, -2.639843750000011],
                            [-70.095849609375, -2.658203125],
                            [-70.735107421875, -3.781542968750003],
                            [-70.5296875, -3.866406250000011],
                            [-70.48583984375, -3.869335937500011],
                            [-70.42109375, -3.849609375],
                            [-70.37919921874999, -3.81875],
                            [-70.339501953125, -3.814355468750009],
                            [-70.2984375, -3.84423828125],
                            [-70.24028320312499, -3.882714843750009],
                            [-70.16752929687499, -4.050195312500009],
                            [-70.0171875, -4.162011718750009],
                            [-69.96591796874999, -4.2359375],
                            [-69.97202148437499, -4.301171875],
                            [-70.00395507812499, -4.327246093750006],
                            [-70.05332031249999, -4.333105468750006],
                            [-70.12880859375, -4.28662109375],
                            [-70.23916015625, -4.301171875],
                            [-70.31689453125, -4.246972656250009],
                            [-70.34365234375, -4.193652343750003],
                            [-70.40463867187499, -4.150097656250011],
                            [-70.5306640625, -4.167578125],
                            [-70.72158203125, -4.158886718750011],
                            [-70.79951171875, -4.17333984375],
                            [-70.97368164062499, -4.350488281250009],
                            [-71.8447265625, -4.50439453125],
                            [-72.256787109375, -4.748925781250009],
                            [-72.35283203124999, -4.786035156250009],
                            [-72.468994140625, -4.901269531250009],
                            [-72.608349609375, -5.009570312500003],
                            [-72.69873046875, -5.0671875],
                            [-72.83193359375, -5.09375],
                            [-72.88706054687499, -5.122753906250011],
                            [-72.9798828125, -5.634863281250006],
                            [-73.16289062499999, -5.933398437500003],
                            [-73.209375, -6.028710937500009],
                            [-73.235546875, -6.0984375],
                            [-73.137353515625, -6.4658203125]
                        ]
                    ]
                },
                properties: {
                    name: "Peru",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [120.250390625, 5.256591796875043],
                                [119.82148437500004, 5.06953125000004],
                                [120.1652343750001, 5.332421875000037],
                                [120.250390625, 5.256591796875043]
                            ]
                        ],
                        [
                            [
                                [121.159375, 6.075634765625011],
                                [121.41103515625005, 5.939843749999966],
                                [121.29443359374997, 5.869970703125034],
                                [120.8763671875, 5.95263671875],
                                [121.159375, 6.075634765625011]
                            ]
                        ],
                        [
                            [
                                [122.09287109375012, 6.428320312500006],
                                [121.95917968750004, 6.415820312500045],
                                [121.83203125000003, 6.664062499999986],
                                [122.0583007812501, 6.740722656249972],
                                [122.32353515625002, 6.602246093750011],
                                [122.09287109375012, 6.428320312500006]
                            ]
                        ],
                        [
                            [
                                [122.93710937500006, 7.409130859374983],
                                [122.80468750000003, 7.315966796875017],
                                [122.82216796875, 7.428466796875014],
                                [122.93710937500006, 7.409130859374983]
                            ]
                        ],
                        [
                            [
                                [117.07988281250007, 7.883398437499977],
                                [117.02832031249997, 7.807519531249966],
                                [116.96953125000007, 7.894921875],
                                [116.9935546875, 8.050537109375014],
                                [117.07705078125, 8.069140624999974],
                                [117.07988281250007, 7.883398437499977]
                            ]
                        ],
                        [
                            [
                                [117.35527343750002, 8.21464843749996],
                                [117.28701171875, 8.191015625000034],
                                [117.28085937500006, 8.314990234374974],
                                [117.35527343750002, 8.21464843749996]
                            ]
                        ],
                        [
                            [
                                [124.80664062500003, 9.142626953125003],
                                [124.66582031250002, 9.132324218750043],
                                [124.65332031250003, 9.225830078125],
                                [124.80664062500003, 9.142626953125003]
                            ]
                        ],
                        [
                            [
                                [123.69765625000005, 9.237304687500028],
                                [123.61445312500004, 9.103320312499989],
                                [123.49345703125002, 9.192089843750054],
                                [123.69765625000005, 9.237304687500028]
                            ]
                        ],
                        [
                            [
                                [126.00595703125006, 9.320947265625009],
                                [126.19335937499997, 9.276708984374963],
                                [126.30458984375, 8.952050781249994],
                                [126.13955078125005, 8.59565429687504],
                                [126.36533203125012, 8.483886718750014],
                                [126.45869140625004, 8.20283203125004],
                                [126.43535156250002, 7.832812499999974],
                                [126.57011718750002, 7.677246093749986],
                                [126.58154296875003, 7.247753906249969],
                                [126.1920898437501, 6.852539062500014],
                                [126.18935546875, 6.309667968749991],
                                [125.82441406250004, 7.333300781249989],
                                [125.68925781250007, 7.263037109374977],
                                [125.38066406250007, 6.689941406250014],
                                [125.58847656250012, 6.465771484374997],
                                [125.66796874999997, 5.97866210937498],
                                [125.34648437500002, 5.598974609374977],
                                [125.23154296875006, 6.069531250000011],
                                [124.92734375000006, 5.875341796874977],
                                [124.21279296875, 6.233251953124977],
                                [124.078125, 6.404443359375037],
                                [123.98525390625, 6.993701171875003],
                                [124.20664062500006, 7.396435546874983],
                                [123.66582031250002, 7.817773437500023],
                                [123.49306640625, 7.80791015624996],
                                [123.39091796875007, 7.407519531250017],
                                [123.09667968749997, 7.700439453125],
                                [122.8429687500001, 7.529296875000043],
                                [122.79179687500002, 7.72246093749996],
                                [122.61621093749997, 7.763134765624983],
                                [122.14248046875, 6.949658203124997],
                                [121.96425781250005, 6.96821289062504],
                                [121.92460937500002, 7.199511718750003],
                                [122.24335937500004, 7.945117187500031],
                                [122.91113281250003, 8.156445312499997],
                                [123.05058593750002, 8.433935546875048],
                                [123.43457031249997, 8.70332031250004],
                                [123.84921875000006, 8.432714843749977],
                                [123.79941406250006, 8.049121093749989],
                                [124.19765625, 8.229541015624974],
                                [124.40488281250006, 8.599853515625014],
                                [124.7311523437501, 8.562988281250043],
                                [124.86894531250002, 8.972265625000034],
                                [125.141015625, 8.86875],
                                [125.20966796875004, 9.027148437500017],
                                [125.49873046875004, 9.014746093749977],
                                [125.47128906250006, 9.756787109374983],
                                [126.00595703125006, 9.320947265625009]
                            ]
                        ],
                        [
                            [
                                [126.059375, 9.766210937500034],
                                [125.99121093750003, 9.838525390625023],
                                [126.07382812500006, 10.059228515625051],
                                [126.1725585937501, 9.79995117187498],
                                [126.059375, 9.766210937500034]
                            ]
                        ],
                        [
                            [
                                [124.59384765625006, 9.787207031249963],
                                [124.1224609375, 9.599316406249969],
                                [123.93564453125012, 9.623974609375011],
                                [123.81718750000002, 9.817382812499986],
                                [124.17285156250003, 10.135205078124983],
                                [124.33574218750002, 10.159912109375043],
                                [124.57714843749997, 10.026708984374991],
                                [124.59384765625006, 9.787207031249963]
                            ]
                        ],
                        [
                            [
                                [125.69023437500007, 9.914453125000037],
                                [125.49482421875004, 10.118701171875003],
                                [125.66679687500002, 10.440136718750026],
                                [125.69023437500007, 9.914453125000037]
                            ]
                        ],
                        [
                            [
                                [119.91621093750004, 10.485986328125037],
                                [119.79316406250004, 10.455273437499997],
                                [119.85205078124997, 10.64013671875],
                                [120.00839843750012, 10.570117187500031],
                                [119.91621093750004, 10.485986328125037]
                            ]
                        ],
                        [
                            [
                                [122.64951171875012, 10.472705078125003],
                                [122.53837890625002, 10.424951171875037],
                                [122.5375, 10.607568359375023],
                                [122.70126953125006, 10.740625],
                                [122.64951171875012, 10.472705078125003]
                            ]
                        ],
                        [
                            [
                                [123.13085937500003, 9.064111328124994],
                                [122.99472656250006, 9.058837890624986],
                                [122.8666015625, 9.319824218750043],
                                [122.5625, 9.482812500000037],
                                [122.39951171875006, 9.823046874999989],
                                [122.47148437500007, 9.961523437500034],
                                [122.85556640625006, 10.0869140625],
                                [122.81699218750012, 10.503808593750023],
                                [122.98330078125, 10.886621093750037],
                                [123.25664062500007, 10.99394531249996],
                                [123.51064453125005, 10.923046875],
                                [123.5675781250001, 10.780761718750057],
                                [123.16201171875, 9.864257812500028],
                                [123.1498046875, 9.606152343750026],
                                [123.32050781250004, 9.27294921875],
                                [123.13085937500003, 9.064111328124994]
                            ]
                        ],
                        [
                            [
                                [123.37031250000004, 9.449609375000023],
                                [123.38623046874997, 9.967089843750017],
                                [124.03886718750002, 11.273535156249991],
                                [124.00498046875012, 10.40009765625004],
                                [123.70048828125007, 10.128320312500009],
                                [123.37031250000004, 9.449609375000023]
                            ]
                        ],
                        [
                            [
                                [123.75703125000004, 11.28330078125002],
                                [123.815625, 11.15073242187502],
                                [123.73671875, 11.151464843749991],
                                [123.75703125000004, 11.28330078125002]
                            ]
                        ],
                        [
                            [
                                [117.31113281250012, 8.439599609375051],
                                [117.21855468750007, 8.367285156249963],
                                [117.34990234375002, 8.713574218749997],
                                [119.22382812500004, 10.477294921875043],
                                [119.30566406250003, 10.9736328125],
                                [119.55332031250012, 11.31352539062496],
                                [119.52666015625002, 10.953173828125003],
                                [119.68691406250005, 10.500341796875034],
                                [119.36933593750004, 10.327294921875037],
                                [119.19150390625012, 10.061083984374989],
                                [118.78212890625005, 9.91611328125002],
                                [118.4349609375, 9.256005859375009],
                                [117.31113281250012, 8.439599609375051]
                            ]
                        ],
                        [
                            [
                                [119.86142578125006, 11.52534179687504],
                                [119.83066406250012, 11.375683593750011],
                                [119.72998046874997, 11.431933593750017],
                                [119.86142578125006, 11.52534179687504]
                            ]
                        ],
                        [
                            [
                                [124.574609375, 11.343066406250031],
                                [124.92998046875002, 11.372851562499974],
                                [125.02656250000004, 11.21171875],
                                [125.01318359374997, 10.785693359374989],
                                [125.26845703125005, 10.307714843750048],
                                [125.14257812499997, 10.189453125000028],
                                [124.9875, 10.36757812499998],
                                [125.02656250000004, 10.033105468749966],
                                [124.78076171874997, 10.16806640625002],
                                [124.78671875000012, 10.781396484375009],
                                [124.66269531250006, 10.961962890625017],
                                [124.44550781250004, 10.923583984375014],
                                [124.33066406250012, 11.535205078125003],
                                [124.574609375, 11.343066406250031]
                            ]
                        ],
                        [
                            [
                                [124.60839843750003, 11.492187500000043],
                                [124.48349609375006, 11.485839843749986],
                                [124.36035156250003, 11.665917968749994],
                                [124.5109375000001, 11.687109375000048],
                                [124.60839843750003, 11.492187500000043]
                            ]
                        ],
                        [
                            [
                                [122.49619140625006, 11.615087890625034],
                                [122.83808593750004, 11.595654296874983],
                                [122.89453125000003, 11.44130859374998],
                                [123.15830078125012, 11.53554687499999],
                                [123.11953125, 11.286816406250026],
                                [122.8029296875001, 10.99003906249996],
                                [122.76992187500005, 10.823828125000034],
                                [121.95400390625, 10.444384765625003],
                                [122.10351562499997, 11.64291992187502],
                                [121.91601562499997, 11.854345703125006],
                                [122.02919921875005, 11.895410156250023],
                                [122.49619140625006, 11.615087890625034]
                            ]
                        ],
                        [
                            [
                                [120.03876953125004, 11.703320312499969],
                                [119.94492187500006, 11.690722656249989],
                                [119.86093750000006, 11.953955078124963],
                                [120.03593750000002, 11.917236328125028],
                                [120.03876953125004, 11.703320312499969]
                            ]
                        ],
                        [
                            [
                                [120.1, 12.167675781249983],
                                [120.22822265625004, 12.219824218750034],
                                [120.31455078125012, 12.012402343749969],
                                [120.01054687500002, 12.008251953125011],
                                [119.88574218749997, 12.299853515625003],
                                [120.1, 12.167675781249983]
                            ]
                        ],
                        [
                            [
                                [122.65449218750004, 12.309033203125011],
                                [122.42294921875006, 12.455078125],
                                [122.60361328125006, 12.49160156249998],
                                [122.65449218750004, 12.309033203125011]
                            ]
                        ],
                        [
                            [
                                [125.23955078125002, 12.527880859375003],
                                [125.32021484375, 12.321826171875031],
                                [125.53564453125003, 12.191406250000028],
                                [125.49179687500006, 11.594335937499977],
                                [125.57353515625002, 11.238232421874997],
                                [125.73564453125002, 11.049609375000017],
                                [125.23339843749997, 11.145068359375017],
                                [125.03427734375012, 11.341259765625026],
                                [124.91699218750003, 11.558398437500031],
                                [124.99501953125, 11.764941406250003],
                                [124.445703125, 12.152783203124969],
                                [124.29472656250007, 12.569335937500014],
                                [125.23955078125002, 12.527880859375003]
                            ]
                        ],
                        [
                            [
                                [123.71660156250007, 12.287353515625028],
                                [124.04033203125002, 11.966796875],
                                [124.04550781250012, 11.752441406250028],
                                [123.47373046875006, 12.21665039062502],
                                [123.15781250000012, 11.925634765624963],
                                [123.23642578125012, 12.583496093750057],
                                [123.71660156250007, 12.287353515625028]
                            ]
                        ],
                        [
                            [
                                [122.09404296875002, 12.354882812500023],
                                [122.01396484375002, 12.105615234375037],
                                [121.9232421875, 12.331298828125014],
                                [122.00156250000006, 12.598535156250009],
                                [122.14501953124997, 12.652636718750017],
                                [122.09404296875002, 12.354882812500023]
                            ]
                        ],
                        [
                            [
                                [123.77539062499997, 12.453906250000031],
                                [123.77910156250002, 12.366259765625031],
                                [123.62148437500005, 12.67490234375002],
                                [123.77539062499997, 12.453906250000031]
                            ]
                        ],
                        [
                            [
                                [123.28183593750006, 12.85341796874998],
                                [123.36718750000003, 12.70083007812498],
                                [122.95751953124997, 13.107177734374986],
                                [123.28183593750006, 12.85341796874998]
                            ]
                        ],
                        [
                            [
                                [120.70439453125002, 13.479492187499986],
                                [121.20273437500006, 13.432324218749969],
                                [121.52275390625007, 13.131201171874991],
                                [121.540625, 12.63818359375],
                                [121.39433593750002, 12.300585937499974],
                                [121.23671875000005, 12.218798828125003],
                                [120.92216796875002, 12.51162109374998],
                                [120.65136718749997, 13.169140625],
                                [120.33847656250012, 13.412353515624986],
                                [120.40126953125, 13.517041015624997],
                                [120.70439453125002, 13.479492187499986]
                            ]
                        ],
                        [
                            [
                                [121.91484375000002, 13.540332031250031],
                                [122.11455078125002, 13.463183593750031],
                                [122.00488281249997, 13.204980468750009],
                                [121.82919921875006, 13.328613281249972],
                                [121.91484375000002, 13.540332031250031]
                            ]
                        ],
                        [
                            [
                                [124.35361328125006, 13.632226562500009],
                                [124.17539062500012, 13.531542968750017],
                                [124.03886718750002, 13.663134765625003],
                                [124.22490234375007, 14.077587890624969],
                                [124.41718750000004, 13.871044921874997],
                                [124.35361328125006, 13.632226562500009]
                            ]
                        ],
                        [
                            [
                                [122.03349609375002, 15.005029296875009],
                                [121.93300781250005, 14.656054687500045],
                                [121.83984374999997, 15.038134765625003],
                                [122.03349609375002, 15.005029296875009]
                            ]
                        ],
                        [
                            [
                                [121.10156249999997, 18.615283203125017],
                                [121.84560546875, 18.29541015625003],
                                [122.03847656250005, 18.32792968749999],
                                [122.14667968750004, 18.486572265625],
                                [122.26552734375005, 18.458837890625034],
                                [122.15234374999997, 17.664404296875006],
                                [122.51914062500012, 17.124853515625034],
                                [122.13515625000005, 16.18481445312503],
                                [121.59531250000012, 15.933251953125023],
                                [121.60703125000006, 15.669824218749994],
                                [121.39228515625004, 15.324414062499969],
                                [121.69541015625006, 14.7373046875],
                                [121.62792968749997, 14.581152343749977],
                                [121.76660156249997, 14.16806640625002],
                                [122.21171875000002, 13.930175781250057],
                                [122.2875, 13.996191406250006],
                                [122.19970703125003, 14.148046875000034],
                                [122.6271484375001, 14.317529296875009],
                                [122.93417968750012, 14.18808593750002],
                                [123.101953125, 13.750244140624986],
                                [123.29697265625012, 13.836425781250043],
                                [123.32031249999997, 14.061669921875023],
                                [123.81572265625002, 13.837109375000011],
                                [123.80625000000012, 13.721728515625045],
                                [123.54960937500007, 13.645751953125014],
                                [123.81923828125, 13.269482421875011],
                                [123.78515625000003, 13.110546875000054],
                                [124.14277343750004, 13.035791015625009],
                                [124.0597656250001, 12.567089843749997],
                                [123.87783203125005, 12.689697265625014],
                                [123.94853515625007, 12.916406250000023],
                                [123.31093750000005, 13.044091796875009],
                                [123.16328125000004, 13.44174804687502],
                                [122.59521484374997, 13.90761718749998],
                                [122.46796875000004, 13.886718749999986],
                                [122.66787109375, 13.395361328124991],
                                [122.59990234375002, 13.194140625000031],
                                [122.37656250000012, 13.520605468750006],
                                [121.77792968750006, 13.93764648437498],
                                [121.50107421875006, 13.8421875],
                                [121.344140625, 13.649121093749997],
                                [121.09550781250007, 13.679492187500045],
                                [120.84072265625, 13.884716796875026],
                                [120.637109375, 13.804492187500031],
                                [120.61679687500006, 14.188037109375003],
                                [120.9220703125001, 14.493115234374983],
                                [120.94130859375, 14.645068359375031],
                                [120.58369140625004, 14.88125],
                                [120.58867187500002, 14.483105468749983],
                                [120.43876953125002, 14.453369140624972],
                                [120.25078125000002, 14.793310546875034],
                                [120.08212890625012, 14.851074218749986],
                                [119.77255859375012, 16.25512695312503],
                                [119.83076171875004, 16.326562500000023],
                                [120.15976562500012, 16.047656250000045],
                                [120.36875, 16.109570312499955],
                                [120.35839843749997, 17.63818359375],
                                [120.59970703125012, 18.507861328125074],
                                [121.10156249999997, 18.615283203125017]
                            ]
                        ],
                        [
                            [
                                [121.92167968750007, 18.89472656250001],
                                [121.82519531250003, 18.842724609374983],
                                [121.94335937500003, 19.010449218749955],
                                [121.92167968750007, 18.89472656250001]
                            ]
                        ],
                        [
                            [
                                [121.52089843750005, 19.361962890624994],
                                [121.53125, 19.271337890625006],
                                [121.37460937500006, 19.356298828124977],
                                [121.52089843750005, 19.361962890624994]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Philippines",
                    childNum: 37
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [134.5954101562501, 7.382031249999969],
                            [134.51572265625012, 7.525781250000037],
                            [134.65117187500002, 7.712109374999983],
                            [134.5954101562501, 7.382031249999969]
                        ]
                    ]
                },
                properties: {
                    name: "Palau",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [153.53613281249997, -11.476171874999949],
                                [153.75986328125006, -11.586328125],
                                [153.55371093749997, -11.630566406249969],
                                [153.28681640625004, -11.516992187500009],
                                [153.20361328124997, -11.32412109374998],
                                [153.53613281249997, -11.476171874999949]
                            ]
                        ],
                        [
                            [
                                [154.28076171874997, -11.36142578125002],
                                [154.12119140625006, -11.425683593749966],
                                [154.02343750000003, -11.347949218750031],
                                [154.28076171874997, -11.36142578125002]
                            ]
                        ],
                        [
                            [
                                [150.89873046875002, -10.565332031250023],
                                [150.88466796875, -10.643457031250037],
                                [150.78574218750006, -10.603417968749966],
                                [150.89873046875002, -10.565332031250023]
                            ]
                        ],
                        [
                            [
                                [151.08095703125, -10.020117187499963],
                                [151.29648437500012, -9.956738281250026],
                                [151.230859375, -10.194726562500009],
                                [150.95917968750004, -10.092578124999989],
                                [150.77607421875004, -9.70908203125002],
                                [151.08095703125, -10.020117187499963]
                            ]
                        ],
                        [
                            [
                                [150.52841796875006, -9.34658203124998],
                                [150.78867187500006, -9.417968749999957],
                                [150.89404296875003, -9.667480468749986],
                                [150.43623046875004, -9.624609374999949],
                                [150.5084960937501, -9.536132812499957],
                                [150.43730468750007, -9.359960937500034],
                                [150.52841796875006, -9.34658203124998]
                            ]
                        ],
                        [
                            [
                                [150.3454101562501, -9.493847656249955],
                                [150.10976562500005, -9.361914062499991],
                                [150.20830078125002, -9.206347656250003],
                                [150.32011718750007, -9.264160156249972],
                                [150.3454101562501, -9.493847656249955]
                            ]
                        ],
                        [
                            [
                                [152.63095703125012, -8.959375],
                                [152.95292968750007, -9.07011718749996],
                                [152.96689453125006, -9.208984375000014],
                                [152.51513671874997, -9.009863281250034],
                                [152.63095703125012, -8.959375]
                            ]
                        ],
                        [
                            [
                                [151.10683593750005, -8.733496093749949],
                                [151.12412109375012, -8.804882812500011],
                                [151.00498046875006, -8.523828124999952],
                                [151.117578125, -8.41884765624998],
                                [151.10683593750005, -8.733496093749949]
                            ]
                        ],
                        [
                            [
                                [143.58681640625005, -8.481738281250003],
                                [143.321875, -8.367578125],
                                [143.5814453125, -8.390917968749974],
                                [143.58681640625005, -8.481738281250003]
                            ]
                        ],
                        [
                            [
                                [148.02578125, -5.826367187500011],
                                [147.78105468750007, -5.627246093749946],
                                [147.7946289062501, -5.492382812500011],
                                [148.05478515625006, -5.61152343750004],
                                [148.02578125, -5.826367187500011]
                            ]
                        ],
                        [
                            [
                                [155.95761718750006, -6.686816406249989],
                                [155.71933593750012, -6.862792968749957],
                                [155.34404296875007, -6.721679687499986],
                                [155.20214843750003, -6.3076171875],
                                [154.75927734375003, -5.931347656249997],
                                [154.72929687500002, -5.444433593750006],
                                [155.09384765625006, -5.620214843750034],
                                [155.46699218750004, -6.145117187500034],
                                [155.82255859375002, -6.38046875000002],
                                [155.95761718750006, -6.686816406249989]
                            ]
                        ],
                        [
                            [
                                [147.17626953124997, -5.431933593749946],
                                [147.00585937499997, -5.30703125],
                                [147.1310546875001, -5.190820312500037],
                                [147.17626953124997, -5.431933593749946]
                            ]
                        ],
                        [
                            [
                                [154.64726562500002, -5.43271484375002],
                                [154.54003906250003, -5.11083984375],
                                [154.63261718750007, -5.013867187499955],
                                [154.72714843750006, -5.218066406249989],
                                [154.64726562500002, -5.43271484375002]
                            ]
                        ],
                        [
                            [
                                [146.01933593750007, -4.726171874999963],
                                [145.88359375000007, -4.66748046875],
                                [145.9958007812501, -4.539257812499983],
                                [146.01933593750007, -4.726171874999963]
                            ]
                        ],
                        [
                            [
                                [151.915625, -4.296777343749966],
                                [152.11718749999997, -4.212207031249974],
                                [152.40566406250005, -4.340722656249952],
                                [152.35117187500006, -4.82216796874998],
                                [151.98369140625007, -5.07441406250004],
                                [152.14296875, -5.357031249999963],
                                [152.07705078125, -5.458300781249989],
                                [151.86542968750004, -5.564843750000023],
                                [151.51513671874997, -5.552343749999963],
                                [151.22929687500002, -5.919921874999986],
                                [150.47353515625, -6.263378906249969],
                                [149.65253906250004, -6.290429687499966],
                                [149.38232421874997, -6.078125],
                                [149.0990234375, -6.116992187499989],
                                [148.33720703125007, -5.669433593750014],
                                [148.43203125, -5.471777343749991],
                                [149.35888671875003, -5.583984375000014],
                                [149.8314453125, -5.524121093749997],
                                [149.96279296875, -5.447753906249972],
                                [150.0900390625001, -5.011816406249977],
                                [150.1703125, -5.070605468749974],
                                [150.0724609375001, -5.309570312499986],
                                [150.18310546874997, -5.523632812499983],
                                [150.90029296875005, -5.447167968750037],
                                [151.32656250000005, -4.96035156249998],
                                [151.67119140625007, -4.88330078125],
                                [151.59306640625007, -4.200781249999949],
                                [151.915625, -4.296777343749966]
                            ]
                        ],
                        [
                            [
                                [152.67060546875004, -3.13339843750002],
                                [152.64619140625004, -3.221191406249957],
                                [152.54326171875002, -3.095605468749952],
                                [152.63876953125012, -3.042773437500031],
                                [152.67060546875004, -3.13339843750002]
                            ]
                        ],
                        [
                            [
                                [140.97617187500012, -9.11875],
                                [140.97519531250006, -6.90537109375002],
                                [140.86230468749997, -6.740039062499989],
                                [140.975, -6.346093750000023],
                                [140.97353515625, -2.803417968750026],
                                [140.97343750000007, -2.609765625],
                                [142.90517578125, -3.32070312499998],
                                [143.50898437500004, -3.431152343750014],
                                [144.06640625000003, -3.80517578125],
                                [144.4777343750001, -3.82529296875002],
                                [145.08779296875, -4.349121093749972],
                                [145.33457031250012, -4.385253906249972],
                                [145.7669921875, -4.823046874999989],
                                [145.74521484375012, -5.402441406249977],
                                [147.56669921875002, -6.056933593750003],
                                [147.80205078125002, -6.31523437499996],
                                [147.84550781250007, -6.662402343749989],
                                [147.11914062499997, -6.721679687499986],
                                [146.95361328124997, -6.834082031249963],
                                [147.19003906250012, -7.378125],
                                [148.12675781250007, -8.103613281249963],
                                [148.246875, -8.554296875000034],
                                [148.45117187499997, -8.694531250000011],
                                [148.58310546875006, -9.051757812499957],
                                [149.19833984375006, -9.03125],
                                [149.26318359374997, -9.497851562499974],
                                [150.01103515625007, -9.688183593750026],
                                [149.76123046874997, -9.805859375000011],
                                [149.87441406250005, -10.012988281250031],
                                [150.84951171875, -10.236035156249997],
                                [150.44609375000007, -10.30732421875004],
                                [150.6471679687501, -10.517968749999966],
                                [150.31992187500012, -10.654882812499963],
                                [150.0167968750001, -10.577148437500028],
                                [149.75410156250004, -10.353027343750028],
                                [147.76865234375012, -10.070117187500031],
                                [147.01718750000006, -9.38789062500004],
                                [146.96376953125, -9.059570312499943],
                                [146.63085937499997, -8.951171874999972],
                                [146.03320312499997, -8.076367187500011],
                                [144.97382812500004, -7.802148437500009],
                                [144.86425781249997, -7.631542968749983],
                                [144.50986328125006, -7.567382812499972],
                                [144.14287109375007, -7.757226562500009],
                                [143.65488281250012, -7.460351562500009],
                                [143.94228515625005, -7.944238281250009],
                                [143.8333984375, -8.029101562499974],
                                [143.51816406250006, -8.000683593749955],
                                [143.61376953125003, -8.200390624999969],
                                [142.52412109375004, -8.32167968749998],
                                [142.34746093750002, -8.167480468750014],
                                [142.20683593750002, -8.195800781250014],
                                [142.47480468750004, -8.369433593750031],
                                [142.79794921875006, -8.345019531250031],
                                [143.11181640624997, -8.474511718750037],
                                [143.37724609375007, -8.762207031250028],
                                [143.36621093750003, -8.961035156250034],
                                [142.6471679687501, -9.327832031249969],
                                [142.22958984375012, -9.169921874999957],
                                [141.13320312500005, -9.221289062500034],
                                [140.97617187500012, -9.11875]
                            ]
                        ],
                        [
                            [
                                [152.96582031249997, -4.756347656249986],
                                [152.89169921875006, -4.832421875000023],
                                [152.73994140625004, -4.635839843750034],
                                [152.66816406250004, -4.131835937500028],
                                [152.27939453125006, -3.582421875],
                                [151.06679687500005, -2.829003906249994],
                                [150.74609374999997, -2.73886718750002],
                                [150.8253906250001, -2.572949218749969],
                                [152.03291015625004, -3.25136718749998],
                                [153.01679687500004, -4.105664062500026],
                                [153.1325195312501, -4.352441406250037],
                                [152.96582031249997, -4.756347656249986]
                            ]
                        ],
                        [
                            [
                                [150.43662109375012, -2.66181640625004],
                                [150.16572265625004, -2.660253906249991],
                                [149.96162109375004, -2.473828125000026],
                                [150.22714843750006, -2.384179687499966],
                                [150.42949218750007, -2.47041015625004],
                                [150.43662109375012, -2.66181640625004]
                            ]
                        ],
                        [
                            [
                                [147.06757812500004, -1.96015625],
                                [147.43808593750012, -2.05898437499998],
                                [147.20634765625007, -2.181933593749974],
                                [146.54648437500012, -2.20859375],
                                [146.65625, -1.97402343749998],
                                [147.06757812500004, -1.96015625]
                            ]
                        ],
                        [
                            [
                                [149.76542968750007, -1.553027343750017],
                                [149.54589843749997, -1.471679687499957],
                                [149.58095703125005, -1.353222656249983],
                                [149.76542968750007, -1.553027343750017]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Papua New Guinea",
                    childNum: 21
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [23.484667968750017, 53.939794921875],
                            [23.915429687500023, 52.770263671875],
                            [23.175097656250017, 52.28662109375],
                            [23.652441406250006, 52.040380859375],
                            [23.605273437500017, 51.517919921875],
                            [23.664453125000023, 51.31005859375],
                            [24.095800781250006, 50.87275390625],
                            [23.9970703125, 50.809375],
                            [24.089941406250006, 50.53046875],
                            [23.97265625, 50.410058593749994],
                            [23.711718750000017, 50.37734375],
                            [23.03632812500001, 49.899072265624994],
                            [22.706152343750006, 49.606201171875],
                            [22.6494140625, 49.539013671875],
                            [22.66064453125, 49.483691406249996],
                            [22.71992187500001, 49.353808593749996],
                            [22.732421875, 49.295166015625],
                            [22.705664062500006, 49.171191406249996],
                            [22.847070312500023, 49.08125],
                            [22.538671875, 49.072705078125],
                            [22.473046875000023, 49.081298828125],
                            [22.020117187500006, 49.209521484374996],
                            [21.6396484375, 49.411962890625],
                            [21.079394531250017, 49.418261718749996],
                            [20.868457031250017, 49.314697265625],
                            [20.36298828125001, 49.38525390625],
                            [20.0576171875, 49.181298828124994],
                            [19.756640625000017, 49.204394531249996],
                            [19.77392578125, 49.37216796875],
                            [19.44160156250001, 49.597705078124996],
                            [19.1494140625, 49.4],
                            [18.83222656250001, 49.510791015624996],
                            [18.562402343750023, 49.879345703125],
                            [18.0283203125, 50.03525390625],
                            [17.874804687500017, 49.972265625],
                            [17.627050781250006, 50.11640625],
                            [17.702246093750006, 50.307177734374996],
                            [17.41523437500001, 50.254785156249994],
                            [16.88007812500001, 50.427050781249996],
                            [16.989648437500023, 50.2369140625],
                            [16.63916015625, 50.1021484375],
                            [16.210351562500023, 50.423730468749994],
                            [16.419726562500017, 50.573632812499994],
                            [16.2822265625, 50.655615234375],
                            [16.007226562500023, 50.611621093749996],
                            [14.99375, 51.01435546875],
                            [14.98291015625, 50.886572265625],
                            [14.895800781250017, 50.861376953124996],
                            [14.809375, 50.858984375],
                            [14.814257812500017, 50.871630859374996],
                            [14.91748046875, 51.008740234375],
                            [14.9638671875, 51.095117187499994],
                            [14.935546875, 51.435351562499996],
                            [14.905957031250011, 51.463330078125],
                            [14.724707031250006, 51.523876953125],
                            [14.7109375, 51.544921875],
                            [14.738671875000023, 51.6271484375],
                            [14.601660156250006, 51.832373046875],
                            [14.752539062500006, 52.081835937499996],
                            [14.679882812500011, 52.25],
                            [14.615625, 52.277636718749996],
                            [14.573925781250011, 52.31416015625],
                            [14.554589843750023, 52.359667968749996],
                            [14.569726562500023, 52.431103515625],
                            [14.619433593750017, 52.528515625],
                            [14.514062500000023, 52.64560546875],
                            [14.253710937500017, 52.782519531249996],
                            [14.128613281250011, 52.878222656249996],
                            [14.138867187500011, 52.932861328125],
                            [14.293164062500011, 53.0267578125],
                            [14.368554687500023, 53.10556640625],
                            [14.410937500000017, 53.199023437499996],
                            [14.412304687500011, 53.216748046875],
                            [14.41455078125, 53.283496093749996],
                            [14.258886718750006, 53.729638671875],
                            [14.58349609375, 53.63935546875],
                            [14.558398437500017, 53.823193359375],
                            [14.21142578125, 53.950341796875],
                            [16.186328125000017, 54.290380859375],
                            [16.55976562500001, 54.55380859375],
                            [18.32343750000001, 54.838183593749996],
                            [18.75927734375, 54.6845703125],
                            [18.43623046875001, 54.7447265625],
                            [18.83642578125, 54.369580078125],
                            [19.604394531250023, 54.4591796875],
                            [20.20820312500001, 54.420751953125],
                            [22.16845703125, 54.35986328125],
                            [22.731835937500023, 54.35009765625],
                            [22.766210937500006, 54.356787109375],
                            [22.82373046875, 54.395800781249996],
                            [22.893945312500023, 54.39052734375],
                            [22.97675781250001, 54.366357421875],
                            [23.015527343750023, 54.34833984375],
                            [23.04218750000001, 54.30419921875],
                            [23.0875, 54.299462890625],
                            [23.170312500000023, 54.2814453125],
                            [23.282324218750006, 54.24033203125],
                            [23.3701171875, 54.200488281249996],
                            [23.45361328125, 54.14345703125],
                            [23.484667968750017, 53.939794921875]
                        ]
                    ]
                },
                properties: {
                    name: "Poland",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-65.42558593749999, 18.105615234374994],
                                [-65.57221679687493, 18.137304687499977],
                                [-65.29487304687501, 18.133349609375045],
                                [-65.42558593749999, 18.105615234374994]
                            ]
                        ],
                        [
                            [
                                [-66.12939453125003, 18.444921875000034],
                                [-65.62880859375, 18.381396484375045],
                                [-65.62084960937497, 18.242333984374966],
                                [-65.97080078124995, 17.974365234375],
                                [-67.196875, 17.994189453125045],
                                [-67.2640625, 18.364599609375006],
                                [-67.15864257812501, 18.499218749999983],
                                [-66.12939453125003, 18.444921875000034]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Puerto Rico",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [130.52695312500012, 42.535400390625],
                            [130.68730468750007, 42.30253906249999],
                            [130.2357421875, 42.183203125000034],
                            [129.75634765624997, 41.712255859375006],
                            [129.70869140625004, 40.857324218749994],
                            [129.34111328125002, 40.72631835937506],
                            [128.51123046874997, 40.130224609375006],
                            [127.56816406250002, 39.78198242187503],
                            [127.39453125000003, 39.207910156249966],
                            [127.78613281250003, 39.084130859374966],
                            [128.37460937500012, 38.6234375],
                            [128.03896484375, 38.30854492187498],
                            [127.09033203125003, 38.28388671875001],
                            [126.63388671875012, 37.78183593750006],
                            [126.36992187500007, 37.87836914062501],
                            [126.11669921875003, 37.74291992187503],
                            [125.76914062500006, 37.98535156250003],
                            [125.35781250000005, 37.72480468749998],
                            [125.31074218750004, 37.843505859375],
                            [124.98876953124997, 37.93144531249999],
                            [125.2067382812501, 38.08154296875],
                            [124.69091796874997, 38.12919921875002],
                            [125.06738281250003, 38.556738281250006],
                            [125.55449218750002, 38.68623046875001],
                            [125.16884765625, 38.80551757812506],
                            [125.40966796875003, 39.28837890625002],
                            [125.36083984375003, 39.52661132812497],
                            [124.77529296875, 39.75805664062506],
                            [124.63828125000006, 39.61508789062506],
                            [124.36210937500002, 40.004052734374994],
                            [124.8893554687501, 40.459814453125006],
                            [125.98906250000002, 40.904638671875034],
                            [126.74306640625, 41.724853515625],
                            [126.95478515625004, 41.76948242187501],
                            [127.17968750000003, 41.531347656250006],
                            [128.14941406249997, 41.38774414062496],
                            [128.28925781250004, 41.60742187500006],
                            [128.04521484375007, 41.9875],
                            [128.92343750000006, 42.038232421874966],
                            [129.3136718750001, 42.41357421874997],
                            [129.69785156250012, 42.448144531249994],
                            [129.89824218750002, 42.998144531250034],
                            [130.24033203125006, 42.891796874999955],
                            [130.24667968750012, 42.744824218749955],
                            [130.52695312500012, 42.535400390625]
                        ]
                    ]
                },
                properties: {
                    name: "Dem. Rep. Korea",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-17.190869140624926, 32.86860351562498],
                                [-16.693261718749966, 32.75800781250001],
                                [-17.018261718749926, 32.66279296874998],
                                [-17.226025390624983, 32.76684570312503],
                                [-17.190869140624926, 32.86860351562498]
                            ]
                        ],
                        [
                            [
                                [-25.64897460937499, 37.840917968750006],
                                [-25.18193359374996, 37.837890625],
                                [-25.19072265624999, 37.764355468749955],
                                [-25.73447265624992, 37.76289062500001],
                                [-25.845898437499983, 37.89404296875],
                                [-25.64897460937499, 37.840917968750006]
                            ]
                        ],
                        [
                            [
                                [-28.14726562499996, 38.45268554687502],
                                [-28.064794921875034, 38.412744140624966],
                                [-28.454492187500023, 38.40864257812504],
                                [-28.54882812499997, 38.51855468750003],
                                [-28.14726562499996, 38.45268554687502]
                            ]
                        ],
                        [
                            [
                                [-28.641308593749983, 38.525],
                                [-28.842041015625, 38.5984375],
                                [-28.69775390625, 38.638476562500045],
                                [-28.641308593749983, 38.525]
                            ]
                        ],
                        [
                            [
                                [-27.07524414062496, 38.643457031249994],
                                [-27.38593750000001, 38.765820312499955],
                                [-27.127001953125017, 38.78984375],
                                [-27.07524414062496, 38.643457031249994]
                            ]
                        ],
                        [
                            [
                                [-31.137109374999937, 39.40693359375001],
                                [-31.282958984375, 39.39409179687496],
                                [-31.260839843750034, 39.49677734375001],
                                [-31.137109374999937, 39.40693359375001]
                            ]
                        ],
                        [
                            [
                                [-7.406152343749937, 37.17944335937497],
                                [-7.834130859374994, 37.005712890625034],
                                [-8.597656249999943, 37.12133789062506],
                                [-8.997802734375028, 37.03227539062502],
                                [-8.814160156249983, 37.43081054687502],
                                [-8.881103515624943, 38.44667968750005],
                                [-8.668310546874949, 38.42431640625003],
                                [-8.798876953124989, 38.518164062500034],
                                [-9.213281249999937, 38.44809570312498],
                                [-9.250390624999966, 38.65673828125003],
                                [-9.021484374999943, 38.746875],
                                [-8.79160156249992, 39.07817382812502],
                                [-9.13579101562496, 38.74277343749998],
                                [-9.35673828124996, 38.697900390624994],
                                [-9.479736328124972, 38.79877929687501],
                                [-9.374755859374972, 39.338281249999966],
                                [-8.837841796874926, 40.11567382812498],
                                [-8.684619140624989, 40.75253906250006],
                                [-8.755419921874932, 41.69838867187502],
                                [-8.887597656249937, 41.76459960937501],
                                [-8.777148437500017, 41.941064453124994],
                                [-8.266064453124983, 42.13740234375001],
                                [-8.152490234374937, 41.81196289062498],
                                [-7.40361328124996, 41.833691406249955],
                                [-7.147119140625023, 41.98115234374998],
                                [-6.61826171874992, 41.9423828125],
                                [-6.542187499999955, 41.672509765624994],
                                [-6.2125, 41.53203125],
                                [-6.928466796874972, 41.009130859375006],
                                [-6.8101562499999, 40.343115234375034],
                                [-7.032617187499966, 40.16791992187498],
                                [-6.896093749999949, 40.02182617187506],
                                [-6.975390624999932, 39.79838867187502],
                                [-7.117675781249972, 39.681689453125045],
                                [-7.53569335937496, 39.66157226562501],
                                [-6.997949218749994, 39.05644531250002],
                                [-7.343017578124943, 38.45742187500002],
                                [-7.106396484374983, 38.181005859375006],
                                [-6.957568359374932, 38.18789062499999],
                                [-7.44394531249992, 37.72827148437497],
                                [-7.406152343749937, 37.17944335937497]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Portugal",
                    childNum: 7,
                    cp: [-8.7440694, 39.9251454]
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-58.15976562499999, -20.164648437500006],
                            [-58.13779296874999, -20.2373046875],
                            [-58.12460937499999, -20.29345703125],
                            [-58.09150390625, -20.33320312500001],
                            [-58.05844726562499, -20.38613281250001],
                            [-58.025390625, -20.415820312500003],
                            [-58.00224609374999, -20.465429687500006],
                            [-57.97905273437499, -20.657324218750006],
                            [-57.91513671874999, -20.69033203125001],
                            [-57.830224609374994, -20.99794921875001],
                            [-57.94267578124999, -21.79833984375],
                            [-57.95590820312499, -22.109179687500003],
                            [-56.77519531249999, -22.261328125],
                            [-56.44780273437499, -22.076171875],
                            [-56.39487304687499, -22.09267578125001],
                            [-56.35185546874999, -22.17861328125001],
                            [-56.246044921875, -22.2646484375],
                            [-56.18984375, -22.28115234375001],
                            [-55.99140625, -22.28115234375001],
                            [-55.84916992187499, -22.3076171875],
                            [-55.75327148437499, -22.41015625],
                            [-55.74663085937499, -22.5126953125],
                            [-55.61767578125, -22.671484375],
                            [-55.53828125, -23.58095703125001],
                            [-55.518457031249994, -23.627246093750003],
                            [-55.458886718749994, -23.68671875000001],
                            [-55.4423828125, -23.792578125],
                            [-55.4423828125, -23.865332031250006],
                            [-55.415917968749994, -23.95136718750001],
                            [-55.36630859374999, -23.991015625],
                            [-55.28691406249999, -24.004296875],
                            [-55.1943359375, -24.01748046875001],
                            [-55.08188476562499, -23.99765625],
                            [-54.982666015625, -23.97451171875001],
                            [-54.62548828125, -23.8125],
                            [-54.44023437499999, -23.90175781250001],
                            [-54.37080078125, -23.97119140625],
                            [-54.24179687499999, -24.047265625],
                            [-54.281005859375, -24.30605468750001],
                            [-54.43623046875, -25.12128906250001],
                            [-54.47314453125, -25.22021484375],
                            [-54.610546875, -25.432714843750006],
                            [-54.615869140624994, -25.57607421875001],
                            [-54.63193359374999, -26.00576171875001],
                            [-54.677734375, -26.30878906250001],
                            [-54.934472656249994, -26.70253906250001],
                            [-55.1359375, -26.93115234375],
                            [-55.426660156249994, -27.00927734375],
                            [-55.450634765625, -27.068359375],
                            [-55.496728515624994, -27.115332031250006],
                            [-55.564892578125, -27.15],
                            [-55.59726562499999, -27.207617187500006],
                            [-55.59379882812499, -27.2880859375],
                            [-55.63291015624999, -27.35712890625001],
                            [-55.71464843749999, -27.41484375],
                            [-55.789990234375, -27.41640625],
                            [-55.95146484374999, -27.32568359375],
                            [-56.1640625, -27.32148437500001],
                            [-56.437158203124994, -27.553808593750006],
                            [-58.16826171874999, -27.2734375],
                            [-58.60483398437499, -27.31435546875001],
                            [-58.641748046874994, -27.19609375],
                            [-58.618603515625, -27.132128906250003],
                            [-58.222070312499994, -26.65],
                            [-58.18149414062499, -26.307421875],
                            [-57.943115234375, -26.05292968750001],
                            [-57.563134765624994, -25.473730468750006],
                            [-57.821679687499994, -25.13642578125001],
                            [-59.187255859375, -24.562304687500003],
                            [-59.892480468749994, -24.093554687500003],
                            [-60.83984375, -23.85810546875001],
                            [-61.084716796875, -23.65644531250001],
                            [-61.79853515625, -23.18203125],
                            [-62.21416015624999, -22.612402343750006],
                            [-62.372509765625, -22.43916015625001],
                            [-62.54155273437499, -22.349609375],
                            [-62.6259765625, -22.29042968750001],
                            [-62.62568359375, -22.261523437500003],
                            [-62.65097656249999, -22.233691406250003],
                            [-62.27666015624999, -21.066015625],
                            [-62.276318359375, -20.5625],
                            [-61.7568359375, -19.6453125],
                            [-60.00737304687499, -19.29755859375001],
                            [-59.09052734375, -19.286230468750006],
                            [-58.18017578125, -19.81787109375],
                            [-58.15976562499999, -20.164648437500006]
                        ]
                    ]
                },
                properties: {
                    name: "Paraguay",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [34.34833984375004, 31.292919921874955],
                                [34.2453125000001, 31.208300781250045],
                                [34.2125, 31.292285156250017],
                                [34.198144531249994, 31.322607421875063],
                                [34.47734375000002, 31.584863281250023],
                                [34.52412109375004, 31.541650390624994],
                                [34.5255859375001, 31.52563476562503],
                                [34.34833984375004, 31.292919921874955]
                            ]
                        ],
                        [
                            [
                                [34.88046875, 31.3681640625],
                                [34.950976562500074, 31.60229492187503],
                                [35.20371093750006, 31.75],
                                [35.1271484375001, 31.816748046875006],
                                [35.05322265625003, 31.83793945312496],
                                [34.983007812500006, 31.816796875000023],
                                [34.9611328125001, 31.823339843750006],
                                [34.95380859375004, 31.84125976562504],
                                [34.98974609374997, 31.913281249999955],
                                [34.955957031249994, 32.1609375],
                                [35.01054687500002, 32.33818359375002],
                                [35.06503906250006, 32.46044921875006],
                                [35.19326171875005, 32.53442382812503],
                                [35.303808593750006, 32.512939453125],
                                [35.38671875000003, 32.493017578125034],
                                [35.402636718750074, 32.45063476562501],
                                [35.484375, 32.40166015624999],
                                [35.5514648437501, 32.39550781250006],
                                [35.57207031250002, 32.237890625],
                                [35.450585937499994, 31.479296875000017],
                                [34.88046875, 31.3681640625]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Palestine",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-149.321533203125, -17.690039062499963],
                                [-149.177685546875, -17.736621093750045],
                                [-149.18178710937497, -17.86230468749997],
                                [-149.34111328125, -17.732421874999986],
                                [-149.57890624999993, -17.734960937499963],
                                [-149.635009765625, -17.564257812500003],
                                [-149.37919921874993, -17.522363281249994],
                                [-149.321533203125, -17.690039062499963]
                            ]
                        ],
                        [
                            [
                                [-143.44057617187497, -16.619726562499963],
                                [-143.38618164062498, -16.668847656250023],
                                [-143.55068359375002, -16.62109374999997],
                                [-143.44057617187497, -16.619726562499963]
                            ]
                        ],
                        [
                            [
                                [-139.02431640624997, -9.695214843750037],
                                [-138.82734375, -9.74160156249998],
                                [-139.13408203124996, -9.829492187500037],
                                [-139.02431640624997, -9.695214843750037]
                            ]
                        ],
                        [
                            [
                                [-140.075634765625, -9.425976562499983],
                                [-140.14438476562498, -9.359375],
                                [-140.07094726562497, -9.328125],
                                [-140.075634765625, -9.425976562499983]
                            ]
                        ],
                        [
                            [
                                [-140.07260742187503, -8.910449218750031],
                                [-140.21743164062497, -8.929687499999957],
                                [-140.24003906249993, -8.79755859375004],
                                [-140.057666015625, -8.801464843750026],
                                [-140.07260742187503, -8.910449218750031]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Fr. Polynesia",
                    childNum: 5
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [51.26796875000002, 24.607226562500003],
                            [51.17802734375002, 24.58671875],
                            [51.093359375, 24.564648437499997],
                            [51.02275390625002, 24.565234375],
                            [50.96601562500001, 24.573925781249997],
                            [50.928320312500006, 24.595117187499994],
                            [50.85566406250001, 24.679638671874997],
                            [50.80439453125001, 24.789257812499997],
                            [50.8359375, 24.850390625],
                            [50.846777343750006, 24.888574218749994],
                            [50.75458984375001, 25.39926757812499],
                            [51.003125, 25.9814453125],
                            [51.262304687500006, 26.153271484374997],
                            [51.543066406250006, 25.902392578125003],
                            [51.4853515625, 25.524707031250003],
                            [51.60888671875, 25.052880859374994],
                            [51.42792968750001, 24.668261718750003],
                            [51.26796875000002, 24.607226562500003]
                        ]
                    ]
                },
                properties: {
                    name: "Qatar",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [28.2125, 45.450439453125],
                            [28.317675781250017, 45.347119140625],
                            [28.451269531250006, 45.2921875],
                            [28.78828125000001, 45.240966796875],
                            [28.78173828125, 45.309863281249996],
                            [28.894335937500017, 45.289941406249994],
                            [29.223535156250023, 45.4029296875],
                            [29.403710937500023, 45.419677734375],
                            [29.567675781250017, 45.37080078125],
                            [29.705859375000017, 45.259912109374994],
                            [29.557519531250023, 44.843408203124994],
                            [29.048242187500023, 44.757568359375],
                            [29.0953125, 44.975048828125],
                            [28.891503906250023, 44.91865234375],
                            [28.585351562500023, 43.742236328124996],
                            [28.221972656250017, 43.772851562499994],
                            [27.88427734375, 43.987353515624996],
                            [27.425390625, 44.0205078125],
                            [27.0869140625, 44.167382812499994],
                            [26.2158203125, 44.007275390625],
                            [25.4970703125, 43.670800781249994],
                            [22.919042968750006, 43.83447265625],
                            [22.868261718750006, 43.947900390624994],
                            [23.02851562500001, 44.077978515625],
                            [22.705078125, 44.23779296875],
                            [22.687890625000023, 44.248291015625],
                            [22.494531250000023, 44.435449218749994],
                            [22.554003906250017, 44.540332031249996],
                            [22.6201171875, 44.562353515625],
                            [22.70078125, 44.555517578125],
                            [22.734375, 44.569921875],
                            [22.72089843750001, 44.605517578124996],
                            [22.64208984375, 44.6509765625],
                            [22.49765625, 44.70625],
                            [22.350683593750006, 44.676123046875],
                            [22.200976562500017, 44.560693359374994],
                            [22.093066406250017, 44.541943359375],
                            [21.909277343750006, 44.66611328125],
                            [21.636132812500023, 44.71044921875],
                            [21.52314453125001, 44.790087890624996],
                            [21.36005859375001, 44.82666015625],
                            [21.35791015625, 44.86181640625],
                            [21.384375, 44.870068359375],
                            [21.442187500000017, 44.873388671875],
                            [21.519921875000023, 44.880810546875],
                            [21.532324218750006, 44.900683593749996],
                            [21.35703125, 44.990771484374996],
                            [21.465429687500006, 45.171875],
                            [21.431445312500017, 45.192529296874994],
                            [20.794042968750006, 45.46787109375],
                            [20.775, 45.749804687499996],
                            [20.760156250000023, 45.758105468749996],
                            [20.746875, 45.748974609375],
                            [20.727832031250017, 45.73740234375],
                            [20.709277343750017, 45.735253906249994],
                            [20.652734375000023, 45.77939453125],
                            [20.581152343750006, 45.869482421875],
                            [20.35859375000001, 45.975488281249994],
                            [20.241796875, 46.10859375],
                            [20.28095703125001, 46.1330078125],
                            [20.508105468750017, 46.166943359375],
                            [20.613671875000023, 46.13349609375],
                            [20.76025390625, 46.246240234374994],
                            [21.121679687500006, 46.282421875],
                            [21.99970703125001, 47.505029296874994],
                            [22.87666015625001, 47.947265625],
                            [23.054785156250006, 48.00654296875],
                            [23.139453125000017, 48.08740234375],
                            [23.20263671875, 48.084521484374996],
                            [23.408203125, 47.989990234375],
                            [23.628710937500017, 47.995849609375],
                            [24.578906250000017, 47.931054687499994],
                            [24.979101562500006, 47.72412109375],
                            [25.464257812500023, 47.910791015624994],
                            [25.689257812500017, 47.932470703125],
                            [25.90869140625, 47.967578125],
                            [26.162695312500006, 47.992529296875],
                            [26.236230468750023, 48.064355468749994],
                            [26.276953125, 48.113232421875],
                            [26.3056640625, 48.203759765624994],
                            [26.4423828125, 48.22998046875],
                            [26.618945312500017, 48.25986328125],
                            [26.980761718750017, 48.155029296875],
                            [27.614062500000017, 47.34052734375],
                            [28.07177734375, 46.978417968749994],
                            [28.23945312500001, 46.6408203125],
                            [28.07470703125, 45.598974609375],
                            [28.2125, 45.450439453125]
                        ]
                    ]
                },
                properties: {
                    name: "Romania",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [146.71396484375012, 43.743798828124994],
                                [146.62197265625, 43.81298828125006],
                                [146.88408203125002, 43.82915039062496],
                                [146.71396484375012, 43.743798828124994]
                            ]
                        ],
                        [
                            [
                                [146.20761718750006, 44.49765625],
                                [146.5677734375, 44.44042968749997],
                                [145.91406249999997, 44.10371093750004],
                                [145.58681640625, 43.84511718750002],
                                [145.5558593750001, 43.66459960937502],
                                [145.46171875000007, 43.870898437500045],
                                [146.20761718750006, 44.49765625]
                            ]
                        ],
                        [
                            [
                                [148.59951171875, 45.317626953125],
                                [147.91376953125004, 44.99038085937502],
                                [147.65781250000012, 44.97714843749998],
                                [146.89746093750003, 44.404296875],
                                [147.24658203124997, 44.856054687500006],
                                [147.88554687500007, 45.22563476562499],
                                [147.9240234375001, 45.38330078125006],
                                [148.05605468750005, 45.26210937500005],
                                [148.32421874999997, 45.28242187500001],
                                [148.8122070312501, 45.510009765625],
                                [148.83710937500004, 45.36269531250002],
                                [148.59951171875, 45.317626953125]
                            ]
                        ],
                        [
                            [
                                [149.68769531250004, 45.64204101562501],
                                [149.44707031250002, 45.593359375000034],
                                [149.9623046875, 46.02192382812504],
                                [150.553125, 46.208544921875045],
                                [149.68769531250004, 45.64204101562501]
                            ]
                        ],
                        [
                            [
                                [152.00205078125006, 46.89716796874998],
                                [151.72343750000007, 46.82880859375001],
                                [152.28886718750007, 47.1421875],
                                [152.00205078125006, 46.89716796874998]
                            ]
                        ],
                        [
                            [
                                [154.81044921875005, 49.31201171875],
                                [154.61093750000006, 49.29404296874998],
                                [154.82490234375004, 49.64692382812501],
                                [154.81044921875005, 49.31201171875]
                            ]
                        ],
                        [
                            [
                                [155.9210937500001, 50.30219726562501],
                                [155.39716796875004, 50.04125976562497],
                                [155.24306640625, 50.09462890625002],
                                [155.21835937500012, 50.29785156250003],
                                [155.68017578124997, 50.400732421875034],
                                [156.096875, 50.771875],
                                [155.9210937500001, 50.30219726562501]
                            ]
                        ],
                        [
                            [
                                [156.40507812500002, 50.65761718750005],
                                [156.16796874999997, 50.73188476562498],
                                [156.37646484374997, 50.86210937499996],
                                [156.4875, 50.84296874999998],
                                [156.40507812500002, 50.65761718750005]
                            ]
                        ],
                        [
                            [
                                [142.76103515625002, 54.393945312499966],
                                [143.32470703125003, 52.96308593749998],
                                [143.15556640625002, 52.08374023437497],
                                [143.29951171875004, 51.632373046875045],
                                [143.81601562500006, 50.28261718750002],
                                [144.71376953125, 48.64028320312502],
                                [144.04873046875, 49.249169921874994],
                                [143.73232421875, 49.31201171875],
                                [143.10498046875003, 49.198828125000034],
                                [142.57421874999997, 48.07216796875002],
                                [142.55693359375002, 47.737890625000034],
                                [143.21767578125005, 46.79487304687504],
                                [143.48564453125002, 46.752050781250006],
                                [143.58066406250012, 46.360693359375034],
                                [143.43164062500003, 46.02866210937498],
                                [143.28232421875006, 46.55898437500002],
                                [142.57802734375005, 46.700781250000034],
                                [142.07714843749997, 45.91704101562499],
                                [141.83037109375002, 46.451074218749966],
                                [142.03867187500012, 47.140283203124966],
                                [141.9640625000001, 47.58745117187502],
                                [142.18173828125012, 48.01337890625001],
                                [141.86630859375006, 48.750097656250006],
                                [142.1422851562501, 49.56914062499999],
                                [142.06601562500006, 50.630468750000034],
                                [142.20673828125004, 51.22255859375002],
                                [141.72236328125004, 51.73632812499997],
                                [141.66083984375004, 52.27294921874997],
                                [141.85556640625012, 52.79350585937499],
                                [141.82353515625007, 53.33950195312502],
                                [142.1419921875, 53.49560546875003],
                                [142.52617187500002, 53.44746093749998],
                                [142.70595703125, 53.89570312499998],
                                [142.33496093749997, 54.28071289062501],
                                [142.76103515625002, 54.393945312499966]
                            ]
                        ],
                        [
                            [
                                [137.17861328125005, 55.100439453125034],
                                [137.05527343750006, 54.9267578125],
                                [136.71464843750002, 54.956152343750034],
                                [137.17861328125005, 55.100439453125034]
                            ]
                        ],
                        [
                            [
                                [137.94052734375012, 55.092626953125034],
                                [138.20615234375012, 55.03354492187498],
                                [137.72148437500007, 54.66323242187505],
                                [137.46269531250002, 54.873388671875034],
                                [137.23291015624997, 54.79057617187496],
                                [137.5773437500001, 55.19702148437497],
                                [137.94052734375012, 55.092626953125034]
                            ]
                        ],
                        [
                            [
                                [21.235742187500023, 55.26411132812498],
                                [22.072363281250034, 55.06367187499998],
                                [22.56728515625005, 55.05913085937496],
                                [22.82470703125, 54.87128906249998],
                                [22.684472656250023, 54.56293945312504],
                                [22.679882812500068, 54.493017578125006],
                                [22.766210937499977, 54.356787109375034],
                                [22.168457031250057, 54.35986328125006],
                                [21.14052734375008, 54.39179687499998],
                                [19.604394531250023, 54.45917968750004],
                                [19.974511718750023, 54.92119140625002],
                                [20.520312500000017, 54.994873046875],
                                [20.89980468750008, 55.286669921875045],
                                [20.957812500000074, 55.27890625000006],
                                [20.594824218750006, 54.982373046874955],
                                [20.995898437500017, 54.90268554687506],
                                [21.18886718750008, 54.93520507812502],
                                [21.235742187500023, 55.26411132812498]
                            ]
                        ],
                        [
                            [
                                [166.65029296875005, 54.83906249999998],
                                [166.64511718750006, 54.69409179687503],
                                [165.75107421875006, 55.294531250000034],
                                [166.27578125000005, 55.311962890624955],
                                [166.24804687499997, 55.16542968750002],
                                [166.65029296875005, 54.83906249999998]
                            ]
                        ],
                        [
                            [
                                [150.58994140625006, 59.01875],
                                [150.47021484375003, 59.05405273437498],
                                [150.66621093750004, 59.16015625000003],
                                [150.58994140625006, 59.01875]
                            ]
                        ],
                        [
                            [
                                [163.63515625000005, 58.603369140625006],
                                [163.47138671875004, 58.509375],
                                [163.7609375000001, 59.01503906250002],
                                [164.57265625, 59.22114257812501],
                                [164.61572265624997, 58.885595703125034],
                                [163.63515625000005, 58.603369140625006]
                            ]
                        ],
                        [
                            [
                                [35.8161132812501, 65.18208007812501],
                                [35.77871093750005, 64.97666015625],
                                [35.52890625000006, 65.15107421875001],
                                [35.8161132812501, 65.18208007812501]
                            ]
                        ],
                        [
                            [
                                [70.02070312500004, 66.502197265625],
                                [69.65136718750003, 66.56533203125],
                                [69.50273437500002, 66.75107421875],
                                [70.07666015624997, 66.69589843750003],
                                [70.02070312500004, 66.502197265625]
                            ]
                        ],
                        [
                            [
                                [-179.79853515625, 68.9404296875],
                                [-178.873876953125, 68.75410156249995],
                                [-178.69262695312503, 68.54599609375],
                                [-178.09746093750002, 68.4248046875],
                                [-178.05581054687497, 68.26489257812503],
                                [-177.79677734374997, 68.33798828125],
                                [-178.37304687500003, 68.56567382812503],
                                [-177.52724609375002, 68.29438476562501],
                                [-177.58920898437503, 68.22421875],
                                [-175.34521484375, 67.67807617187503],
                                [-175.37470703124998, 67.35737304687498],
                                [-175.00268554687494, 67.4375],
                                [-174.849853515625, 67.34887695312503],
                                [-174.92490234375, 66.62314453125006],
                                [-174.503759765625, 66.537939453125],
                                [-174.39409179687496, 66.34423828124997],
                                [-174.084765625, 66.47309570312504],
                                [-174.06503906249998, 66.22958984374998],
                                [-173.77397460937502, 66.43466796875003],
                                [-174.23159179687497, 66.63188476562505],
                                [-174.08642578125, 66.94287109375],
                                [-174.55009765624993, 67.090625],
                                [-173.6796875, 67.144775390625],
                                [-173.15781249999998, 67.06909179687503],
                                [-173.32353515625, 66.95483398437503],
                                [-173.25893554687497, 66.84008789062503],
                                [-173.19301757812497, 66.99360351562504],
                                [-172.5201171875, 66.952490234375],
                                [-173.00751953125, 67.06489257812498],
                                [-171.79555664062502, 66.93173828125003],
                                [-170.50952148437503, 66.34365234375005],
                                [-170.604443359375, 66.24892578125002],
                                [-170.30122070312504, 66.29404296874998],
                                [-170.24394531250002, 66.16928710937503],
                                [-169.777880859375, 66.14311523437505],
                                [-169.83168945312497, 65.99892578124997],
                                [-170.54067382812497, 65.86542968749995],
                                [-170.66630859375, 65.62153320312501],
                                [-171.42153320312502, 65.81035156250002],
                                [-171.10585937500002, 65.51103515625005],
                                [-171.90712890625, 65.495947265625],
                                [-172.78330078124998, 65.68105468749997],
                                [-172.23281250000002, 65.45571289062497],
                                [-172.30927734375004, 65.27563476562497],
                                [-172.66191406249993, 65.24853515625006],
                                [-172.28603515625002, 65.20571289062502],
                                [-172.21318359375, 65.04814453124999],
                                [-173.08579101562498, 64.81733398437495],
                                [-172.80107421874996, 64.79052734375],
                                [-172.90087890624994, 64.62885742187501],
                                [-172.40146484374998, 64.413916015625],
                                [-172.73916015624997, 64.41225585937502],
                                [-172.90317382812498, 64.52607421875004],
                                [-172.96005859375003, 64.32768554687502],
                                [-173.27548828124998, 64.2896484375],
                                [-173.327490234375, 64.53955078125003],
                                [-173.72973632812497, 64.36450195312497],
                                [-174.57055664062503, 64.7177734375],
                                [-175.39511718749998, 64.80239257812502],
                                [-175.85385742187498, 65.01083984375003],
                                [-176.09326171875, 65.471044921875],
                                [-177.05625, 65.613623046875],
                                [-177.48876953125, 65.50371093749999],
                                [-178.4125, 65.49555664062501],
                                [-178.93906249999998, 66.03276367187505],
                                [-178.74672851562497, 66.01367187500006],
                                [-178.52656250000004, 66.40156250000004],
                                [-178.86811523437498, 66.18706054687502],
                                [-179.14340820312503, 66.37504882812505],
                                [-179.327197265625, 66.16259765625003],
                                [-179.68330078124998, 66.18413085937505],
                                [-179.78969726562497, 65.90087890625],
                                [-179.352099609375, 65.51674804687497],
                                [-180, 65.06723632812498],
                                [-180, 65.31196289062501],
                                [-180, 65.55678710937497],
                                [-180, 65.80156250000002],
                                [-180, 66.04628906250002],
                                [-180, 66.29106445312499],
                                [-180, 66.53583984375004],
                                [-180, 66.78056640625005],
                                [-180, 67.02534179687501],
                                [-180, 67.27011718750006],
                                [-180, 67.51484374999998],
                                [-180, 67.75961914062503],
                                [-180, 68.00439453124997],
                                [-180, 68.24912109375],
                                [-180, 68.49389648437497],
                                [-180, 68.738671875],
                                [-179.999951171875, 68.98344726562505],
                                [-179.79853515625, 68.9404296875]
                            ]
                        ],
                        [
                            [
                                [50.265234375, 69.18559570312502],
                                [49.62626953125002, 68.85971679687498],
                                [48.91035156250004, 68.74306640625002],
                                [48.4390625, 68.80488281249998],
                                [48.319921875, 69.26923828125001],
                                [48.8449218750001, 69.49472656250003],
                                [49.22519531250006, 69.51123046875],
                                [50.265234375, 69.18559570312502]
                            ]
                        ],
                        [
                            [
                                [161.46708984375002, 68.90097656250003],
                                [161.08281250000007, 69.4056640625],
                                [161.50517578125007, 69.63945312500002],
                                [161.46708984375002, 68.90097656250003]
                            ]
                        ],
                        [
                            [
                                [169.20078125000006, 69.58046875],
                                [168.34804687500005, 69.66435546875005],
                                [167.86474609375003, 69.90107421875004],
                                [168.35791015625003, 70.01567382812502],
                                [169.37480468750007, 69.88261718749999],
                                [169.20078125000006, 69.58046875]
                            ]
                        ],
                        [
                            [
                                [60.450488281250074, 69.93486328124999],
                                [60.44023437500002, 69.72592773437506],
                                [59.637011718750074, 69.72104492187503],
                                [59.50263671875004, 69.86621093750003],
                                [58.952734375, 69.89277343750004],
                                [58.51992187500005, 70.31831054687504],
                                [59.04804687500004, 70.46049804687505],
                                [60.450488281250074, 69.93486328124999]
                            ]
                        ],
                        [
                            [
                                [52.90332031250003, 71.36499023437503],
                                [53.19257812500004, 71.21528320312498],
                                [53.0226562500001, 70.96870117187501],
                                [52.24960937500006, 71.28491210937506],
                                [52.90332031250003, 71.36499023437503]
                            ]
                        ],
                        [
                            [
                                [178.8615234375001, 70.826416015625],
                                [178.68388671875013, 71.10566406250004],
                                [180, 71.53774414062505],
                                [180, 70.993017578125],
                                [178.8615234375001, 70.826416015625]
                            ]
                        ],
                        [
                            [
                                [137.95986328125005, 71.50766601562503],
                                [137.71181640625005, 71.4232421875],
                                [137.06406250000006, 71.52988281250003],
                                [137.816796875, 71.58789062500006],
                                [137.95986328125005, 71.50766601562503]
                            ]
                        ],
                        [
                            [
                                [-178.87646484375, 71.57705078124997],
                                [-178.13388671874998, 71.46547851562497],
                                [-177.523583984375, 71.16689453125],
                                [-179.415673828125, 70.91899414062502],
                                [-179.999951171875, 70.993017578125],
                                [-179.999951171875, 71.53774414062505],
                                [-178.87646484375, 71.57705078124997]
                            ]
                        ],
                        [
                            [
                                [77.6325195312501, 72.291259765625],
                                [76.87109374999997, 72.317041015625],
                                [77.74853515625003, 72.63120117187506],
                                [78.36513671875005, 72.48242187500003],
                                [77.6325195312501, 72.291259765625]
                            ]
                        ],
                        [
                            [
                                [79.50146484374997, 72.72192382812497],
                                [78.63320312500005, 72.85073242187502],
                                [79.16425781250004, 73.0943359375],
                                [79.50146484374997, 72.72192382812497]
                            ]
                        ],
                        [
                            [
                                [74.660546875, 72.87343750000002],
                                [74.18066406250003, 72.975341796875],
                                [74.19853515625002, 73.10908203124998],
                                [74.9615234375, 73.0625],
                                [74.660546875, 72.87343750000002]
                            ]
                        ],
                        [
                            [
                                [120.26132812500012, 73.08984374999997],
                                [119.79208984375006, 73.04541015624997],
                                [119.64042968750002, 73.12431640625007],
                                [120.26132812500012, 73.08984374999997]
                            ]
                        ],
                        [
                            [
                                [55.31982421875003, 73.30830078124998],
                                [56.42958984375005, 73.201171875],
                                [56.121679687500006, 72.80659179687498],
                                [55.40332031249997, 72.54907226562503],
                                [55.29785156249997, 71.93535156250005],
                                [56.45439453125002, 71.10737304687504],
                                [57.62539062500005, 70.72880859374999],
                                [57.14589843750005, 70.58911132812506],
                                [56.38574218749997, 70.73413085937503],
                                [56.49970703125004, 70.56640625000003],
                                [55.687304687500074, 70.69218749999999],
                                [54.60117187500006, 70.68007812500002],
                                [53.383593750000074, 70.87353515625],
                                [53.670507812500006, 71.08691406250003],
                                [54.155664062499994, 71.12548828125],
                                [53.40996093750002, 71.34013671875002],
                                [53.41162109375003, 71.530126953125],
                                [51.93789062500005, 71.47470703124998],
                                [51.511328125, 71.64809570312497],
                                [51.58251953124997, 72.07119140625],
                                [52.252050781250006, 72.12973632812503],
                                [52.66191406250002, 72.33686523437495],
                                [52.91660156250006, 72.66889648437501],
                                [52.5792968750001, 72.791357421875],
                                [53.3698242187501, 72.91674804687506],
                                [53.2511718750001, 73.182958984375],
                                [54.80390625000004, 73.38764648437498],
                                [55.31982421875003, 73.30830078124998]
                            ]
                        ],
                        [
                            [
                                [70.67392578125006, 73.09501953125005],
                                [70.04072265625004, 73.03715820312507],
                                [69.99589843750002, 73.359375],
                                [70.94023437500002, 73.51440429687503],
                                [71.6261718750001, 73.17397460937497],
                                [70.67392578125006, 73.09501953125005]
                            ]
                        ],
                        [
                            [
                                [142.18486328125007, 73.89589843750005],
                                [143.34375, 73.56875],
                                [143.45146484375007, 73.231298828125],
                                [141.59667968750003, 73.31083984375005],
                                [140.66279296875004, 73.45200195312503],
                                [139.785546875, 73.35522460937503],
                                [141.08476562500002, 73.86586914062497],
                                [142.18486328125007, 73.89589843750005]
                            ]
                        ],
                        [
                            [
                                [83.5490234375001, 74.07177734375],
                                [82.8177734375, 74.09160156250005],
                                [83.14980468750005, 74.151611328125],
                                [83.5490234375001, 74.07177734375]
                            ]
                        ],
                        [
                            [
                                [141.01025390625003, 73.99946289062501],
                                [140.40947265625002, 73.92167968750005],
                                [140.1935546875001, 74.23671875000002],
                                [141.03857421875003, 74.24272460937502],
                                [141.01025390625003, 73.99946289062501]
                            ]
                        ],
                        [
                            [
                                [113.38720703124997, 74.40043945312499],
                                [112.78242187500004, 74.09506835937503],
                                [111.50341796874997, 74.35307617187502],
                                [111.87978515625, 74.36381835937499],
                                [112.08447265624997, 74.54897460937505],
                                [113.38720703124997, 74.40043945312499]
                            ]
                        ],
                        [
                            [
                                [86.653125, 74.981298828125],
                                [87.05214843750005, 74.982568359375],
                                [86.92714843750005, 74.83076171874998],
                                [86.25859375000002, 74.89350585937498],
                                [86.653125, 74.981298828125]
                            ]
                        ],
                        [
                            [
                                [82.17236328125003, 75.41938476562501],
                                [81.97851562499997, 75.24711914062499],
                                [81.65478515625003, 75.28891601562498],
                                [81.71210937500004, 75.45141601562506],
                                [82.165625, 75.515625],
                                [82.17236328125003, 75.41938476562501]
                            ]
                        ],
                        [
                            [
                                [146.79521484375007, 75.37075195312505],
                                [148.43242187500002, 75.41352539062495],
                                [148.59013671875007, 75.23637695312502],
                                [150.82236328125006, 75.15654296875002],
                                [150.64628906250002, 74.944580078125],
                                [149.596875, 74.77260742187505],
                                [148.296875, 74.80043945312502],
                                [146.14853515625012, 75.19829101562499],
                                [146.5375, 75.58178710937506],
                                [146.79521484375007, 75.37075195312505]
                            ]
                        ],
                        [
                            [
                                [135.9486328125, 75.40957031250005],
                                [135.45195312500007, 75.38955078124997],
                                [135.6986328125, 75.84526367187499],
                                [136.16894531249997, 75.60556640625],
                                [135.9486328125, 75.40957031250005]
                            ]
                        ],
                        [
                            [
                                [140.04873046875, 75.82895507812503],
                                [140.81591796874997, 75.63071289062498],
                                [141.48544921875012, 76.13715820312495],
                                [142.66953125000012, 75.86342773437497],
                                [143.68583984375002, 75.86367187500002],
                                [145.35996093750006, 75.53046874999998],
                                [144.01972656250004, 75.04467773437506],
                                [143.1703125, 75.11689453125001],
                                [142.72949218749997, 75.33764648437506],
                                [142.941796875, 75.71328125000002],
                                [142.30791015625007, 75.69169921875005],
                                [142.19882812500006, 75.39267578124998],
                                [143.12792968749997, 74.9703125],
                                [142.47275390625006, 74.82041015625],
                                [141.98730468750003, 74.99125976562499],
                                [140.26787109375002, 74.846923828125],
                                [139.68125, 74.96406249999995],
                                [139.09912109374997, 74.65654296875002],
                                [138.09228515625003, 74.79746093750003],
                                [136.94765625000005, 75.32553710937498],
                                [137.28974609375004, 75.34863281249997],
                                [137.26884765625002, 75.7494140625],
                                [137.70654296875003, 75.75957031250002],
                                [137.56054687499997, 75.95522460937502],
                                [138.20761718750006, 76.11494140624995],
                                [138.91953125000006, 76.19672851562501],
                                [140.04873046875, 75.82895507812503]
                            ]
                        ],
                        [
                            [
                                [96.5324218750001, 76.278125],
                                [96.30058593750002, 76.121728515625],
                                [95.31113281250006, 76.21474609375002],
                                [95.37988281250003, 76.2890625],
                                [96.5324218750001, 76.278125]
                            ]
                        ],
                        [
                            [
                                [112.47802734375003, 76.62089843749999],
                                [112.531640625, 76.450048828125],
                                [111.96894531250004, 76.62617187500001],
                                [112.47802734375003, 76.62089843749999]
                            ]
                        ],
                        [
                            [
                                [149.15019531250002, 76.65991210937506],
                                [148.39863281250004, 76.64824218750007],
                                [149.4064453125001, 76.78208007812498],
                                [149.15019531250002, 76.65991210937506]
                            ]
                        ],
                        [
                            [
                                [67.7653320312501, 76.23759765624999],
                                [61.35595703124997, 75.31484375000002],
                                [60.27685546875003, 75.00756835937503],
                                [60.501367187499994, 74.90463867187503],
                                [59.67402343750004, 74.61015624999999],
                                [59.24013671875005, 74.69296874999998],
                                [59.040429687499994, 74.48554687500001],
                                [58.53466796875003, 74.49892578124997],
                                [58.6178710937501, 74.22739257812498],
                                [57.76738281250002, 74.013818359375],
                                [57.755957031250006, 73.769189453125],
                                [57.313085937500006, 73.838037109375],
                                [57.54257812500006, 73.65820312500003],
                                [56.96386718750003, 73.36655273437503],
                                [56.43037109375004, 73.29721679687503],
                                [55.00683593750003, 73.45385742187506],
                                [54.29990234375006, 73.35097656249997],
                                [53.7628906250001, 73.76616210937499],
                                [54.64267578125006, 73.95957031250006],
                                [55.34091796875006, 74.41962890624998],
                                [56.13710937500005, 74.49609375000003],
                                [55.5822265625001, 74.627685546875],
                                [56.4987304687501, 74.95708007812505],
                                [55.81005859374997, 75.12490234374997],
                                [56.03554687499999, 75.19423828124997],
                                [56.57031250000003, 75.09775390625003],
                                [56.8444335937501, 75.351416015625],
                                [57.606835937499994, 75.34125976562498],
                                [58.05830078125004, 75.6630859375],
                                [58.88125, 75.85478515625007],
                                [60.27929687499997, 76.09624023437505],
                                [60.94218750000002, 76.07128906250003],
                                [61.20166015624997, 76.28203125000007],
                                [62.97148437500002, 76.23666992187498],
                                [64.4634765625, 76.37817382812503],
                                [67.65185546874997, 77.011572265625],
                                [68.48574218750005, 76.93369140625003],
                                [68.94169921875002, 76.707666015625],
                                [67.7653320312501, 76.23759765624999]
                            ]
                        ],
                        [
                            [
                                [96.28544921875002, 77.02666015625007],
                                [95.27031250000007, 77.01884765624999],
                                [96.52841796875006, 77.20551757812501],
                                [96.28544921875002, 77.02666015625007]
                            ]
                        ],
                        [
                            [
                                [89.51425781250006, 77.18881835937498],
                                [89.14169921875012, 77.22680664062497],
                                [89.61621093749997, 77.31103515625],
                                [89.51425781250006, 77.18881835937498]
                            ]
                        ],
                        [
                            [
                                [130.68730468750007, 42.30253906249999],
                                [130.52695312500012, 42.535400390625],
                                [130.42480468749997, 42.72705078124997],
                                [131.06855468750004, 42.90224609375005],
                                [131.25732421875003, 43.378076171874994],
                                [131.2552734375, 44.07158203124999],
                                [130.9816406250001, 44.844335937500034],
                                [131.44687500000012, 44.984033203124966],
                                [131.85185546875002, 45.32685546875001],
                                [132.93603515624997, 45.029931640624994],
                                [133.1134765625001, 45.130712890625006],
                                [133.18603515625003, 45.49482421875004],
                                [133.43642578125, 45.60468750000004],
                                [133.86132812500003, 46.24775390625004],
                                [134.1676757812501, 47.30219726562501],
                                [134.75234375, 47.71542968749998],
                                [134.56601562500006, 48.02250976562502],
                                [134.66523437500004, 48.25390625],
                                [134.29335937500005, 48.37343750000002],
                                [133.46835937500006, 48.09716796875003],
                                [133.14404296875003, 48.10566406249998],
                                [132.7072265625001, 47.94726562500006],
                                [132.47626953125004, 47.714990234374994],
                                [130.96191406249997, 47.70932617187498],
                                [130.7326171875001, 48.01923828124998],
                                [130.80429687500012, 48.34150390624998],
                                [130.5521484375, 48.602490234374955],
                                [130.553125, 48.861181640625006],
                                [130.1959960937501, 48.89165039062499],
                                [129.49814453125012, 49.38881835937502],
                                [129.0651367187501, 49.374658203124966],
                                [128.70400390625, 49.60014648437499],
                                [127.99960937500006, 49.56860351562506],
                                [127.55078124999997, 49.801806640625045],
                                [127.590234375, 50.20898437500003],
                                [127.33720703125007, 50.35014648437502],
                                [127.30703125000005, 50.70795898437501],
                                [126.92480468749997, 51.10014648437496],
                                [126.34169921875, 52.36201171875001],
                                [125.64902343750012, 53.042285156250045],
                                [125.075, 53.20366210937496],
                                [124.81230468750002, 53.133837890625045],
                                [123.6078125, 53.546533203124994],
                                [120.98544921875012, 53.28457031250002],
                                [120.09453125000007, 52.787207031250034],
                                [120.0675781250001, 52.632910156250034],
                                [120.65615234375, 52.56665039062503],
                                [120.74980468750007, 52.096533203125006],
                                [120.06689453125003, 51.60068359375006],
                                [119.16367187500006, 50.40600585937503],
                                [119.34628906250012, 50.278955078124994],
                                [119.25986328125012, 50.06640625000003],
                                [118.4515625, 49.84448242187503],
                                [117.8734375, 49.51347656250002],
                                [116.6833007812501, 49.82377929687499],
                                [116.551171875, 49.92031250000002],
                                [116.35117187500012, 49.97807617187499],
                                [116.21679687500003, 50.00927734375003],
                                [116.13457031250002, 50.01079101562499],
                                [115.9259765625001, 49.95214843750003],
                                [115.79521484375002, 49.90590820312502],
                                [115.71777343750003, 49.88061523437503],
                                [115.58798828125006, 49.88603515624996],
                                [115.42919921874997, 49.89648437499997],
                                [115.36503906250002, 49.911767578124966],
                                [115.27451171875006, 49.948876953124994],
                                [115.00332031250005, 50.138574218749994],
                                [114.74316406249997, 50.23369140625002],
                                [114.29707031250004, 50.27441406250006],
                                [113.57421874999997, 50.00703125000001],
                                [113.44550781250004, 49.94160156250001],
                                [113.31904296875004, 49.87431640624999],
                                [113.16416015625012, 49.79716796874999],
                                [113.09208984375007, 49.692529296874994],
                                [113.05556640625, 49.61625976562499],
                                [112.91484375000002, 49.569238281249994],
                                [112.80644531250007, 49.52358398437502],
                                [112.69736328125012, 49.50727539062498],
                                [112.49492187500002, 49.532324218750034],
                                [112.07968750000006, 49.42421875000002],
                                [111.42929687500006, 49.342626953125034],
                                [111.3366210937501, 49.355859374999966],
                                [111.20419921875012, 49.304296875000034],
                                [110.82792968750002, 49.16616210937505],
                                [110.70976562500002, 49.14296875000002],
                                [110.42783203125006, 49.219970703125],
                                [110.32138671875012, 49.215869140625045],
                                [110.19990234375004, 49.17041015625003],
                                [109.5287109375, 49.269873046875034],
                                [109.45371093750012, 49.29633789062501],
                                [109.23671875000005, 49.334912109374955],
                                [108.61367187500005, 49.32280273437499],
                                [108.52246093750003, 49.34150390624998],
                                [108.4069335937501, 49.39638671875005],
                                [107.96542968750012, 49.65351562500004],
                                [107.91660156250012, 49.947802734375045],
                                [107.63095703125012, 49.98310546875004],
                                [107.3470703125, 49.986669921875034],
                                [107.23330078125, 49.989404296874994],
                                [107.14306640625003, 50.03300781249999],
                                [107.04023437500004, 50.086474609375045],
                                [106.94130859375005, 50.19667968750002],
                                [106.71113281250004, 50.312597656250006],
                                [106.57441406250004, 50.32880859375004],
                                [106.36845703125002, 50.317578124999955],
                                [106.21787109375006, 50.304589843749966],
                                [105.38359375000002, 50.47373046874998],
                                [104.07871093750012, 50.15424804687498],
                                [103.63291015625006, 50.138574218749994],
                                [103.49628906250004, 50.16494140625005],
                                [103.42119140625002, 50.18706054687502],
                                [103.3043945312501, 50.200292968750034],
                                [102.28837890625007, 50.58510742187502],
                                [102.31660156250004, 50.71845703125001],
                                [102.21503906250004, 50.82944335937506],
                                [102.19453125000004, 51.05068359375002],
                                [102.15195312500006, 51.107519531250034],
                                [102.14238281250007, 51.21606445312503],
                                [102.16005859375005, 51.260839843750006],
                                [102.1556640625, 51.31376953124996],
                                [102.1115234375001, 51.353466796874955],
                                [101.97919921875004, 51.382226562499966],
                                [101.82119140625, 51.421044921874966],
                                [101.57089843750006, 51.46718750000005],
                                [101.38125, 51.45263671875],
                                [100.53623046875006, 51.713476562500034],
                                [100.46894531250004, 51.72607421875003],
                                [100.23037109375, 51.729833984375006],
                                [100.0345703125, 51.73710937499996],
                                [99.92167968750002, 51.755517578124994],
                                [99.71923828124997, 51.87163085937502],
                                [98.89316406250006, 52.11728515625006],
                                [98.64052734375005, 51.80117187500005],
                                [98.103125, 51.483544921874994],
                                [97.82529296875012, 50.985253906249994],
                                [97.953125, 50.85517578124998],
                                [98.02978515625003, 50.64462890624998],
                                [98.07890625000002, 50.60380859375002],
                                [98.14501953124997, 50.56855468750001],
                                [98.22050781250007, 50.55717773437502],
                                [98.2794921875001, 50.53325195312502],
                                [98.25029296875002, 50.30244140624998],
                                [98.00390625000003, 50.01425781249998],
                                [97.35976562500005, 49.741455078125],
                                [97.20859375000006, 49.73081054687506],
                                [96.98574218750005, 49.88281250000003],
                                [96.31503906250012, 49.90112304687503],
                                [96.06552734375006, 49.99873046875001],
                                [95.52265625000004, 49.911230468750034],
                                [95.11142578125012, 49.935449218749994],
                                [94.93027343750006, 50.04375],
                                [94.8112304687501, 50.04819335937506],
                                [94.71806640625002, 50.04326171875002],
                                [94.67548828125004, 50.02807617187506],
                                [94.61474609375003, 50.02373046874996],
                                [94.56464843750004, 50.08793945312499],
                                [94.35468750000004, 50.221826171874994],
                                [94.25107421875006, 50.55639648437503],
                                [93.103125, 50.60390625000002],
                                [92.94130859375005, 50.77822265625002],
                                [92.85644531250003, 50.78911132812502],
                                [92.77929687500003, 50.778662109375006],
                                [92.738671875, 50.71093749999997],
                                [92.68134765625004, 50.683203125],
                                [92.6266601562501, 50.68828124999999],
                                [92.57890625000002, 50.725439453125006],
                                [92.42636718750006, 50.803076171875006],
                                [92.35478515625002, 50.86416015625002],
                                [92.29580078125, 50.84980468750004],
                                [92.19238281249997, 50.700585937499994],
                                [91.80429687500006, 50.693603515625],
                                [91.4464843750001, 50.52216796874998],
                                [91.41503906249997, 50.46801757812506],
                                [91.34082031249997, 50.470068359375034],
                                [91.30058593750002, 50.46337890625],
                                [91.2337890625, 50.45239257812497],
                                [91.02158203125012, 50.41547851562501],
                                [90.83808593750004, 50.32373046874997],
                                [90.76074218749997, 50.30595703124999],
                                [90.71435546874997, 50.25942382812502],
                                [90.65507812500007, 50.22236328125001],
                                [90.05371093750003, 50.09375],
                                [89.64384765625002, 49.90302734374998],
                                [89.65410156250007, 49.71748046875001],
                                [89.57919921875006, 49.69970703125003],
                                [89.475, 49.66054687500005],
                                [89.39560546875006, 49.61152343750001],
                                [89.24394531250007, 49.62705078125006],
                                [89.20292968750007, 49.59570312499997],
                                [89.17998046875002, 49.5322265625],
                                [89.10947265625012, 49.50136718750002],
                                [89.00839843750006, 49.472802734374994],
                                [88.97060546875, 49.483740234375006],
                                [88.94541015625012, 49.50766601562498],
                                [88.90019531250002, 49.53969726562502],
                                [88.86386718750006, 49.52763671874996],
                                [88.83164062500012, 49.44843749999998],
                                [88.633203125, 49.486132812500045],
                                [88.19257812500004, 49.451708984375045],
                                [88.13554687500002, 49.38149414062502],
                                [88.11572265624997, 49.25629882812501],
                                [88.0285156250001, 49.219775390625045],
                                [87.98808593750002, 49.186914062499994],
                                [87.9347656250001, 49.16455078124997],
                                [87.81425781250002, 49.162304687499955],
                                [87.7625, 49.16582031249996],
                                [87.5158203125001, 49.122412109375006],
                                [87.41669921875004, 49.07661132812501],
                                [87.32285156250012, 49.085791015625006],
                                [86.62646484374997, 49.56269531250001],
                                [86.67548828125004, 49.77729492187501],
                                [86.1808593750001, 49.49931640624996],
                                [85.2326171875001, 49.61582031249998],
                                [84.9894531250001, 50.061425781249994],
                                [84.32324218749997, 50.239160156249966],
                                [83.94511718750007, 50.774658203125],
                                [83.35732421875005, 50.99458007812504],
                                [82.76083984375012, 50.89335937500002],
                                [82.49394531250007, 50.72758789062499],
                                [81.46591796875006, 50.73984375],
                                [81.38828125000006, 50.95649414062501],
                                [81.0714843750001, 50.96875],
                                [81.12724609375002, 51.19106445312502],
                                [80.73525390625, 51.29340820312498],
                                [80.44804687500002, 51.18334960937503],
                                [80.42363281250002, 50.94628906249997],
                                [79.98623046875, 50.774560546874966],
                                [77.85996093750006, 53.269189453124994],
                                [76.48476562500005, 54.02255859374998],
                                [76.42167968750007, 54.151513671874966],
                                [76.65458984375007, 54.14526367187503],
                                [76.8373046875, 54.4423828125],
                                [75.43720703125004, 54.08964843749999],
                                [75.22021484374997, 53.89379882812506],
                                [74.45195312500007, 53.64726562500002],
                                [74.35156250000003, 53.487646484375006],
                                [73.85898437500006, 53.61972656249998],
                                [73.40693359375004, 53.44755859374999],
                                [73.30566406250003, 53.707226562499955],
                                [73.71240234375003, 54.04238281250002],
                                [73.22988281250005, 53.957812500000045],
                                [72.62226562500004, 54.13432617187502],
                                [72.44677734375003, 53.94184570312498],
                                [72.18603515625003, 54.32563476562501],
                                [72.00449218750006, 54.20566406249998],
                                [71.09316406250005, 54.21220703124999],
                                [71.18554687500003, 54.59931640624998],
                                [70.73808593750007, 55.30517578125],
                                [70.18242187500002, 55.162451171875034],
                                [68.9772460937501, 55.389599609374955],
                                [68.20625, 55.16093750000002],
                                [68.15585937500006, 54.97670898437505],
                                [65.476953125, 54.62329101562497],
                                [65.08837890624997, 54.340185546875034],
                                [64.46123046875002, 54.38417968750002],
                                [61.92871093750003, 53.94648437500004],
                                [61.231054687500006, 54.01948242187498],
                                [60.97949218749997, 53.62172851562505],
                                [61.53496093750002, 53.52329101562506],
                                [61.22890625, 53.445898437500006],
                                [61.19921874999997, 53.28715820312502],
                                [61.65986328125004, 53.22846679687504],
                                [62.08271484375004, 53.00541992187499],
                                [61.047460937500006, 52.97246093750002],
                                [60.77441406249997, 52.67578124999997],
                                [60.99453125000005, 52.33686523437504],
                                [60.03027343749997, 51.93325195312505],
                                [60.464746093749994, 51.651171875000045],
                                [61.55468750000003, 51.32460937500005],
                                [61.38945312500002, 50.86103515625001],
                                [60.94228515625005, 50.69550781250004],
                                [60.42480468749997, 50.67915039062498],
                                [60.05859374999997, 50.850292968749955],
                                [59.812402343749994, 50.58203125],
                                [59.523046875, 50.492871093749955],
                                [59.4523437500001, 50.62041015625002],
                                [58.88369140625005, 50.694433593750006],
                                [58.359179687500074, 51.063818359375034],
                                [57.83886718750003, 51.091650390625006],
                                [57.44218750000002, 50.88886718749998],
                                [57.01171874999997, 51.06518554687503],
                                [56.49140625000004, 51.01953124999997],
                                [55.68623046875004, 50.582861328125006],
                                [54.64160156250003, 51.011572265625034],
                                [54.555273437500006, 50.535791015624994],
                                [54.139746093750006, 51.04077148437503],
                                [53.33808593750004, 51.48237304687504],
                                [52.57119140625005, 51.481640624999955],
                                [52.21914062499999, 51.709375],
                                [51.344531250000074, 51.47534179687503],
                                [51.16347656250005, 51.6474609375],
                                [50.79394531249997, 51.729199218749955],
                                [50.246875, 51.28950195312498],
                                [49.49804687500003, 51.08359375000006],
                                [49.32343750000004, 50.851708984374966],
                                [48.625097656250006, 50.61269531250005],
                                [48.7589843750001, 49.92832031250006],
                                [48.33496093750003, 49.858251953125006],
                                [47.7057617187501, 50.37797851562502],
                                [47.42919921874997, 50.35795898437502],
                                [46.889550781249994, 49.69697265625001],
                                [46.80205078125002, 49.36708984375002],
                                [47.031347656250006, 49.150292968749994],
                                [46.70263671875003, 48.80556640625002],
                                [46.660937500000074, 48.41225585937502],
                                [47.06464843750004, 48.23247070312499],
                                [47.292382812499994, 47.74091796875004],
                                [47.48193359374997, 47.80390624999998],
                                [48.16699218750003, 47.70878906249996],
                                [48.959375, 46.77460937499998],
                                [48.558398437500074, 46.75712890624999],
                                [48.54121093750004, 46.60561523437502],
                                [49.232226562500074, 46.33715820312503],
                                [48.683691406250006, 46.08618164062497],
                                [48.72958984375006, 45.896826171875034],
                                [48.4870117187501, 45.93486328124996],
                                [47.63330078124997, 45.58403320312499],
                                [47.46328125, 45.67968750000003],
                                [47.5294921875001, 45.530224609374955],
                                [47.3512695312501, 45.21772460937498],
                                [46.7072265625001, 44.503320312499994],
                                [47.30703125000005, 44.103125],
                                [47.462792968749994, 43.55502929687498],
                                [47.64648437500003, 43.88461914062498],
                                [47.463183593750074, 43.03505859375002],
                                [48.572851562500006, 41.84448242187503],
                                [47.79101562499997, 41.19926757812502],
                                [47.31767578125002, 41.28242187500001],
                                [46.74931640625002, 41.812597656250006],
                                [46.42988281250004, 41.890966796875006],
                                [46.21269531250002, 41.989892578124994],
                                [45.63857421875005, 42.20507812500003],
                                [45.63427734374997, 42.234716796875034],
                                [45.72753906249997, 42.47504882812498],
                                [45.70527343750004, 42.49809570312496],
                                [45.56289062499999, 42.53574218749998],
                                [45.34375, 42.52978515625003],
                                [45.16025390625006, 42.675],
                                [45.07158203125002, 42.69414062500002],
                                [44.94335937499997, 42.73027343750002],
                                [44.870996093749994, 42.75639648437499],
                                [44.850488281249994, 42.746826171875],
                                [44.77109375000006, 42.61679687499998],
                                [44.69179687499999, 42.709619140624966],
                                [44.64433593750002, 42.734716796875034],
                                [44.50585937500003, 42.748632812500006],
                                [44.329492187499994, 42.703515624999966],
                                [44.10273437500004, 42.616357421874994],
                                [44.004687500000074, 42.59560546875002],
                                [43.95742187500005, 42.56655273437505],
                                [43.825976562500074, 42.571533203125],
                                [43.759863281250006, 42.593847656250006],
                                [43.738378906250006, 42.61699218750002],
                                [43.74990234375005, 42.65751953125002],
                                [43.79541015624997, 42.702978515625034],
                                [43.78261718750005, 42.747021484374955],
                                [43.62304687500003, 42.80771484374998],
                                [43.5578125000001, 42.844482421875],
                                [43.089160156250074, 42.9890625],
                                [43.00019531250004, 43.04965820312506],
                                [42.991601562499994, 43.09150390624998],
                                [42.76064453125005, 43.169580078124966],
                                [41.58056640624997, 43.21923828124997],
                                [41.460742187500074, 43.276318359374955],
                                [41.35820312500002, 43.33339843750005],
                                [41.08310546875006, 43.37446289062498],
                                [40.94199218750006, 43.41806640624998],
                                [40.801660156249994, 43.479931640624955],
                                [40.64804687500006, 43.53388671875004],
                                [40.084570312500006, 43.553125],
                                [40.02373046875002, 43.48486328125],
                                [39.873632812500006, 43.47280273437502],
                                [38.71728515624997, 44.28808593750003],
                                [38.18125, 44.41967773437503],
                                [37.851464843749994, 44.698828125000034],
                                [37.49511718750003, 44.69526367187504],
                                [37.20478515625004, 44.97197265624999],
                                [36.62763671875004, 45.15131835937504],
                                [36.941210937500074, 45.289697265624994],
                                [36.72041015625004, 45.371875],
                                [36.8659179687501, 45.42705078124999],
                                [37.21357421875004, 45.272314453125006],
                                [37.6471679687501, 45.37719726562506],
                                [37.61240234375006, 45.56469726562506],
                                [37.93310546875003, 46.001708984375],
                                [38.014257812500006, 46.047753906249966],
                                [38.07958984375003, 45.93481445312506],
                                [38.18359374999997, 46.09482421875006],
                                [38.49228515625006, 46.09052734374998],
                                [37.913867187500074, 46.40649414062503],
                                [37.766503906249994, 46.63613281250002],
                                [38.50097656249997, 46.663671875000034],
                                [38.43867187500004, 46.813085937500006],
                                [39.29345703125003, 47.105761718750045],
                                [39.19570312499999, 47.268847656250045],
                                [39.023730468750074, 47.27221679687503],
                                [38.928320312500006, 47.175683593749994],
                                [38.55244140625004, 47.15034179687498],
                                [38.7619140625001, 47.261621093749994],
                                [38.21435546875003, 47.091455078124966],
                                [38.36884765625004, 47.609960937500006],
                                [38.90029296875005, 47.85512695312502],
                                [39.77871093750005, 47.88754882812506],
                                [39.95791015625005, 48.268896484375034],
                                [39.8356445312501, 48.54277343749996],
                                [39.6447265625001, 48.591210937499966],
                                [39.792871093749994, 48.807714843750034],
                                [40.00361328125004, 48.82207031250002],
                                [39.68652343749997, 49.007910156250034],
                                [40.10878906250005, 49.251562500000034],
                                [40.080664062500006, 49.576855468749955],
                                [39.780566406250074, 49.57202148437503],
                                [39.17480468750003, 49.85595703124997],
                                [38.91835937499999, 49.82470703125],
                                [38.258593750000074, 50.05234375],
                                [38.046875, 49.92001953125006],
                                [37.42285156249997, 50.411474609375006],
                                [36.619433593750074, 50.209228515625],
                                [36.1164062500001, 50.408544921875006],
                                [35.59111328125002, 50.36875],
                                [35.31191406250005, 51.043896484374955],
                                [35.0640625, 51.203417968750045],
                                [34.21386718750003, 51.25537109375006],
                                [34.12109375000003, 51.67915039062498],
                                [34.397851562499994, 51.780419921874994],
                                [33.735253906249994, 52.344775390625045],
                                [32.435449218749994, 52.307226562500034],
                                [32.12226562500004, 52.05058593749996],
                                [31.763378906250097, 52.10107421875003],
                                [31.758593750000017, 52.125830078125034],
                                [31.690625, 52.22065429687498],
                                [31.64990234374997, 52.26220703125],
                                [31.60156250000003, 52.284814453124994],
                                [31.57734375000004, 52.31230468749999],
                                [31.585546875, 52.532470703125],
                                [31.56484375, 52.75922851562501],
                                [31.53515624999997, 52.798242187499966],
                                [31.442773437499994, 52.86181640625003],
                                [31.35302734374997, 52.93344726562498],
                                [31.295117187500097, 52.98979492187499],
                                [31.25878906249997, 53.01669921875006],
                                [31.364550781250017, 53.13896484375002],
                                [31.388378906250097, 53.18481445312503],
                                [31.41787109375005, 53.196044921875],
                                [31.849707031250006, 53.106201171875],
                                [32.14199218750005, 53.091162109375034],
                                [32.46933593750006, 53.270312500000045],
                                [32.578027343749994, 53.312402343749994],
                                [32.644433593749994, 53.32890624999999],
                                [32.70429687500004, 53.33632812499999],
                                [32.45097656250002, 53.6533203125],
                                [32.20039062500004, 53.78125],
                                [31.99218750000003, 53.796875],
                                [31.82080078124997, 53.79194335937498],
                                [31.754199218750017, 53.81044921875002],
                                [31.825292968750006, 53.93500976562501],
                                [31.837792968749994, 54.00078124999999],
                                [31.825976562500074, 54.030712890624955],
                                [31.79199218749997, 54.05590820312503],
                                [31.62841796874997, 54.111181640625006],
                                [31.403613281250017, 54.195947265624966],
                                [31.299121093750017, 54.29169921875001],
                                [31.184765625000097, 54.452978515625006],
                                [31.074804687500063, 54.491796875],
                                [31.154882812500063, 54.610937500000034],
                                [31.152148437500017, 54.625341796875034],
                                [31.12128906250004, 54.64848632812496],
                                [30.984179687500074, 54.695898437500034],
                                [30.79882812499997, 54.78325195312499],
                                [30.79101562499997, 54.806005859375006],
                                [30.804492187500074, 54.8609375],
                                [30.829882812500017, 54.91499023437498],
                                [30.977734375000097, 55.05048828124998],
                                [30.977734375000097, 55.08779296875002],
                                [30.958886718749994, 55.13759765625005],
                                [30.87744140625003, 55.223437500000045],
                                [30.81445312499997, 55.27871093750002],
                                [30.81054687499997, 55.306982421875006],
                                [30.82099609375004, 55.330273437499955],
                                [30.900585937500097, 55.397412109374955],
                                [30.906835937500063, 55.57001953125004],
                                [30.625585937500006, 55.666259765625],
                                [30.23359375000004, 55.84521484375006],
                                [30.04267578125004, 55.83642578125003],
                                [29.93701171874997, 55.84526367187499],
                                [29.881640625000074, 55.83232421875002],
                                [29.82392578125004, 55.79511718749998],
                                [29.74414062499997, 55.770410156249994],
                                [29.630078125000097, 55.75117187499998],
                                [29.482226562500074, 55.6845703125],
                                [29.412988281249994, 55.72485351562506],
                                [29.35341796875005, 55.784375],
                                [29.375, 55.938720703125],
                                [28.284277343750006, 56.055908203125],
                                [28.14794921875003, 56.142919921875034],
                                [28.202050781250023, 56.260400390624994],
                                [28.191699218750045, 56.31557617187505],
                                [28.169238281250017, 56.386865234374994],
                                [28.11083984375, 56.51069335937501],
                                [28.103125, 56.545703125000045],
                                [27.89208984375003, 56.741064453125034],
                                [27.88154296875001, 56.82416992187501],
                                [27.848632812500057, 56.85341796875002],
                                [27.806054687499994, 56.86708984375005],
                                [27.639453125000074, 56.84565429687504],
                                [27.83027343750004, 57.19448242187505],
                                [27.83828125000008, 57.247705078124966],
                                [27.82861328124997, 57.293310546875006],
                                [27.796875, 57.316943359375045],
                                [27.538671875000063, 57.429785156250034],
                                [27.51113281250005, 57.508154296875006],
                                [27.469726562500057, 57.524023437500034],
                                [27.35195312500005, 57.528125],
                                [27.4, 57.66679687499999],
                                [27.542089843750063, 57.799414062500006],
                                [27.778515625000068, 57.87070312500006],
                                [27.502441406250057, 58.221337890624994],
                                [27.434179687500006, 58.787255859374994],
                                [28.15107421875004, 59.374414062499966],
                                [28.0125, 59.484277343749966],
                                [28.05800781250008, 59.781542968750045],
                                [28.334570312500034, 59.69252929687502],
                                [28.518164062500034, 59.849560546874955],
                                [28.947265625000057, 59.828759765624994],
                                [29.147265625000045, 59.999755859375],
                                [30.12255859374997, 59.873583984375074],
                                [30.172656250000017, 59.957128906250034],
                                [29.72119140624997, 60.19531249999997],
                                [29.069140625000017, 60.19145507812499],
                                [28.643164062500006, 60.375292968750045],
                                [28.512792968750006, 60.67729492187502],
                                [27.797656250000074, 60.53613281250003],
                                [29.69013671875004, 61.54609375000001],
                                [31.18671875000004, 62.48139648437504],
                                [31.533984375000017, 62.885400390624994],
                                [31.180859375000097, 63.208300781250074],
                                [29.991503906250074, 63.73515625000002],
                                [30.50390625000003, 64.02060546875],
                                [30.513769531250006, 64.2],
                                [30.04189453125005, 64.44335937499997],
                                [30.072851562500063, 64.76503906250005],
                                [29.60419921875004, 64.968408203125],
                                [29.826953125000017, 65.14506835937502],
                                [29.608007812500006, 65.248681640625],
                                [29.715917968750063, 65.62456054687502],
                                [30.102734375000097, 65.72626953125004],
                                [29.066210937500045, 66.89174804687497],
                                [29.988085937500017, 67.66826171874999],
                                [29.343847656250006, 68.06186523437506],
                                [28.685156250000034, 68.189794921875],
                                [28.470703125000057, 68.48837890625],
                                [28.77285156250005, 68.84003906249995],
                                [28.414062500000057, 68.90415039062506],
                                [28.96582031250003, 69.02197265625],
                                [29.38828125, 69.29814453125005],
                                [30.08730468750005, 69.43286132812503],
                                [30.18017578124997, 69.63583984375],
                                [30.860742187499994, 69.53842773437503],
                                [30.869726562500006, 69.78344726562506],
                                [31.546972656250063, 69.696923828125],
                                [31.997949218749994, 69.80991210937503],
                                [31.98457031250004, 69.95366210937499],
                                [33.00781249999997, 69.72211914062498],
                                [32.91503906249997, 69.60170898437497],
                                [32.17675781250003, 69.67402343749995],
                                [32.37773437500002, 69.47910156250003],
                                [32.99980468750002, 69.4701171875],
                                [32.97890625000005, 69.367333984375],
                                [33.45429687500004, 69.42817382812495],
                                [33.14121093750006, 69.068701171875],
                                [33.684375, 69.31025390625001],
                                [35.85791015625003, 69.19174804687503],
                                [37.73056640625006, 68.69213867187503],
                                [38.43017578125003, 68.35561523437505],
                                [39.568945312500006, 68.07172851562501],
                                [39.82333984375006, 68.05859375],
                                [39.80927734375004, 68.15083007812498],
                                [40.38066406250002, 67.831884765625],
                                [40.96640625000006, 67.71347656250003],
                                [41.358789062499994, 67.20966796874998],
                                [41.18896484375003, 66.82617187500003],
                                [40.10332031250002, 66.29995117187502],
                                [38.65390625000006, 66.06904296874995],
                                [35.51347656250002, 66.39580078125002],
                                [34.82460937499999, 66.61113281249999],
                                [34.48261718750004, 66.55034179687505],
                                [34.4515625, 66.651220703125],
                                [33.15019531250002, 66.84394531250001],
                                [32.93046875000002, 67.08681640625002],
                                [31.895312500000074, 67.16142578125002],
                                [33.65595703125004, 66.44262695312506],
                                [33.36054687500004, 66.32954101562501],
                                [34.112695312499994, 66.225244140625],
                                [34.69179687500005, 65.95185546874998],
                                [34.77695312500006, 65.76826171874998],
                                [34.40644531250004, 65.39575195312503],
                                [35.03535156250004, 64.44023437500005],
                                [35.802050781250074, 64.3353515625],
                                [36.3649414062501, 64.00283203125002],
                                [37.44218750000002, 63.813378906249966],
                                [37.9679687500001, 63.949121093749994],
                                [38.0622070312501, 64.09101562499995],
                                [37.953710937500006, 64.32011718749999],
                                [37.183691406250006, 64.40849609375007],
                                [36.6242187500001, 64.75053710937502],
                                [36.534570312499994, 64.93862304687497],
                                [36.88281249999997, 65.17236328124997],
                                [39.7580078125001, 64.57705078125002],
                                [40.05781250000004, 64.77075195312497],
                                [40.44492187500006, 64.7787109375],
                                [39.7980468750001, 65.349853515625],
                                [39.816503906250006, 65.59794921874999],
                                [41.4757812500001, 66.12343750000002],
                                [42.21054687500006, 66.51967773437502],
                                [43.23320312500002, 66.41552734375003],
                                [43.653125, 66.2509765625],
                                [43.54189453125005, 66.12338867187503],
                                [43.84375, 66.14238281249999],
                                [44.10439453125005, 66.00859374999999],
                                [44.42929687500006, 66.93774414062503],
                                [43.7824218750001, 67.25449218749998],
                                [44.20468750000006, 68.25375976562498],
                                [43.33320312500004, 68.67338867187502],
                                [44.04804687500004, 68.54882812499997],
                                [45.891992187499994, 68.47968750000001],
                                [46.69042968750003, 67.84882812500001],
                                [45.52871093750005, 67.75756835937497],
                                [44.90214843750002, 67.41313476562505],
                                [45.56220703125004, 67.18559570312507],
                                [45.88535156250006, 66.89106445312501],
                                [46.4923828125001, 66.80019531249997],
                                [47.65585937500006, 66.97592773437498],
                                [47.87470703125004, 67.58417968749998],
                                [48.83320312500004, 67.681494140625],
                                [48.75429687500005, 67.89594726562501],
                                [49.15527343750003, 67.87041015625005],
                                [51.994726562500006, 68.53876953124995],
                                [52.3966796875001, 68.35170898437505],
                                [52.72265624999997, 68.484033203125],
                                [52.34404296875002, 68.60815429687497],
                                [53.80195312500004, 68.99589843750002],
                                [54.49121093750003, 68.992333984375],
                                [53.797656250000074, 68.90747070312503],
                                [53.9308593750001, 68.43554687499997],
                                [53.260546875000074, 68.26748046875002],
                                [54.476171875, 68.29414062499995],
                                [54.86132812500003, 68.20185546874998],
                                [55.418066406250006, 68.56782226562501],
                                [56.04365234375004, 68.64887695312501],
                                [57.126855468749994, 68.55400390625005],
                                [58.17304687500004, 68.88974609375006],
                                [59.0573242187501, 69.00605468750004],
                                [59.37050781250005, 68.73837890625003],
                                [59.09902343750005, 68.4443359375],
                                [59.725683593750006, 68.35161132812502],
                                [59.89599609374997, 68.70634765624999],
                                [60.489160156249994, 68.72895507812498],
                                [60.93359374999997, 68.98676757812501],
                                [60.17060546875004, 69.59091796875],
                                [60.90908203125005, 69.84711914062495],
                                [64.19042968750003, 69.53466796875],
                                [64.89628906250002, 69.247802734375],
                                [67.00244140625003, 68.87358398437505],
                                [68.37119140625006, 68.31425781250005],
                                [69.14052734375005, 68.95063476562501],
                                [68.54277343750002, 68.96708984374999],
                                [68.00585937499997, 69.48002929687505],
                                [67.62412109375, 69.58442382812501],
                                [67.06445312500003, 69.69370117187498],
                                [66.89667968750004, 69.55380859374998],
                                [67.28476562500006, 70.73872070312498],
                                [67.14335937500002, 70.83754882812502],
                                [66.70224609375006, 70.81850585937497],
                                [66.63964843749997, 71.08139648437498],
                                [68.2692382812501, 71.68281250000001],
                                [69.61181640625003, 72.98193359375],
                                [69.73828124999997, 72.88496093749998],
                                [71.5001953125001, 72.91367187500003],
                                [72.812109375, 72.69140624999997],
                                [72.57412109375, 72.01254882812506],
                                [71.86728515625, 71.457373046875],
                                [72.70449218750005, 70.96323242187498],
                                [72.5767578125, 68.96870117187498],
                                [73.59169921875005, 68.48188476562501],
                                [73.13945312500002, 68.18134765624998],
                                [73.06679687500005, 67.766943359375],
                                [71.84746093750002, 67.00761718750005],
                                [71.36523437500003, 66.96152343749998],
                                [71.53955078125003, 66.68310546875],
                                [70.72490234375007, 66.51943359374997],
                                [70.38281249999997, 66.60249023437501],
                                [70.69072265625002, 66.74531249999998],
                                [70.2833984375001, 66.68579101562503],
                                [69.8771484375001, 66.84545898437506],
                                [69.21777343749997, 66.82861328125],
                                [69.01347656250002, 66.78833007812503],
                                [69.19433593749997, 66.57866210937505],
                                [70.33945312500006, 66.34238281250006],
                                [71.35800781250006, 66.35942382812505],
                                [71.91699218749997, 66.24672851562502],
                                [72.32158203125002, 66.33212890625],
                                [72.4173828125, 66.56079101562506],
                                [73.79208984375, 66.99531250000001],
                                [74.07451171875007, 67.41411132812499],
                                [74.76953124999997, 67.76635742187497],
                                [74.39140625000007, 68.42060546874995],
                                [74.57958984375003, 68.751220703125],
                                [76.10751953125006, 68.975732421875],
                                [76.45917968750004, 68.97827148437497],
                                [77.2384765625001, 68.46958007812498],
                                [77.17441406250012, 67.77851562499998],
                                [77.77158203125006, 67.57026367187501],
                                [78.92246093750006, 67.58911132812503],
                                [77.58828125000005, 67.75190429687498],
                                [77.66484375000002, 68.19038085937495],
                                [77.99511718749997, 68.25947265624998],
                                [77.65068359375007, 68.90302734375001],
                                [76.00097656249997, 69.23505859374998],
                                [75.42001953125, 69.23862304687498],
                                [74.81484375, 69.09057617187503],
                                [73.83603515625006, 69.143212890625],
                                [73.578125, 69.80297851562503],
                                [74.34335937500006, 70.57871093749998],
                                [73.08623046875007, 71.44492187500006],
                                [73.67177734375, 71.84506835937503],
                                [74.99218749999997, 72.14482421874999],
                                [74.78681640625004, 72.811865234375],
                                [75.15244140625, 72.85273437499998],
                                [75.74140625000004, 72.29624023437503],
                                [75.273828125, 71.95893554687495],
                                [75.33203125000003, 71.34174804687498],
                                [76.92900390625002, 71.12788085937504],
                                [77.58964843750007, 71.16791992187501],
                                [78.32060546875002, 70.93041992187503],
                                [78.94218750000002, 70.93378906250001],
                                [79.08388671875, 71.00200195312505],
                                [78.58769531250007, 70.993896484375],
                                [78.21259765625004, 71.26630859374998],
                                [76.43339843750002, 71.55249023437503],
                                [76.03242187500004, 71.91040039062503],
                                [76.87138671875002, 72.03300781250005],
                                [77.77753906250004, 71.83642578125006],
                                [78.23242187500003, 71.95229492187502],
                                [78.01640625000007, 72.092041015625],
                                [77.49287109375004, 72.07172851562504],
                                [77.47158203125, 72.19213867187506],
                                [78.22539062500007, 72.37744140625006],
                                [79.4220703125001, 72.38076171875002],
                                [80.7625, 72.08916015625002],
                                [81.66162109374997, 71.71596679687502],
                                [82.75781250000003, 71.76411132812498],
                                [83.23359375000004, 71.66816406249995],
                                [82.32285156250006, 71.26000976562503],
                                [82.16318359375012, 70.59814453125003],
                                [82.22119140625003, 70.39570312499998],
                                [82.86914062499997, 70.95483398437503],
                                [83.03017578125, 70.58051757812498],
                                [82.6823242187501, 70.21772460937498],
                                [83.0807617187501, 70.09301757812497],
                                [83.07382812500012, 70.276708984375],
                                [83.73593750000006, 70.54648437499998],
                                [83.15126953125005, 71.10361328124998],
                                [83.534375, 71.68393554687498],
                                [83.20029296875012, 71.87470703125004],
                                [82.64541015625005, 71.92524414062504],
                                [82.09365234375, 72.26542968750005],
                                [80.82705078125005, 72.48828124999997],
                                [80.84160156250007, 72.94916992187498],
                                [80.4245117187501, 73.23115234374998],
                                [80.5832031250001, 73.56845703125003],
                                [85.20058593750005, 73.72153320312506],
                                [86.89296875, 73.88710937500002],
                                [85.79257812500012, 73.438330078125],
                                [86.67705078125002, 73.10678710937503],
                                [85.93896484374997, 73.45649414062495],
                                [87.12011718750003, 73.61503906250002],
                                [87.57119140625, 73.81074218750001],
                                [86.57109375000007, 74.24375],
                                [86.0013671875, 74.316015625],
                                [86.39580078125007, 74.45009765624997],
                                [86.89794921874997, 74.32534179687497],
                                [87.22968750000004, 74.3638671875],
                                [85.79101562499997, 74.6451171875],
                                [86.20126953125006, 74.81621093750005],
                                [86.65146484375012, 74.68242187500005],
                                [87.04179687500007, 74.77885742187499],
                                [87.46757812500002, 75.01323242187505],
                                [86.93906250000006, 75.06811523437503],
                                [87.00595703125012, 75.16982421874997],
                                [87.67138671874997, 75.12958984375004],
                                [90.18496093750005, 75.59106445312497],
                                [94.07519531249997, 75.91289062499999],
                                [92.89042968750002, 75.90996093750002],
                                [93.25927734375003, 76.09877929687502],
                                [95.57871093750012, 76.13730468749998],
                                [96.07548828125007, 76.08198242187498],
                                [95.65332031250003, 75.89218750000003],
                                [96.50859375000002, 76.00556640624995],
                                [96.49707031249997, 75.89121093750003],
                                [98.66201171875005, 76.24267578125003],
                                [99.77041015625, 76.02875976562498],
                                [99.5407226562501, 75.79858398437497],
                                [99.85136718750007, 75.93027343749998],
                                [99.8253906250001, 76.13593749999995],
                                [98.80566406250003, 76.48066406250004],
                                [100.84375, 76.52519531250005],
                                [101.59775390625006, 76.43920898437503],
                                [100.92802734375002, 76.55673828124998],
                                [100.98994140625004, 76.99047851562497],
                                [102.61015625000007, 77.508544921875],
                                [104.01455078125, 77.73041992187501],
                                [106.05957031249997, 77.39052734375002],
                                [104.20244140625002, 77.101806640625],
                                [106.9416015625001, 77.034375],
                                [107.42978515625006, 76.92656250000002],
                                [106.41357421874997, 76.51225585937499],
                                [107.72216796875003, 76.52231445312498],
                                [108.18164062500003, 76.73784179687502],
                                [111.39248046875, 76.686669921875],
                                [112.09394531250004, 76.48032226562506],
                                [111.94267578125002, 76.38046875000003],
                                [112.61953125, 76.38354492187506],
                                [112.65625, 76.05356445312498],
                                [113.2726562500001, 76.25166015625001],
                                [113.5638671875, 75.89165039062502],
                                [113.85722656250007, 75.92128906250002],
                                [113.56757812500004, 75.56840820312499],
                                [112.45302734375, 75.83017578125003],
                                [112.95566406250006, 75.571923828125],
                                [113.24296875000007, 75.61142578125003],
                                [113.72617187500012, 75.45063476562498],
                                [112.92490234375012, 75.01503906249997],
                                [109.84033203124997, 74.32197265624998],
                                [109.8102539062501, 74.16918945312503],
                                [108.19951171875002, 73.69409179687497],
                                [107.27109375000006, 73.62104492187501],
                                [106.67939453125004, 73.3306640625],
                                [106.1886718750001, 73.3080078125],
                                [105.14394531250005, 72.77705078125001],
                                [105.7082031250001, 72.836669921875],
                                [106.47792968750005, 73.13940429687503],
                                [107.750390625, 73.17314453125007],
                                [109.33105468749997, 73.48745117187497],
                                [109.85527343750002, 73.47246093750002],
                                [110.86816406249997, 73.73071289062497],
                                [109.70673828125004, 73.74375],
                                [110.2614257812501, 74.01743164062503],
                                [111.05625, 73.93935546875002],
                                [111.13085937500003, 74.05283203125003],
                                [111.55058593750007, 74.02851562499998],
                                [111.22812500000012, 73.96855468750002],
                                [111.40039062500003, 73.827734375],
                                [112.14726562500007, 73.70893554687498],
                                [112.79541015625003, 73.74609375],
                                [112.83593750000003, 73.96206054687502],
                                [113.03281250000006, 73.91386718750007],
                                [113.4162109375001, 73.647607421875],
                                [113.15693359375004, 73.45957031249998],
                                [113.49091796875004, 73.34609375000002],
                                [113.12783203125, 72.8306640625],
                                [113.66455078124997, 72.63452148437503],
                                [113.2155273437501, 72.80585937500001],
                                [113.88623046875003, 73.34580078124998],
                                [113.51035156250012, 73.50498046874998],
                                [115.33769531250007, 73.70258789062501],
                                [118.87089843750007, 73.53789062500002],
                                [118.45703124999997, 73.46440429687507],
                                [118.43027343750012, 73.24653320312501],
                                [119.750390625, 72.97910156250006],
                                [122.26015625, 72.88056640624995],
                                [122.75195312500003, 72.906494140625],
                                [122.61523437499997, 73.02792968750006],
                                [123.1603515625001, 72.95488281250002],
                                [123.62226562500004, 73.19326171875],
                                [123.49111328125005, 73.666357421875],
                                [124.54121093750004, 73.75126953125007],
                                [125.59853515625005, 73.447412109375],
                                [126.25449218750012, 73.548193359375],
                                [126.55253906250007, 73.33491210937498],
                                [127.03134765625006, 73.54746093750003],
                                [127.74033203125012, 73.48154296875],
                                [129.10058593750003, 73.11235351562502],
                                [128.5990234375, 72.895166015625],
                                [129.01728515625004, 72.8724609375],
                                [129.250390625, 72.70517578125003],
                                [128.41826171875002, 72.53515625000003],
                                [129.28134765625006, 72.43769531249998],
                                [129.41064453124997, 72.16630859375002],
                                [128.93496093750005, 72.07949218750002],
                                [127.8034179687501, 72.43403320312504],
                                [127.84140625000012, 72.308251953125],
                                [128.91142578125002, 71.75532226562495],
                                [129.21025390625007, 71.91694335937501],
                                [129.46083984375, 71.73930664062499],
                                [128.84326171875003, 71.6634765625],
                                [129.76191406250004, 71.11953125000002],
                                [130.53710937500003, 70.89252929687495],
                                [130.75712890625002, 70.96235351562498],
                                [131.02158203125006, 70.74609374999997],
                                [132.0353515625001, 71.24404296875],
                                [132.65390625000006, 71.92597656250001],
                                [133.6888671875, 71.434228515625],
                                [134.70273437500012, 71.38681640625003],
                                [135.55917968750006, 71.6103515625],
                                [136.09033203125003, 71.61958007812501],
                                [137.9396484375001, 71.1333984375],
                                [137.84404296875007, 71.22680664062503],
                                [138.31406250000006, 71.32553710937498],
                                [137.918359375, 71.38408203124999],
                                [138.23417968750007, 71.596337890625],
                                [138.78017578125, 71.62900390624998],
                                [139.209375, 71.44477539062501],
                                [139.98417968750007, 71.49150390625005],
                                [139.72294921875002, 71.88496093749998],
                                [139.35927734375005, 71.95136718750001],
                                [140.18769531250004, 72.19130859374997],
                                [139.17636718750006, 72.16347656249997],
                                [139.14082031250004, 72.32973632812502],
                                [139.60117187500012, 72.49609374999997],
                                [141.07929687500004, 72.5869140625],
                                [140.80820312500006, 72.89096679687503],
                                [142.06142578125005, 72.72080078125],
                                [146.25292968749997, 72.442236328125],
                                [146.234765625, 72.34970703125],
                                [144.77636718749997, 72.38227539062495],
                                [144.16923828125002, 72.25878906250003],
                                [144.29492187499997, 72.19262695312497],
                                [146.83183593750007, 72.29541015625003],
                                [146.11328125000003, 71.94497070312497],
                                [146.23027343750007, 72.1375],
                                [145.75859375000007, 72.22587890624999],
                                [145.75673828125005, 71.94130859375002],
                                [145.06396484374997, 71.92607421875002],
                                [145.18857421875012, 71.69580078125],
                                [146.07324218749997, 71.80834960937503],
                                [147.26181640625006, 72.327880859375],
                                [149.50156250000012, 72.16430664062497],
                                [150.01689453125002, 71.89565429687505],
                                [149.04873046875005, 71.79575195312503],
                                [148.9681640625, 71.69047851562499],
                                [150.59980468750004, 71.5201171875],
                                [150.09765624999997, 71.22656249999997],
                                [150.96777343749997, 71.38046874999998],
                                [151.58242187500005, 71.28696289062503],
                                [152.09277343749997, 71.02329101562503],
                                [151.76201171875002, 70.98247070312499],
                                [152.50878906250003, 70.83447265625003],
                                [156.68457031250003, 71.09375],
                                [158.03701171875005, 71.03925781250001],
                                [159.35068359375006, 70.79072265625001],
                                [160.00644531250006, 70.30966796875006],
                                [159.72939453125005, 69.87021484375006],
                                [160.91074218750012, 69.60634765625002],
                                [161.03554687500005, 69.09819335937507],
                                [161.30986328125007, 68.98227539062498],
                                [160.85605468750006, 68.53833007812506],
                                [161.565625, 68.90517578125],
                                [161.53691406250002, 69.379541015625],
                                [162.16601562499997, 69.61157226562503],
                                [163.20136718750004, 69.71474609375],
                                [166.82031250000003, 69.49956054687505],
                                [167.8568359375, 69.72822265624998],
                                [168.30302734375002, 69.27148437500003],
                                [169.31064453125006, 69.07954101562498],
                                [169.60986328124997, 68.78603515624997],
                                [170.53759765624997, 68.82539062500001],
                                [170.99541015625002, 69.04531250000005],
                                [170.58222656250004, 69.58334960937506],
                                [170.16093750000007, 69.62656249999998],
                                [170.48681640625003, 70.107568359375],
                                [173.27744140625006, 69.823828125],
                                [173.43867187500004, 69.94682617187502],
                                [175.92148437500012, 69.89531250000002],
                                [179.27265624999998, 69.25966796875002],
                                [180, 68.98344726562505],
                                [180, 65.06723632812498],
                                [178.51953125000003, 64.60297851562498],
                                [177.7486328125, 64.71704101562503],
                                [176.88085937499997, 65.08193359375002],
                                [176.34101562500015, 65.04731445312501],
                                [177.03730468750004, 64.99965820312497],
                                [177.22285156250004, 64.861669921875],
                                [177.06875, 64.78666992187502],
                                [176.06113281250012, 64.96088867187498],
                                [174.54882812500009, 64.68388671875005],
                                [176.0565429687501, 64.90473632812498],
                                [176.35097656250005, 64.70512695312502],
                                [176.14091796875007, 64.58583984375005],
                                [177.42744140625015, 64.76337890624998],
                                [177.43291015625002, 64.44448242187502],
                                [177.6875, 64.30473632812507],
                                [178.04472656250013, 64.21958007812503],
                                [178.22949218749991, 64.36440429687497],
                                [178.38144531250018, 64.26088867187502],
                                [178.73144531250003, 63.667089843750006],
                                [178.44042968750009, 63.605566406250006],
                                [178.74404296874994, 63.39477539062503],
                                [178.79296874999997, 63.54033203125002],
                                [179.38857421875, 63.14721679687497],
                                [179.25957031250002, 63.00830078125],
                                [179.5705078125001, 62.6875],
                                [179.12070312500012, 62.32036132812499],
                                [177.292578125, 62.59902343750002],
                                [177.33896484375006, 62.781347656250034],
                                [177.02353515625012, 62.777246093749994],
                                [177.15947265625007, 62.56098632812498],
                                [174.51435546875015, 61.823632812499966],
                                [173.6234375, 61.716064453125],
                                [173.13183593749997, 61.40664062500002],
                                [172.85654296875006, 61.469189453124955],
                                [172.90800781250002, 61.311621093750006],
                                [172.39609375000006, 61.16738281250002],
                                [172.39277343750004, 61.061767578125],
                                [170.60820312500007, 60.434912109375034],
                                [170.3509765625, 59.965527343749955],
                                [169.9826171875001, 60.067089843749955],
                                [169.2267578125001, 60.59594726562497],
                                [168.1375, 60.57392578125001],
                                [167.22675781250004, 60.406298828125045],
                                [166.27304687500012, 59.85625],
                                [166.13603515625007, 59.979345703125034],
                                [166.35214843750006, 60.48481445312498],
                                [165.08457031250006, 60.09858398437498],
                                [164.95371093750006, 59.843603515625006],
                                [164.52529296875, 60.06127929687503],
                                [164.11328125000003, 59.89755859374998],
                                [164.13505859375002, 59.984375],
                                [163.74384765625004, 60.02802734374998],
                                [163.36484375000012, 59.78144531250004],
                                [163.27285156250005, 59.302587890625006],
                                [162.14160156249997, 58.44741210937502],
                                [161.96005859375012, 58.07690429687506],
                                [162.39140625000002, 57.717236328124955],
                                [162.65429687499997, 57.94824218750003],
                                [163.22578125000004, 57.790380859375034],
                                [162.77929687500003, 57.35761718749998],
                                [162.79111328125012, 56.875390624999966],
                                [162.92207031250004, 56.72265625000003],
                                [163.2565429687501, 56.68803710937499],
                                [163.33554687500012, 56.232519531250006],
                                [163.04736328125003, 56.044677734375],
                                [162.84033203125003, 56.065625],
                                [162.628125, 56.232275390625034],
                                [163.03837890625002, 56.521875],
                                [162.67148437500006, 56.49008789062498],
                                [162.52822265625005, 56.260693359374955],
                                [162.08496093749997, 56.08964843750002],
                                [161.72392578125002, 55.49614257812499],
                                [162.10556640625006, 54.75214843750004],
                                [161.62480468750002, 54.51625976562502],
                                [160.77265625000004, 54.54135742187498],
                                [160.0744140625001, 54.18916015625001],
                                [159.84375, 53.78364257812498],
                                [160.02509765625004, 53.129589843749955],
                                [159.58593750000003, 53.237695312499966],
                                [158.74541015625002, 52.90893554687506],
                                [158.47207031250005, 53.032373046874966],
                                [158.6087890625, 52.873632812500034],
                                [158.49316406249997, 52.383154296875034],
                                [158.10351562500003, 51.80961914062499],
                                [156.84746093750002, 51.006591796875],
                                [156.74775390625004, 50.969287109375045],
                                [156.52119140625004, 51.38027343750002],
                                [156.36474609374997, 52.509375],
                                [156.11035156250003, 52.86616210937504],
                                [155.62031250000004, 54.86455078125002],
                                [155.5548828125001, 55.348486328125034],
                                [155.98251953125012, 56.69521484375002],
                                [156.8488281250001, 57.290185546874994],
                                [156.97675781250004, 57.46630859375],
                                [156.82988281250007, 57.77963867187498],
                                [157.4503906250001, 57.79926757812498],
                                [157.66640625000005, 58.01977539062506],
                                [158.27519531250007, 58.00898437499998],
                                [159.21064453125004, 58.519433593749966],
                                [159.8473632812501, 59.127148437499955],
                                [161.75351562500012, 60.15229492187501],
                                [162.06816406250002, 60.466406250000034],
                                [163.70996093749997, 60.916796875000045],
                                [163.55351562500002, 61.02563476562503],
                                [164.00546875000006, 61.34379882812499],
                                [163.80439453125004, 61.46137695312498],
                                [164.20722656250004, 62.29223632812506],
                                [164.59833984375004, 62.470556640625034],
                                [165.20810546875012, 62.37397460937501],
                                [165.41738281250005, 62.447070312500045],
                                [164.418359375, 62.704638671875045],
                                [163.33173828125004, 62.550927734374994],
                                [163.01767578125006, 61.89106445312504],
                                [163.25781249999997, 61.69946289062497],
                                [163.08525390625002, 61.570556640625],
                                [162.85595703125003, 61.705029296874955],
                                [162.39257812500003, 61.662109375],
                                [160.76660156249997, 60.753320312499966],
                                [160.17363281250002, 60.638427734375],
                                [160.37890625000003, 61.02548828124998],
                                [159.79042968750005, 60.956640625],
                                [160.309375, 61.894384765625006],
                                [159.55234375000012, 61.71948242187497],
                                [159.18925781250007, 61.92939453125001],
                                [158.07011718750002, 61.75361328125001],
                                [157.46933593750012, 61.798925781250006],
                                [157.0841796875001, 61.67568359375002],
                                [155.71611328125002, 60.682373046875],
                                [154.97080078125012, 60.376660156249955],
                                [154.29306640625006, 59.833349609375034],
                                [154.1498046875, 59.52851562500001],
                                [154.97128906250006, 59.44960937500002],
                                [155.16044921875002, 59.19013671875001],
                                [154.45800781250003, 59.21655273437497],
                                [154.01093750000004, 59.075537109375006],
                                [153.69521484375005, 59.22475585937505],
                                [153.36113281250002, 59.214794921874955],
                                [152.81787109375003, 58.92626953124997],
                                [152.31962890625002, 59.03076171875003],
                                [152.08789062499997, 58.910449218750045],
                                [151.32675781250006, 58.875097656250034],
                                [151.12109375000003, 59.08251953125003],
                                [152.26064453125, 59.22358398437498],
                                [151.34824218750012, 59.561132812500006],
                                [150.4835937500001, 59.494384765625],
                                [150.66728515625002, 59.55634765625001],
                                [149.64257812499997, 59.770410156249994],
                                [149.06523437500002, 59.63051757812502],
                                [149.20498046875, 59.488183593749966],
                                [148.79707031250004, 59.532324218750006],
                                [148.74414062499997, 59.37353515624997],
                                [148.96464843750007, 59.36914062499997],
                                [148.72666015625006, 59.257910156250034],
                                [148.25742187500006, 59.414208984374994],
                                [147.51445312500002, 59.2685546875],
                                [146.53720703125006, 59.45698242187501],
                                [146.0495117187501, 59.17055664062502],
                                [145.55458984375, 59.413525390624955],
                                [143.19218750000002, 59.3701171875],
                                [142.58027343750004, 59.240136718749966],
                                [140.79023437500004, 58.30346679687503],
                                [140.446875, 57.81367187499998],
                                [138.66210937500003, 56.96552734375004],
                                [137.69150390625006, 56.13935546875004],
                                [135.2625, 54.94331054687498],
                                [135.25771484375005, 54.73149414062499],
                                [135.85156249999997, 54.583935546874955],
                                [136.797265625, 54.62099609375005],
                                [136.71884765625006, 53.804101562499994],
                                [137.15537109375012, 53.82167968750002],
                                [137.14160156249997, 54.182226562500006],
                                [137.66601562500003, 54.283300781250006],
                                [137.3392578125, 54.10053710937498],
                                [137.83476562500002, 53.94672851562498],
                                [137.25371093750007, 53.546142578125],
                                [137.95048828125007, 53.60356445312499],
                                [138.52792968750012, 53.959863281249994],
                                [138.56914062500002, 53.818798828124955],
                                [138.24970703125004, 53.524023437500034],
                                [138.45068359375003, 53.53701171875002],
                                [138.69941406250004, 53.869726562500034],
                                [138.65722656249997, 54.29833984375003],
                                [139.31972656250005, 54.19296874999998],
                                [139.707421875, 54.27714843749999],
                                [140.68759765625012, 53.59643554687503],
                                [141.3737304687501, 53.29277343749999],
                                [141.18125, 53.01528320312505],
                                [140.83964843750002, 53.087890625],
                                [141.25585937499997, 52.84013671874996],
                                [141.13242187500006, 52.435693359374994],
                                [141.48525390625, 52.17851562500002],
                                [141.36689453125004, 51.92065429687506],
                                [140.93261718750003, 51.61992187499999],
                                [140.5208984375, 50.80019531250005],
                                [140.62451171874997, 50.08242187500002],
                                [140.46269531250002, 49.911474609375006],
                                [140.51718750000012, 49.59614257812498],
                                [140.17060546875004, 48.52368164062497],
                                [138.58681640625005, 47.057226562500006],
                                [138.33691406250003, 46.543408203124955],
                                [137.68544921875, 45.81835937500003],
                                [136.14228515625004, 44.489111328125034],
                                [135.87460937500012, 44.37353515625003],
                                [135.1310546875001, 43.52573242187506],
                                [134.01044921875004, 42.94746093750001],
                                [133.15996093750007, 42.69697265624998],
                                [132.70898437500003, 42.875830078125006],
                                [132.30380859375006, 42.88330078125],
                                [132.30957031249997, 43.31352539062499],
                                [131.8666015625, 43.09516601562501],
                                [131.93896484374997, 43.30195312500004],
                                [131.15830078125012, 42.62602539062499],
                                [130.709375, 42.656396484374966],
                                [130.8341796875001, 42.52294921875006],
                                [130.68730468750007, 42.30253906249999]
                            ]
                        ],
                        [
                            [
                                [107.69550781250004, 78.13090820312505],
                                [107.48164062500004, 78.057763671875],
                                [106.41552734375003, 78.13984375000001],
                                [107.69550781250004, 78.13090820312505]
                            ]
                        ],
                        [
                            [
                                [102.88476562499997, 79.25395507812505],
                                [102.4123046875001, 78.83544921874997],
                                [103.80078124999997, 79.14926757812503],
                                [104.45205078125005, 78.880029296875],
                                [105.14599609375003, 78.81884765625006],
                                [105.31259765625012, 78.49990234375],
                                [104.74179687500012, 78.33974609374997],
                                [102.79667968750007, 78.18789062500002],
                                [101.20410156249997, 78.19194335937505],
                                [99.50029296875002, 77.97607421875003],
                                [101.590625, 79.350439453125],
                                [102.25126953125002, 79.25605468749995],
                                [102.40488281250006, 79.43320312499998],
                                [102.88476562499997, 79.25395507812505]
                            ]
                        ],
                        [
                            [
                                [76.24892578125005, 79.65107421874995],
                                [77.58896484375012, 79.50190429687504],
                                [76.64951171875012, 79.493408203125],
                                [76.24892578125005, 79.65107421874995]
                            ]
                        ],
                        [
                            [
                                [92.68349609375005, 79.685205078125],
                                [91.37626953125007, 79.83549804687505],
                                [91.22929687500007, 80.03071289062504],
                                [93.803125, 79.904541015625],
                                [92.68349609375005, 79.685205078125]
                            ]
                        ],
                        [
                            [
                                [51.409277343750006, 79.94423828125],
                                [50.09140625, 79.98056640625003],
                                [50.93632812500002, 80.09423828125],
                                [51.409277343750006, 79.94423828125]
                            ]
                        ],
                        [
                            [
                                [59.68886718750005, 79.95581054687506],
                                [58.91923828125002, 79.98461914062506],
                                [59.54453125000006, 80.11884765624995],
                                [59.68886718750005, 79.95581054687506]
                            ]
                        ],
                        [
                            [
                                [97.67451171875004, 80.15825195312499],
                                [97.65166015625002, 79.76064453125],
                                [98.59648437500002, 80.05219726562495],
                                [100.0612304687501, 79.77709960937506],
                                [99.68066406250003, 79.32333984374998],
                                [99.04179687500007, 79.29301757812502],
                                [99.92929687500012, 78.96142578124997],
                                [98.41113281250003, 78.78779296875004],
                                [95.53105468750007, 79.09809570312501],
                                [95.02041015625005, 79.05268554687498],
                                [94.21875, 79.40234375],
                                [93.07080078124997, 79.49531250000001],
                                [94.98730468749997, 80.096826171875],
                                [95.28134765625012, 80.030517578125],
                                [97.67451171875004, 80.15825195312499]
                            ]
                        ],
                        [
                            [
                                [50.05175781250003, 80.07431640625003],
                                [49.55605468750005, 80.15893554687503],
                                [49.883691406249994, 80.230224609375],
                                [50.05175781250003, 80.07431640625003]
                            ]
                        ],
                        [
                            [
                                [57.07871093750006, 80.35092773437498],
                                [56.986914062500006, 80.07148437499998],
                                [55.811621093750006, 80.08715820312497],
                                [56.02441406250003, 80.34130859374997],
                                [57.07871093750006, 80.35092773437498]
                            ]
                        ],
                        [
                            [
                                [53.521386718749994, 80.18520507812497],
                                [52.34355468750002, 80.213232421875],
                                [52.85390625, 80.40239257812499],
                                [53.85166015625006, 80.26835937500005],
                                [53.521386718749994, 80.18520507812497]
                            ]
                        ],
                        [
                            [
                                [57.95625, 80.12324218749995],
                                [57.33232421875002, 80.15810546875005],
                                [57.075, 80.49394531249999],
                                [59.25546875000006, 80.34321289062501],
                                [58.39794921874997, 80.31875],
                                [57.95625, 80.12324218749995]
                            ]
                        ],
                        [
                            [
                                [54.41533203125002, 80.47280273437502],
                                [53.811914062499994, 80.47622070312502],
                                [53.87724609375002, 80.60527343750002],
                                [54.41533203125002, 80.47280273437502]
                            ]
                        ],
                        [
                            [
                                [47.441992187500006, 80.853662109375],
                                [48.44570312500005, 80.80600585937506],
                                [48.68359375000003, 80.63325195312504],
                                [47.7052734375001, 80.76518554687499],
                                [46.141406250000074, 80.44672851562495],
                                [45.969042968750074, 80.56948242187502],
                                [44.9049804687501, 80.61127929687501],
                                [47.441992187500006, 80.853662109375]
                            ]
                        ],
                        [
                            [
                                [62.167773437500074, 80.83476562500005],
                                [62.07578125000006, 80.616943359375],
                                [61.05126953124997, 80.418603515625],
                                [60.27832031249997, 80.49443359374999],
                                [59.649804687499994, 80.43125],
                                [59.59228515625003, 80.81650390624998],
                                [62.167773437500074, 80.83476562500005]
                            ]
                        ],
                        [
                            [
                                [50.278125, 80.92724609374997],
                                [51.70361328125003, 80.68764648437502],
                                [48.81103515625003, 80.35371093750001],
                                [48.97753906250003, 80.16259765624997],
                                [47.73730468749997, 80.08168945312502],
                                [47.89296875000005, 80.23925781249997],
                                [46.991015625000074, 80.182763671875],
                                [46.644433593749994, 80.30034179687507],
                                [47.89580078125002, 80.52905273437503],
                                [49.087792968749994, 80.515771484375],
                                [49.24433593750004, 80.82138671875],
                                [50.278125, 80.92724609374997]
                            ]
                        ],
                        [
                            [
                                [80.02666015625007, 80.84814453125003],
                                [79.09853515625005, 80.81206054687505],
                                [79.21738281250012, 80.96035156249997],
                                [80.27958984375007, 80.94980468750003],
                                [80.02666015625007, 80.84814453125003]
                            ]
                        ],
                        [
                            [
                                [61.1408203125001, 80.95034179687497],
                                [60.0783203125001, 80.99916992187497],
                                [61.45742187499999, 81.10395507812501],
                                [61.1408203125001, 80.95034179687497]
                            ]
                        ],
                        [
                            [
                                [54.71894531250004, 81.11596679687497],
                                [56.47226562500006, 80.99824218749995],
                                [57.58037109375002, 80.75546874999998],
                                [55.88339843750006, 80.62841796875003],
                                [54.66816406250004, 80.73867187500002],
                                [54.04541015624997, 80.87197265625],
                                [54.71894531250004, 81.11596679687497]
                            ]
                        ],
                        [
                            [
                                [58.62236328125002, 81.04165039062502],
                                [58.930566406249994, 80.83168945312497],
                                [58.28564453124997, 80.76489257812503],
                                [57.21093749999997, 81.01708984374997],
                                [58.04951171875004, 81.11845703125002],
                                [58.62236328125002, 81.04165039062502]
                            ]
                        ],
                        [
                            [
                                [63.37382812500002, 80.70009765624997],
                                [62.59257812500002, 80.85302734375006],
                                [64.80205078125002, 81.197265625],
                                [65.43740234375005, 80.93071289062507],
                                [63.37382812500002, 80.70009765624997]
                            ]
                        ],
                        [
                            [
                                [91.56718750000007, 81.14121093750003],
                                [91.2228515625001, 81.063818359375],
                                [89.90117187500002, 81.17070312500002],
                                [91.56718750000007, 81.14121093750003]
                            ]
                        ],
                        [
                            [
                                [96.52656250000004, 81.0755859375],
                                [97.86992187500007, 80.76328125000006],
                                [97.02539062499997, 80.53554687500002],
                                [97.29843750000006, 80.27275390625005],
                                [93.6546875, 80.009619140625],
                                [91.52382812500005, 80.35854492187502],
                                [93.2625, 80.79125976562497],
                                [92.59257812500007, 80.780859375],
                                [92.7103515625, 80.87216796875003],
                                [95.1595703125, 81.27099609375003],
                                [95.80068359375005, 81.28046874999998],
                                [96.52656250000004, 81.0755859375]
                            ]
                        ],
                        [
                            [
                                [57.81025390625004, 81.54604492187502],
                                [58.563867187499994, 81.41840820312504],
                                [57.858691406250074, 81.36806640625],
                                [57.76972656250004, 81.16972656249999],
                                [55.71669921875005, 81.1884765625],
                                [55.46601562500004, 81.31118164062502],
                                [57.81025390625004, 81.54604492187502]
                            ]
                        ],
                        [
                            [
                                [63.65097656250006, 81.60932617187501],
                                [62.10644531249997, 81.679345703125],
                                [63.709570312500006, 81.68730468750002],
                                [63.65097656250006, 81.60932617187501]
                            ]
                        ],
                        [
                            [
                                [58.29541015625003, 81.715185546875],
                                [58.13457031250002, 81.82797851562498],
                                [59.261816406250006, 81.85419921874998],
                                [59.35644531250003, 81.75898437499995],
                                [58.29541015625003, 81.715185546875]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Russia",
                    childNum: 73
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [30.50996093750001, -1.067285156250009],
                            [30.47705078125, -1.0830078125],
                            [30.47021484375, -1.131152343750003],
                            [30.508105468750017, -1.208203125000011],
                            [30.631933593750006, -1.367480468750003],
                            [30.710742187500017, -1.396777343750003],
                            [30.76220703125, -1.458691406250011],
                            [30.812597656250006, -1.563085937500006],
                            [30.8765625, -2.143359375],
                            [30.85498046875, -2.265429687500003],
                            [30.828710937500006, -2.338476562500006],
                            [30.7625, -2.371679687500006],
                            [30.71484375, -2.363476562500011],
                            [30.656640625000023, -2.373828125],
                            [30.593359375, -2.396777343750003],
                            [30.553613281250023, -2.400097656250011],
                            [30.408496093750017, -2.31298828125],
                            [30.117285156250006, -2.416601562500006],
                            [29.93017578125, -2.339550781250011],
                            [29.8681640625, -2.71640625],
                            [29.698046875000017, -2.794726562500003],
                            [29.390234375, -2.80859375],
                            [29.10205078125, -2.595703125],
                            [29.01435546875001, -2.72021484375],
                            [28.893945312500023, -2.635058593750003],
                            [28.876367187500023, -2.400292968750009],
                            [29.13154296875001, -2.195117187500003],
                            [29.196582031250017, -1.719921875000011],
                            [29.576953125000017, -1.387890625000011],
                            [29.82539062500001, -1.335546875],
                            [29.930078125000023, -1.469921875000011],
                            [30.360253906250023, -1.074609375],
                            [30.41230468750001, -1.063085937500006],
                            [30.46992187500001, -1.066015625],
                            [30.50996093750001, -1.067285156250009]
                        ]
                    ]
                },
                properties: {
                    name: "Rwanda",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [41.98769531250005, 16.715625],
                                [42.059960937499994, 16.803515625000017],
                                [42.15781250000006, 16.570703125000023],
                                [41.80156250000002, 16.778759765624955],
                                [41.86044921875006, 17.002539062499977],
                                [41.98769531250005, 16.715625]
                            ]
                        ],
                        [
                            [
                                [46.53144531250004, 29.09624023437499],
                                [47.433203125, 28.989550781250017],
                                [47.671289062499994, 28.53315429687504],
                                [48.442480468750006, 28.542919921874983],
                                [48.80898437499999, 27.895898437499966],
                                [48.797167968750074, 27.72431640625001],
                                [49.2375, 27.49272460937499],
                                [49.17509765625002, 27.43764648437505],
                                [49.40527343749997, 27.18095703124996],
                                [50.149804687499994, 26.66264648437499],
                                [50.00810546875002, 26.678515625000017],
                                [50.21386718750003, 26.30849609375005],
                                [50.15546875000004, 26.100537109374955],
                                [50.03164062499999, 26.11098632812505],
                                [50.55791015625002, 25.086669921875],
                                [50.66689453125005, 24.96381835937501],
                                [50.72558593749997, 24.869384765625057],
                                [50.80439453125004, 24.789257812499983],
                                [50.928320312500006, 24.595117187500023],
                                [50.96601562500004, 24.573925781249983],
                                [51.022753906250074, 24.56523437499999],
                                [51.09335937500006, 24.564648437499955],
                                [51.178027343750074, 24.586718750000017],
                                [51.26796875, 24.607226562500017],
                                [51.33847656250006, 24.564355468749994],
                                [51.41123046875006, 24.570800781250057],
                                [51.30986328125002, 24.340380859375017],
                                [51.56835937500003, 24.286181640625074],
                                [51.592578125000074, 24.07885742187503],
                                [52.55507812500005, 22.932812499999955],
                                [55.104296875000074, 22.621484375000023],
                                [55.185839843750074, 22.7041015625],
                                [55.64101562499999, 22.001855468749994],
                                [54.97734375000002, 19.995947265625006],
                                [51.977636718750006, 18.996142578125074],
                                [49.04199218750003, 18.58178710937503],
                                [48.17216796875002, 18.156933593749983],
                                [47.57958984374997, 17.448339843750034],
                                [47.44179687499999, 17.111865234375045],
                                [47.14355468749997, 16.946679687499966],
                                [46.97568359375006, 16.953466796875034],
                                [46.72763671875006, 17.26557617187501],
                                [45.5353515625001, 17.30205078124999],
                                [45.14804687500006, 17.427441406249955],
                                [43.91699218749997, 17.32470703124997],
                                [43.41796875000003, 17.516259765625023],
                                [43.19091796875003, 17.359375],
                                [43.16503906249997, 16.689404296874955],
                                [42.79931640624997, 16.37177734375001],
                                [42.29394531249997, 17.434960937499966],
                                [41.75, 17.88574218749997],
                                [41.22949218750003, 18.678417968749983],
                                [40.75917968750005, 19.755468750000034],
                                [40.080664062500006, 20.265917968750017],
                                [39.728320312500074, 20.390332031249955],
                                [39.27607421875004, 20.973974609375034],
                                [39.093554687500074, 21.31035156249999],
                                [39.14707031250006, 21.518994140624955],
                                [38.98789062500006, 21.88173828125005],
                                [39.06201171874997, 22.592187500000023],
                                [38.46416015625002, 23.71186523437504],
                                [37.91972656250002, 24.185400390625063],
                                [37.54306640625006, 24.291650390625023],
                                [37.18085937500004, 24.82001953125001],
                                [37.26630859375004, 24.960058593750034],
                                [37.14882812499999, 25.291113281249977],
                                [35.18046875000002, 28.03486328125004],
                                [34.722070312499994, 28.130664062500017],
                                [34.625, 28.064501953125017],
                                [34.95078125, 29.353515625],
                                [36.068457031250006, 29.200537109375006],
                                [36.28281250000006, 29.355371093750023],
                                [36.47607421874997, 29.49511718749997],
                                [36.59179687500003, 29.666113281250006],
                                [36.703906250000074, 29.831640624999977],
                                [36.75527343750005, 29.86601562499996],
                                [37.46923828125003, 29.995068359374955],
                                [37.49072265625003, 30.01171874999997],
                                [37.55361328125005, 30.14458007812496],
                                [37.63359375000002, 30.313281250000045],
                                [37.64990234374997, 30.330957031249994],
                                [37.669726562500074, 30.34814453125003],
                                [37.862890625, 30.44262695312503],
                                [37.98007812500006, 30.5],
                                [37.47900390624997, 31.007763671874955],
                                [37.10527343750002, 31.35517578125004],
                                [36.95859375000006, 31.491503906250017],
                                [37.215625, 31.55610351562501],
                                [37.49335937500004, 31.625878906250023],
                                [38.111425781250006, 31.78115234375005],
                                [38.37548828124997, 31.84746093749996],
                                [38.962304687499994, 31.99492187499999],
                                [38.99707031249997, 32.00747070312505],
                                [39.145410156249994, 32.12451171875],
                                [39.36865234374997, 32.09174804687498],
                                [39.70410156250003, 32.04252929687499],
                                [40.02783203124997, 31.995019531249994],
                                [40.3693359375001, 31.93896484375003],
                                [40.47890625000005, 31.89335937499999],
                                [42.07441406250004, 31.08037109374999],
                                [43.77373046875002, 29.84921875],
                                [44.71650390625004, 29.19360351562503],
                                [46.35644531250003, 29.06367187500001],
                                [46.53144531250004, 29.09624023437499]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Saudi Arabia",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [36.87138671875002, 21.996728515624994],
                            [36.92695312500001, 21.58652343749999],
                            [37.25859375000002, 21.108544921874994],
                            [37.25722656250002, 21.03940429687499],
                            [37.15058593750001, 21.103759765625],
                            [37.14111328125, 20.98178710937499],
                            [37.19316406250002, 20.12070312499999],
                            [37.471289062500006, 18.820117187500003],
                            [38.609472656250006, 18.005078125],
                            [38.422460937500006, 17.823925781249997],
                            [38.39716796875001, 17.778369140625003],
                            [38.38554687500002, 17.751269531250003],
                            [38.37373046875001, 17.717333984375003],
                            [38.34736328125001, 17.68359375],
                            [38.28984375000002, 17.637011718750003],
                            [38.26728515625001, 17.61669921875],
                            [38.253515625, 17.584765625],
                            [37.78242187500001, 17.4580078125],
                            [37.547460937500006, 17.324121093749994],
                            [37.51015625000002, 17.288134765625003],
                            [37.45292968750002, 17.108691406250003],
                            [37.41103515625002, 17.06171875],
                            [37.24882812500002, 17.056884765625],
                            [37.16953125, 17.04140625],
                            [37.0615234375, 17.061279296875],
                            [37.00898437500001, 17.058886718750003],
                            [36.995214843750006, 17.020556640625003],
                            [36.97578125000001, 16.86655273437499],
                            [36.97871093750001, 16.800585937500003],
                            [36.887792968750006, 16.624658203124994],
                            [36.91376953125001, 16.296191406250003],
                            [36.566015625, 15.362109375],
                            [36.4267578125, 15.132080078125],
                            [36.44814453125002, 14.940087890624994],
                            [36.470800781250006, 14.736474609374994],
                            [36.52431640625002, 14.2568359375],
                            [36.12519531250001, 12.75703125],
                            [35.67021484375002, 12.623730468749997],
                            [35.1123046875, 11.816552734374994],
                            [34.93144531250002, 10.864794921874989],
                            [34.77128906250002, 10.746191406249991],
                            [34.571875, 10.880175781249989],
                            [34.34394531250001, 10.658642578124997],
                            [34.31123046875001, 10.190869140624997],
                            [34.078125, 9.461523437499991],
                            [33.87148437500002, 9.506152343749989],
                            [33.96328125000002, 9.861767578124997],
                            [33.90703125000002, 10.181445312499989],
                            [33.13007812500001, 10.745947265624991],
                            [33.073339843750006, 11.606103515624994],
                            [33.199316406250006, 12.21728515625],
                            [32.721875, 12.223095703124997],
                            [32.73671875000002, 12.009667968749994],
                            [32.072265625, 12.006738281249994],
                            [32.338476562500006, 11.710107421874994],
                            [32.42080078125002, 11.089111328125],
                            [31.224902343750017, 9.799267578124997],
                            [30.75537109375, 9.731201171875],
                            [30.003027343750006, 10.277392578124989],
                            [29.60546875, 10.065087890624994],
                            [29.47314453125, 9.768603515624989],
                            [28.979589843750006, 9.594189453124997],
                            [28.844531250000017, 9.326074218749994],
                            [28.048925781250006, 9.32861328125],
                            [27.880859375, 9.601611328124989],
                            [27.07421875, 9.613818359374989],
                            [26.65869140625, 9.484130859375],
                            [25.91914062500001, 10.169335937499994],
                            [25.858203125000017, 10.406494140625],
                            [25.211718750000017, 10.329931640624991],
                            [25.066992187500006, 10.293798828124991],
                            [24.785253906250006, 9.774658203125],
                            [24.53193359375001, 8.886914062499997],
                            [24.147363281250023, 8.665625],
                            [23.53730468750001, 8.815820312499994],
                            [23.46826171875, 9.11474609375],
                            [23.62265625, 9.340625],
                            [23.646289062500017, 9.822900390624994],
                            [22.86005859375001, 10.919677734375],
                            [22.922656250000017, 11.344873046874994],
                            [22.591113281250017, 11.579882812499989],
                            [22.580957031250023, 11.990136718749994],
                            [22.472460937500017, 12.067773437499994],
                            [22.352343750000017, 12.660449218749989],
                            [21.928125, 12.678125],
                            [21.825292968750006, 12.79052734375],
                            [22.228125, 13.32958984375],
                            [22.1064453125, 13.7998046875],
                            [22.53857421875, 14.161865234375],
                            [22.38154296875001, 14.550488281249997],
                            [22.6708984375, 14.722460937500003],
                            [22.93232421875001, 15.162109375],
                            [22.933886718750017, 15.533105468749994],
                            [23.10517578125001, 15.702539062499994],
                            [23.970800781250006, 15.721533203124991],
                            [23.980273437500017, 19.496630859375003],
                            [23.980273437500017, 19.99594726562499],
                            [24.9794921875, 20.002587890624994],
                            [24.980273437500017, 21.995849609375],
                            [28.036425781250017, 21.995361328125],
                            [31.092675781250023, 21.994873046875],
                            [31.260644531250023, 22.00229492187499],
                            [31.400292968750023, 22.202441406250003],
                            [31.486132812500017, 22.14780273437499],
                            [31.434472656250023, 21.995849609375],
                            [36.87138671875002, 21.996728515624994]
                        ]
                    ]
                },
                properties: {
                    name: "Sudan",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [34.078125, 9.461523437499991],
                            [34.07275390625, 8.545263671874991],
                            [33.95332031250001, 8.443505859374994],
                            [33.28105468750002, 8.437255859375],
                            [32.99892578125002, 7.899511718749991],
                            [33.902441406250006, 7.509521484375],
                            [34.06425781250002, 7.225732421874994],
                            [34.71064453125001, 6.660302734374994],
                            [34.98359375000001, 5.858300781249994],
                            [35.26835937500002, 5.492285156249991],
                            [35.08447265625, 5.311865234374991],
                            [34.87832031250002, 5.109570312499997],
                            [34.63984375000001, 4.87548828125],
                            [34.38017578125002, 4.620654296874989],
                            [34.176855468750006, 4.419091796874994],
                            [33.97607421875, 4.22021484375],
                            [33.74160156250002, 3.985253906249994],
                            [33.568457031250006, 3.81171875],
                            [33.489355468750006, 3.755078125],
                            [32.99726562500001, 3.880175781249989],
                            [32.33574218750002, 3.706201171874994],
                            [32.13593750000001, 3.519726562499997],
                            [31.79804687500001, 3.802636718749994],
                            [31.547167968750017, 3.677587890624991],
                            [31.15234375, 3.785595703124997],
                            [30.83857421875001, 3.49072265625],
                            [30.757226562500023, 3.62421875],
                            [30.586718750000017, 3.62421875],
                            [30.50830078125, 3.835693359375],
                            [30.194921875, 3.98193359375],
                            [29.676855468750006, 4.5869140625],
                            [29.469628906250023, 4.61181640625],
                            [29.224902343750017, 4.391894531249989],
                            [28.72705078125, 4.504980468749991],
                            [28.427539062500017, 4.324169921874997],
                            [28.19208984375001, 4.350244140624994],
                            [27.7880859375, 4.644677734374994],
                            [27.4033203125, 5.109179687499989],
                            [27.143945312500023, 5.722949218749989],
                            [26.514257812500006, 6.069238281249994],
                            [26.30859375, 6.455322265625],
                            [26.36181640625, 6.635302734374989],
                            [25.27890625, 7.427490234375],
                            [25.18134765625001, 7.557226562499991],
                            [25.20039062500001, 7.807910156249989],
                            [24.853320312500017, 8.137548828124991],
                            [24.291406250000023, 8.29140625],
                            [24.147363281250023, 8.665625],
                            [24.53193359375001, 8.886914062499997],
                            [24.785253906250006, 9.774658203125],
                            [25.066992187500006, 10.293798828124991],
                            [25.211718750000017, 10.329931640624991],
                            [25.858203125000017, 10.406494140625],
                            [25.91914062500001, 10.169335937499994],
                            [26.65869140625, 9.484130859375],
                            [27.07421875, 9.613818359374989],
                            [27.880859375, 9.601611328124989],
                            [28.048925781250006, 9.32861328125],
                            [28.844531250000017, 9.326074218749994],
                            [28.979589843750006, 9.594189453124997],
                            [29.47314453125, 9.768603515624989],
                            [29.60546875, 10.065087890624994],
                            [30.003027343750006, 10.277392578124989],
                            [30.75537109375, 9.731201171875],
                            [31.224902343750017, 9.799267578124997],
                            [32.42080078125002, 11.089111328125],
                            [32.338476562500006, 11.710107421874994],
                            [32.072265625, 12.006738281249994],
                            [32.73671875000002, 12.009667968749994],
                            [32.721875, 12.223095703124997],
                            [33.199316406250006, 12.21728515625],
                            [33.073339843750006, 11.606103515624994],
                            [33.13007812500001, 10.745947265624991],
                            [33.90703125000002, 10.181445312499989],
                            [33.96328125000002, 9.861767578124997],
                            [33.87148437500002, 9.506152343749989],
                            [34.078125, 9.461523437499991]
                        ]
                    ]
                },
                properties: {
                    name: "S. Sudan",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-12.280615234374977, 14.809033203124997],
                            [-12.228417968749994, 14.45859375],
                            [-12.019189453124994, 14.206494140624997],
                            [-11.960888671874983, 13.875292968750003],
                            [-12.05419921875, 13.633056640625],
                            [-11.831689453124994, 13.315820312499994],
                            [-11.634960937499983, 13.369873046875],
                            [-11.390380859375, 12.941992187499991],
                            [-11.389404296875, 12.404394531249991],
                            [-12.399072265624994, 12.340087890625],
                            [-12.930712890624989, 12.532275390624989],
                            [-13.061279296875, 12.489990234375],
                            [-13.082910156249994, 12.633544921875],
                            [-13.729248046875, 12.673925781249991],
                            [-14.06484375, 12.67529296875],
                            [-14.349218749999977, 12.676416015624994],
                            [-15.196093749999989, 12.679931640625],
                            [-15.3779296875, 12.588964843749991],
                            [-15.574804687499977, 12.490380859374994],
                            [-15.839550781249983, 12.43789062499999],
                            [-16.144189453124994, 12.45742187499999],
                            [-16.24150390624999, 12.443310546874997],
                            [-16.41630859374999, 12.36767578125],
                            [-16.521337890624977, 12.3486328125],
                            [-16.656933593749983, 12.364355468749991],
                            [-16.711816406249994, 12.354833984374991],
                            [-16.76030273437499, 12.52578125],
                            [-16.44287109375, 12.609472656249991],
                            [-16.59765625, 12.715283203124997],
                            [-16.743896484375, 12.58544921875],
                            [-16.763330078124994, 13.064160156249997],
                            [-16.648779296874977, 13.154150390624991],
                            [-15.834277343749989, 13.156445312499997],
                            [-15.814404296874983, 13.325146484374997],
                            [-15.286230468749977, 13.39599609375],
                            [-15.151123046875, 13.556494140624991],
                            [-14.246777343749983, 13.23583984375],
                            [-13.826708984374989, 13.4078125],
                            [-13.977392578124977, 13.54345703125],
                            [-14.405468749999983, 13.503710937500003],
                            [-15.108349609374983, 13.81210937499999],
                            [-15.426855468749977, 13.727001953124997],
                            [-15.509667968749994, 13.586230468750003],
                            [-16.56230468749999, 13.587304687499994],
                            [-16.766943359374977, 13.904931640624994],
                            [-16.618115234374983, 14.04052734375],
                            [-16.791748046875, 14.004150390625],
                            [-17.168066406249977, 14.640625],
                            [-17.345800781249977, 14.729296875],
                            [-17.445019531249983, 14.651611328125],
                            [-17.53564453125, 14.755126953125],
                            [-17.147167968749983, 14.922021484374994],
                            [-16.843408203124994, 15.293994140625003],
                            [-16.570751953124983, 15.734423828125003],
                            [-16.535253906249977, 15.83837890625],
                            [-16.502050781249977, 15.917333984374991],
                            [-16.480078124999977, 16.097216796875003],
                            [-16.441015624999977, 16.204541015624997],
                            [-16.239013671875, 16.531298828125003],
                            [-15.768212890624994, 16.485107421875],
                            [-14.990625, 16.676904296874994],
                            [-14.300097656249989, 16.580273437499997],
                            [-13.868457031249989, 16.148144531249997],
                            [-13.756640624999989, 16.172509765624994],
                            [-13.40966796875, 16.05917968749999],
                            [-13.105273437499989, 15.57177734375],
                            [-12.735253906249994, 15.13125],
                            [-12.40869140625, 14.889013671874991],
                            [-12.280615234374977, 14.809033203124997]
                        ]
                    ]
                },
                properties: {
                    name: "Senegal",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [103.9697265625, 1.331445312499994],
                            [103.65019531249999, 1.325537109374991],
                            [103.81796875000003, 1.447070312499989],
                            [103.9697265625, 1.331445312499994]
                        ]
                    ]
                },
                properties: {
                    name: "Singapore",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-37.10332031249996, -54.065625],
                            [-36.70380859375001, -54.10810546874999],
                            [-36.64741210937498, -54.26230468749996],
                            [-36.32646484374996, -54.251171875],
                            [-35.79858398437497, -54.76347656250002],
                            [-36.08549804687499, -54.86679687500001],
                            [-36.885986328125, -54.33945312499996],
                            [-37.63090820312496, -54.16748046875001],
                            [-37.61884765625001, -54.04208984375004],
                            [-38.017431640625034, -54.008007812500026],
                            [-37.10332031249996, -54.065625]
                        ]
                    ]
                },
                properties: {
                    name: "S. Geo. and S. Sandw. Is.",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-5.692138671874972, -15.997753906249997],
                            [-5.782519531250017, -16.00400390625002],
                            [-5.707861328124977, -15.90615234374998],
                            [-5.692138671874972, -15.997753906249997]
                        ]
                    ]
                },
                properties: {
                    name: "Saint Helena",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [160.57626953125006, -11.797851562500028],
                                [160.44306640625004, -11.814941406249957],
                                [159.98632812499997, -11.494726562500006],
                                [160.57626953125006, -11.797851562500028]
                            ]
                        ],
                        [
                            [
                                [166.13320312500005, -10.757812499999972],
                                [165.90400390625004, -10.851464843749966],
                                [165.79101562500003, -10.784765624999963],
                                [166.02382812500005, -10.6611328125],
                                [166.13320312500005, -10.757812499999972]
                            ]
                        ],
                        [
                            [
                                [161.71533203124997, -10.387304687499991],
                                [162.10537109375005, -10.45380859375004],
                                [162.37333984375002, -10.823242187499986],
                                [161.78681640625004, -10.716894531249991],
                                [161.53789062500007, -10.566406249999972],
                                [161.4870117187501, -10.361425781249963],
                                [161.29394531250003, -10.326464843750031],
                                [161.30478515625012, -10.204394531250031],
                                [161.71533203124997, -10.387304687499991]
                            ]
                        ],
                        [
                            [
                                [161.54785156249997, -9.625683593749997],
                                [161.55380859375012, -9.769726562500026],
                                [161.40976562500006, -9.681640625000028],
                                [161.36416015625, -9.353417968750037],
                                [161.54785156249997, -9.625683593749997]
                            ]
                        ],
                        [
                            [
                                [159.75039062500005, -9.272656250000011],
                                [159.97060546875, -9.433300781249969],
                                [160.35458984375006, -9.421582031249983],
                                [160.81894531250006, -9.862792968749986],
                                [160.64921875000002, -9.92861328124998],
                                [159.80273437499997, -9.763476562500003],
                                [159.61230468749997, -9.470703124999943],
                                [159.62558593750012, -9.311230468749969],
                                [159.75039062500005, -9.272656250000011]
                            ]
                        ],
                        [
                            [
                                [160.1681640625001, -8.995507812500037],
                                [160.40751953125007, -9.140332031249969],
                                [160.10537109375, -9.080761718749997],
                                [160.1681640625001, -8.995507812500037]
                            ]
                        ],
                        [
                            [
                                [159.18857421875006, -9.123535156250014],
                                [159.03632812500004, -9.075],
                                [159.12978515625, -8.99306640624998],
                                [159.22841796875005, -9.029980468749955],
                                [159.18857421875006, -9.123535156250014]
                            ]
                        ],
                        [
                            [
                                [158.10791015625003, -8.684179687500034],
                                [157.93759765625006, -8.73642578125002],
                                [157.90927734375006, -8.565625],
                                [158.10546874999997, -8.536816406250026],
                                [158.10791015625003, -8.684179687500034]
                            ]
                        ],
                        [
                            [
                                [157.38896484375002, -8.713476562499963],
                                [157.2123046875, -8.565039062500006],
                                [157.37949218750012, -8.420898437499943],
                                [157.38896484375002, -8.713476562499963]
                            ]
                        ],
                        [
                            [
                                [160.7494140625, -8.313964843750014],
                                [160.99765625000006, -8.612011718749983],
                                [160.94433593750003, -8.799023437499983],
                                [161.15869140624997, -8.961816406250009],
                                [161.36738281250004, -9.61123046874998],
                                [160.77207031250012, -8.963867187499986],
                                [160.7140625000001, -8.539257812499997],
                                [160.59042968750006, -8.372753906249997],
                                [160.7494140625, -8.313964843750014]
                            ]
                        ],
                        [
                            [
                                [157.76347656250002, -8.242187499999957],
                                [157.89843749999997, -8.506347656249943],
                                [157.81933593750003, -8.612011718749983],
                                [157.58789062500003, -8.445410156249963],
                                [157.5580078125, -8.269921875],
                                [157.30244140625004, -8.33330078124996],
                                [157.21757812500002, -8.262792968749977],
                                [157.490625, -7.965722656250037],
                                [157.76347656250002, -8.242187499999957]
                            ]
                        ],
                        [
                            [
                                [157.171875, -8.108105468749997],
                                [156.95830078125002, -8.014355468749997],
                                [157.02412109375004, -7.867871093749997],
                                [157.18613281250006, -7.941210937500017],
                                [157.171875, -8.108105468749997]
                            ]
                        ],
                        [
                            [
                                [156.687890625, -7.92304687500004],
                                [156.5109375000001, -7.707812499999974],
                                [156.5609375, -7.574023437499989],
                                [156.80908203124997, -7.722851562500026],
                                [156.687890625, -7.92304687500004]
                            ]
                        ],
                        [
                            [
                                [159.8791015625001, -8.534277343749949],
                                [158.9440429687501, -8.04072265625004],
                                [158.457421875, -7.544726562499974],
                                [158.734375, -7.604296875000031],
                                [159.43144531250002, -8.029003906249955],
                                [159.84306640625002, -8.326953124999989],
                                [159.8791015625001, -8.534277343749949]
                            ]
                        ],
                        [
                            [
                                [155.83984374999997, -7.097167968750014],
                                [155.67753906250002, -7.08896484375002],
                                [155.73896484375004, -6.972949218750017],
                                [155.83984374999997, -7.097167968750014]
                            ]
                        ],
                        [
                            [
                                [157.48671875000005, -7.330371093750003],
                                [157.44130859375, -7.425683593749966],
                                [157.10156249999997, -7.323632812499966],
                                [156.4525390625, -6.638281249999963],
                                [157.03027343750003, -6.891992187499952],
                                [157.19335937499997, -7.160351562499997],
                                [157.48671875000005, -7.330371093750003]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Solomon Is.",
                    childNum: 16
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-12.526074218749926, 7.436328125000017],
                                [-12.951611328124926, 7.570849609374989],
                                [-12.615234374999972, 7.63720703125],
                                [-12.5125, 7.582421875000037],
                                [-12.526074218749926, 7.436328125000017]
                            ]
                        ],
                        [
                            [
                                [-10.758593749999989, 9.385351562499991],
                                [-10.682714843750006, 9.289355468749974],
                                [-10.687646484374937, 9.261132812499994],
                                [-10.749951171874926, 9.12236328124996],
                                [-10.747021484374955, 9.095263671875045],
                                [-10.726855468749932, 9.081689453125023],
                                [-10.615966796875, 9.059179687499977],
                                [-10.500537109375017, 8.687548828125017],
                                [-10.677343749999977, 8.400585937499997],
                                [-10.712109374999955, 8.335253906250017],
                                [-10.686962890624983, 8.321679687500009],
                                [-10.652636718749989, 8.330273437499983],
                                [-10.604003906249943, 8.319482421874994],
                                [-10.55771484374992, 8.315673828125028],
                                [-10.496435546874977, 8.362109374999974],
                                [-10.394433593749966, 8.480957031250028],
                                [-10.360058593749983, 8.49550781249998],
                                [-10.283203124999972, 8.48515625],
                                [-10.285742187499949, 8.454101562499986],
                                [-10.314648437499983, 8.310839843750017],
                                [-10.359814453124926, 8.187939453125026],
                                [-10.570849609374932, 8.071142578125034],
                                [-10.6474609375, 7.759375],
                                [-10.878076171874994, 7.538232421874994],
                                [-11.267675781249977, 7.232617187499997],
                                [-11.507519531249983, 6.906542968750003],
                                [-12.48564453124996, 7.386279296875045],
                                [-12.480273437499932, 7.75327148437502],
                                [-12.697607421874977, 7.715869140625045],
                                [-12.850878906249932, 7.818701171875034],
                                [-12.956933593749966, 8.145312500000045],
                                [-13.148974609374989, 8.214599609375043],
                                [-13.272753906249989, 8.429736328124989],
                                [-13.085009765624932, 8.42475585937504],
                                [-12.894091796874932, 8.62978515624998],
                                [-13.181835937499955, 8.576904296875043],
                                [-13.206933593749994, 8.843115234375006],
                                [-13.059472656249966, 8.881152343750031],
                                [-13.292675781249955, 9.04921875],
                                [-13.077294921874966, 9.069628906249974],
                                [-12.958789062499989, 9.263330078124994],
                                [-12.755859374999943, 9.373583984374989],
                                [-12.557861328125, 9.704980468749994],
                                [-12.427978515625028, 9.898144531250011],
                                [-12.142333984375, 9.87539062499999],
                                [-11.911083984374955, 9.993017578124977],
                                [-11.273632812499955, 9.996533203124983],
                                [-11.205664062499949, 9.977734374999969],
                                [-11.180859374999955, 9.925341796875045],
                                [-11.047460937499977, 9.786328125000054],
                                [-10.758593749999989, 9.385351562499991]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Sierra Leone",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-89.36259765624999, 14.416015625],
                            [-89.1205078125, 14.370214843749991],
                            [-88.51254882812499, 13.978955078124997],
                            [-88.504345703125, 13.964208984374991],
                            [-88.49765625, 13.904541015625],
                            [-88.482666015625, 13.854248046875],
                            [-88.44912109375, 13.850976562499994],
                            [-88.40849609374999, 13.87539062499999],
                            [-88.27622070312499, 13.942675781250003],
                            [-88.151025390625, 13.987353515625003],
                            [-87.99101562499999, 13.879638671875],
                            [-87.8919921875, 13.894970703124997],
                            [-87.80224609375, 13.889990234374991],
                            [-87.7314453125, 13.841064453125],
                            [-87.71533203125, 13.812695312499997],
                            [-87.781884765625, 13.521386718749994],
                            [-87.930859375, 13.1806640625],
                            [-88.68564453124999, 13.281494140625],
                            [-88.51201171874999, 13.183935546874991],
                            [-89.80419921875, 13.560107421875003],
                            [-90.09521484375, 13.736523437499997],
                            [-90.04814453124999, 13.904052734375],
                            [-89.54716796874999, 14.241259765625003],
                            [-89.5736328125, 14.390087890624997],
                            [-89.36259765624999, 14.416015625]
                        ]
                    ]
                },
                properties: {
                    name: "El Salvador",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-56.26708984374997, 46.838476562500034],
                            [-56.38476562499994, 46.81943359375006],
                            [-56.36464843749994, 47.09897460937498],
                            [-56.26708984374997, 46.838476562500034]
                        ]
                    ]
                },
                properties: {
                    name: "St. Pierre and Miquelon",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [6.659960937499989, .120654296874989],
                                [6.51972656250004, .066308593750023],
                                [6.468164062499994, .22734375],
                                [6.68691406250008, .404394531249977],
                                [6.75, .24345703124996],
                                [6.659960937499989, .120654296874989]
                            ]
                        ],
                        [
                            [
                                [7.423828125, 1.567724609375006],
                                [7.330664062500034, 1.603369140624991],
                                [7.414453125000051, 1.699121093750037],
                                [7.423828125, 1.567724609375006]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "SÃ£o TomÃ© and Principe",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-54.03422851562499, 3.62939453125],
                            [-54.00957031249999, 3.448535156249989],
                            [-54.06318359375, 3.353320312499989],
                            [-54.18803710937499, 3.178759765624989],
                            [-54.203125, 3.13818359375],
                            [-54.17070312499999, 2.993603515624997],
                            [-54.18808593749999, 2.874853515624991],
                            [-54.1955078125, 2.81787109375],
                            [-54.256738281249994, 2.713720703124991],
                            [-54.402001953124994, 2.461523437499991],
                            [-54.53593749999999, 2.343310546874989],
                            [-54.56840820312499, 2.342578124999989],
                            [-54.604736328125, 2.335791015624991],
                            [-54.61625976562499, 2.326757812499991],
                            [-54.661865234375, 2.327539062499994],
                            [-54.697412109374994, 2.359814453124997],
                            [-54.72221679687499, 2.441650390625],
                            [-54.87607421874999, 2.450390625],
                            [-54.92656249999999, 2.497363281249989],
                            [-54.968408203124994, 2.54833984375],
                            [-54.978662109374994, 2.59765625],
                            [-55.005810546875, 2.59296875],
                            [-55.0703125, 2.54833984375],
                            [-55.11411132812499, 2.539208984374994],
                            [-55.1876953125, 2.547509765624994],
                            [-55.286035156249994, 2.499658203124994],
                            [-55.343994140625, 2.48876953125],
                            [-55.38535156249999, 2.440625],
                            [-55.73056640624999, 2.406152343749994],
                            [-55.957470703125, 2.520458984374997],
                            [-55.99350585937499, 2.497509765624997],
                            [-56.02036132812499, 2.392773437499997],
                            [-56.0451171875, 2.364404296874994],
                            [-56.087792968749994, 2.34130859375],
                            [-56.12939453125, 2.299511718749997],
                            [-56.1376953125, 2.259033203125],
                            [-56.073632812499994, 2.236767578124997],
                            [-56.02006835937499, 2.158154296874997],
                            [-55.96196289062499, 2.095117187499994],
                            [-55.91533203124999, 2.03955078125],
                            [-55.921630859375, 1.976660156249991],
                            [-55.929638671875, 1.8875],
                            [-56.01992187499999, 1.842236328124997],
                            [-56.4828125, 1.942138671875],
                            [-56.704345703125, 2.036474609374991],
                            [-57.19736328124999, 2.853271484375],
                            [-57.303662109375, 3.377099609374994],
                            [-57.646728515625, 3.39453125],
                            [-58.05429687499999, 4.101660156249991],
                            [-57.84599609374999, 4.668164062499997],
                            [-57.91704101562499, 4.820410156249991],
                            [-57.711083984374994, 4.991064453124991],
                            [-57.331005859375, 5.020166015624994],
                            [-57.20981445312499, 5.195410156249991],
                            [-57.3185546875, 5.335351562499994],
                            [-57.194775390625, 5.5484375],
                            [-56.96982421874999, 5.992871093749997],
                            [-56.235595703125, 5.885351562499991],
                            [-55.897607421874994, 5.699316406249991],
                            [-55.909912109375, 5.892626953124989],
                            [-55.648339843749994, 5.985888671874989],
                            [-54.83369140625, 5.988330078124989],
                            [-54.05419921875, 5.807910156249989],
                            [-54.08046875, 5.502246093749989],
                            [-54.4796875, 4.836523437499991],
                            [-54.350732421874994, 4.054101562499994],
                            [-54.03422851562499, 3.62939453125]
                        ]
                    ]
                },
                properties: {
                    name: "Suriname",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [22.538671875, 49.072705078125],
                            [22.52412109375001, 49.031396484374994],
                            [22.389453125000017, 48.873486328125],
                            [22.295214843750017, 48.685839843749996],
                            [22.142871093750017, 48.568505859374994],
                            [22.1318359375, 48.405322265624996],
                            [21.766992187500023, 48.3380859375],
                            [21.45136718750001, 48.55224609375],
                            [20.490039062500017, 48.526904296874996],
                            [20.333789062500017, 48.295556640624994],
                            [19.95039062500001, 48.146630859374994],
                            [19.625390625000023, 48.223095703125],
                            [18.791894531250023, 48.000292968749996],
                            [18.72421875, 47.787158203124996],
                            [17.76191406250001, 47.770166015624994],
                            [17.147363281250023, 48.00595703125],
                            [16.86542968750001, 48.3869140625],
                            [16.953125, 48.598828125],
                            [17.135644531250023, 48.841064453125],
                            [17.75849609375001, 48.888134765625],
                            [18.0859375, 49.06513671875],
                            [18.160937500000017, 49.257373046874996],
                            [18.83222656250001, 49.510791015624996],
                            [19.1494140625, 49.4],
                            [19.44160156250001, 49.597705078124996],
                            [19.77392578125, 49.37216796875],
                            [19.756640625000017, 49.204394531249996],
                            [20.0576171875, 49.181298828124994],
                            [20.36298828125001, 49.38525390625],
                            [20.868457031250017, 49.314697265625],
                            [21.079394531250017, 49.418261718749996],
                            [21.6396484375, 49.411962890625],
                            [22.020117187500006, 49.209521484374996],
                            [22.473046875000023, 49.081298828125],
                            [22.538671875, 49.072705078125]
                        ]
                    ]
                },
                properties: {
                    name: "Slovakia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [16.516210937500006, 46.499902343749994],
                            [16.427636718750023, 46.5244140625],
                            [16.321191406250023, 46.534619140625],
                            [16.1064453125, 46.382226562499994],
                            [15.608984375, 46.171923828124996],
                            [15.592578125000017, 46.139990234375],
                            [15.596875, 46.109228515625],
                            [15.675585937500017, 45.983691406249996],
                            [15.652148437500017, 45.862158203125],
                            [15.277050781250011, 45.7326171875],
                            [15.353710937500011, 45.659912109375],
                            [15.283593750000023, 45.5796875],
                            [15.291210937500011, 45.541552734374996],
                            [15.32666015625, 45.502294921875],
                            [15.339453125, 45.467041015625],
                            [15.242089843750023, 45.44140625],
                            [15.110449218750006, 45.45078125],
                            [14.95458984375, 45.499902343749994],
                            [14.793066406250006, 45.47822265625],
                            [14.649511718750006, 45.571484375],
                            [14.591796875, 45.651269531249994],
                            [14.56884765625, 45.6572265625],
                            [14.548448660714302, 45.628388671875],
                            [14.507586495535731, 45.59039341517857],
                            [14.42734375, 45.505761718749994],
                            [14.369921875000017, 45.4814453125],
                            [13.878710937500017, 45.428369140624994],
                            [13.577929687500017, 45.516894531249996],
                            [13.8447265625, 45.59287109375],
                            [13.831152343750006, 45.680419921875],
                            [13.663476562500023, 45.7919921875],
                            [13.6005859375, 45.979785156249996],
                            [13.509179687500023, 45.973779296874994],
                            [13.487695312500023, 45.987109375],
                            [13.480273437500017, 46.009228515625],
                            [13.486425781250006, 46.03955078125],
                            [13.548046875000011, 46.089111328125],
                            [13.616601562500023, 46.133105468749996],
                            [13.634960937500011, 46.157763671874996],
                            [13.632519531250011, 46.177050781249996],
                            [13.420996093750006, 46.212304687499994],
                            [13.399511718750006, 46.317529296874994],
                            [13.563281250000017, 46.415087890624996],
                            [13.637109375000023, 46.448535156249996],
                            [13.6796875, 46.462890625],
                            [13.7, 46.520263671875],
                            [14.5498046875, 46.399707031249996],
                            [14.893261718750011, 46.605908203125],
                            [15.957617187500006, 46.677636718749994],
                            [16.093066406250017, 46.86328125],
                            [16.283593750000023, 46.857275390625],
                            [16.516210937500006, 46.499902343749994]
                        ]
                    ]
                },
                properties: {
                    name: "Slovenia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [16.52851562500001, 56.29052734375],
                                [16.431640625, 56.24375],
                                [16.41230468750004, 56.568994140624994],
                                [17.02539062499997, 57.345068359375006],
                                [16.52851562500001, 56.29052734375]
                            ]
                        ],
                        [
                            [
                                [19.076464843750045, 57.8359375],
                                [18.813867187500023, 57.70620117187502],
                                [18.907910156250068, 57.39833984375002],
                                [18.146386718749994, 56.920507812500006],
                                [18.285351562500068, 57.08320312500001],
                                [18.136523437500045, 57.55664062500003],
                                [18.53740234374999, 57.83056640625006],
                                [18.90058593750001, 57.91547851562504],
                                [19.076464843750045, 57.8359375]
                            ]
                        ],
                        [
                            [
                                [19.156347656250063, 57.92260742187497],
                                [19.086523437500034, 57.86499023437506],
                                [19.134863281250034, 57.98134765625002],
                                [19.331445312500023, 57.962890625],
                                [19.156347656250063, 57.92260742187497]
                            ]
                        ],
                        [
                            [
                                [24.15546875000004, 65.80527343750006],
                                [23.102343750000074, 65.73535156250003],
                                [22.400976562500006, 65.86210937499999],
                                [22.254003906250006, 65.59755859375002],
                                [21.565527343750063, 65.40810546874997],
                                [21.609179687500074, 65.261376953125],
                                [21.410351562500068, 65.31743164062505],
                                [21.57392578125001, 65.12578124999999],
                                [21.138183593750057, 64.80869140625006],
                                [21.519628906250034, 64.46308593749998],
                                [20.76269531250003, 63.86782226562505],
                                [18.60644531250003, 63.17827148437499],
                                [18.31289062500008, 62.996386718750045],
                                [18.46308593750004, 62.895849609375006],
                                [18.170019531250034, 62.789355468750074],
                                [17.906640625000023, 62.88676757812502],
                                [18.037304687500068, 62.60053710937498],
                                [17.834472656250057, 62.50273437500002],
                                [17.410253906250063, 62.508398437500034],
                                [17.633691406249994, 62.23300781250006],
                                [17.374511718750057, 61.866308593750034],
                                [17.465429687500006, 61.68447265625005],
                                [17.196386718750006, 61.72456054687504],
                                [17.13076171875005, 61.57573242187499],
                                [17.25097656250003, 60.70078125],
                                [17.6611328125, 60.53515625000003],
                                [17.955761718750068, 60.589794921874955],
                                [18.85273437500001, 60.02587890625],
                                [18.970507812500045, 59.757226562499994],
                                [17.964257812500023, 59.359375],
                                [18.56025390625004, 59.39448242187498],
                                [18.285351562500068, 59.109375],
                                [16.978125, 58.65415039062506],
                                [16.214257812500023, 58.636669921874955],
                                [16.92382812499997, 58.49257812499999],
                                [16.651953125, 58.43432617187503],
                                [16.65224609375008, 57.50068359374998],
                                [16.348730468750063, 56.70927734374996],
                                [15.826660156250028, 56.12495117187501],
                                [14.782031250000017, 56.16191406250002],
                                [14.754785156250051, 56.03315429687498],
                                [14.401953125000034, 55.97675781250004],
                                [14.21503906250004, 55.83261718749998],
                                [14.341699218749994, 55.52773437500002],
                                [14.17373046875008, 55.396630859374966],
                                [12.885839843750063, 55.41137695312506],
                                [12.973925781250074, 55.748144531250006],
                                [12.471191406250057, 56.29052734375],
                                [12.801660156250051, 56.263916015625],
                                [12.65644531250004, 56.44057617187502],
                                [12.857421875000028, 56.45239257812503],
                                [12.883691406250051, 56.61772460937496],
                                [12.421484375000034, 56.906396484374966],
                                [11.449316406250063, 58.118359374999955],
                                [11.43154296875008, 58.339990234374994],
                                [11.24824218750004, 58.369140625],
                                [11.14716796875004, 58.98862304687498],
                                [11.19580078125, 59.07827148437505],
                                [11.388281250000063, 59.036523437499966],
                                [11.470703125000057, 58.909521484375034],
                                [11.64277343750004, 58.92607421875002],
                                [11.798144531250074, 59.28989257812498],
                                [11.680761718750034, 59.59228515625003],
                                [12.486132812500074, 60.10678710937506],
                                [12.588671874999989, 60.450732421875045],
                                [12.29414062500004, 61.00268554687506],
                                [12.706054687500028, 61.059863281250074],
                                [12.88076171875008, 61.35229492187506],
                                [12.155371093750006, 61.720751953125045],
                                [12.303515625000074, 62.28559570312501],
                                [11.999902343750051, 63.29169921875001],
                                [12.175195312500051, 63.595947265625],
                                [12.792773437500017, 64],
                                [13.203515625000023, 64.07509765625],
                                [13.960546875000063, 64.01401367187498],
                                [14.141210937500006, 64.17353515624998],
                                [14.077636718750028, 64.464013671875],
                                [13.650292968750023, 64.58154296874997],
                                [14.47968750000004, 65.30146484374998],
                                [14.543261718750045, 66.12934570312498],
                                [15.483789062500051, 66.30595703124999],
                                [15.422949218750006, 66.48984374999998],
                                [16.40351562500004, 67.05498046875002],
                                [16.12744140625, 67.42583007812507],
                                [16.783593750000023, 67.89501953125],
                                [17.324609375000023, 68.10380859374999],
                                [17.91669921875001, 67.96489257812502],
                                [18.303027343750045, 68.55541992187497],
                                [19.969824218750063, 68.35639648437501],
                                [20.348046875000023, 68.84873046875003],
                                [20.116699218750057, 69.02089843750005],
                                [20.622167968750006, 69.036865234375],
                                [21.99746093750005, 68.52060546874998],
                                [22.854101562500034, 68.36733398437502],
                                [23.63886718750004, 67.95439453125002],
                                [23.454882812500045, 67.46025390625007],
                                [23.733593750000068, 67.42290039062499],
                                [23.64150390625005, 67.12939453124997],
                                [23.988574218750045, 66.81054687500003],
                                [23.700292968750034, 66.25263671874998],
                                [24.15546875000004, 65.80527343750006]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Sweden",
                    childNum: 4
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [31.9482421875, -25.957617187500006],
                            [32.060546875, -26.018359375],
                            [32.04140625000002, -26.28125],
                            [32.10595703125, -26.52001953125],
                            [32.112890625, -26.839453125],
                            [32.02480468750002, -26.811132812500006],
                            [31.994726562500006, -26.817480468750006],
                            [31.967187500000023, -26.96064453125001],
                            [31.946093750000017, -27.173632812500003],
                            [31.958398437500023, -27.30585937500001],
                            [31.742578125000023, -27.30996093750001],
                            [31.469531250000017, -27.295507812500006],
                            [31.274023437500006, -27.238378906250006],
                            [31.063378906250023, -27.1123046875],
                            [30.938085937500006, -26.915820312500003],
                            [30.88330078125, -26.79238281250001],
                            [30.806738281250006, -26.785253906250006],
                            [30.794335937500023, -26.764257812500006],
                            [30.803320312500006, -26.41347656250001],
                            [31.08808593750001, -25.98066406250001],
                            [31.207324218750017, -25.843359375],
                            [31.33515625000001, -25.75556640625001],
                            [31.382617187500017, -25.74296875],
                            [31.415136718750006, -25.74658203125],
                            [31.921679687500017, -25.96875],
                            [31.9482421875, -25.957617187500006]
                        ]
                    ]
                },
                properties: {
                    name: "Swaziland",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [55.54033203125002, -4.693066406250011],
                            [55.54296875, -4.785546875],
                            [55.383398437500006, -4.609277343750009],
                            [55.45576171875001, -4.558789062500011],
                            [55.54033203125002, -4.693066406250011]
                        ]
                    ]
                },
                properties: {
                    name: "Seychelles",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [42.358984375, 37.10859375],
                            [41.78857421875, 36.59716796875],
                            [41.41679687500002, 36.5146484375],
                            [41.295996093750006, 36.383349609374996],
                            [41.354101562500006, 35.640429687499996],
                            [41.19472656250002, 34.768994140625],
                            [40.98701171875001, 34.429052734375],
                            [38.773535156250006, 33.372216796874994],
                            [36.818359375, 32.317285156249994],
                            [36.3720703125, 32.3869140625],
                            [35.78730468750001, 32.734912109374996],
                            [35.91347656250002, 32.94960937499999],
                            [35.869140625, 33.43173828125],
                            [36.03447265625002, 33.58505859375],
                            [35.98613281250002, 33.75263671875],
                            [36.36503906250002, 33.83935546875],
                            [36.27783203125, 33.92529296875],
                            [36.5849609375, 34.221240234374996],
                            [36.50439453125, 34.432373046875],
                            [36.32988281250002, 34.499609375],
                            [36.383886718750006, 34.65791015625],
                            [35.97626953125001, 34.629199218749996],
                            [35.902441406250006, 35.420703125],
                            [35.76445312500002, 35.571582031249996],
                            [35.83964843750002, 35.84921875],
                            [35.892675781250006, 35.916552734374996],
                            [35.96757812500002, 35.910058593749994],
                            [36.12734375000002, 35.831445312499994],
                            [36.15361328125002, 35.833886718749994],
                            [36.34755859375002, 36.003515625],
                            [36.37539062500002, 36.171240234375],
                            [36.63671875, 36.233984375],
                            [36.64140625000002, 36.263525390625],
                            [36.5375, 36.45742187499999],
                            [36.54667968750002, 36.50634765625],
                            [36.596875, 36.7013671875],
                            [36.62841796875, 36.777685546875],
                            [36.65859375000002, 36.802539062499996],
                            [36.77656250000001, 36.79267578125],
                            [36.94179687500002, 36.7583984375],
                            [36.9853515625, 36.702392578125],
                            [37.06621093750002, 36.652636718749996],
                            [37.43632812500002, 36.643310546875],
                            [37.523535156250006, 36.6783203125],
                            [37.7203125, 36.743701171874996],
                            [37.90664062500002, 36.79462890625],
                            [38.19169921875002, 36.9015625],
                            [38.7666015625, 36.693115234375],
                            [38.90644531250001, 36.694677734375],
                            [39.1083984375, 36.680566406249994],
                            [39.35664062500001, 36.681591796875],
                            [39.50146484375, 36.70224609375],
                            [39.6865234375, 36.738623046875],
                            [40.01640625000002, 36.826074218749994],
                            [40.705664062500006, 37.097705078124996],
                            [41.886816406250006, 37.156396484374994],
                            [42.05986328125002, 37.2060546875],
                            [42.16787109375002, 37.288623046874996],
                            [42.202734375, 37.29726562499999],
                            [42.24755859375, 37.2822265625],
                            [42.2685546875, 37.2765625],
                            [42.31289062500002, 37.22958984375],
                            [42.358984375, 37.10859375]
                        ]
                    ]
                },
                properties: {
                    name: "Syria",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-72.3328125, 21.85136718749999],
                            [-72.14433593750002, 21.79272460937503],
                            [-72.33544921874994, 21.758007812499983],
                            [-72.3328125, 21.85136718749999]
                        ]
                    ]
                },
                properties: {
                    name: "Turks and Caicos Is.",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [23.980273437500017, 19.496630859375003],
                            [23.970800781250006, 15.721533203124991],
                            [23.10517578125001, 15.702539062499994],
                            [22.933886718750017, 15.533105468749994],
                            [22.93232421875001, 15.162109375],
                            [22.6708984375, 14.722460937500003],
                            [22.38154296875001, 14.550488281249997],
                            [22.53857421875, 14.161865234375],
                            [22.1064453125, 13.7998046875],
                            [22.228125, 13.32958984375],
                            [21.825292968750006, 12.79052734375],
                            [21.928125, 12.678125],
                            [22.352343750000017, 12.660449218749989],
                            [22.472460937500017, 12.067773437499994],
                            [22.580957031250023, 11.990136718749994],
                            [22.591113281250017, 11.579882812499989],
                            [22.922656250000017, 11.344873046874994],
                            [22.86005859375001, 10.919677734375],
                            [22.49384765625001, 10.996240234374994],
                            [21.771484375, 10.642822265625],
                            [21.682714843750006, 10.289843749999989],
                            [20.773242187500017, 9.405664062499994],
                            [20.342089843750017, 9.127099609374994],
                            [18.95625, 8.938867187499994],
                            [18.886035156250017, 8.836035156249991],
                            [19.108691406250017, 8.656152343749994],
                            [18.56416015625001, 8.0458984375],
                            [17.6494140625, 7.98359375],
                            [16.784765625, 7.550976562499997],
                            [16.545312500000023, 7.865478515625],
                            [16.37890625, 7.683544921874997],
                            [15.957617187500006, 7.507568359375],
                            [15.480078125, 7.523779296874991],
                            [15.5498046875, 7.787890624999989],
                            [15.1162109375, 8.557324218749997],
                            [14.332324218750017, 9.20351562499999],
                            [13.977246093750011, 9.691552734374994],
                            [14.243261718750006, 9.979736328125],
                            [15.654882812500006, 10.0078125],
                            [15.276074218750011, 10.357373046874997],
                            [15.132226562500023, 10.648486328124989],
                            [15.029882812500006, 11.11367187499999],
                            [15.08125, 11.845507812499989],
                            [14.847070312500023, 12.502099609374994],
                            [14.461718750000017, 13.021777343749989],
                            [14.244824218750011, 13.07734375],
                            [14.06396484375, 13.07851562499999],
                            [13.932324218750011, 13.258496093749997],
                            [13.606347656250023, 13.70458984375],
                            [13.505761718750023, 14.134423828124994],
                            [13.4482421875, 14.380664062500003],
                            [14.367968750000017, 15.750146484374994],
                            [15.474316406250011, 16.908398437499997],
                            [15.735058593750011, 19.904052734375],
                            [15.963183593750017, 20.34619140625],
                            [15.587109375000011, 20.733300781249994],
                            [15.607324218750023, 20.954394531250003],
                            [15.181835937500011, 21.523388671874997],
                            [14.97900390625, 22.99619140624999],
                            [15.984082031250011, 23.445214843749994],
                            [20.14765625000001, 21.38925781249999],
                            [23.980273437500017, 19.496630859375003]
                        ]
                    ]
                },
                properties: {
                    name: "Chad",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [.900488281250006, 10.993261718749991],
                            [.763378906250011, 10.386669921874997],
                            [1.330078125, 9.996972656249994],
                            [1.3857421875, 9.361669921874991],
                            [1.600195312500006, 9.050048828125],
                            [1.624707031250011, 6.997314453125],
                            [1.530957031250011, 6.992431640625],
                            [1.777929687500006, 6.294628906249997],
                            [1.62265625, 6.216796875],
                            [1.187207031250011, 6.089404296874989],
                            [.736914062500006, 6.452587890624997],
                            [.525585937500011, 6.850927734374991],
                            [.634765625, 7.353662109374994],
                            [.5, 7.546875],
                            [.686328125000017, 8.354882812499994],
                            [.37255859375, 8.75927734375],
                            [.48876953125, 8.851464843749994],
                            [.525683593750017, 9.398486328124989],
                            [.2333984375, 9.463525390624994],
                            [.342578125000017, 9.604150390624994],
                            [.264550781250023, 9.644726562499997],
                            [.380859375, 10.291845703124991],
                            [-.08632812499999, 10.673046875],
                            [.009423828125023, 11.02099609375],
                            [-.068603515625, 11.115625],
                            [.49267578125, 10.954980468749994],
                            [.900488281250006, 10.993261718749991]
                        ]
                    ]
                },
                properties: {
                    name: "Togo",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [98.40908203125005, 7.90205078125004],
                                [98.2962890625, 7.776074218750054],
                                [98.32207031250007, 8.166308593749974],
                                [98.4349609375, 8.085644531249969],
                                [98.40908203125005, 7.90205078125004]
                            ]
                        ],
                        [
                            [
                                [100.070703125, 9.58603515625002],
                                [99.96240234375003, 9.421630859375],
                                [99.93955078125006, 9.559960937500037],
                                [100.070703125, 9.58603515625002]
                            ]
                        ],
                        [
                            [
                                [102.42675781250003, 11.988720703125026],
                                [102.30195312500004, 11.98081054687502],
                                [102.27744140625006, 12.151855468750043],
                                [102.42675781250003, 11.988720703125026]
                            ]
                        ],
                        [
                            [
                                [100.12246093750005, 20.316650390625057],
                                [100.11494140625004, 20.257666015625034],
                                [100.13974609375012, 20.245410156250017],
                                [100.31796875000006, 20.38588867187505],
                                [100.51953125000003, 20.17792968750004],
                                [100.39765625000004, 19.756103515625],
                                [100.51357421875005, 19.553466796875],
                                [101.21191406249997, 19.54833984375003],
                                [101.22080078125006, 19.486621093750074],
                                [101.19755859375007, 19.327929687500074],
                                [101.2863281250001, 18.977148437500006],
                                [101.04697265625012, 18.441992187500063],
                                [101.05058593750002, 18.407031250000045],
                                [101.1375, 18.28686523437497],
                                [101.14394531250005, 18.14262695312499],
                                [100.90849609375002, 17.583886718750023],
                                [100.95585937500002, 17.541113281250006],
                                [101.10517578125004, 17.47954101562499],
                                [101.16748046874997, 17.49902343749997],
                                [101.41367187500012, 17.71875],
                                [101.55507812500005, 17.812353515625034],
                                [101.56367187500004, 17.82050781250001],
                                [101.6875, 17.889404296875],
                                [101.77480468750005, 18.03339843750004],
                                [101.81865234375002, 18.06464843750001],
                                [101.87548828124997, 18.046435546875017],
                                [101.94746093750004, 18.081494140624983],
                                [102.03457031250005, 18.169824218750023],
                                [102.10146484375, 18.210644531249983],
                                [102.14824218750002, 18.20385742187503],
                                [102.35185546875002, 18.045947265625017],
                                [102.45878906250002, 17.984619140625057],
                                [102.55253906250007, 17.96508789062497],
                                [102.61679687500006, 17.833349609375034],
                                [102.66064453124997, 17.817968750000034],
                                [102.680078125, 17.824121093750023],
                                [103.05136718750006, 18.02851562500001],
                                [103.0912109375, 18.13823242187499],
                                [103.14853515625006, 18.221728515625045],
                                [103.19970703124997, 18.259472656249983],
                                [103.26318359374997, 18.27846679687505],
                                [103.27958984375002, 18.304980468750017],
                                [103.24892578125, 18.338964843750034],
                                [103.25175781250002, 18.373486328124955],
                                [103.2882812500001, 18.408398437499955],
                                [103.36699218750007, 18.42333984374997],
                                [103.48798828125004, 18.418164062499983],
                                [103.62968750000002, 18.38256835937503],
                                [103.79228515625002, 18.316503906249977],
                                [103.89882812500005, 18.295312500000023],
                                [103.949609375, 18.31899414062505],
                                [104.04873046875005, 18.216699218749994],
                                [104.19619140625005, 17.988378906250006],
                                [104.32265625, 17.815820312500023],
                                [104.428125, 17.69897460937503],
                                [104.7396484375, 17.461669921875],
                                [104.81601562500012, 17.30029296874997],
                                [104.75898437500004, 17.0771484375],
                                [104.7435546875, 16.884375],
                                [104.75058593750012, 16.647558593750063],
                                [104.81933593750003, 16.46606445312503],
                                [105.04716796875007, 16.160253906249977],
                                [105.14873046875007, 16.09355468749999],
                                [105.33066406250006, 16.037890625000017],
                                [105.40625, 15.987451171875051],
                                [105.39892578124997, 15.829882812500017],
                                [105.62207031250003, 15.699951171875],
                                [105.641015625, 15.656542968750045],
                                [105.6388671875001, 15.585937500000057],
                                [105.615625, 15.488281250000057],
                                [105.49042968750004, 15.256591796875],
                                [105.49042968750004, 15.127587890625009],
                                [105.5333984375001, 15.041601562499991],
                                [105.54667968750002, 14.932470703124963],
                                [105.52304687500012, 14.843310546875003],
                                [105.49736328125002, 14.590673828124963],
                                [105.47558593750003, 14.530126953124977],
                                [105.42265625000007, 14.471630859375054],
                                [105.34218750000005, 14.416699218750054],
                                [105.24365234375003, 14.367871093750054],
                                [105.1833007812501, 14.346240234374989],
                                [105.16914062500004, 14.336083984374966],
                                [105.12597656250003, 14.280957031250011],
                                [105.07412109375005, 14.227441406250037],
                                [104.77900390625004, 14.427832031250006],
                                [103.19941406250004, 14.332617187499977],
                                [102.90927734375006, 14.136718750000028],
                                [102.546875, 13.585693359375043],
                                [102.33632812500005, 13.560302734375014],
                                [102.49960937500012, 12.669970703125003],
                                [102.75566406250002, 12.42626953125],
                                [102.73662109375007, 12.089794921875011],
                                [102.93388671875002, 11.706689453125037],
                                [102.594140625, 12.203027343749994],
                                [102.54023437500004, 12.109228515624977],
                                [101.83574218750002, 12.640380859375014],
                                [100.89775390625007, 12.653808593749986],
                                [100.96269531250007, 13.431982421874991],
                                [100.60292968750005, 13.568164062500017],
                                [100.23564453125002, 13.48447265625002],
                                [99.99052734375007, 13.243457031250031],
                                [100.08994140625006, 13.045654296874972],
                                [99.96396484375006, 12.690039062500006],
                                [99.98906250000007, 12.170800781249994],
                                [99.16503906250003, 10.319824218750028],
                                [99.25390625000003, 9.265234375000034],
                                [99.83554687500012, 9.288378906250031],
                                [99.98955078125007, 8.589208984374977],
                                [100.129296875, 8.428076171875006],
                                [100.16347656250005, 8.508398437500034],
                                [100.27939453125006, 8.268505859375011],
                                [100.54521484375002, 7.226904296874991],
                                [100.43935546875005, 7.280761718750043],
                                [100.38037109375003, 7.541503906250043],
                                [100.28378906250006, 7.551513671875043],
                                [100.25664062500002, 7.774902343749986],
                                [100.16074218750012, 7.599267578124994],
                                [100.4235351562501, 7.18784179687502],
                                [101.01787109375002, 6.860937500000034],
                                [101.49794921875005, 6.865283203125031],
                                [102.10107421874997, 6.242236328125031],
                                [101.87363281250012, 5.825292968749991],
                                [101.67841796875004, 5.778808593750028],
                                [101.5560546875, 5.907763671875003],
                                [101.1139648437501, 5.636767578125045],
                                [100.98164062500004, 5.771044921875045],
                                [101.05351562500002, 6.242578125],
                                [100.87392578125, 6.24541015624996],
                                [100.75449218750012, 6.460058593749991],
                                [100.3454101562501, 6.549902343750006],
                                [100.26142578125004, 6.682714843749963],
                                [100.11914062499997, 6.441992187500048],
                                [99.69599609375004, 6.87666015625004],
                                [99.72031250000012, 7.106201171875],
                                [99.55302734375002, 7.218798828125031],
                                [99.59697265625002, 7.355615234375009],
                                [99.35859375000004, 7.372216796875023],
                                [99.26367187499997, 7.619042968750037],
                                [99.07763671874997, 7.718066406250045],
                                [99.05107421875002, 7.887841796874994],
                                [98.78867187500012, 8.059814453125028],
                                [98.703515625, 8.256738281250009],
                                [98.57919921875006, 8.344287109374989],
                                [98.42099609375006, 8.17822265625],
                                [98.30546875000007, 8.226220703125009],
                                [98.24179687500006, 8.767871093750045],
                                [98.70253906250005, 10.19038085937504],
                                [98.7572265625, 10.660937499999974],
                                [99.1901367187501, 11.105273437499989],
                                [99.61474609374997, 11.781201171875026],
                                [99.40507812500002, 12.547900390625003],
                                [99.12392578125, 13.030761718750043],
                                [99.13681640625006, 13.716699218749994],
                                [98.57001953125004, 14.359912109375031],
                                [98.20214843749997, 14.97592773437502],
                                [98.19101562500012, 15.204101562499972],
                                [98.55693359375007, 15.367675781249986],
                                [98.59238281250006, 16.05068359375005],
                                [98.81796875000012, 16.180810546874994],
                                [98.88828125000006, 16.351904296875034],
                                [98.83544921875003, 16.417578125],
                                [98.66074218750006, 16.330419921875006],
                                [98.4388671875, 16.975683593750034],
                                [97.7064453125, 17.79711914062503],
                                [97.63222656250005, 18.290332031250074],
                                [97.37392578125, 18.51796875],
                                [97.74589843750002, 18.58818359374999],
                                [97.816796875, 19.459960937500057],
                                [98.01503906250005, 19.74951171874997],
                                [98.37128906250004, 19.68916015625004],
                                [98.9166992187501, 19.77290039062504],
                                [99.07421875000003, 20.09936523437503],
                                [99.48593750000006, 20.14985351562501],
                                [99.45888671875005, 20.363037109375],
                                [99.72011718750005, 20.32543945312497],
                                [99.8903320312501, 20.424414062499977],
                                [99.9542968750001, 20.415429687500023],
                                [100.0036132812501, 20.37958984375001],
                                [100.12246093750005, 20.316650390625057]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Thailand",
                    childNum: 4
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [70.66416015625, 39.85546875],
                                [70.55957031250003, 39.790917968749994],
                                [70.48925781250003, 39.86303710937503],
                                [70.48281250000005, 39.88271484375005],
                                [70.49775390625004, 39.88242187499998],
                                [70.56708984375004, 39.86660156250005],
                                [70.66416015625, 39.85546875]
                            ]
                        ],
                        [
                            [
                                [70.95800781250003, 40.238867187500034],
                                [70.59921875, 39.974511718749994],
                                [69.96679687499997, 40.202246093750034],
                                [69.46875, 40.020751953125],
                                [69.47099609375002, 39.990625],
                                [69.43193359375007, 39.909765625000034],
                                [69.36542968750004, 39.94707031250002],
                                [69.30722656250006, 39.968554687500045],
                                [69.27880859374997, 39.91777343749999],
                                [69.24472656250006, 39.82709960937498],
                                [69.29765625000007, 39.52480468750005],
                                [70.50117187500004, 39.58735351562501],
                                [70.79931640625003, 39.39472656250001],
                                [71.4703125, 39.60366210937502],
                                [71.50302734375006, 39.58217773437502],
                                [71.51738281250002, 39.55385742187502],
                                [71.50585937499997, 39.51708984374997],
                                [71.5033203125, 39.47880859374999],
                                [71.73222656250002, 39.422998046874994],
                                [71.77861328125007, 39.27797851562502],
                                [72.04277343750002, 39.352148437500034],
                                [72.08417968750004, 39.310644531250034],
                                [72.14736328125005, 39.26074218749997],
                                [72.22998046874997, 39.20751953124997],
                                [72.63994140625002, 39.385986328125],
                                [73.10927734375, 39.36191406249998],
                                [73.2349609375, 39.37456054687499],
                                [73.3361328125001, 39.41235351562506],
                                [73.38740234375004, 39.442724609375034],
                                [73.4704101562501, 39.46059570312502],
                                [73.63164062500007, 39.44887695312502],
                                [73.63632812500006, 39.396679687499955],
                                [73.60732421875, 39.229199218749955],
                                [73.8052734375, 38.968652343749994],
                                [73.69609375000007, 38.85429687499996],
                                [73.80166015625, 38.60688476562501],
                                [74.02558593750004, 38.53984375000002],
                                [74.27744140625, 38.659765625000034],
                                [74.81230468750002, 38.46030273437498],
                                [74.8942382812501, 37.60141601562498],
                                [75.11875, 37.38569335937498],
                                [74.89130859375004, 37.231640624999955],
                                [74.875390625, 37.24199218750002],
                                [74.83046875, 37.28593750000002],
                                [74.73056640625006, 37.35703125],
                                [74.659375, 37.39448242187501],
                                [74.34902343750005, 37.41875],
                                [74.25966796875005, 37.41542968750002],
                                [74.20351562500005, 37.37246093750005],
                                [74.16708984375, 37.32944335937498],
                                [73.74960937500006, 37.23178710937498],
                                [73.6535156250001, 37.239355468750034],
                                [73.62753906250006, 37.261572265625006],
                                [73.71728515625003, 37.32944335937498],
                                [73.7337890625, 37.37578125000002],
                                [73.72060546875, 37.41875],
                                [73.65712890625005, 37.43046875],
                                [73.6046875000001, 37.44604492187503],
                                [73.48134765625, 37.4716796875],
                                [73.38291015625006, 37.462255859375034],
                                [73.21113281250004, 37.40849609375002],
                                [72.89550781250003, 37.26752929687498],
                                [72.65742187500004, 37.029052734375],
                                [71.665625, 36.696923828124994],
                                [71.530859375, 36.845117187499994],
                                [71.43291015625007, 37.12753906249998],
                                [71.5822265625001, 37.91010742187498],
                                [71.55195312500004, 37.93315429687496],
                                [71.48779296874997, 37.93188476562497],
                                [71.38964843750003, 37.90629882812502],
                                [71.31992187500006, 37.90185546875],
                                [71.27851562500004, 37.91840820312498],
                                [71.33271484375004, 38.170263671875034],
                                [71.25585937499997, 38.306982421875006],
                                [70.7359375, 38.42255859375001],
                                [70.41777343750002, 38.075439453125],
                                [70.21464843750002, 37.92441406250006],
                                [70.19941406250004, 37.88603515624996],
                                [70.25498046875006, 37.76538085937497],
                                [70.25146484374997, 37.66416015625006],
                                [70.18867187500004, 37.58247070312501],
                                [70.11982421875004, 37.54350585937499],
                                [69.9849609375, 37.566162109375],
                                [69.8208984375, 37.60957031250004],
                                [69.62578125000002, 37.59404296874999],
                                [69.49208984375, 37.55307617187498],
                                [69.42011718750004, 37.486718749999966],
                                [69.39921875000007, 37.39931640625002],
                                [69.42968749999997, 37.290869140625034],
                                [69.414453125, 37.20776367187497],
                                [69.35380859375007, 37.15004882812502],
                                [69.3039062500001, 37.11694335937503],
                                [69.26484375000004, 37.1083984375],
                                [69.18017578125003, 37.158300781250034],
                                [68.96044921875003, 37.32504882812498],
                                [68.9118164062501, 37.33393554687501],
                                [68.88525390624997, 37.32807617187498],
                                [68.85537109375005, 37.31684570312501],
                                [68.83847656250006, 37.30283203124998],
                                [68.82373046874997, 37.27070312500001],
                                [68.78203125000002, 37.25800781250001],
                                [68.7232421875, 37.26801757812501],
                                [68.6691406250001, 37.258398437500006],
                                [68.3869140625001, 37.1375],
                                [68.29951171875004, 37.08842773437502],
                                [68.28476562500006, 37.036328124999955],
                                [68.2609375000001, 37.01308593750002],
                                [68.2121093750001, 37.02153320312496],
                                [68.0677734375, 36.949804687500006],
                                [67.95800781249997, 36.972021484375006],
                                [67.83447265624997, 37.06420898437506],
                                [67.75898437500004, 37.172216796875034],
                                [67.7980468750001, 37.244970703125006],
                                [67.81435546875005, 37.48701171875004],
                                [68.3502929687501, 38.211035156250006],
                                [68.08720703125002, 38.47353515625002],
                                [68.13251953125004, 38.927636718749966],
                                [67.69443359375006, 38.99462890625003],
                                [67.64833984375005, 39.13105468750004],
                                [67.3576171875001, 39.216699218749994],
                                [67.426171875, 39.46557617187497],
                                [67.71904296875007, 39.62138671875002],
                                [68.46328125, 39.53671874999998],
                                [68.63896484375007, 39.8388671875],
                                [68.86875, 39.90747070312503],
                                [68.80468750000003, 40.05034179687499],
                                [68.9720703125, 40.08994140624998],
                                [68.63066406250007, 40.16708984374998],
                                [69.27490234374997, 40.19809570312498],
                                [69.20625, 40.566552734374994],
                                [69.35722656250002, 40.76738281249996],
                                [69.71289062500003, 40.65698242187503],
                                [70.40195312500006, 41.03510742187498],
                                [70.75107421875006, 40.721777343750006],
                                [70.37158203125003, 40.38413085937506],
                                [70.653125, 40.201171875],
                                [70.95800781250003, 40.238867187500034]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Tajikistan",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [66.52226562500007, 37.34848632812506],
                            [66.471875, 37.3447265625],
                            [65.7650390625, 37.56914062499996],
                            [65.55498046875002, 37.25117187500004],
                            [65.30361328125005, 37.24677734375001],
                            [65.08964843750007, 37.237939453124994],
                            [64.9515625, 37.19355468750001],
                            [64.81630859375005, 37.13208007812503],
                            [64.7824218750001, 37.05927734375001],
                            [64.60253906250003, 36.554541015625034],
                            [64.5658203125, 36.427587890625034],
                            [64.51103515625002, 36.34067382812498],
                            [64.184375, 36.14892578125],
                            [63.8625, 36.012353515624994],
                            [63.12998046875006, 35.84619140624997],
                            [63.169726562500074, 35.678125],
                            [63.05664062500003, 35.44580078125003],
                            [62.98027343750002, 35.40917968750003],
                            [62.85800781250006, 35.34965820312499],
                            [62.688085937500006, 35.25532226562504],
                            [62.3078125000001, 35.17080078125005],
                            [62.08964843750002, 35.3796875],
                            [61.62099609375005, 35.43232421875004],
                            [61.34472656249997, 35.62949218750006],
                            [61.26201171875002, 35.61958007812498],
                            [61.25214843750004, 35.86762695312498],
                            [61.15292968750006, 35.97675781250001],
                            [61.212011718750006, 36.190527343750034],
                            [61.11962890625003, 36.64257812500003],
                            [60.34130859375003, 36.63764648437501],
                            [60.06279296875002, 36.962890625],
                            [59.454980468749994, 37.25283203125002],
                            [59.30175781249997, 37.51064453125005],
                            [58.81542968750003, 37.683496093749994],
                            [58.261621093749994, 37.665820312500045],
                            [57.35371093750004, 37.97333984374998],
                            [57.1935546875001, 38.216406250000034],
                            [56.440625, 38.249414062499994],
                            [56.272070312500006, 38.080419921875034],
                            [55.38085937500003, 38.051123046875034],
                            [54.90009765625004, 37.77792968750006],
                            [54.6994140625001, 37.47016601562498],
                            [53.91416015625006, 37.34355468750002],
                            [53.86865234375003, 38.949267578125045],
                            [53.70458984375003, 39.209570312500034],
                            [53.33632812500005, 39.34082031250006],
                            [53.15664062499999, 39.26499023437506],
                            [53.23564453125002, 39.608544921874966],
                            [53.603125, 39.546972656250034],
                            [53.472265625, 39.66879882812498],
                            [53.48730468749997, 39.909375],
                            [52.9875, 39.98759765625002],
                            [53.03554687500005, 39.7744140625],
                            [52.80468749999997, 40.054003906250045],
                            [52.73369140625002, 40.39873046875002],
                            [52.943457031250006, 41.03808593750006],
                            [53.1452148437501, 40.82495117187497],
                            [53.61523437500003, 40.818505859374994],
                            [53.87001953125005, 40.64868164062503],
                            [54.37734375, 40.693261718749966],
                            [54.319433593750006, 40.83457031249998],
                            [54.68505859375003, 40.873046875],
                            [54.70371093750006, 41.071142578125034],
                            [54.094824218750006, 41.51938476562506],
                            [53.80468749999997, 42.11762695312498],
                            [53.16416015625006, 42.09379882812502],
                            [52.97001953125002, 41.97622070312505],
                            [52.81484375, 41.711816406249994],
                            [52.850390625000074, 41.20029296875006],
                            [52.4938476562501, 41.780371093750034],
                            [53.0558593750001, 42.14775390624999],
                            [54.120996093749994, 42.335205078125],
                            [54.85380859375002, 41.965185546875006],
                            [55.434375, 41.296289062499994],
                            [55.97744140625005, 41.32221679687504],
                            [57.01796875, 41.26347656249996],
                            [57.11884765625004, 41.35029296874998],
                            [56.96406250000004, 41.856542968750006],
                            [57.290625, 42.123779296875],
                            [57.814257812500074, 42.18984375000005],
                            [58.02890625, 42.48764648437506],
                            [58.474414062500074, 42.29936523437496],
                            [58.15156250000004, 42.628076171874966],
                            [58.477148437500006, 42.66284179687503],
                            [58.5890625000001, 42.778466796874966],
                            [59.35429687500002, 42.32329101562496],
                            [59.98515625000002, 42.21171875],
                            [59.94179687499999, 41.97353515625002],
                            [60.20078125000006, 41.803125],
                            [60.07558593750005, 41.759667968749966],
                            [60.089648437500074, 41.39941406250003],
                            [60.454980468749994, 41.221630859374955],
                            [61.2423828125001, 41.18920898437503],
                            [61.496972656249994, 41.276074218749955],
                            [61.90283203124997, 41.09370117187501],
                            [62.48320312500002, 39.97563476562496],
                            [63.76367187500003, 39.16054687499999],
                            [64.3099609375, 38.97729492187497],
                            [65.612890625, 38.23857421875002],
                            [65.97119140624997, 38.244238281250006],
                            [66.60625, 37.98671875000005],
                            [66.52558593750004, 37.785742187500034],
                            [66.51132812500006, 37.59916992187496],
                            [66.51064453125, 37.45869140625004],
                            [66.52226562500007, 37.34848632812506]
                        ]
                    ]
                },
                properties: {
                    name: "Turkmenistan",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [124.0363281250001, -9.341601562500031],
                                [124.44443359375012, -9.190332031250023],
                                [124.28232421875012, -9.427929687500026],
                                [124.0363281250001, -9.341601562500031]
                            ]
                        ],
                        [
                            [
                                [125.06816406250002, -9.511914062499997],
                                [124.96015625000004, -9.213769531250009],
                                [125.10048828125, -9.189843750000023],
                                [125.14902343750012, -9.042578125000034],
                                [124.93681640625007, -9.053417968750026],
                                [124.92226562500005, -8.942480468749977],
                                [125.17802734375002, -8.647851562499994],
                                [125.38183593749997, -8.575390624999983],
                                [126.61972656250006, -8.459472656249986],
                                [126.96640625000012, -8.315722656250017],
                                [127.29609375000004, -8.424511718749969],
                                [126.91523437500004, -8.715234374999966],
                                [125.40800781250002, -9.275781250000023],
                                [125.06816406250002, -9.511914062499997]
                            ]
                        ],
                        [
                            [
                                [125.64609375000006, -8.139941406250003],
                                [125.5794921875, -8.311816406250017],
                                [125.50712890625007, -8.275097656249997],
                                [125.64609375000006, -8.139941406250003]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Timor-Leste",
                    childNum: 3
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-175.1619140625, -21.169335937500023],
                                [-175.07817382812496, -21.129003906249977],
                                [-175.15659179687495, -21.26367187499997],
                                [-175.36235351562496, -21.106835937499994],
                                [-175.1619140625, -21.169335937500023]
                            ]
                        ],
                        [
                            [
                                [-173.953515625, -18.63935546875001],
                                [-174.06914062500002, -18.640234375],
                                [-173.96806640624993, -18.565332031250023],
                                [-173.953515625, -18.63935546875001]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Tonga",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-61.012109374999966, 10.134326171874989],
                            [-61.906103515625006, 10.069140625000031],
                            [-61.49931640624999, 10.268554687499972],
                            [-61.47827148437497, 10.603369140624977],
                            [-61.65117187499993, 10.718066406249974],
                            [-60.917626953124966, 10.84023437499999],
                            [-61.03374023437502, 10.669873046875026],
                            [-61.012109374999966, 10.134326171874989]
                        ]
                    ]
                },
                properties: {
                    name: "Trinidad and Tobago",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [10.957617187500063, 33.72207031250005],
                                [10.722070312500051, 33.738916015624994],
                                [10.745214843750063, 33.88867187500006],
                                [11.017871093749989, 33.82333984374998],
                                [10.957617187500063, 33.72207031250005]
                            ]
                        ],
                        [
                            [
                                [11.278027343750068, 34.753808593749994],
                                [11.123632812500063, 34.68168945312496],
                                [11.254882812500057, 34.82031250000006],
                                [11.278027343750068, 34.753808593749994]
                            ]
                        ],
                        [
                            [
                                [10.274609375000011, 31.684960937499994],
                                [10.114941406250068, 31.46376953125005],
                                [10.216406250000063, 30.78320312500003],
                                [10.05976562500004, 30.58007812500003],
                                [9.932519531250051, 30.42534179687496],
                                [9.895019531250028, 30.387304687500034],
                                [9.51875, 30.229394531249994],
                                [9.224023437500023, 31.373681640624994],
                                [9.160253906250006, 31.621337890625],
                                [9.044042968750034, 32.072363281250034],
                                [8.333398437500051, 32.54360351562502],
                                [8.1125, 33.055322265624994],
                                [7.877246093750017, 33.172119140625],
                                [7.534375, 33.717919921874994],
                                [7.513867187500068, 34.080517578124955],
                                [8.24560546875, 34.73408203124998],
                                [8.276855468750057, 34.97949218749997],
                                [8.312109375000063, 35.084619140624994],
                                [8.394238281250011, 35.20385742187503],
                                [8.318066406250011, 35.654931640624994],
                                [8.348730468750063, 36.367968750000045],
                                [8.207617187500006, 36.518945312499994],
                                [8.601269531250068, 36.83393554687504],
                                [8.576562500000023, 36.93720703125001],
                                [9.687988281250057, 37.34038085937499],
                                [9.838476562500063, 37.30898437499999],
                                [9.830273437499983, 37.13535156250006],
                                [9.875585937499977, 37.25415039062503],
                                [10.196386718750063, 37.205859375000045],
                                [10.293261718750074, 36.781494140625],
                                [10.412304687499983, 36.73183593750002],
                                [11.053906250000068, 37.07250976562506],
                                [11.12666015625004, 36.874072265625045],
                                [10.476562500000028, 36.175146484375006],
                                [10.590820312500028, 35.88725585937499],
                                [11.00429687500008, 35.63383789062496],
                                [11.120117187500057, 35.24028320312499],
                                [10.69091796875, 34.67846679687503],
                                [10.118359375000068, 34.280078125000045],
                                [10.049023437500068, 34.056298828124994],
                                [10.305273437500034, 33.72827148437497],
                                [10.713183593750017, 33.68901367187496],
                                [10.722753906250006, 33.514404296875],
                                [10.958007812500057, 33.62631835937498],
                                [11.257421875000034, 33.30883789062506],
                                [11.202636718749972, 33.24921874999998],
                                [11.50458984375004, 33.181933593750045],
                                [11.502441406250028, 33.15556640624999],
                                [11.467187500000051, 32.96572265625005],
                                [11.459179687500011, 32.897363281249966],
                                [11.453906250000017, 32.64257812500003],
                                [11.533789062500034, 32.52495117187496],
                                [11.535937500000017, 32.47333984375001],
                                [11.504980468750034, 32.413671875000034],
                                [11.358007812500006, 32.34521484375003],
                                [11.168261718750074, 32.25673828125002],
                                [11.005175781250074, 32.17270507812506],
                                [10.826367187500068, 32.080664062500034],
                                [10.771582031250006, 32.02119140625001],
                                [10.60888671875, 31.929541015624977],
                                [10.47578125000004, 31.736035156249983],
                                [10.274609375000011, 31.684960937499994]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Tunisia",
                    childNum: 3
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [25.970019531250045, 40.136328125],
                                [25.6689453125, 40.13588867187502],
                                [25.918359375000023, 40.23798828125004],
                                [25.970019531250045, 40.136328125]
                            ]
                        ],
                        [
                            [
                                [43.43339843750002, 41.155517578125],
                                [43.43945312500003, 41.10712890625001],
                                [43.72265624999997, 40.71953124999999],
                                [43.56933593750003, 40.48237304687498],
                                [43.66621093750004, 40.12636718750002],
                                [44.28925781250004, 40.040380859375006],
                                [44.76826171875004, 39.70351562500005],
                                [44.81718750000002, 39.65043945312496],
                                [44.58710937500004, 39.76855468750006],
                                [44.3893554687501, 39.422119140625],
                                [44.02324218750002, 39.37744140625006],
                                [44.27167968750004, 38.83603515625006],
                                [44.2985351562501, 38.38627929687499],
                                [44.4499023437501, 38.33422851562506],
                                [44.21132812499999, 37.908056640625006],
                                [44.589941406250006, 37.710351562499966],
                                [44.574023437500074, 37.435400390625006],
                                [44.79414062500004, 37.290380859375034],
                                [44.76513671875003, 37.142431640625006],
                                [44.73095703124997, 37.16528320312503],
                                [44.66933593750005, 37.17358398437503],
                                [44.60595703124997, 37.176025390625],
                                [44.401953125, 37.05849609375002],
                                [44.325585937499994, 37.0107421875],
                                [44.28183593750006, 36.97802734374997],
                                [44.24570312500006, 36.983300781249994],
                                [44.20166015624997, 37.05180664062502],
                                [44.208398437499994, 37.20263671875],
                                [44.19179687499999, 37.249853515625034],
                                [44.15625, 37.28295898437503],
                                [44.11445312500004, 37.30185546875006],
                                [44.01318359375003, 37.313525390625045],
                                [43.83642578124997, 37.223535156249994],
                                [43.67578125000003, 37.227246093749955],
                                [43.09248046875004, 37.36738281249998],
                                [42.936621093750006, 37.32475585937502],
                                [42.77460937500004, 37.371875],
                                [42.74111328125005, 37.361914062500034],
                                [42.6354492187501, 37.249267578125],
                                [42.45585937500002, 37.128710937500045],
                                [42.358984375, 37.10859375000004],
                                [42.31289062499999, 37.22958984374998],
                                [42.26855468749997, 37.276562499999955],
                                [42.24755859375003, 37.28222656250006],
                                [42.20273437500006, 37.29726562499999],
                                [42.16787109375005, 37.28862304687502],
                                [42.059863281250074, 37.2060546875],
                                [41.886816406250006, 37.156396484374994],
                                [40.70566406250006, 37.09770507812502],
                                [40.4503906250001, 37.00888671875006],
                                [40.016406250000074, 36.82607421875002],
                                [39.68652343749997, 36.73862304687506],
                                [39.50146484374997, 36.702246093750034],
                                [39.35664062500004, 36.68159179687498],
                                [39.10839843749997, 36.68056640625005],
                                [38.90644531250004, 36.69467773437498],
                                [38.76660156249997, 36.69311523437503],
                                [38.19169921875002, 36.90156250000004],
                                [37.90664062500005, 36.79462890625001],
                                [37.7203125, 36.74370117187502],
                                [37.52353515625006, 36.678320312500034],
                                [37.436328125000074, 36.643310546875],
                                [37.327050781249994, 36.64658203125006],
                                [37.18740234375005, 36.655908203124994],
                                [37.066210937500074, 36.652636718750045],
                                [36.98535156250003, 36.70239257812506],
                                [36.94179687499999, 36.758398437500006],
                                [36.77656250000004, 36.79267578124998],
                                [36.65859375000005, 36.80253906250002],
                                [36.62841796875003, 36.777685546875034],
                                [36.596875, 36.70136718750001],
                                [36.546679687500074, 36.50634765625],
                                [36.5375, 36.457421874999966],
                                [36.63671874999997, 36.233984375],
                                [36.37539062499999, 36.171240234375034],
                                [36.347558593749994, 36.003515625000034],
                                [36.20195312500002, 35.93754882812502],
                                [36.15361328125002, 35.83388671875005],
                                [36.12734375, 35.831445312499994],
                                [35.967578125000074, 35.91005859375002],
                                [35.89267578125006, 35.91655273437502],
                                [35.81093750000005, 36.30986328125002],
                                [36.18847656250003, 36.65898437499999],
                                [36.048925781250006, 36.91059570312501],
                                [35.393164062500006, 36.57519531249997],
                                [34.70361328125003, 36.81679687499999],
                                [33.694726562499994, 36.18198242187498],
                                [32.794824218749994, 36.03588867187497],
                                [32.37773437500002, 36.18364257812496],
                                [32.02197265625003, 36.53530273437502],
                                [31.35253906249997, 36.80107421874999],
                                [30.64404296874997, 36.86567382812501],
                                [30.446093750000074, 36.269873046875034],
                                [29.6890625, 36.15668945312498],
                                [29.22363281249997, 36.32446289062497],
                                [28.96962890625008, 36.71533203125003],
                                [28.303710937500057, 36.81196289062498],
                                [28.01943359375005, 36.63447265624998],
                                [28.083984375000057, 36.75146484375],
                                [27.453906250000017, 36.712158203125],
                                [28.00537109375003, 36.83198242187498],
                                [28.242382812500068, 37.029052734375],
                                [27.262988281250045, 36.97656250000003],
                                [27.30019531250005, 37.12685546875002],
                                [27.53505859375005, 37.16386718750002],
                                [27.06796875, 37.65791015625004],
                                [27.224414062500074, 37.725439453125006],
                                [27.23242187500003, 37.978662109374994],
                                [26.29072265625001, 38.27719726562498],
                                [26.44130859375005, 38.64121093749998],
                                [26.67421875000008, 38.33574218750002],
                                [27.14423828125001, 38.45195312499996],
                                [26.906835937500034, 38.48173828124999],
                                [26.763671875, 38.709619140624966],
                                [27.013671875000057, 38.88686523437502],
                                [26.814941406250057, 38.96098632812502],
                                [26.853613281250034, 39.115625],
                                [26.68183593750004, 39.292236328125],
                                [26.89921874999999, 39.549658203125034],
                                [26.113085937500074, 39.46738281249998],
                                [26.101367187500074, 39.56894531249998],
                                [26.18134765625004, 39.99008789062498],
                                [26.738085937500045, 40.40024414062506],
                                [27.28457031250008, 40.45561523437496],
                                [27.4755859375, 40.319921875000034],
                                [27.72802734375, 40.32880859374998],
                                [27.84853515625005, 40.38173828125002],
                                [27.73183593750008, 40.48149414062499],
                                [27.87490234375008, 40.512939453125],
                                [27.989550781250074, 40.48945312500001],
                                [27.96259765625001, 40.369873046875],
                                [29.00712890624999, 40.389746093750034],
                                [28.787890625000017, 40.534033203125034],
                                [28.95800781250003, 40.63056640624998],
                                [29.849218750000063, 40.760107421875006],
                                [29.113867187499977, 40.93784179687506],
                                [29.14814453125004, 41.221044921875034],
                                [31.25488281249997, 41.10761718750001],
                                [31.45800781249997, 41.32001953125004],
                                [32.306445312500074, 41.72958984374998],
                                [33.38134765625003, 42.01757812500003],
                                [34.75048828124997, 41.95683593749999],
                                [35.006445312500006, 42.06328125000002],
                                [35.15488281250006, 42.02753906250001],
                                [35.12207031250003, 41.89111328125003],
                                [35.297753906249994, 41.72851562500003],
                                [35.558007812499994, 41.63403320312506],
                                [36.05175781249997, 41.68256835937498],
                                [36.40537109375006, 41.27460937500001],
                                [36.77773437499999, 41.36347656250001],
                                [37.066210937500074, 41.184423828125034],
                                [38.38105468750004, 40.92451171875001],
                                [39.426367187500006, 41.10644531250003],
                                [40.26523437500006, 40.96132812500005],
                                [41.08359375000006, 41.26118164062504],
                                [41.41435546875002, 41.42363281249999],
                                [41.510058593750074, 41.51748046875002],
                                [41.70175781250006, 41.471582031249994],
                                [41.77939453125006, 41.44052734374998],
                                [41.823535156250074, 41.432373046875],
                                [41.92578125000003, 41.49565429687502],
                                [42.46640625, 41.43984375000002],
                                [42.56738281249997, 41.55927734375001],
                                [42.590429687500006, 41.57070312500002],
                                [42.60683593750005, 41.57880859374998],
                                [42.682421875000074, 41.58574218749999],
                                [42.75410156250004, 41.57890625000002],
                                [42.787890625000074, 41.56372070312503],
                                [42.82167968750005, 41.49238281249998],
                                [42.90673828125003, 41.46684570312502],
                                [43.05712890625003, 41.35283203124996],
                                [43.149023437500006, 41.30712890624997],
                                [43.171289062499994, 41.28793945312498],
                                [43.14101562499999, 41.26484374999998],
                                [43.15283203124997, 41.23642578125006],
                                [43.20546875000005, 41.19916992187501],
                                [43.43339843750002, 41.155517578125]
                            ]
                        ],
                        [
                            [
                                [27.47480468750001, 41.946875],
                                [28.014453125000017, 41.96904296874999],
                                [28.197851562500063, 41.55449218750002],
                                [29.057226562500006, 41.22973632812503],
                                [28.95625, 41.00820312499999],
                                [28.172167968750074, 41.08071289062502],
                                [27.49941406250005, 40.97314453124997],
                                [27.258007812499983, 40.687353515625006],
                                [26.772070312500034, 40.498046875],
                                [26.202734375000034, 40.07539062500004],
                                [26.25380859375005, 40.31469726562503],
                                [26.792089843750034, 40.626611328124994],
                                [26.10546875000003, 40.61132812499997],
                                [26.03896484375008, 40.726757812499955],
                                [26.331054687500057, 40.954492187499994],
                                [26.330664062499977, 41.23876953125],
                                [26.62490234375008, 41.401757812499994],
                                [26.581347656250074, 41.60126953125004],
                                [26.320898437500034, 41.716552734375],
                                [26.3603515625, 41.80156249999999],
                                [26.51142578125004, 41.82636718749998],
                                [26.549707031250023, 41.896728515625],
                                [26.5796875, 41.947949218749955],
                                [26.615332031250063, 41.964892578125045],
                                [26.884863281250006, 41.99184570312502],
                                [26.96875, 42.02685546875006],
                                [27.01171875, 42.05864257812496],
                                [27.193359375000057, 42.07709960937498],
                                [27.24433593750004, 42.09326171875],
                                [27.294921875000057, 42.079541015624955],
                                [27.47480468750001, 41.946875]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Turkey",
                    childNum: 3
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [39.71132812499999, -7.977441406250023],
                                [39.602929687499994, -7.936132812499949],
                                [39.907128906249994, -7.649218750000031],
                                [39.71132812499999, -7.977441406250023]
                            ]
                        ],
                        [
                            [
                                [39.49648437499999, -6.174609375],
                                [39.573046875000074, -6.387402343750011],
                                [39.48095703124997, -6.45371093750002],
                                [39.18232421875004, -6.172558593750026],
                                [39.30898437499999, -5.721972656249974],
                                [39.49648437499999, -6.174609375]
                            ]
                        ],
                        [
                            [
                                [39.86503906250002, -4.906152343750037],
                                [39.74931640625002, -5.443847656249986],
                                [39.646777343750074, -5.368554687500009],
                                [39.6734375, -4.927050781250031],
                                [39.86503906250002, -4.906152343750037]
                            ]
                        ],
                        [
                            [
                                [33.90322265625005, -1.002050781250034],
                                [37.643847656250074, -3.045410156250028],
                                [37.608203125000074, -3.497070312500028],
                                [39.221777343750006, -4.692382812500014],
                                [38.80468750000003, -6.070117187500031],
                                [38.87402343750003, -6.33125],
                                [39.5460937500001, -7.024023437500034],
                                [39.288476562499994, -7.517871093750003],
                                [39.28701171875005, -7.787695312500006],
                                [39.4284179687501, -7.81279296874996],
                                [39.441015625, -8.011523437499946],
                                [39.304003906250074, -8.44384765625],
                                [39.451269531250006, -8.94296875],
                                [39.64130859375004, -9.19248046875002],
                                [39.72519531250006, -10.000488281249972],
                                [40.46357421875004, -10.464355468749972],
                                [39.98867187499999, -10.820800781250014],
                                [39.81708984375004, -10.912402343750031],
                                [38.9875, -11.167285156250003],
                                [38.49179687500006, -11.413281250000026],
                                [37.92021484375002, -11.294726562500031],
                                [37.72480468750004, -11.58066406250002],
                                [37.54169921875004, -11.675097656249974],
                                [37.37285156250002, -11.710449218749986],
                                [36.97890625000005, -11.566992187499977],
                                [36.30566406250003, -11.706347656249946],
                                [36.191308593749994, -11.670703124999974],
                                [36.17548828125004, -11.60927734374998],
                                [36.08222656250004, -11.537304687499969],
                                [35.91132812500004, -11.45468750000002],
                                [35.785449218750074, -11.452929687500017],
                                [35.63095703125006, -11.582031250000028],
                                [35.564355468749994, -11.602343749999989],
                                [35.418261718750074, -11.583203125],
                                [35.18261718750003, -11.574804687499977],
                                [34.95947265625003, -11.578125],
                                [34.93701171874997, -11.463476562500034],
                                [34.890625, -11.3935546875],
                                [34.77382812500005, -11.341699218750009],
                                [34.60791015624997, -11.08046875],
                                [34.66708984375006, -10.792480468750028],
                                [34.56992187500006, -10.241113281249966],
                                [34.32089843750006, -9.731542968749977],
                                [33.99560546875003, -9.495410156250003],
                                [33.88886718750004, -9.670117187499983],
                                [32.91992187500003, -9.407421875000026],
                                [32.75664062500002, -9.322265625],
                                [31.94257812500004, -9.05400390624996],
                                [31.91865234375004, -8.942187500000017],
                                [31.886132812499994, -8.921972656249977],
                                [31.81806640625004, -8.902246093749952],
                                [31.673632812500017, -8.908789062499963],
                                [31.55625, -8.80546875],
                                [31.44921874999997, -8.65390625],
                                [31.35058593750003, -8.607031250000034],
                                [31.07636718750004, -8.611914062499963],
                                [30.968359375000063, -8.550976562499983],
                                [30.89199218750005, -8.473730468749963],
                                [30.830664062500063, -8.385546875000031],
                                [30.720898437500097, -8.104394531250037],
                                [30.40673828125003, -7.460644531249983],
                                [30.313183593750097, -7.203710937499949],
                                [30.212695312500017, -7.037890625000017],
                                [30.10625, -6.915039062500028],
                                [29.961816406249994, -6.803125],
                                [29.798144531250017, -6.691894531249957],
                                [29.70966796875004, -6.61689453125004],
                                [29.590625, -6.394433593750023],
                                [29.540820312500017, -6.313867187500037],
                                [29.50625, -6.172070312500011],
                                [29.480078125, -6.025],
                                [29.490820312500063, -5.96542968750002],
                                [29.59638671875004, -5.775976562499963],
                                [29.60703125, -5.722656250000028],
                                [29.59414062500005, -5.650781250000037],
                                [29.542382812499994, -5.499804687500017],
                                [29.34277343749997, -4.983105468749997],
                                [29.32343750000004, -4.898828124999966],
                                [29.32568359374997, -4.835644531249969],
                                [29.404199218749994, -4.49667968750002],
                                [29.40322265625005, -4.449316406249963],
                                [29.71777343750003, -4.45585937499996],
                                [29.94726562499997, -4.307324218749983],
                                [30.4, -3.65390625],
                                [30.790234375000097, -3.274609375000011],
                                [30.811132812500006, -3.116406250000011],
                                [30.78027343750003, -2.984863281249957],
                                [30.70947265624997, -2.977246093749997],
                                [30.604296875000074, -2.935253906249969],
                                [30.515039062499994, -2.917578125],
                                [30.45556640625003, -2.893164062500006],
                                [30.433496093749994, -2.874511718750028],
                                [30.424023437500097, -2.82402343749996],
                                [30.473339843750097, -2.6943359375],
                                [30.42421875000005, -2.641601562500014],
                                [30.441992187500006, -2.613476562499969],
                                [30.53369140624997, -2.426269531250014],
                                [30.55361328125005, -2.400097656250011],
                                [30.593359375000063, -2.39677734374996],
                                [30.65664062500005, -2.373828124999989],
                                [30.71484375000003, -2.363476562500011],
                                [30.7625, -2.371679687499991],
                                [30.828710937500006, -2.338476562499977],
                                [30.85498046874997, -2.265429687500017],
                                [30.8765625, -2.143359375000017],
                                [30.864648437499994, -2.044042968749949],
                                [30.819140625000017, -1.967480468749983],
                                [30.812597656250006, -1.56308593750002],
                                [30.76220703124997, -1.458691406249983],
                                [30.710742187500074, -1.396777343749974],
                                [30.631933593750006, -1.36748046874996],
                                [30.508105468750074, -1.208203125000026],
                                [30.47021484374997, -1.13115234374996],
                                [30.47705078124997, -1.0830078125],
                                [30.509960937500097, -1.067285156249994],
                                [30.51992187499999, -1.0625],
                                [30.67275390625005, -1.051367187499949],
                                [30.741992187500017, -1.007519531249997],
                                [30.809179687500063, -.994921875],
                                [30.82363281250005, -.999023437499943],
                                [30.84472656250003, -1.002050781250034],
                                [32.371875, -1.002050781250034],
                                [33.90322265625005, -1.002050781250034]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Tanzania",
                    childNum: 4
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [30.50996093750001, -1.067285156250009],
                            [30.46992187500001, -1.066015625],
                            [30.41230468750001, -1.063085937500006],
                            [30.360253906250023, -1.074609375],
                            [29.930078125000023, -1.469921875000011],
                            [29.82539062500001, -1.335546875],
                            [29.576953125000017, -1.387890625000011],
                            [29.717675781250023, .098339843749997],
                            [29.934472656250023, .4990234375],
                            [29.94287109375, .819238281249994],
                            [31.252734375000017, 2.044580078124994],
                            [31.176367187500006, 2.270068359374989],
                            [30.728613281250006, 2.455371093749989],
                            [30.8466796875, 2.847021484374991],
                            [30.754003906250006, 3.041796874999989],
                            [30.90644531250001, 3.408935546875],
                            [30.83857421875001, 3.49072265625],
                            [31.15234375, 3.785595703124997],
                            [31.547167968750017, 3.677587890624991],
                            [31.79804687500001, 3.802636718749994],
                            [32.13593750000001, 3.519726562499997],
                            [32.33574218750002, 3.706201171874994],
                            [32.99726562500001, 3.880175781249989],
                            [33.489355468750006, 3.755078125],
                            [33.568457031250006, 3.81171875],
                            [33.74160156250002, 3.985253906249994],
                            [33.97607421875, 4.22021484375],
                            [34.13203125000001, 3.88916015625],
                            [34.18574218750001, 3.869775390624994],
                            [34.1650390625, 3.81298828125],
                            [34.26708984375, 3.733154296875],
                            [34.39287109375002, 3.691503906249991],
                            [34.43769531250001, 3.650585937499997],
                            [34.44179687500002, 3.60625],
                            [34.3994140625, 3.412695312499991],
                            [34.4072265625, 3.357519531249991],
                            [34.447851562500006, 3.163476562499994],
                            [34.90576171875, 2.4796875],
                            [34.88300781250001, 2.417919921874997],
                            [34.96406250000001, 2.062402343749994],
                            [34.9775390625, 1.861914062499991],
                            [34.97646484375002, 1.719628906249994],
                            [34.79863281250002, 1.24453125],
                            [34.48173828125002, 1.042138671874994],
                            [34.41083984375001, .867285156249991],
                            [34.16093750000002, .605175781249997],
                            [33.94316406250002, .173779296874997],
                            [33.90322265625002, -1.002050781250006],
                            [32.371875, -1.002050781250006],
                            [30.8447265625, -1.002050781250006],
                            [30.823632812500023, -.9990234375],
                            [30.809179687500006, -.994921875],
                            [30.741992187500017, -1.007519531250011],
                            [30.672753906250023, -1.051367187500006],
                            [30.598730468750006, -1.069726562500009],
                            [30.519921875000023, -1.0625],
                            [30.50996093750001, -1.067285156250009]
                        ]
                    ]
                },
                properties: {
                    name: "Uganda",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [32.01220703124997, 46.20390624999999],
                                [32.15009765625004, 46.1546875],
                                [31.56386718750005, 46.25776367187504],
                                [31.50878906250003, 46.373144531250006],
                                [32.01220703124997, 46.20390624999999]
                            ]
                        ],
                        [
                            [
                                [38.21435546875003, 47.091455078124966],
                                [37.54335937499999, 47.07456054687498],
                                [36.794824218749994, 46.71440429687499],
                                [36.55878906250004, 46.76269531250006],
                                [35.82714843749997, 46.62431640625002],
                                [35.01455078125005, 46.10600585937502],
                                [35.280175781249994, 46.27949218750001],
                                [35.23037109375005, 46.440625],
                                [34.84960937500003, 46.189892578124955],
                                [35.02285156250005, 45.70097656250002],
                                [35.45751953124997, 45.316308593749994],
                                [36.170507812500006, 45.453076171874955],
                                [36.575, 45.3935546875],
                                [36.39335937500002, 45.06538085937501],
                                [35.87011718750003, 45.005322265624955],
                                [35.472558593749994, 45.098486328125006],
                                [35.08769531250002, 44.802636718749966],
                                [34.46992187500004, 44.7216796875],
                                [33.909960937500074, 44.387597656249966],
                                [33.45068359374997, 44.553662109374955],
                                [33.55517578125003, 45.09765625000003],
                                [32.5080078125001, 45.40380859375006],
                                [33.664843750000074, 45.94707031249996],
                                [33.59414062500005, 46.09624023437499],
                                [33.42988281250004, 46.05761718750003],
                                [33.20224609375006, 46.17573242187501],
                                [32.47675781250004, 46.08369140625001],
                                [31.83125, 46.28168945312501],
                                [32.00849609375004, 46.42998046875002],
                                [31.554882812500097, 46.554296875000034],
                                [32.36132812499997, 46.474951171875034],
                                [32.578027343749994, 46.615625],
                                [32.04433593750005, 46.642480468749966],
                                [31.75917968750005, 47.21284179687501],
                                [31.872851562500017, 46.649755859375034],
                                [31.532128906249994, 46.66474609374998],
                                [31.56337890625005, 46.77729492187501],
                                [31.402929687500063, 46.62880859375002],
                                [30.796289062499994, 46.55200195312503],
                                [30.219042968750074, 45.866748046875045],
                                [29.62841796875003, 45.722460937500045],
                                [29.705859375000074, 45.25991210937505],
                                [29.567675781250074, 45.37080078124998],
                                [29.40371093750005, 45.419677734375],
                                [29.22353515625005, 45.402929687500034],
                                [28.894335937500017, 45.28994140625002],
                                [28.78173828125, 45.30986328125002],
                                [28.76660156250003, 45.28623046874998],
                                [28.78828125000001, 45.240966796875],
                                [28.451269531250006, 45.292187499999955],
                                [28.317675781250045, 45.347119140624955],
                                [28.2125, 45.45043945312506],
                                [28.26484375000004, 45.48388671875003],
                                [28.310351562500074, 45.49858398437499],
                                [28.499023437500057, 45.517724609374994],
                                [28.513769531250034, 45.57241210937502],
                                [28.49160156250005, 45.66577148437503],
                                [28.562304687500074, 45.73579101562501],
                                [28.667578125, 45.79384765625002],
                                [28.729296875000074, 45.852001953124955],
                                [28.73876953125003, 45.937158203124994],
                                [28.84951171875005, 45.97866210937502],
                                [28.94775390624997, 46.049951171874966],
                                [28.971875, 46.12763671874998],
                                [29.00625, 46.17646484374998],
                                [28.94375, 46.28842773437506],
                                [28.930566406250023, 46.36225585937501],
                                [28.92744140625001, 46.42412109374999],
                                [28.958398437500023, 46.45849609374997],
                                [29.146289062500017, 46.52690429687496],
                                [29.186230468750068, 46.52397460937499],
                                [29.20078125, 46.504980468750034],
                                [29.20458984374997, 46.37934570312501],
                                [29.223828125000097, 46.37695312499997],
                                [29.458789062500017, 46.453759765624994],
                                [29.83789062499997, 46.35053710937501],
                                [29.878027343750063, 46.360205078125034],
                                [30.07568359375003, 46.377832031249966],
                                [30.131054687500097, 46.42309570312506],
                                [29.92431640624997, 46.53886718750002],
                                [29.934765625000097, 46.625],
                                [29.942480468750063, 46.72377929687502],
                                [29.918066406250063, 46.78242187499998],
                                [29.877832031249994, 46.828906250000045],
                                [29.57197265625004, 46.96401367187502],
                                [29.455664062500006, 47.292626953124994],
                                [29.134863281250006, 47.48969726562501],
                                [29.125390625000023, 47.96455078125001],
                                [28.42304687500001, 48.146875],
                                [28.34052734375001, 48.144433593749994],
                                [27.54921875000008, 48.47773437500004],
                                [27.22851562500003, 48.37143554687506],
                                [26.90058593750001, 48.37192382812506],
                                [26.847070312500023, 48.387158203124955],
                                [26.640429687500045, 48.29414062500001],
                                [26.618945312500017, 48.25986328125006],
                                [26.4423828125, 48.22998046875],
                                [26.162695312500063, 47.992529296875034],
                                [25.90869140625, 47.96757812500002],
                                [25.689257812500045, 47.93247070312506],
                                [25.46425781250005, 47.910791015624994],
                                [24.979101562500063, 47.72412109374997],
                                [24.578906250000074, 47.93105468750005],
                                [23.628710937500017, 47.995849609375],
                                [23.40820312500003, 47.98999023437506],
                                [23.20263671875, 48.084521484375045],
                                [23.13945312499999, 48.08740234375],
                                [22.87666015625001, 47.94726562500006],
                                [22.769140625000063, 48.109619140625],
                                [22.582421875000023, 48.134033203125],
                                [22.253710937500017, 48.407373046874994],
                                [22.131835937500057, 48.40532226562502],
                                [22.142871093750017, 48.568505859374966],
                                [22.295214843750045, 48.68583984374999],
                                [22.389453125000045, 48.87348632812501],
                                [22.52412109375004, 49.03139648437502],
                                [22.538671875, 49.07270507812501],
                                [22.847070312500023, 49.08125],
                                [22.705664062500006, 49.17119140624999],
                                [22.6494140625, 49.53901367187498],
                                [22.706152343750006, 49.60620117187497],
                                [23.03632812500004, 49.899072265624966],
                                [23.711718750000045, 50.377343749999966],
                                [23.97265625, 50.410058593749966],
                                [24.089941406250006, 50.53046874999998],
                                [24.0947265625, 50.617041015625034],
                                [23.9970703125, 50.809375],
                                [24.095800781250063, 50.87275390625001],
                                [23.664453125000023, 51.31005859375],
                                [23.61376953125, 51.525390625],
                                [23.706835937500045, 51.64130859374998],
                                [23.79169921875001, 51.63710937500002],
                                [23.864257812500057, 51.62397460937501],
                                [23.951171875, 51.58505859374998],
                                [23.978320312500017, 51.59130859375003],
                                [24.12685546875008, 51.664648437500034],
                                [24.280078125000017, 51.77470703124999],
                                [24.361914062500006, 51.86752929687498],
                                [25.785742187500006, 51.923828125],
                                [26.77343750000003, 51.77070312499998],
                                [26.952832031249983, 51.754003906250034],
                                [27.074121093750023, 51.760839843750006],
                                [27.14199218750008, 51.75205078124998],
                                [27.29628906250008, 51.59741210937503],
                                [27.689746093750017, 51.572412109374994],
                                [27.7, 51.47797851562501],
                                [27.85859375000004, 51.59238281250006],
                                [28.532031250000017, 51.56245117187501],
                                [28.59902343750008, 51.54262695312505],
                                [28.647753906250074, 51.45654296875],
                                [28.690234375000017, 51.43886718750005],
                                [28.73125, 51.43339843749999],
                                [28.84951171875005, 51.540185546874994],
                                [28.927539062500045, 51.56215820312502],
                                [28.97773437500004, 51.57177734375003],
                                [29.01308593750005, 51.59892578124996],
                                [29.06074218750001, 51.625439453124955],
                                [29.102050781250057, 51.627539062500034],
                                [29.346484375000017, 51.38256835937503],
                                [30.160742187500006, 51.477880859375006],
                                [30.449511718750017, 51.274316406249994],
                                [30.63251953125004, 51.35541992187501],
                                [30.61171875000005, 51.406347656250006],
                                [30.602343750000017, 51.47124023437499],
                                [30.56074218750004, 51.531494140625],
                                [30.533007812500017, 51.596337890624966],
                                [30.583886718749994, 51.68896484375003],
                                [30.667285156250017, 51.81411132812502],
                                [30.755273437499994, 51.89516601562502],
                                [30.84570312500003, 51.95307617187501],
                                [30.980664062500097, 52.04619140624996],
                                [31.217968750000097, 52.05024414062498],
                                [31.345996093750074, 52.10537109375002],
                                [31.57373046875003, 52.108105468749955],
                                [31.763378906250097, 52.10107421875003],
                                [32.12226562500004, 52.05058593749996],
                                [32.435449218749994, 52.307226562500034],
                                [33.735253906249994, 52.344775390625045],
                                [34.397851562499994, 51.780419921874994],
                                [34.12109375000003, 51.67915039062498],
                                [34.21386718750003, 51.25537109375006],
                                [35.0640625, 51.203417968750045],
                                [35.31191406250005, 51.043896484374955],
                                [35.59111328125002, 50.36875],
                                [36.1164062500001, 50.408544921875006],
                                [36.619433593750074, 50.209228515625],
                                [37.42285156249997, 50.411474609375006],
                                [38.046875, 49.92001953125006],
                                [38.258593750000074, 50.05234375],
                                [38.91835937499999, 49.82470703125],
                                [39.17480468750003, 49.85595703124997],
                                [39.780566406250074, 49.57202148437503],
                                [40.080664062500006, 49.576855468749955],
                                [40.10878906250005, 49.251562500000034],
                                [39.68652343749997, 49.007910156250034],
                                [40.00361328125004, 48.82207031250002],
                                [39.792871093749994, 48.807714843750034],
                                [39.6447265625001, 48.591210937499966],
                                [39.8356445312501, 48.54277343749996],
                                [39.95791015625005, 48.268896484375034],
                                [39.77871093750005, 47.88754882812506],
                                [38.90029296875005, 47.85512695312502],
                                [38.36884765625004, 47.609960937500006],
                                [38.21435546875003, 47.091455078124966]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Ukraine",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-57.81059570312499, -30.85859375000001],
                            [-57.872509765625, -30.59101562500001],
                            [-57.831201171874994, -30.495214843750006],
                            [-57.71269531249999, -30.38447265625001],
                            [-57.65087890625, -30.295019531250006],
                            [-57.645751953125, -30.226953125],
                            [-57.60888671875, -30.187792968750003],
                            [-57.55229492187499, -30.26123046875],
                            [-57.21445312499999, -30.28339843750001],
                            [-57.186914062499994, -30.26484375000001],
                            [-57.120507812499994, -30.14443359375001],
                            [-56.83271484375, -30.107226562500003],
                            [-56.4072265625, -30.44746093750001],
                            [-55.998974609375, -30.837207031250003],
                            [-56.018457031249994, -30.99189453125001],
                            [-56.00468749999999, -31.079199218750006],
                            [-55.873681640624994, -31.069628906250003],
                            [-55.6271484375, -30.85810546875001],
                            [-55.60302734375, -30.85078125000001],
                            [-55.55732421875, -30.8759765625],
                            [-55.17353515625, -31.279589843750003],
                            [-55.09116210937499, -31.31396484375],
                            [-55.036035156249994, -31.27900390625001],
                            [-54.587646484375, -31.48515625],
                            [-54.22055664062499, -31.85517578125001],
                            [-53.76171875, -32.05683593750001],
                            [-53.601708984374994, -32.40302734375001],
                            [-53.12558593749999, -32.73671875],
                            [-53.2140625, -32.82109375],
                            [-53.31010742187499, -32.92705078125],
                            [-53.39521484375, -33.010351562500006],
                            [-53.482861328125, -33.06855468750001],
                            [-53.511865234374994, -33.10869140625],
                            [-53.53134765624999, -33.1708984375],
                            [-53.53134765624999, -33.65546875000001],
                            [-53.37060546875, -33.7421875],
                            [-53.419580078124994, -33.77919921875001],
                            [-53.47246093749999, -33.84931640625001],
                            [-53.53452148437499, -34.01748046875001],
                            [-53.742919921875, -34.24951171875],
                            [-53.785302734374994, -34.38037109375],
                            [-54.16855468749999, -34.670703125],
                            [-54.902294921875, -34.93281250000001],
                            [-55.67314453124999, -34.77568359375],
                            [-56.249951171875, -34.90126953125001],
                            [-57.17070312499999, -34.45234375000001],
                            [-57.8291015625, -34.47734375],
                            [-58.40019531249999, -33.91240234375],
                            [-58.363525390625, -33.18232421875001],
                            [-58.08232421874999, -32.893652343750006],
                            [-58.12958984375, -32.75722656250001],
                            [-58.16220703124999, -32.566503906250006],
                            [-58.201171875, -32.4716796875],
                            [-58.123046875, -32.321875],
                            [-58.11972656249999, -32.24892578125001],
                            [-58.164794921875, -32.18486328125],
                            [-58.177001953125, -32.11904296875001],
                            [-58.15634765624999, -32.0515625],
                            [-58.160400390625, -31.98652343750001],
                            [-58.18901367187499, -31.92421875],
                            [-58.16748046875, -31.87265625],
                            [-58.04233398437499, -31.76923828125001],
                            [-58.006982421874994, -31.68496093750001],
                            [-58.053857421874994, -31.494921875],
                            [-58.0333984375, -31.416601562500006],
                            [-57.89335937499999, -31.1953125],
                            [-57.868408203125, -31.10439453125001],
                            [-57.88632812499999, -30.93740234375001],
                            [-57.81059570312499, -30.85859375000001]
                        ]
                    ]
                },
                properties: {
                    name: "Uruguay",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-155.58134765624996, 19.012011718750017],
                                [-155.88129882812495, 19.07050781250001],
                                [-156.04868164062498, 19.749951171874983],
                                [-155.82031249999997, 20.01416015624997],
                                [-155.83164062499998, 20.27583007812501],
                                [-155.198779296875, 19.99438476562503],
                                [-154.80419921875, 19.524462890625045],
                                [-155.58134765624996, 19.012011718750017]
                            ]
                        ],
                        [
                            [
                                [-156.84960937499997, 20.772656249999955],
                                [-156.97338867187497, 20.757519531249983],
                                [-157.0505859375, 20.912451171875034],
                                [-156.88056640624995, 20.904833984375074],
                                [-156.84960937499997, 20.772656249999955]
                            ]
                        ],
                        [
                            [
                                [-156.48681640624994, 20.93256835937504],
                                [-156.27753906250004, 20.951269531250034],
                                [-155.98984374999998, 20.75712890624999],
                                [-156.40878906249998, 20.60517578125004],
                                [-156.480078125, 20.80122070312501],
                                [-156.69775390625003, 20.949072265625034],
                                [-156.58540039062495, 21.034326171874994],
                                [-156.48681640624994, 20.93256835937504]
                            ]
                        ],
                        [
                            [
                                [-157.21362304687497, 21.215380859375017],
                                [-156.71215820312506, 21.155078125000074],
                                [-156.85986328125, 21.05634765625004],
                                [-157.29033203124996, 21.112597656250017],
                                [-157.21362304687497, 21.215380859375017]
                            ]
                        ],
                        [
                            [
                                [-157.79936523437502, 21.456640625000034],
                                [-157.63540039062502, 21.30761718749997],
                                [-158.11035156249994, 21.318603515625],
                                [-158.27314453125, 21.585253906250045],
                                [-157.9625, 21.701367187499983],
                                [-157.79936523437502, 21.456640625000034]
                            ]
                        ],
                        [
                            [
                                [-159.37275390625, 21.93237304687497],
                                [-159.60883789062495, 21.909521484375034],
                                [-159.78916015625003, 22.041796875000074],
                                [-159.57919921874998, 22.22314453124997],
                                [-159.35205078124997, 22.219580078125034],
                                [-159.37275390625, 21.93237304687497]
                            ]
                        ],
                        [
                            [
                                [-81.04418945312503, 24.716796875000057],
                                [-81.137353515625, 24.710498046875017],
                                [-80.93046875, 24.75947265625004],
                                [-81.04418945312503, 24.716796875000057]
                            ]
                        ],
                        [
                            [
                                [-80.3818359375, 25.142285156249955],
                                [-80.58056640624997, 24.954248046875023],
                                [-80.25708007812497, 25.34760742187504],
                                [-80.3818359375, 25.142285156249955]
                            ]
                        ],
                        [
                            [
                                [-97.17070312499996, 26.159375],
                                [-97.40209960937494, 26.820507812499983],
                                [-97.38598632812494, 27.19648437500004],
                                [-97.17070312499996, 26.159375]
                            ]
                        ],
                        [
                            [
                                [-80.18676757812497, 27.278417968750034],
                                [-80.17050781250003, 27.20478515625004],
                                [-80.43691406249994, 27.850537109374955],
                                [-80.18676757812497, 27.278417968750034]
                            ]
                        ],
                        [
                            [
                                [-91.793701171875, 29.50073242187497],
                                [-92.00664062499996, 29.61030273437501],
                                [-91.875244140625, 29.640966796875034],
                                [-91.793701171875, 29.50073242187497]
                            ]
                        ],
                        [
                            [
                                [-84.90791015624998, 29.642626953125017],
                                [-85.11674804687499, 29.63281249999997],
                                [-84.737158203125, 29.732421875],
                                [-84.90791015624998, 29.642626953125017]
                            ]
                        ],
                        [
                            [
                                [-89.22397460937498, 30.084082031249977],
                                [-89.34199218749995, 30.062841796875006],
                                [-89.18466796874995, 30.168652343749983],
                                [-89.22397460937498, 30.084082031249977]
                            ]
                        ],
                        [
                            [
                                [-118.34794921875002, 33.3857421875],
                                [-118.29746093750003, 33.312109375],
                                [-118.44628906249997, 33.317089843749955],
                                [-118.56943359375002, 33.46416015624999],
                                [-118.34794921875002, 33.3857421875]
                            ]
                        ],
                        [
                            [
                                [-120.04355468749995, 33.918847656249994],
                                [-120.25190429687494, 34.01386718749998],
                                [-120.07182617187493, 34.026513671874966],
                                [-120.04355468749995, 33.918847656249994]
                            ]
                        ],
                        [
                            [
                                [-119.88237304687497, 34.07968749999998],
                                [-119.54926757812497, 34.02817382812506],
                                [-119.80957031249997, 33.9677734375],
                                [-119.88237304687497, 34.07968749999998]
                            ]
                        ],
                        [
                            [
                                [-75.54414062499995, 35.240087890625034],
                                [-75.69008789062502, 35.221582031249994],
                                [-75.53637695312497, 35.27861328124999],
                                [-75.50351562500003, 35.769140625],
                                [-75.46474609374994, 35.448632812499966],
                                [-75.54414062499995, 35.240087890625034]
                            ]
                        ],
                        [
                            [
                                [-74.13320312500002, 39.680761718750034],
                                [-74.25048828125, 39.529394531250006],
                                [-74.10673828124996, 39.74643554687498],
                                [-74.13320312500002, 39.680761718750034]
                            ]
                        ],
                        [
                            [
                                [-72.50976562500003, 40.98603515625001],
                                [-72.58085937499996, 40.92133789062498],
                                [-71.90322265625, 41.06069335937505],
                                [-73.19428710937495, 40.654199218749994],
                                [-74.01489257812497, 40.581201171874966],
                                [-73.87924804687498, 40.79165039062502],
                                [-73.573828125, 40.91962890624998],
                                [-72.62509765624998, 40.99184570312505],
                                [-72.27412109374998, 41.15302734375001],
                                [-72.50976562500003, 40.98603515625001]
                            ]
                        ],
                        [
                            [
                                [-69.9779296875, 41.26557617187504],
                                [-70.23305664062502, 41.28632812500001],
                                [-70.04121093750001, 41.3974609375],
                                [-69.9779296875, 41.26557617187504]
                            ]
                        ],
                        [
                            [
                                [-70.50991210937502, 41.376318359375034],
                                [-70.82919921874995, 41.35898437500006],
                                [-70.61601562499996, 41.45722656250001],
                                [-70.50991210937502, 41.376318359375034]
                            ]
                        ],
                        [
                            [
                                [-71.24140625000001, 41.49194335937497],
                                [-71.34624023437496, 41.469384765624994],
                                [-71.23203124999995, 41.654296875],
                                [-71.24140625000001, 41.49194335937497]
                            ]
                        ],
                        [
                            [
                                [-68.18725585937497, 44.33247070312501],
                                [-68.41171875000003, 44.294335937499966],
                                [-68.29941406249998, 44.456494140624955],
                                [-68.18725585937497, 44.33247070312501]
                            ]
                        ],
                        [
                            [
                                [-122.394140625, 47.39526367187503],
                                [-122.50991210937497, 47.358007812500006],
                                [-122.486474609375, 47.48876953125],
                                [-122.394140625, 47.39526367187503]
                            ]
                        ],
                        [
                            [
                                [-122.57275390624999, 48.15664062499999],
                                [-122.38315429687499, 47.923193359375034],
                                [-122.74150390624999, 48.22529296875004],
                                [-122.62861328125, 48.38422851562498],
                                [-122.54243164062503, 48.29399414062499],
                                [-122.69702148437499, 48.228662109374994],
                                [-122.57275390624999, 48.15664062499999]
                            ]
                        ],
                        [
                            [
                                [-94.80346679687497, 49.0029296875],
                                [-94.71279296874997, 48.863427734374994],
                                [-94.62089843749999, 48.74262695312501],
                                [-93.85161132812496, 48.607275390625034],
                                [-93.70771484374995, 48.52543945312499],
                                [-93.37788085937498, 48.61655273437498],
                                [-93.25795898437497, 48.62885742187501],
                                [-92.83671875, 48.567773437499994],
                                [-92.50058593749995, 48.43535156250002],
                                [-92.41459960937493, 48.276611328125],
                                [-92.3484375, 48.276611328125],
                                [-92.00517578125002, 48.301855468750006],
                                [-91.38720703124997, 48.05854492187498],
                                [-91.04345703125003, 48.19370117187498],
                                [-90.84033203125003, 48.20053710937506],
                                [-90.79731445312495, 48.13105468750001],
                                [-89.4556640625, 47.996240234374994],
                                [-88.37817382812497, 48.30307617187498],
                                [-87.74389648437497, 48.06054687500003],
                                [-87.20800781249997, 47.848486328125006],
                                [-86.67216796874996, 47.636425781249955],
                                [-85.65224609375, 47.21997070312503],
                                [-85.07006835937497, 46.97993164062498],
                                [-84.87597656249994, 46.89990234375003],
                                [-84.66577148437503, 46.54326171875002],
                                [-84.44047851562496, 46.49814453125006],
                                [-84.12319335937497, 46.50292968749997],
                                [-83.97778320312503, 46.08491210937498],
                                [-83.61596679687503, 46.116845703124994],
                                [-83.46948242187503, 45.99467773437499],
                                [-83.59267578125, 45.81713867187506],
                                [-82.91933593749994, 45.51796875000002],
                                [-82.55107421874996, 45.34736328125001],
                                [-82.48505859374993, 45.08374023437503],
                                [-82.137841796875, 43.570898437500034],
                                [-82.19038085937495, 43.47407226562501],
                                [-82.54531249999997, 42.62470703124998],
                                [-83.10952148437497, 42.25068359375001],
                                [-83.141943359375, 41.97587890624996],
                                [-82.69003906249995, 41.675195312499994],
                                [-82.43906249999998, 41.67485351562502],
                                [-81.97416992187496, 41.88872070312499],
                                [-81.50732421874997, 42.10346679687504],
                                [-81.02822265624997, 42.247167968750006],
                                [-80.24755859375, 42.36601562499996],
                                [-79.17373046875, 42.74853515625],
                                [-78.91508789062496, 42.90913085937504],
                                [-78.98076171874993, 42.98061523437502],
                                [-79.02617187499996, 43.01733398437506],
                                [-79.066064453125, 43.10610351562502],
                                [-79.171875, 43.466552734375],
                                [-79.00249023437502, 43.52714843749999],
                                [-78.845556640625, 43.58334960937498],
                                [-78.72041015625001, 43.62495117187501],
                                [-78.45825195312497, 43.63149414062502],
                                [-77.596533203125, 43.62861328124998],
                                [-76.819970703125, 43.62880859375002],
                                [-76.18579101562503, 44.24223632812502],
                                [-75.81933593749997, 44.468017578125],
                                [-75.40126953124997, 44.77226562499999],
                                [-74.99614257812496, 44.970117187499966],
                                [-74.76245117187494, 44.99907226562502],
                                [-74.663232421875, 45.00390625000003],
                                [-71.51752929687495, 45.00756835937497],
                                [-71.327294921875, 45.29008789062496],
                                [-70.86503906249999, 45.27070312500001],
                                [-70.296240234375, 45.90610351562506],
                                [-70.00771484375002, 46.70893554687501],
                                [-69.24287109374998, 47.46298828124998],
                                [-69.0501953125, 47.426611328125034],
                                [-68.93720703124998, 47.21123046875002],
                                [-68.23549804687502, 47.34594726562503],
                                [-67.806787109375, 47.08281249999999],
                                [-67.80224609374994, 45.7275390625],
                                [-67.43266601562496, 45.603125],
                                [-67.366943359375, 45.17377929687498],
                                [-67.12485351562498, 45.16943359375],
                                [-66.98701171874995, 44.82768554687502],
                                [-67.191259765625, 44.67558593750002],
                                [-67.83906249999998, 44.576269531250034],
                                [-68.056640625, 44.38432617187502],
                                [-68.15205078124998, 44.50200195312499],
                                [-68.45058593749997, 44.50761718749999],
                                [-68.53251953124996, 44.25864257812498],
                                [-68.81191406249994, 44.33935546875],
                                [-68.76269531249994, 44.57075195312498],
                                [-69.22607421875003, 43.98647460937505],
                                [-69.52075195312503, 43.89736328125002],
                                [-69.55668945312496, 43.982763671875006],
                                [-69.62392578125, 43.88061523437497],
                                [-69.65288085937493, 43.99389648437506],
                                [-69.808349609375, 43.772314453125034],
                                [-69.965234375, 43.855078125],
                                [-70.17880859374998, 43.76635742187506],
                                [-70.73310546875001, 43.07001953125004],
                                [-70.82905273437493, 42.82534179687502],
                                [-70.61293945312497, 42.623242187499955],
                                [-71.04619140624993, 42.331103515625045],
                                [-70.73828125, 42.228857421875006],
                                [-70.42666015625002, 41.75727539062501],
                                [-70.00141601562498, 41.82617187500003],
                                [-70.24106445312495, 42.09121093750002],
                                [-70.10893554687496, 42.07832031249998],
                                [-69.97788085937498, 41.961279296875006],
                                [-69.94863281249997, 41.67714843750005],
                                [-70.65712890625, 41.53422851562496],
                                [-70.70112304687498, 41.71484375],
                                [-71.1685546875, 41.489404296874994],
                                [-71.14873046874996, 41.74570312499998],
                                [-71.27109375, 41.68125],
                                [-71.39013671875003, 41.79531250000005],
                                [-71.52285156249997, 41.378955078125045],
                                [-72.92470703125002, 41.28515625000003],
                                [-73.98710937499999, 40.751367187499994],
                                [-73.87197265625, 41.05517578124997],
                                [-73.96992187499995, 41.24970703125001],
                                [-73.92719726562495, 40.914257812499955],
                                [-74.26420898437496, 40.52861328124999],
                                [-73.972265625, 40.40034179687498],
                                [-74.079931640625, 39.78813476562496],
                                [-74.06459960937497, 39.99311523437498],
                                [-74.79448242187499, 39.00190429687501],
                                [-74.95429687499995, 38.949951171875],
                                [-74.89702148437502, 39.14545898437504],
                                [-75.52421874999999, 39.49018554687501],
                                [-75.421875, 39.78969726562502],
                                [-75.07416992187495, 39.98349609375006],
                                [-75.40063476562503, 39.83159179687502],
                                [-75.58759765625001, 39.64077148437505],
                                [-75.3921875, 39.09277343750006],
                                [-75.08867187499999, 38.777539062499955],
                                [-75.18710937499995, 38.59111328124999],
                                [-75.03876953124993, 38.426367187500006],
                                [-75.934375, 37.15190429687496],
                                [-75.97504882812498, 37.3984375],
                                [-75.65927734374995, 37.953955078125034],
                                [-75.850830078125, 37.971582031249994],
                                [-75.85869140624999, 38.36206054687503],
                                [-76.05122070312495, 38.27954101562503],
                                [-76.2646484375, 38.436425781249994],
                                [-76.26416015625, 38.599951171875006],
                                [-76.016943359375, 38.62509765624998],
                                [-76.21298828124998, 38.75830078125003],
                                [-76.34116210937498, 38.70966796874998],
                                [-76.16816406249998, 38.85273437499998],
                                [-76.32958984375, 38.95278320312505],
                                [-76.13520507812493, 39.082128906250006],
                                [-76.23569335937498, 39.19160156250001],
                                [-76.153125, 39.315039062500034],
                                [-75.87597656249997, 39.3759765625],
                                [-76.003125, 39.41083984375001],
                                [-75.87294921874997, 39.510888671874966],
                                [-75.95893554687498, 39.58505859374998],
                                [-76.2763671875, 39.32275390625],
                                [-76.330810546875, 39.40390625],
                                [-76.42089843749997, 39.225],
                                [-76.57041015624995, 39.26933593749996],
                                [-76.42758789062498, 39.12602539062499],
                                [-76.55854492187493, 39.065234375000045],
                                [-76.39409179687502, 38.368994140625034],
                                [-76.67734374999998, 38.611962890624966],
                                [-76.66855468749998, 38.5375],
                                [-76.34116210937498, 38.08701171875006],
                                [-76.86811523437495, 38.39028320312502],
                                [-76.88974609375, 38.292089843750006],
                                [-77.00117187499995, 38.44526367187504],
                                [-77.23251953125, 38.40771484375003],
                                [-77.03037109374995, 38.88925781249998],
                                [-77.26040039062502, 38.6],
                                [-77.27324218749996, 38.35175781249998],
                                [-77.04677734375002, 38.356689453125],
                                [-76.26425781250003, 37.89355468749997],
                                [-76.34414062499997, 37.675683593749994],
                                [-76.49248046874999, 37.682226562500006],
                                [-77.11108398437497, 38.165673828124994],
                                [-76.54946289062494, 37.66914062500001],
                                [-76.30556640625, 37.57148437500001],
                                [-76.26347656249996, 37.35703125],
                                [-76.40097656249998, 37.386132812499994],
                                [-76.45390624999993, 37.27353515625006],
                                [-76.75771484375002, 37.50541992187496],
                                [-76.28330078125, 37.05268554687501],
                                [-76.40087890624997, 36.991308593750034],
                                [-76.63090820312493, 37.22172851562499],
                                [-77.25087890624994, 37.329199218750034],
                                [-76.671875, 37.172949218750006],
                                [-76.48784179687502, 36.89702148437499],
                                [-75.99941406249997, 36.91264648437499],
                                [-75.53417968749997, 35.81909179687506],
                                [-75.94648437499995, 36.65908203125002],
                                [-75.99277343749995, 36.47377929687502],
                                [-75.82006835937494, 36.11284179687502],
                                [-76.14785156250002, 36.279296875],
                                [-76.15, 36.14575195312497],
                                [-76.27060546874998, 36.18989257812501],
                                [-76.22739257812498, 36.11601562499996],
                                [-76.559375, 36.015332031249955],
                                [-76.733642578125, 36.229150390624994],
                                [-76.726220703125, 35.957617187500034],
                                [-76.06977539062501, 35.970312500000034],
                                [-76.08359374999998, 35.69052734375006],
                                [-75.85390625, 35.96015625000001],
                                [-75.75883789062499, 35.84326171875],
                                [-75.77392578124997, 35.64697265624997],
                                [-76.17382812499997, 35.354150390624994],
                                [-76.489501953125, 35.397021484375045],
                                [-76.57719726562502, 35.53232421874998],
                                [-76.74140624999998, 35.431494140625034],
                                [-77.03999023437495, 35.527392578125045],
                                [-76.51293945312497, 35.270410156249994],
                                [-76.77915039062503, 34.990332031250034],
                                [-77.07026367187501, 35.154638671875034],
                                [-76.97495117187503, 35.025195312500045],
                                [-76.74497070312498, 34.94096679687502],
                                [-76.45673828124998, 34.989355468750034],
                                [-76.36220703125, 34.9365234375],
                                [-76.43979492187498, 34.84291992187502],
                                [-77.29624023437503, 34.602929687499994],
                                [-77.41225585937497, 34.730810546875034],
                                [-77.37978515625, 34.526611328125],
                                [-77.750732421875, 34.28496093749996],
                                [-77.92783203125, 33.93974609374999],
                                [-77.95327148437494, 34.16899414062496],
                                [-78.01333007812502, 33.91181640624998],
                                [-78.40585937499995, 33.91757812499998],
                                [-78.84145507812497, 33.72407226562501],
                                [-79.19379882812498, 33.24414062500003],
                                [-79.22646484375, 33.40488281249998],
                                [-79.27602539062497, 33.135400390624966],
                                [-79.80498046874999, 32.78740234374996],
                                [-79.93310546874997, 32.81005859375006],
                                [-79.94072265625002, 32.667138671874966],
                                [-80.36284179687496, 32.500732421875],
                                [-80.6341796875, 32.51171875000003],
                                [-80.474267578125, 32.42275390625002],
                                [-80.579345703125, 32.28730468750004],
                                [-80.80253906249999, 32.44804687500002],
                                [-80.69423828124997, 32.21572265625002],
                                [-81.11328124999997, 31.87861328125001],
                                [-81.06611328124995, 31.787988281250023],
                                [-81.259375, 31.538916015624977],
                                [-81.17543945312494, 31.531298828125017],
                                [-81.38095703124998, 31.353271484375],
                                [-81.28847656249997, 31.263916015625],
                                [-81.441748046875, 31.19970703124997],
                                [-81.5162109375, 30.801806640625017],
                                [-81.24951171875003, 29.793798828125006],
                                [-80.52412109374995, 28.48608398437503],
                                [-80.5849609375, 28.271582031250034],
                                [-80.456884765625, 27.90068359374996],
                                [-80.61000976562494, 28.177587890624977],
                                [-80.60693359375003, 28.522900390624983],
                                [-80.693505859375, 28.34497070312497],
                                [-80.68847656250003, 28.578515625000023],
                                [-80.83818359374999, 28.757666015625034],
                                [-80.74863281250003, 28.381005859375023],
                                [-80.050048828125, 26.807714843750063],
                                [-80.1263671875, 25.83349609375],
                                [-80.48466796874999, 25.229833984375034],
                                [-81.11049804687494, 25.138037109374977],
                                [-81.13603515624999, 25.309667968750034],
                                [-80.94042968750003, 25.264208984375017],
                                [-81.11333007812499, 25.367236328125045],
                                [-81.36494140625001, 25.83105468750003],
                                [-81.715478515625, 25.98315429687503],
                                [-81.95893554687495, 26.489941406249983],
                                [-81.82866210937496, 26.68706054687499],
                                [-82.03959960937496, 26.552050781250017],
                                [-82.01328125, 26.96157226562505],
                                [-82.24287109374998, 26.848876953125],
                                [-82.44135742187501, 27.059667968750034],
                                [-82.71459960937497, 27.499609375000063],
                                [-82.40576171874994, 27.862890624999977],
                                [-82.67519531249994, 27.963769531250023],
                                [-82.61098632812502, 27.77724609375005],
                                [-82.74287109374995, 27.709375],
                                [-82.84350585937494, 27.845996093750017],
                                [-82.65146484375, 28.8875],
                                [-83.69438476562502, 29.92597656250001],
                                [-84.04423828124996, 30.10380859374999],
                                [-84.30966796874995, 30.064746093750045],
                                [-84.38281250000003, 29.90737304687505],
                                [-85.31894531249995, 29.680224609375045],
                                [-85.413818359375, 29.76757812499997],
                                [-85.413818359375, 29.842480468749955],
                                [-85.31489257812493, 29.758105468750017],
                                [-85.35361328125, 29.875732421875],
                                [-85.67578125, 30.121923828125063],
                                [-85.60351562500003, 30.286767578124966],
                                [-85.75581054687495, 30.1669921875],
                                [-86.454443359375, 30.39912109375004],
                                [-86.12382812499999, 30.40581054687499],
                                [-86.25737304687502, 30.493017578124977],
                                [-87.201171875, 30.339257812499994],
                                [-86.98579101562498, 30.43085937500001],
                                [-86.99755859375, 30.5703125],
                                [-87.17060546874998, 30.538769531249983],
                                [-87.28105468750002, 30.339257812499994],
                                [-87.47578124999998, 30.294287109375006],
                                [-87.44829101562499, 30.394140625],
                                [-87.62226562499998, 30.264746093750006],
                                [-88.00595703124998, 30.230908203124955],
                                [-87.79028320312503, 30.291796875000017],
                                [-88.011328125, 30.694189453125006],
                                [-88.13544921874998, 30.366601562499994],
                                [-88.90522460937495, 30.415136718750006],
                                [-89.32055664062503, 30.3453125],
                                [-89.58847656249998, 30.165966796874955],
                                [-90.12597656249997, 30.369091796874955],
                                [-90.33198242187493, 30.277587890625057],
                                [-90.41303710937501, 30.140332031249983],
                                [-90.17534179687499, 30.02910156249996],
                                [-89.73745117187497, 30.171972656250034],
                                [-89.66503906249994, 30.117041015625034],
                                [-89.81518554687497, 30.007275390624955],
                                [-89.631689453125, 29.90380859375003],
                                [-89.400732421875, 30.04604492187505],
                                [-89.35444335937501, 29.82021484375005],
                                [-89.72089843749995, 29.619287109374966],
                                [-89.01572265625, 29.202880859375057],
                                [-89.15551757812497, 29.01660156250003],
                                [-89.23608398437494, 29.081103515625017],
                                [-89.37612304687497, 28.981347656250023],
                                [-89.44316406249996, 29.194140625000045],
                                [-90.15908203124997, 29.537158203125017],
                                [-90.05278320312499, 29.336816406249966],
                                [-90.21279296875, 29.104931640624983],
                                [-90.37919921874996, 29.29511718750001],
                                [-90.75102539062496, 29.13085937500003],
                                [-91.29013671875, 29.288964843749994],
                                [-91.15078124999994, 29.317919921875045],
                                [-91.24882812499993, 29.56420898437503],
                                [-91.51420898437499, 29.55537109375001],
                                [-91.8931640625, 29.836035156249977],
                                [-92.135498046875, 29.699462890625057],
                                [-92.08403320312499, 29.59282226562499],
                                [-92.26083984374995, 29.55683593750004],
                                [-93.17568359375, 29.778955078124994],
                                [-93.82646484374999, 29.725146484375045],
                                [-93.84145507812502, 29.97973632812503],
                                [-93.89047851562495, 29.689355468750023],
                                [-94.759619140625, 29.384277343750057],
                                [-94.52626953125, 29.547949218750006],
                                [-94.77827148437498, 29.54785156249997],
                                [-94.74194335937497, 29.75],
                                [-95.0228515625, 29.70234375000001],
                                [-94.88828125000003, 29.37055664062501],
                                [-95.27348632812499, 28.96386718750003],
                                [-96.23452148437502, 28.488964843749983],
                                [-96.01103515624996, 28.631933593749977],
                                [-96.44873046874997, 28.594482421875],
                                [-96.64003906249994, 28.708789062500017],
                                [-96.42109374999993, 28.457324218750045],
                                [-96.67636718749998, 28.34130859375003],
                                [-96.77353515624998, 28.421630859375057],
                                [-96.839501953125, 28.194384765625017],
                                [-97.156494140625, 28.144335937500045],
                                [-97.141259765625, 28.060742187499983],
                                [-97.034326171875, 28.093847656250063],
                                [-97.07309570312498, 27.98608398437503],
                                [-97.43149414062498, 27.83720703124999],
                                [-97.28872070312494, 27.670605468749983],
                                [-97.43911132812502, 27.328271484374966],
                                [-97.76845703124997, 27.45751953125],
                                [-97.69238281250003, 27.287158203125017],
                                [-97.48510742187497, 27.237402343750006],
                                [-97.55468749999994, 26.96733398437496],
                                [-97.43505859375, 26.48583984375003],
                                [-97.14624023437494, 25.961474609375045],
                                [-97.37563476562497, 25.871826171875],
                                [-99.10776367187498, 26.446923828124994],
                                [-99.45654296874999, 27.05668945312496],
                                [-99.50532226562497, 27.54833984375003],
                                [-100.29604492187495, 28.32768554687499],
                                [-100.75458984375001, 29.182519531249994],
                                [-101.44038085937503, 29.77685546875],
                                [-102.26894531249998, 29.871191406250034],
                                [-102.61494140624994, 29.75234375],
                                [-102.8919921875, 29.216406250000034],
                                [-103.16831054687498, 28.998193359374994],
                                [-104.110595703125, 29.386132812499994],
                                [-104.50400390624995, 29.677685546874955],
                                [-104.97880859374996, 30.645947265624955],
                                [-106.14804687499995, 31.450927734375],
                                [-106.44541015624996, 31.768408203125006],
                                [-108.21181640625002, 31.779345703125017],
                                [-108.21445312499993, 31.329443359375034],
                                [-111.0419921875, 31.32421875000003],
                                [-114.83593749999994, 32.50830078125003],
                                [-114.72475585937495, 32.71533203125003],
                                [-117.12827148437495, 32.533349609374994],
                                [-117.46743164062495, 33.295507812500006],
                                [-118.08051757812497, 33.72216796874997],
                                [-118.41044921874996, 33.74394531249996],
                                [-118.506201171875, 34.01738281249999],
                                [-119.14375, 34.11201171874998],
                                [-119.60605468749999, 34.41801757812499],
                                [-120.48120117187503, 34.47163085937498],
                                [-120.64467773437502, 34.57998046875002],
                                [-120.65908203124994, 35.122412109375034],
                                [-120.85737304687501, 35.209667968749955],
                                [-120.899609375, 35.42509765624999],
                                [-121.28383789062494, 35.67631835937499],
                                [-121.87739257812498, 36.33105468749997],
                                [-121.80742187499995, 36.851220703124994],
                                [-122.394921875, 37.20751953125003],
                                [-122.49921875000001, 37.542626953124994],
                                [-122.44560546875002, 37.797998046874966],
                                [-122.07050781249998, 37.47827148437503],
                                [-122.38544921875001, 37.960595703124966],
                                [-122.31425781249999, 38.00732421874997],
                                [-121.52534179687503, 38.05590820312503],
                                [-122.39335937499995, 38.14482421875002],
                                [-122.52133789062499, 37.82641601562497],
                                [-122.93198242187498, 38.05546875000002],
                                [-122.998779296875, 37.98862304687498],
                                [-122.90815429687501, 38.19658203124999],
                                [-123.701123046875, 38.90727539062502],
                                [-123.83291015624994, 39.775488281250034],
                                [-124.35654296875003, 40.37109374999997],
                                [-124.07192382812497, 41.45952148437502],
                                [-124.53964843750003, 42.812890624999966],
                                [-124.14873046874997, 43.691748046875034],
                                [-123.92934570312495, 45.57695312499996],
                                [-123.989306640625, 46.21938476562502],
                                [-123.22060546874998, 46.153613281250045],
                                [-123.46484375, 46.27109374999998],
                                [-124.07275390624996, 46.279443359374994],
                                [-124.04433593750002, 46.605078125],
                                [-123.946142578125, 46.43256835937501],
                                [-123.88916015625003, 46.660009765625006],
                                [-124.11254882812497, 46.862695312499994],
                                [-123.84287109375002, 46.963183593750045],
                                [-124.11171875, 47.03520507812496],
                                [-124.1392578125, 46.95468749999998],
                                [-124.376025390625, 47.658642578124955],
                                [-124.66308593749996, 47.97412109375003],
                                [-124.7099609375, 48.38037109375],
                                [-123.97578125, 48.16845703125],
                                [-122.97387695312499, 48.07329101562496],
                                [-122.77861328125, 48.13759765625002],
                                [-122.65664062500002, 47.88115234374999],
                                [-122.77841796874996, 47.738427734374966],
                                [-122.82138671875, 47.79316406250001],
                                [-123.1390625, 47.386083984375034],
                                [-122.92216796874993, 47.40766601562498],
                                [-123.066796875, 47.39965820312506],
                                [-123.04863281249995, 47.479345703125034],
                                [-122.53281250000002, 47.919726562500045],
                                [-122.67548828124995, 47.612353515625045],
                                [-122.57788085937496, 47.29316406250001],
                                [-122.76777343750001, 47.21835937500006],
                                [-122.82846679687503, 47.336572265624994],
                                [-123.02758789062501, 47.13891601562503],
                                [-122.70195312500002, 47.11088867187502],
                                [-122.35380859374996, 47.37158203125],
                                [-122.40180664062497, 47.78427734374998],
                                [-122.24199218750002, 48.01074218750003],
                                [-122.5169921875, 48.15966796874997],
                                [-122.40854492187502, 48.29389648437498],
                                [-122.66899414062496, 48.465234374999966],
                                [-122.49677734374995, 48.50556640625001],
                                [-122.51274414062502, 48.66943359375],
                                [-122.56201171875001, 48.777978515624994],
                                [-122.68593749999995, 48.794287109375034],
                                [-122.72246093750002, 48.85302734375003],
                                [-122.78876953125003, 48.993017578125034],
                                [-121.40722656249994, 48.993017578125034],
                                [-119.70170898437495, 48.993017578125034],
                                [-119.27534179687494, 48.99306640625005],
                                [-118.84892578124993, 48.99306640625005],
                                [-117.99619140625002, 48.99306640625005],
                                [-116.71704101562501, 48.99306640625005],
                                [-110.74765625, 48.99306640625005],
                                [-104.77832031249997, 48.993115234374955],
                                [-98.80898437499995, 48.99316406249997],
                                [-97.52983398437493, 48.99316406249997],
                                [-96.67705078124993, 48.99316406249997],
                                [-96.25068359374993, 48.99316406249997],
                                [-95.39790039062493, 48.99316406249997],
                                [-95.16206054687493, 48.991748046875045],
                                [-95.15527343749997, 49.36967773437502],
                                [-94.85434570312495, 49.304589843749994],
                                [-94.86040039062493, 49.258593750000045],
                                [-94.80346679687497, 49.0029296875]
                            ]
                        ],
                        [
                            [
                                [-176.28671874999998, 51.79199218750006],
                                [-176.34965820312502, 51.733300781249994],
                                [-176.41372070312502, 51.840576171875],
                                [-176.28671874999998, 51.79199218750006]
                            ]
                        ],
                        [
                            [
                                [-177.87905273437502, 51.64970703125002],
                                [-178.05888671875, 51.67260742187497],
                                [-177.98637695312493, 51.76425781249998],
                                [-178.16826171874996, 51.90302734375001],
                                [-177.644482421875, 51.826269531250006],
                                [-177.87905273437502, 51.64970703125002]
                            ]
                        ],
                        [
                            [
                                [-177.14819335937497, 51.71674804687498],
                                [-177.67021484375002, 51.701074218749994],
                                [-177.11005859375, 51.92875976562502],
                                [-177.14819335937497, 51.71674804687498]
                            ]
                        ],
                        [
                            [
                                [-176.593310546875, 51.86669921875],
                                [-176.45234374999995, 51.735693359375034],
                                [-176.96162109374998, 51.60366210937505],
                                [-176.69833984374998, 51.986035156249955],
                                [-176.593310546875, 51.86669921875]
                            ]
                        ],
                        [
                            [
                                [179.72773437500015, 51.905419921874966],
                                [179.50390625000003, 51.97958984374998],
                                [179.6271484375001, 52.03041992187502],
                                [179.72773437500015, 51.905419921874966]
                            ]
                        ],
                        [
                            [
                                [177.4154296875, 51.88281249999997],
                                [177.25029296875013, 51.902929687500006],
                                [177.6696289062501, 52.10302734375],
                                [177.4154296875, 51.88281249999997]
                            ]
                        ],
                        [
                            [
                                [-173.5533203125, 52.13627929687502],
                                [-173.02290039062504, 52.07915039062502],
                                [-173.83579101562498, 52.048193359375006],
                                [-173.99248046874993, 52.12333984374996],
                                [-173.5533203125, 52.13627929687502]
                            ]
                        ],
                        [
                            [
                                [-172.464794921875, 52.27226562500002],
                                [-172.61982421874998, 52.27285156250005],
                                [-172.47041015625, 52.38803710937506],
                                [-172.31362304687497, 52.32958984375006],
                                [-172.464794921875, 52.27226562500002]
                            ]
                        ],
                        [
                            [
                                [-174.67739257812502, 52.035009765625006],
                                [-175.29555664062502, 52.022167968749955],
                                [-174.30615234375, 52.216162109375034],
                                [-174.43554687499997, 52.317236328125034],
                                [-174.168896484375, 52.42016601562503],
                                [-174.04560546875, 52.36723632812499],
                                [-174.12065429687493, 52.13520507812498],
                                [-174.67739257812502, 52.035009765625006]
                            ]
                        ],
                        [
                            [
                                [173.72275390625018, 52.35957031250004],
                                [173.40234375000009, 52.40478515625],
                                [173.77607421875004, 52.49511718750003],
                                [173.72275390625018, 52.35957031250004]
                            ]
                        ],
                        [
                            [
                                [172.81181640625002, 53.01298828125002],
                                [173.43603515625003, 52.85205078125],
                                [172.93515625000012, 52.752099609374966],
                                [172.49482421875004, 52.93789062499999],
                                [172.81181640625002, 53.01298828125002]
                            ]
                        ],
                        [
                            [
                                [-167.96435546875003, 53.345117187499994],
                                [-169.088916015625, 52.83203125],
                                [-168.68984375000002, 53.227246093749955],
                                [-168.38041992187496, 53.28344726562506],
                                [-168.28769531249998, 53.500146484374966],
                                [-167.82807617187495, 53.50795898437505],
                                [-167.96435546875003, 53.345117187499994]
                            ]
                        ],
                        [
                            [
                                [-166.61533203124998, 53.90092773437499],
                                [-166.37231445312494, 53.99897460937498],
                                [-166.230859375, 53.93261718750006],
                                [-166.54560546875, 53.726464843749966],
                                [-166.354541015625, 53.67353515625004],
                                [-166.85097656249997, 53.45288085937503],
                                [-167.78085937500003, 53.30024414062501],
                                [-167.13608398437503, 53.526464843750006],
                                [-167.01572265625003, 53.69838867187502],
                                [-166.80898437500002, 53.64614257812505],
                                [-166.741259765625, 53.71293945312496],
                                [-167.10561523437497, 53.813378906249994],
                                [-167.03808593749997, 53.9421875],
                                [-166.67329101562498, 54.00595703124998],
                                [-166.61533203124998, 53.90092773437499]
                            ]
                        ],
                        [
                            [
                                [-165.841552734375, 54.070654296875006],
                                [-166.05664062500003, 54.054345703124994],
                                [-166.08774414062498, 54.16914062500001],
                                [-165.89287109375, 54.20698242187498],
                                [-165.69287109375, 54.09990234375002],
                                [-165.841552734375, 54.070654296875006]
                            ]
                        ],
                        [
                            [
                                [-165.56113281249998, 54.13671874999997],
                                [-165.55063476562498, 54.28452148437498],
                                [-165.40786132812502, 54.19682617187496],
                                [-165.56113281249998, 54.13671874999997]
                            ]
                        ],
                        [
                            [
                                [-162.29814453124993, 54.847021484375006],
                                [-162.43388671875, 54.931542968749994],
                                [-162.26459960937504, 54.983496093750006],
                                [-162.29814453124993, 54.847021484375006]
                            ]
                        ],
                        [
                            [
                                [-163.476025390625, 54.98071289062497],
                                [-163.37895507812496, 54.81552734374998],
                                [-163.083251953125, 54.66899414062496],
                                [-163.35810546874995, 54.73569335937506],
                                [-164.82343749999998, 54.41909179687505],
                                [-164.887646484375, 54.60781250000002],
                                [-164.47861328124998, 54.906835937500006],
                                [-163.80712890624997, 55.04907226562503],
                                [-163.476025390625, 54.98071289062497]
                            ]
                        ],
                        [
                            [
                                [-159.51513671875, 55.15185546875003],
                                [-159.617724609375, 55.05732421875004],
                                [-159.54506835937497, 55.22597656250002],
                                [-159.51513671875, 55.15185546875003]
                            ]
                        ],
                        [
                            [
                                [-131.33974609375002, 55.079833984375],
                                [-131.32954101562498, 54.887744140625045],
                                [-131.592236328125, 55.02568359374999],
                                [-131.5654296875, 55.26411132812498],
                                [-131.33974609375002, 55.079833984375]
                            ]
                        ],
                        [
                            [
                                [-159.87299804687495, 55.128759765625034],
                                [-160.22705078124997, 54.92270507812506],
                                [-160.17207031249995, 55.123046875],
                                [-159.88735351562497, 55.27299804687502],
                                [-159.87299804687495, 55.128759765625034]
                            ]
                        ],
                        [
                            [
                                [-132.86225585937504, 54.894433593749966],
                                [-132.61723632812493, 54.892431640625006],
                                [-132.70581054687497, 54.684179687500034],
                                [-133.42905273437498, 55.30380859374998],
                                [-133.097412109375, 55.213720703125006],
                                [-132.86225585937504, 54.894433593749966]
                            ]
                        ],
                        [
                            [
                                [-160.329296875, 55.337695312500045],
                                [-160.34331054687493, 55.25878906250006],
                                [-160.51748046875, 55.33383789062506],
                                [-160.329296875, 55.337695312500045]
                            ]
                        ],
                        [
                            [
                                [-160.68491210937498, 55.314794921875006],
                                [-160.552783203125, 55.38076171875002],
                                [-160.48754882812503, 55.18486328124999],
                                [-160.79506835937497, 55.14521484375001],
                                [-160.72392578124993, 55.404638671875006],
                                [-160.68491210937498, 55.314794921875006]
                            ]
                        ],
                        [
                            [
                                [-133.30507812500002, 55.54375],
                                [-133.6501953125, 55.26928710937506],
                                [-133.73710937500002, 55.49692382812498],
                                [-133.30507812500002, 55.54375]
                            ]
                        ],
                        [
                            [
                                [-155.56601562500003, 55.82119140625005],
                                [-155.73735351562493, 55.82978515625001],
                                [-155.59394531250004, 55.92431640625],
                                [-155.56601562500003, 55.82119140625005]
                            ]
                        ],
                        [
                            [
                                [-130.97915039062502, 55.489160156249994],
                                [-131.187890625, 55.206298828125],
                                [-131.44755859374996, 55.40878906250006],
                                [-131.7625, 55.16582031250002],
                                [-131.84609374999997, 55.41625976562497],
                                [-131.62495117187504, 55.831689453124966],
                                [-131.26923828125004, 55.95537109375002],
                                [-130.997802734375, 55.727636718750006],
                                [-130.97915039062502, 55.489160156249994]
                            ]
                        ],
                        [
                            [
                                [-133.56611328125, 56.33920898437498],
                                [-133.202978515625, 56.31982421875003],
                                [-133.096630859375, 56.09003906250001],
                                [-132.59760742187504, 55.89501953125],
                                [-132.17270507812498, 55.48061523437502],
                                [-132.51127929687493, 55.59394531250001],
                                [-132.63129882812495, 55.47319335937502],
                                [-132.41787109375002, 55.48291015625006],
                                [-132.20668945312497, 55.22441406249996],
                                [-131.97641601562498, 55.208593750000034],
                                [-132.06474609375002, 54.713134765625],
                                [-133.11855468750002, 55.32763671875003],
                                [-132.95888671875002, 55.39555664062502],
                                [-133.0333984375, 55.589697265625034],
                                [-133.68017578124994, 55.78515625],
                                [-133.24150390624993, 55.920800781249994],
                                [-133.371240234375, 56.035888671875],
                                [-133.74252929687498, 55.96484375],
                                [-133.530859375, 56.145654296874966],
                                [-133.56611328125, 56.33920898437498]
                            ]
                        ],
                        [
                            [
                                [-132.77988281249998, 56.24726562499998],
                                [-133.03500976562498, 56.34091796875006],
                                [-132.90205078124998, 56.45375976562505],
                                [-132.62910156249995, 56.411914062500045],
                                [-132.77988281249998, 56.24726562499998]
                            ]
                        ],
                        [
                            [
                                [-132.11235351562493, 56.109375],
                                [-132.13295898437497, 55.94326171875005],
                                [-132.28730468749995, 55.92939453124998],
                                [-132.65991210937503, 56.07817382812499],
                                [-132.379833984375, 56.49877929687497],
                                [-132.06689453125, 56.24423828124998],
                                [-132.11235351562493, 56.109375]
                            ]
                        ],
                        [
                            [
                                [-154.208642578125, 56.51489257812497],
                                [-154.32221679687504, 56.570605468750045],
                                [-154.11040039062496, 56.602929687499966],
                                [-154.208642578125, 56.51489257812497]
                            ]
                        ],
                        [
                            [
                                [-169.755224609375, 56.63505859375002],
                                [-169.47431640624998, 56.59404296875002],
                                [-169.6326171875, 56.545703125000045],
                                [-169.755224609375, 56.63505859375002]
                            ]
                        ],
                        [
                            [
                                [-132.746875, 56.525683593750045],
                                [-132.94804687500002, 56.56723632812498],
                                [-132.842529296875, 56.79477539062506],
                                [-132.56796875000003, 56.57583007812505],
                                [-132.746875, 56.525683593750045]
                            ]
                        ],
                        [
                            [
                                [-133.98959960937503, 56.84497070312497],
                                [-133.73837890625, 56.65043945312496],
                                [-133.94970703125, 56.12773437499996],
                                [-134.18959960937502, 56.07695312500002],
                                [-134.084375, 56.456347656250045],
                                [-134.37368164062502, 56.838671875000045],
                                [-134.14326171874998, 56.93232421875001],
                                [-133.98959960937503, 56.84497070312497]
                            ]
                        ],
                        [
                            [
                                [-133.36621093750006, 57.003515625000034],
                                [-132.99624023437497, 56.93041992187497],
                                [-132.95917968749998, 56.67705078124996],
                                [-133.03491210937494, 56.62075195312505],
                                [-133.32895507812498, 56.83007812499997],
                                [-133.158154296875, 56.495166015625045],
                                [-133.4841796875, 56.45175781249998],
                                [-133.979443359375, 57.009570312500045],
                                [-133.36621093750006, 57.003515625000034]
                            ]
                        ],
                        [
                            [
                                [-153.007080078125, 57.12485351562498],
                                [-153.37460937499998, 57.05190429687505],
                                [-153.285205078125, 57.18505859375],
                                [-152.90839843750004, 57.152441406250006],
                                [-153.007080078125, 57.12485351562498]
                            ]
                        ],
                        [
                            [
                                [-134.96977539062496, 57.351416015625034],
                                [-134.62070312499998, 56.71831054687502],
                                [-134.68188476562503, 56.216162109375034],
                                [-134.98056640625003, 56.518945312499994],
                                [-134.88344726562497, 56.679052734375034],
                                [-135.33061523437505, 56.821875],
                                [-135.19960937499997, 57.02734375],
                                [-135.45493164062503, 57.24941406250005],
                                [-135.81230468750002, 57.00952148437503],
                                [-135.82275390625, 57.280419921874966],
                                [-135.448681640625, 57.534375],
                                [-134.96977539062496, 57.351416015625034]
                            ]
                        ],
                        [
                            [
                                [-152.89804687499998, 57.82392578125004],
                                [-152.42875976562493, 57.82568359375003],
                                [-152.48261718749998, 57.70332031249998],
                                [-152.21621093749997, 57.577001953125006],
                                [-152.41220703125003, 57.454785156249955],
                                [-152.94077148437498, 57.49809570312499],
                                [-152.67905273437503, 57.345117187499994],
                                [-153.274365234375, 57.22636718749996],
                                [-153.732568359375, 57.052343750000034],
                                [-153.643310546875, 56.960742187500045],
                                [-154.02734375, 56.77797851562502],
                                [-153.793212890625, 56.98950195312503],
                                [-154.24375, 57.143017578124955],
                                [-154.33896484374998, 56.9208984375],
                                [-154.67319335937498, 57.44609375],
                                [-154.11616210937498, 57.651220703125006],
                                [-153.6876953125, 57.30512695312504],
                                [-153.841552734375, 57.86284179687496],
                                [-153.48793945312497, 57.73095703125],
                                [-153.21748046875004, 57.79575195312506],
                                [-153.16044921875, 57.97197265624999],
                                [-152.85039062499993, 57.896777343750045],
                                [-152.89804687499998, 57.82392578125004]
                            ]
                        ],
                        [
                            [
                                [-135.73037109375002, 58.244238281250034],
                                [-135.61323242187507, 57.99184570312505],
                                [-135.346630859375, 58.12412109374998],
                                [-134.9546875, 58.01533203125004],
                                [-134.97065429687495, 57.817236328125006],
                                [-135.33847656250003, 57.768652343750034],
                                [-134.97885742187503, 57.724365234375],
                                [-134.93149414062498, 57.48115234375001],
                                [-135.564208984375, 57.66640625],
                                [-135.691943359375, 57.41992187500006],
                                [-135.91079101562502, 57.44658203124999],
                                [-136.568603515625, 57.97216796875003],
                                [-136.32197265625, 58.21889648437502],
                                [-136.14375, 58.098486328125006],
                                [-136.09438476562502, 58.198144531249966],
                                [-135.73037109375002, 58.244238281250034]
                            ]
                        ],
                        [
                            [
                                [-134.68027343749998, 58.16166992187499],
                                [-134.24008789062498, 58.143994140624955],
                                [-133.82275390624997, 57.62866210937503],
                                [-134.29233398437498, 58.044726562500074],
                                [-133.91113281250003, 57.3525390625],
                                [-134.51601562499997, 57.042578125],
                                [-134.48676757812495, 57.48203125],
                                [-134.92348632812497, 58.354638671874966],
                                [-134.68027343749998, 58.16166992187499]
                            ]
                        ],
                        [
                            [
                                [-152.416943359375, 58.360205078125034],
                                [-151.974365234375, 58.30986328124999],
                                [-152.068896484375, 58.17792968750001],
                                [-152.26835937499993, 58.25170898437506],
                                [-152.30922851562502, 58.133886718750034],
                                [-152.5982421875, 58.16259765625],
                                [-152.92841796875004, 57.99370117187499],
                                [-153.38134765625003, 58.08720703125002],
                                [-152.976123046875, 58.29702148437505],
                                [-152.771875, 58.278564453125],
                                [-152.84111328125002, 58.41640625000002],
                                [-152.416943359375, 58.360205078125034]
                            ]
                        ],
                        [
                            [
                                [-152.486083984375, 58.485009765624966],
                                [-152.63662109375002, 58.54169921874998],
                                [-152.3955078125, 58.619384765625],
                                [-152.486083984375, 58.485009765624966]
                            ]
                        ],
                        [
                            [
                                [-160.918994140625, 58.57709960937498],
                                [-161.13149414062502, 58.668212890625],
                                [-160.71513671875005, 58.79521484375002],
                                [-160.918994140625, 58.57709960937498]
                            ]
                        ],
                        [
                            [
                                [-148.02177734375, 60.06533203125005],
                                [-148.271875, 60.05327148437499],
                                [-148.07958984375003, 60.151660156250045],
                                [-148.02177734375, 60.06533203125005]
                            ]
                        ],
                        [
                            [
                                [-147.735888671875, 59.81323242187503],
                                [-147.76806640625, 59.94375],
                                [-147.180859375, 60.358251953125034],
                                [-147.01987304687498, 60.33222656249998],
                                [-147.735888671875, 59.81323242187503]
                            ]
                        ],
                        [
                            [
                                [-166.13544921875, 60.38354492187503],
                                [-165.72968750000004, 60.31420898437503],
                                [-165.591796875, 59.913134765625045],
                                [-166.14873046874996, 59.764111328124955],
                                [-167.13886718749998, 60.00854492187503],
                                [-167.43642578125002, 60.20664062500006],
                                [-166.836328125, 60.21699218750004],
                                [-166.47568359374998, 60.382763671874955],
                                [-166.13544921875, 60.38354492187503]
                            ]
                        ],
                        [
                            [
                                [-146.3939453125, 60.44965820312501],
                                [-146.10224609374998, 60.41118164062499],
                                [-146.61831054687497, 60.27368164062503],
                                [-146.70253906249997, 60.40854492187498],
                                [-146.3939453125, 60.44965820312501]
                            ]
                        ],
                        [
                            [
                                [-147.658251953125, 60.45048828124999],
                                [-147.787841796875, 60.17792968749998],
                                [-147.89145507812498, 60.299414062500034],
                                [-147.658251953125, 60.45048828124999]
                            ]
                        ],
                        [
                            [
                                [-172.74223632812496, 60.45737304687498],
                                [-172.23208007812494, 60.299121093750074],
                                [-172.63574218750003, 60.328857421875],
                                [-173.04765625000002, 60.56831054687501],
                                [-172.74223632812496, 60.45737304687498]
                            ]
                        ],
                        [
                            [
                                [-171.46303710937494, 63.640039062499994],
                                [-171.03486328125, 63.58549804687499],
                                [-170.29936523437502, 63.68061523437501],
                                [-169.55454101562498, 63.373486328124955],
                                [-168.71601562500004, 63.310595703125045],
                                [-168.76132812500003, 63.21376953125002],
                                [-169.364697265625, 63.17114257812506],
                                [-169.67636718750003, 62.95610351562502],
                                [-169.81860351562494, 63.122363281250045],
                                [-170.84838867187494, 63.44438476562502],
                                [-171.63183593749997, 63.351220703124966],
                                [-171.74638671874993, 63.703076171874955],
                                [-171.46303710937494, 63.640039062499994]
                            ]
                        ],
                        [
                            [
                                [-141.00214843750004, 68.77416992187506],
                                [-141.00214843750004, 67.89755859374998],
                                [-141.00214843750004, 66.43652343750006],
                                [-141.00214843750004, 65.55991210937498],
                                [-141.00214843750004, 64.09887695312506],
                                [-141.00214843750004, 63.22226562499998],
                                [-141.00214843750004, 61.761279296875045],
                                [-141.00214843750004, 60.884667968749994],
                                [-141.00214843750004, 60.30024414062504],
                                [-140.76274414062505, 60.259130859375006],
                                [-140.525439453125, 60.218359375000034],
                                [-140.45283203125004, 60.29970703125002],
                                [-139.97329101562497, 60.183154296875074],
                                [-139.67631835937505, 60.32832031249998],
                                [-139.23476562499997, 60.339746093749994],
                                [-139.07924804687497, 60.34370117187501],
                                [-139.07924804687497, 60.279443359374966],
                                [-139.136962890625, 60.17270507812498],
                                [-139.18515624999998, 60.083593750000034],
                                [-138.86875, 59.94575195312501],
                                [-138.317626953125, 59.611132812500074],
                                [-137.59331054687493, 59.22626953124998],
                                [-137.52089843750002, 58.91538085937498],
                                [-137.43857421875003, 58.903125],
                                [-137.2775390625, 58.988183593749994],
                                [-137.126220703125, 59.04096679687498],
                                [-136.81328125000002, 59.150048828124994],
                                [-136.57875976562502, 59.15224609375002],
                                [-136.46635742187493, 59.459082031250006],
                                [-136.27797851562502, 59.48032226562506],
                                [-136.321826171875, 59.604833984375034],
                                [-135.70258789062504, 59.72875976562506],
                                [-135.36787109374998, 59.743310546874994],
                                [-135.051025390625, 59.57866210937502],
                                [-134.94375, 59.28828125000001],
                                [-134.67724609374997, 59.19926757812499],
                                [-134.39306640625, 59.009179687499994],
                                [-134.32963867187505, 58.93969726562506],
                                [-134.21850585937503, 58.849902343750045],
                                [-133.54638671874997, 58.50346679687499],
                                [-133.27529296875, 58.22285156250004],
                                [-133.00141601562495, 57.948974609375],
                                [-132.55048828125, 57.499902343749994],
                                [-132.44248046874998, 57.40673828125003],
                                [-132.30166015624997, 57.27631835937501],
                                [-132.232177734375, 57.19853515624999],
                                [-132.27939453124998, 57.14536132812498],
                                [-132.33798828124998, 57.07944335937506],
                                [-132.15703125, 57.048193359375006],
                                [-132.03154296875, 57.02656250000004],
                                [-132.062890625, 56.95336914062503],
                                [-132.104296875, 56.856787109375006],
                                [-131.86616210937495, 56.792822265625006],
                                [-131.82426757812496, 56.589990234374994],
                                [-131.471875, 56.55673828125006],
                                [-130.649072265625, 56.26367187500003],
                                [-130.47709960937496, 56.230566406250034],
                                [-130.413134765625, 56.12250976562498],
                                [-130.09785156249995, 56.10927734375002],
                                [-130.01406249999997, 55.950537109375006],
                                [-130.2140625, 55.02587890625003],
                                [-130.57534179687497, 54.769677734374966],
                                [-130.849609375, 54.80761718750006],
                                [-131.04785156249997, 55.157666015624955],
                                [-130.74819335937502, 55.31801757812502],
                                [-131.127685546875, 55.96015625000001],
                                [-131.032763671875, 56.08808593749998],
                                [-131.78417968749997, 55.876562500000034],
                                [-131.98339843749994, 55.535009765625006],
                                [-132.15541992187502, 55.59956054687501],
                                [-132.20751953124997, 55.75341796875],
                                [-131.84384765625003, 56.16010742187498],
                                [-131.55136718749998, 56.206787109375],
                                [-131.88789062500004, 56.24165039062498],
                                [-132.18203125000002, 56.42065429687506],
                                [-132.82460937500002, 57.05581054687505],
                                [-133.465869140625, 57.17216796875002],
                                [-133.64873046874993, 57.64228515624998],
                                [-133.11704101562498, 57.56621093750002],
                                [-133.535205078125, 57.83295898437501],
                                [-133.1943359375, 57.87768554687506],
                                [-133.559375, 57.924462890624994],
                                [-133.72231445312502, 57.84423828125],
                                [-134.03110351562498, 58.072167968749966],
                                [-133.87675781249996, 58.51816406249998],
                                [-134.20883789062503, 58.232958984375045],
                                [-134.77612304687506, 58.45385742187503],
                                [-135.36367187500002, 59.41943359375],
                                [-135.50234375000002, 59.202294921874994],
                                [-135.090234375, 58.245849609375],
                                [-135.57177734374994, 58.41206054687504],
                                [-135.89755859374998, 58.40019531250002],
                                [-136.04311523437497, 58.82163085937498],
                                [-135.82636718750004, 58.89794921874997],
                                [-136.0166015625, 58.87397460937498],
                                [-136.150048828125, 59.04809570312503],
                                [-136.22583007812497, 58.765478515625006],
                                [-136.98901367187503, 59.03447265624999],
                                [-137.05903320312498, 58.87373046875001],
                                [-136.613916015625, 58.809277343749955],
                                [-136.48374023437503, 58.61767578125],
                                [-136.224609375, 58.602246093749955],
                                [-136.06147460937495, 58.45273437500006],
                                [-136.607421875, 58.24399414062498],
                                [-137.54399414062502, 58.58120117187502],
                                [-138.51489257812503, 59.16591796875005],
                                [-139.77329101562498, 59.52729492187504],
                                [-139.51303710937498, 59.698095703125006],
                                [-139.5123046875, 59.95356445312501],
                                [-139.28671874999998, 59.610937500000034],
                                [-139.22080078125003, 59.819873046875045],
                                [-138.9880859375, 59.83500976562502],
                                [-139.43144531249996, 60.012255859375074],
                                [-140.41982421874997, 59.71074218750002],
                                [-141.40830078125, 59.90278320312498],
                                [-141.408740234375, 60.11767578125006],
                                [-141.67016601562497, 59.969873046874966],
                                [-142.94565429687503, 60.09697265625002],
                                [-144.14721679687494, 60.01640625000002],
                                [-144.185498046875, 60.150732421875034],
                                [-144.901318359375, 60.335156249999955],
                                [-144.69111328125, 60.66909179687502],
                                [-145.248291015625, 60.38012695312506],
                                [-145.898876953125, 60.47817382812505],
                                [-145.67490234374998, 60.65112304687503],
                                [-146.57045898437497, 60.72915039062502],
                                [-146.39199218749997, 60.810839843750045],
                                [-146.63842773437497, 60.89731445312498],
                                [-146.59912109374994, 61.05351562500002],
                                [-146.284912109375, 61.11264648437498],
                                [-147.89111328125, 60.889892578125],
                                [-148.00512695312494, 60.96855468750002],
                                [-147.75185546874997, 61.218945312499955],
                                [-148.34189453125, 61.060400390625006],
                                [-148.34443359374998, 60.853564453125045],
                                [-148.55615234374994, 60.82700195312506],
                                [-148.25673828124997, 60.67529296874997],
                                [-148.64013671875, 60.48945312500004],
                                [-148.11918945312502, 60.57514648437498],
                                [-147.96411132812494, 60.48486328124997],
                                [-148.430712890625, 59.98911132812498],
                                [-149.2666015625, 59.99829101562497],
                                [-149.395263671875, 60.10576171875002],
                                [-149.59804687500002, 59.77045898437501],
                                [-149.7138671875, 59.91958007812502],
                                [-149.80126953124994, 59.737939453124966],
                                [-150.00532226562507, 59.78442382812503],
                                [-150.19804687499996, 59.56655273437505],
                                [-150.60737304687504, 59.56337890625002],
                                [-150.934521484375, 59.249121093750034],
                                [-151.18276367187502, 59.30078124999997],
                                [-151.73818359375002, 59.18852539062502],
                                [-151.94951171875, 59.26508789062498],
                                [-151.88461914062503, 59.386328125],
                                [-151.39960937499995, 59.51630859375001],
                                [-151.04648437499998, 59.771826171875034],
                                [-151.45009765624997, 59.65039062499997],
                                [-151.85322265625, 59.78208007812498],
                                [-151.39599609375006, 60.27446289062502],
                                [-151.35644531249997, 60.72294921874999],
                                [-150.44125976562503, 61.02358398437505],
                                [-149.07509765624997, 60.87641601562498],
                                [-150.05327148437496, 61.17109374999998],
                                [-149.433544921875, 61.50078125000002],
                                [-149.97568359374998, 61.27934570312502],
                                [-150.61225585937495, 61.301123046875006],
                                [-151.59350585937494, 60.979638671874966],
                                [-152.54091796874997, 60.265429687500045],
                                [-153.025, 60.29565429687497],
                                [-152.660107421875, 59.99721679687502],
                                [-153.21123046875002, 59.84272460937498],
                                [-153.09360351562503, 59.70913085937505],
                                [-153.65253906250004, 59.64702148437499],
                                [-154.17832031250003, 59.155566406250074],
                                [-153.41826171875, 58.9599609375],
                                [-153.43759765625003, 58.754833984374955],
                                [-154.289013671875, 58.30434570312502],
                                [-154.247021484375, 58.15942382812497],
                                [-155.006884765625, 58.01606445312501],
                                [-155.77797851562497, 57.56821289062498],
                                [-156.43588867187498, 57.359960937500006],
                                [-156.62900390624998, 57.00996093750001],
                                [-158.41440429687498, 56.435839843750045],
                                [-158.5521484375, 56.31269531249998],
                                [-158.27563476562497, 56.19624023437498],
                                [-158.5046875, 56.062109375],
                                [-158.59116210937503, 56.18452148437498],
                                [-158.78984375000002, 55.98691406250006],
                                [-159.52324218749993, 55.81000976562498],
                                [-159.65966796875003, 55.625927734374955],
                                [-159.77138671874997, 55.84111328125002],
                                [-160.49931640625002, 55.53730468750004],
                                [-161.38193359374998, 55.371289062499955],
                                [-161.44379882812495, 55.513281250000034],
                                [-161.202099609375, 55.54355468750006],
                                [-161.51694335937503, 55.61840820312503],
                                [-162.073974609375, 55.13930664062505],
                                [-162.38637695312497, 55.05234375],
                                [-162.63037109375003, 55.24667968749998],
                                [-162.67436523437505, 54.99658203125],
                                [-162.86503906249996, 54.954541015624955],
                                [-163.11962890624997, 55.06469726562503],
                                [-163.131103515625, 54.916552734375045],
                                [-163.33530273437503, 54.83916015624999],
                                [-163.27880859374997, 55.12182617187503],
                                [-162.906591796875, 55.19555664062503],
                                [-161.69731445312502, 55.9072265625],
                                [-161.215625, 56.02143554687498],
                                [-160.8986328125, 55.99365234375],
                                [-161.00537109375, 55.88715820312498],
                                [-160.80283203125003, 55.754443359375045],
                                [-160.70634765625002, 55.870458984375034],
                                [-160.29169921875, 55.80507812500005],
                                [-160.53906250000006, 56.00629882812501],
                                [-160.30205078125, 56.31411132812502],
                                [-158.91801757812502, 56.882177734375006],
                                [-158.675146484375, 56.79487304687498],
                                [-158.66079101562502, 57.03940429687498],
                                [-158.32094726562497, 57.29790039062499],
                                [-157.84575195312496, 57.52807617187497],
                                [-157.4619140625, 57.506201171875034],
                                [-157.697216796875, 57.679443359375],
                                [-157.610888671875, 58.050830078125074],
                                [-157.19370117187498, 58.19418945312506],
                                [-157.48837890624998, 58.25371093750002],
                                [-157.52363281249998, 58.421337890624955],
                                [-156.97465820312496, 58.736328125],
                                [-156.80888671875005, 59.13427734375],
                                [-157.14204101562504, 58.87763671875001],
                                [-158.19091796875003, 58.6142578125],
                                [-158.50317382812494, 58.85034179687497],
                                [-158.42563476562498, 58.99931640625002],
                                [-158.080517578125, 58.97744140625002],
                                [-158.422802734375, 59.08984375],
                                [-158.67827148437502, 58.92939453124998],
                                [-158.80947265625002, 58.973876953125],
                                [-158.78862304687493, 58.440966796875045],
                                [-158.95068359375, 58.404541015625],
                                [-159.67026367187498, 58.9111328125],
                                [-159.92021484375, 58.819873046875074],
                                [-160.36313476562498, 59.05117187500002],
                                [-161.246826171875, 58.799462890624994],
                                [-161.36132812499994, 58.66953124999998],
                                [-162.144921875, 58.64423828124998],
                                [-161.724365234375, 58.794287109375006],
                                [-161.64438476562498, 59.109667968750045],
                                [-161.9810546875, 59.14614257812502],
                                [-161.82871093749998, 59.588623046875],
                                [-162.421337890625, 60.28398437500002],
                                [-161.96201171875003, 60.695361328125045],
                                [-162.68496093749997, 60.268945312499966],
                                [-162.57075195312495, 59.98974609375],
                                [-163.68037109374998, 59.80151367187503],
                                [-164.14282226562497, 59.89677734374999],
                                [-165.02651367187497, 60.500634765624994],
                                [-165.35380859375002, 60.54121093750001],
                                [-164.80517578125, 60.89204101562498],
                                [-164.31850585937497, 60.77128906249999],
                                [-164.37236328125002, 60.59184570312502],
                                [-163.999560546875, 60.76606445312498],
                                [-163.72998046874997, 60.589990234374994],
                                [-163.420947265625, 60.757421875],
                                [-163.90654296874996, 60.85380859375002],
                                [-163.58691406249994, 60.902978515624994],
                                [-163.74902343750003, 60.9697265625],
                                [-163.99462890624997, 60.86469726562501],
                                [-165.11484375, 60.93281250000004],
                                [-164.86899414062503, 61.11176757812498],
                                [-165.27978515624994, 61.169628906249955],
                                [-165.27363281250004, 61.27485351562498],
                                [-165.56586914062498, 61.10234375000002],
                                [-165.86396484375004, 61.33569335937503],
                                [-165.84531249999998, 61.536230468750034],
                                [-166.152734375, 61.545947265625074],
                                [-166.16811523437502, 61.65083007812501],
                                [-165.80893554687503, 61.69609375000002],
                                [-166.07880859375, 61.803125],
                                [-165.61279296875003, 61.86928710937502],
                                [-165.707275390625, 62.10043945312506],
                                [-165.19453125, 62.47353515625002],
                                [-164.75786132812493, 62.496728515624966],
                                [-164.589453125, 62.709375],
                                [-164.79267578125, 62.623193359374966],
                                [-164.79965820312503, 62.918066406250006],
                                [-164.384228515625, 63.03046874999998],
                                [-164.40903320312503, 63.21503906250001],
                                [-163.94287109375, 63.247216796874994],
                                [-163.61630859374998, 63.125146484374994],
                                [-163.73784179687496, 63.016406250000045],
                                [-163.504345703125, 63.105859374999966],
                                [-163.28784179687494, 63.046435546875045],
                                [-162.621484375, 63.26582031249998],
                                [-162.28281250000003, 63.529199218749994],
                                [-161.97397460937498, 63.45292968749999],
                                [-161.09970703125003, 63.557910156250045],
                                [-160.778564453125, 63.818945312500034],
                                [-160.987548828125, 64.25126953125002],
                                [-161.49072265625003, 64.43378906249998],
                                [-160.93193359374996, 64.5791015625],
                                [-160.855908203125, 64.755615234375],
                                [-161.13017578125005, 64.92543945312505],
                                [-161.759375, 64.816259765625],
                                [-162.80703124999997, 64.37421875000001],
                                [-163.20390625, 64.65200195312502],
                                [-163.14433593750002, 64.423828125],
                                [-163.71308593749998, 64.588232421875],
                                [-164.978759765625, 64.45366210937502],
                                [-166.1427734375, 64.58276367187503],
                                [-166.48139648437498, 64.72807617187507],
                                [-166.415234375, 64.926513671875],
                                [-166.92841796875, 65.15708007812498],
                                [-166.15703125, 65.28583984375001],
                                [-167.40400390625, 65.42211914062497],
                                [-168.08837890624997, 65.65776367187502],
                                [-166.39873046875002, 66.14443359375005],
                                [-165.62993164062496, 66.131201171875],
                                [-165.77617187500002, 66.31904296875001],
                                [-164.46049804687502, 66.58842773437499],
                                [-163.63823242187502, 66.57465820312504],
                                [-163.89394531249997, 66.57587890625001],
                                [-164.03374023437493, 66.21552734374995],
                                [-163.69536132812502, 66.08383789062503],
                                [-161.93369140625003, 66.04287109374997],
                                [-161.45541992187503, 66.28139648437497],
                                [-161.03427734375003, 66.18881835937503],
                                [-161.12031249999995, 66.334326171875],
                                [-161.91689453124997, 66.41181640624998],
                                [-162.54365234375004, 66.80512695312501],
                                [-162.36162109375, 66.94731445312502],
                                [-161.591015625, 66.45952148437502],
                                [-160.23168945312503, 66.420263671875],
                                [-160.360888671875, 66.6125],
                                [-160.864013671875, 66.67084960937501],
                                [-161.39804687499998, 66.55185546875],
                                [-161.85668945312497, 66.70034179687497],
                                [-161.719921875, 67.02055664062502],
                                [-163.5318359375, 67.10258789062502],
                                [-164.1251953125, 67.60673828125007],
                                [-166.786279296875, 68.35961914062497],
                                [-166.38051757812502, 68.425146484375],
                                [-166.20908203125, 68.88535156250003],
                                [-165.04394531249994, 68.882470703125],
                                [-163.867919921875, 69.03666992187505],
                                [-161.88095703125003, 70.33173828125001],
                                [-162.073876953125, 70.16196289062498],
                                [-160.9962890625, 70.30458984375],
                                [-160.11713867187495, 70.59121093750002],
                                [-159.86567382812498, 70.27885742187499],
                                [-159.81499023437496, 70.49707031250003],
                                [-159.38676757812493, 70.52451171875003],
                                [-160.081591796875, 70.63486328125003],
                                [-159.680908203125, 70.786767578125],
                                [-159.31450195312496, 70.87851562500003],
                                [-159.251171875, 70.7484375],
                                [-157.909375, 70.860107421875],
                                [-156.47021484374994, 71.40766601562501],
                                [-156.469970703125, 71.29155273437507],
                                [-155.57944335937503, 71.12109374999997],
                                [-156.14658203125, 70.92783203125003],
                                [-155.97353515625002, 70.84199218749995],
                                [-155.16684570312498, 71.09921875000006],
                                [-154.19521484375002, 70.80112304687498],
                                [-153.23291015625, 70.93256835937504],
                                [-152.49121093749994, 70.88095703125],
                                [-152.23291015625, 70.81035156249999],
                                [-152.39921875, 70.62045898437503],
                                [-151.76904296875, 70.56015625],
                                [-151.94467773437498, 70.45209960937501],
                                [-149.26943359374997, 70.50078124999999],
                                [-147.70537109375, 70.21723632812495],
                                [-145.82314453124997, 70.16005859375002],
                                [-145.19736328125003, 70.00869140625002],
                                [-143.218310546875, 70.11625976562499],
                                [-142.70786132812498, 70.03378906249998],
                                [-141.40791015625, 69.65336914062502],
                                [-141.00214843750004, 69.65078125000002],
                                [-141.00214843750004, 68.77416992187506]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "United States",
                    childNum: 76
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [71.20615234375006, 39.892578125],
                                [71.15625, 39.88344726562502],
                                [71.06425781250002, 39.88491210937505],
                                [71.01171874999997, 39.895117187500006],
                                [71.04365234375004, 39.97631835937503],
                                [71.04482421875005, 39.992529296875034],
                                [70.96064453125004, 40.087988281250034],
                                [71.00546875, 40.15229492187498],
                                [71.0241210937501, 40.14916992187497],
                                [71.08037109375007, 40.07988281249999],
                                [71.2287109375001, 40.04814453124999],
                                [71.20615234375006, 39.892578125]
                            ]
                        ],
                        [
                            [
                                [70.94677734374997, 42.24868164062505],
                                [70.97900390625003, 42.26655273437504],
                                [71.03603515625, 42.28466796875],
                                [71.12998046875006, 42.25],
                                [71.21269531250002, 42.20644531250005],
                                [71.23232421875005, 42.18627929687503],
                                [71.22851562499997, 42.16289062499996],
                                [70.18095703125007, 41.571435546874994],
                                [70.734375, 41.400537109374994],
                                [70.86044921875006, 41.22490234375002],
                                [71.11074218750005, 41.152636718750045],
                                [71.29882812500003, 41.152490234374994],
                                [71.39306640625003, 41.123388671875034],
                                [71.40839843750004, 41.13603515625002],
                                [71.42089843750003, 41.341894531250034],
                                [71.60625, 41.367431640625],
                                [71.66494140625, 41.54121093749998],
                                [71.70068359374997, 41.454003906249966],
                                [71.75771484375005, 41.42802734375002],
                                [71.79248046875003, 41.41313476562499],
                                [71.85800781250006, 41.311376953125034],
                                [71.8786132812501, 41.195019531249955],
                                [71.95849609375003, 41.18706054687502],
                                [72.05244140625004, 41.16474609375001],
                                [72.1154296875001, 41.18657226562502],
                                [72.1642578125001, 41.173730468749966],
                                [72.18095703125002, 41.11845703124999],
                                [72.18730468750002, 41.02592773437499],
                                [72.2130859375001, 41.014257812500006],
                                [72.36406250000002, 41.04345703125],
                                [72.65830078125, 40.86992187499999],
                                [73.13212890625002, 40.82851562499999],
                                [72.6041015625, 40.52543945312499],
                                [72.40205078125004, 40.578076171874955],
                                [72.3892578125, 40.427392578124994],
                                [72.13125, 40.438623046874966],
                                [71.69248046875, 40.15234375],
                                [71.30468749999997, 40.28691406249996],
                                [70.990625, 40.2548828125],
                                [70.95800781250003, 40.238867187500034],
                                [70.653125, 40.201171875],
                                [70.37158203125003, 40.38413085937506],
                                [70.75107421875006, 40.721777343750006],
                                [70.40195312500006, 41.03510742187498],
                                [69.71289062500003, 40.65698242187503],
                                [69.35722656250002, 40.76738281249996],
                                [69.20625, 40.566552734374994],
                                [69.27490234374997, 40.19809570312498],
                                [68.63066406250007, 40.16708984374998],
                                [68.9720703125, 40.08994140624998],
                                [68.80468750000003, 40.05034179687499],
                                [68.86875, 39.90747070312503],
                                [68.63896484375007, 39.8388671875],
                                [68.46328125, 39.53671874999998],
                                [67.71904296875007, 39.62138671875002],
                                [67.426171875, 39.46557617187497],
                                [67.3576171875001, 39.216699218749994],
                                [67.64833984375005, 39.13105468750004],
                                [67.69443359375006, 38.99462890625003],
                                [68.13251953125004, 38.927636718749966],
                                [68.08720703125002, 38.47353515625002],
                                [68.3502929687501, 38.211035156250006],
                                [67.81435546875005, 37.48701171875004],
                                [67.7980468750001, 37.244970703125006],
                                [67.75898437500004, 37.172216796875034],
                                [67.75292968749997, 37.199804687500034],
                                [67.7, 37.227246093749955],
                                [67.60742187499997, 37.22250976562506],
                                [67.5172851562501, 37.26665039062499],
                                [67.44169921875007, 37.25800781250001],
                                [67.3197265625, 37.209570312500006],
                                [67.1955078125001, 37.23520507812498],
                                [67.06884765624997, 37.334814453125006],
                                [66.82773437500006, 37.37128906249998],
                                [66.52226562500007, 37.34848632812506],
                                [66.51064453125, 37.45869140625004],
                                [66.51132812500006, 37.59916992187496],
                                [66.52558593750004, 37.785742187500034],
                                [66.60625, 37.98671875000005],
                                [65.97119140624997, 38.244238281250006],
                                [65.612890625, 38.23857421875002],
                                [64.3099609375, 38.97729492187497],
                                [63.76367187500003, 39.16054687499999],
                                [62.48320312500002, 39.97563476562496],
                                [61.90283203124997, 41.09370117187501],
                                [61.496972656249994, 41.276074218749955],
                                [61.2423828125001, 41.18920898437503],
                                [60.454980468749994, 41.221630859374955],
                                [60.089648437500074, 41.39941406250003],
                                [60.07558593750005, 41.759667968749966],
                                [60.20078125000006, 41.803125],
                                [59.94179687499999, 41.97353515625002],
                                [59.98515625000002, 42.21171875],
                                [59.35429687500002, 42.32329101562496],
                                [58.5890625000001, 42.778466796874966],
                                [58.477148437500006, 42.66284179687503],
                                [58.15156250000004, 42.628076171874966],
                                [58.474414062500074, 42.29936523437496],
                                [58.02890625, 42.48764648437506],
                                [57.814257812500074, 42.18984375000005],
                                [57.290625, 42.123779296875],
                                [56.96406250000004, 41.856542968750006],
                                [57.11884765625004, 41.35029296874998],
                                [57.01796875, 41.26347656249996],
                                [55.97744140625005, 41.32221679687504],
                                [55.97568359375006, 44.99492187499996],
                                [58.555273437500006, 45.55537109375001],
                                [61.007910156250006, 44.39379882812497],
                                [61.99023437500003, 43.492138671874955],
                                [63.20703125000003, 43.62797851562502],
                                [64.44316406250007, 43.55117187499999],
                                [64.9054687500001, 43.714697265625006],
                                [65.49619140625, 43.310546875],
                                [65.80302734375002, 42.87695312500006],
                                [66.1002929687501, 42.99082031249998],
                                [66.00957031250007, 42.00488281250003],
                                [66.49863281250006, 41.99487304687503],
                                [66.70966796875004, 41.17915039062501],
                                [67.9357421875001, 41.19658203125002],
                                [68.11308593750007, 41.02861328124999],
                                [68.04765625000007, 40.80927734374998],
                                [68.29189453125, 40.656103515625034],
                                [68.57265625, 40.62265624999998],
                                [68.58408203125, 40.876269531250045],
                                [69.15361328125002, 41.42524414062498],
                                [70.94677734374997, 42.24868164062505]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Uzbekistan",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-61.17451171875001, 13.158105468749966],
                            [-61.268457031249966, 13.287695312499991],
                            [-61.13896484374996, 13.358740234374991],
                            [-61.17451171875001, 13.158105468749966]
                        ]
                    ]
                },
                properties: {
                    name: "St. Vin. and Gren.",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-60.99790039062498, 8.867333984374966],
                                [-61.069189453125034, 8.947314453125003],
                                [-60.91582031249996, 9.070312500000014],
                                [-60.86142578124998, 8.949609375000037],
                                [-60.99790039062498, 8.867333984374966]
                            ]
                        ],
                        [
                            [
                                [-60.821191406249966, 9.138378906250026],
                                [-60.94140625000003, 9.105566406250006],
                                [-60.73583984374997, 9.203320312500026],
                                [-60.821191406249966, 9.138378906250026]
                            ]
                        ],
                        [
                            [
                                [-63.84936523437494, 11.131005859374994],
                                [-63.917626953124994, 10.887548828125048],
                                [-64.40234375, 10.981591796875023],
                                [-64.21367187500002, 11.086132812499997],
                                [-64.0283203125, 11.00185546874998],
                                [-63.84936523437494, 11.131005859374994]
                            ]
                        ],
                        [
                            [
                                [-60.742138671874926, 5.202050781250037],
                                [-60.71196289062499, 5.191552734375023],
                                [-60.671972656250034, 5.164355468749989],
                                [-60.603857421875006, 4.94936523437498],
                                [-61.00283203125002, 4.535253906249991],
                                [-61.28007812500002, 4.516894531249974],
                                [-61.82084960937496, 4.197021484375],
                                [-62.153125, 4.098388671874986],
                                [-62.41064453124994, 4.156738281249972],
                                [-62.71210937499998, 4.01791992187502],
                                [-62.85698242187502, 3.593457031249969],
                                [-63.33867187500002, 3.943896484375045],
                                [-64.02148437500003, 3.929101562500051],
                                [-64.19248046874995, 4.126855468750009],
                                [-64.57636718750001, 4.139892578125],
                                [-64.788671875, 4.276025390625023],
                                [-64.66899414062496, 4.01181640625002],
                                [-64.22109375000002, 3.587402343749972],
                                [-64.04658203124998, 2.502392578124997],
                                [-63.389257812500006, 2.411914062500045],
                                [-63.43251953124994, 2.155566406250045],
                                [-64.00849609374995, 1.931591796874969],
                                [-64.20502929687493, 1.52949218750004],
                                [-65.10375976562497, 1.108105468749983],
                                [-65.47338867187497, .691259765624977],
                                [-65.55605468750002, .687988281250014],
                                [-65.52299804687493, .843408203124966],
                                [-65.68144531249999, .983447265624989],
                                [-66.06005859375003, .78535156250004],
                                [-66.34711914062498, .7671875],
                                [-66.87602539062499, 1.223046875000037],
                                [-67.21083984375, 2.390136718750043],
                                [-67.61870117187496, 2.793603515624994],
                                [-67.85908203124998, 2.793603515624994],
                                [-67.3111328125, 3.41586914062502],
                                [-67.66162109375, 3.864257812499986],
                                [-67.85527343750002, 4.506884765624989],
                                [-67.82490234374995, 5.270458984375026],
                                [-67.47387695312503, 5.929980468750003],
                                [-67.48198242187499, 6.18027343750002],
                                [-67.85917968749999, 6.289892578124963],
                                [-68.47177734375, 6.156542968749974],
                                [-69.42714843749997, 6.123974609374997],
                                [-70.12919921874999, 6.95361328125],
                                [-70.73715820312503, 7.090039062499997],
                                [-71.12861328124993, 6.98671875],
                                [-72.00664062499993, 7.032617187500023],
                                [-72.20771484374995, 7.37026367187498],
                                [-72.47197265624996, 7.524267578124991],
                                [-72.39033203124995, 8.287060546874969],
                                [-72.66542968749994, 8.62758789062498],
                                [-72.79638671874997, 9.10898437499999],
                                [-73.05839843749999, 9.259570312500031],
                                [-73.36621093749997, 9.194140625000017],
                                [-73.00654296874998, 9.789160156250006],
                                [-72.86933593750001, 10.49125976562496],
                                [-72.690087890625, 10.835839843749994],
                                [-72.24848632812501, 11.196435546875009],
                                [-71.95810546875, 11.66640625],
                                [-71.31972656249997, 11.861914062500048],
                                [-71.95693359375002, 11.569921874999977],
                                [-71.835107421875, 11.190332031250009],
                                [-71.6416015625, 11.013525390625048],
                                [-71.73090820312498, 10.994677734375017],
                                [-71.59433593749995, 10.657373046875051],
                                [-72.11284179687499, 9.815576171874966],
                                [-71.61953124999994, 9.047949218749991],
                                [-71.24140625000001, 9.160449218750003],
                                [-71.08583984375002, 9.348242187499977],
                                [-71.05268554687501, 9.705810546874986],
                                [-71.49423828125, 10.533203124999972],
                                [-71.46953124999993, 10.964160156250017],
                                [-70.23251953124998, 11.372998046874997],
                                [-70.09711914062493, 11.519775390624972],
                                [-69.80478515624998, 11.47421875000002],
                                [-69.81733398437495, 11.672070312499997],
                                [-70.19257812499993, 11.62460937500002],
                                [-70.28652343749997, 11.886035156249989],
                                [-70.20278320312497, 12.098388671874986],
                                [-70.00395507812496, 12.177880859375023],
                                [-69.63159179687494, 11.479931640625026],
                                [-68.827978515625, 11.431738281249977],
                                [-68.39863281249995, 11.160986328124977],
                                [-68.29628906249997, 10.689355468749994],
                                [-68.13994140624999, 10.492724609374989],
                                [-66.24721679687497, 10.632226562499994],
                                [-65.85175781249995, 10.257763671874997],
                                [-65.12910156249998, 10.070068359375043],
                                [-64.85048828125, 10.098095703124969],
                                [-64.188330078125, 10.457812499999989],
                                [-63.73188476562501, 10.503417968750043],
                                [-64.24750976562498, 10.54257812500002],
                                [-64.298193359375, 10.635156249999966],
                                [-61.879492187500006, 10.741015625000031],
                                [-62.379980468750006, 10.546875],
                                [-62.91357421875, 10.531494140624986],
                                [-62.68583984374996, 10.289794921875043],
                                [-62.740576171875006, 10.056152343750043],
                                [-62.55034179687499, 10.200439453125043],
                                [-62.320410156250034, 9.783056640625006],
                                [-62.22114257812498, 9.882568359375028],
                                [-62.15336914062493, 9.821777343749986],
                                [-62.15532226562499, 9.979248046875014],
                                [-62.077099609374926, 9.97504882812504],
                                [-61.73593749999998, 9.631201171874977],
                                [-61.76591796874996, 9.813818359374963],
                                [-61.58886718749994, 9.894531249999986],
                                [-60.79248046874997, 9.360742187500037],
                                [-61.02314453124998, 9.15458984374996],
                                [-61.24726562499998, 8.600341796875014],
                                [-61.61870117187499, 8.59746093749996],
                                [-61.30400390624999, 8.410400390625043],
                                [-60.800976562499926, 8.592138671875034],
                                [-60.16748046875, 8.616992187500031],
                                [-60.01752929687501, 8.549316406250014],
                                [-59.83164062499998, 8.305957031250003],
                                [-59.84907226562498, 8.248681640624966],
                                [-59.96484375000003, 8.191601562499969],
                                [-59.99072265624997, 8.16201171874998],
                                [-60.032421874999926, 8.053564453125006],
                                [-60.51362304687501, 7.813183593749969],
                                [-60.71865234374994, 7.535937499999974],
                                [-60.606542968750006, 7.320849609375031],
                                [-60.63330078124997, 7.211083984374966],
                                [-60.58320312499998, 7.156201171874969],
                                [-60.523193359375, 7.143701171875009],
                                [-60.464941406250034, 7.166552734375045],
                                [-60.39238281249999, 7.164550781249986],
                                [-60.34506835937495, 7.15],
                                [-60.32548828124996, 7.133984374999983],
                                [-60.32207031249996, 7.092041015625043],
                                [-60.35209960937496, 7.002880859374997],
                                [-60.39501953125, 6.945361328125003],
                                [-60.717919921874966, 6.768310546875],
                                [-61.14560546874998, 6.694531249999983],
                                [-61.20361328124997, 6.588378906250028],
                                [-61.181591796874926, 6.513378906250026],
                                [-61.15102539062502, 6.446533203124986],
                                [-61.15229492187501, 6.385107421875006],
                                [-61.12871093749999, 6.214306640625026],
                                [-61.15947265624996, 6.174414062499977],
                                [-61.22495117187498, 6.129199218750003],
                                [-61.303125, 6.049511718750026],
                                [-61.39082031250001, 5.938769531250017],
                                [-61.376806640625006, 5.906982421875028],
                                [-61.167187499999926, 5.674218750000037],
                                [-60.95400390625002, 5.437402343750023],
                                [-60.742138671874926, 5.202050781250037]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Venezuela",
                    childNum: 4
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [-64.765625, 17.794335937499994],
                            [-64.58046874999994, 17.750195312499983],
                            [-64.88911132812495, 17.701708984375045],
                            [-64.765625, 17.794335937499994]
                        ]
                    ]
                },
                properties: {
                    name: "U.S. Virgin Is.",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [104.06396484375003, 10.390820312500011],
                                [104.01845703125, 10.029199218749966],
                                [103.84951171875005, 10.371093749999986],
                                [104.06396484375003, 10.390820312500011]
                            ]
                        ],
                        [
                            [
                                [107.52128906250007, 20.926611328124977],
                                [107.39921875000007, 20.903466796874966],
                                [107.55126953125003, 21.034033203125006],
                                [107.52128906250007, 20.926611328124977]
                            ]
                        ],
                        [
                            [
                                [107.60273437500004, 21.21679687500003],
                                [107.40351562500004, 21.093652343749994],
                                [107.47626953125004, 21.268945312499994],
                                [107.60273437500004, 21.21679687500003]
                            ]
                        ],
                        [
                            [
                                [107.97265624999997, 21.507958984375023],
                                [107.40996093750002, 21.284814453125023],
                                [107.35429687500007, 21.055175781250057],
                                [107.1647460937501, 20.94873046875003],
                                [106.68339843750007, 21.000292968750074],
                                [106.75341796875003, 20.73505859375004],
                                [106.55078124999997, 20.52656250000001],
                                [106.57285156250012, 20.392187499999977],
                                [105.98408203125004, 19.939062500000034],
                                [105.62177734375004, 18.96630859375003],
                                [105.88828125000006, 18.502490234375045],
                                [106.49902343749997, 17.946435546874994],
                                [106.47890625000005, 17.719580078125063],
                                [106.3705078125, 17.746875],
                                [107.83378906250002, 16.322460937499983],
                                [108.02939453125012, 16.331103515625074],
                                [108.82128906249997, 15.377929687500028],
                                [109.30332031250012, 13.856445312500043],
                                [109.271875, 13.279345703124974],
                                [109.42392578125006, 12.955957031249994],
                                [109.44492187500006, 12.599609375000057],
                                [109.33554687500012, 12.751904296874997],
                                [109.21894531250004, 12.64580078124996],
                                [109.30468750000003, 12.391162109375045],
                                [109.20683593750007, 12.415380859375006],
                                [109.1986328125, 11.724853515625014],
                                [109.03964843750012, 11.592675781249994],
                                [108.98671875, 11.336376953124997],
                                [108.09492187500004, 10.897265624999989],
                                [108.0013671875, 10.720361328125009],
                                [107.26152343750007, 10.39838867187504],
                                [107.00664062500002, 10.66054687499998],
                                [106.94746093750004, 10.400341796874997],
                                [106.72734375000007, 10.535644531250028],
                                [106.605859375, 10.46494140625002],
                                [106.74121093750003, 10.444384765625003],
                                [106.75742187500006, 10.295800781250023],
                                [106.46406250000004, 10.298291015624997],
                                [106.78525390625012, 10.116455078124986],
                                [106.59560546875005, 9.859863281250028],
                                [106.1364257812501, 10.221679687500014],
                                [106.56435546875005, 9.715625],
                                [106.48408203125004, 9.559423828125006],
                                [105.83095703125005, 10.000732421875028],
                                [106.15859375, 9.59414062499998],
                                [106.16835937500005, 9.396728515625],
                                [105.50097656249997, 9.093212890624983],
                                [105.11435546875006, 8.629199218750031],
                                [104.77041015625, 8.59765625],
                                [104.89628906250007, 8.746630859374974],
                                [104.81855468750004, 8.801855468750034],
                                [104.84521484375003, 9.606152343750026],
                                [105.08447265625003, 9.99570312499999],
                                [104.8019531250001, 10.202734374999977],
                                [104.66347656250005, 10.169921875000043],
                                [104.42636718750006, 10.411230468749991],
                                [104.85058593749997, 10.534472656249974],
                                [105.04638671874997, 10.701660156250014],
                                [105.04570312500002, 10.911376953125014],
                                [105.3146484375001, 10.845166015625026],
                                [105.40576171875003, 10.95161132812504],
                                [105.75507812500004, 10.989990234375043],
                                [105.85332031250007, 10.86357421874996],
                                [106.16396484375005, 10.794921875],
                                [106.16093750000002, 11.037109375000057],
                                [105.85605468750006, 11.294287109375048],
                                [105.85146484375005, 11.635009765625],
                                [106.0060546875001, 11.758007812500011],
                                [106.39921875000007, 11.687011718750028],
                                [106.41386718750002, 11.9484375],
                                [106.70009765625, 11.979296874999974],
                                [107.21210937500004, 12.30400390624996],
                                [107.39335937500002, 12.260498046874972],
                                [107.50644531250006, 12.364550781250031],
                                [107.47539062500002, 13.030371093749963],
                                [107.60546874999997, 13.437792968750017],
                                [107.3314453125, 14.126611328125009],
                                [107.51943359375005, 14.705078125],
                                [107.51376953125012, 14.817382812500057],
                                [107.52451171875012, 14.871826171875043],
                                [107.50468750000007, 14.915917968749966],
                                [107.48037109375, 14.979882812500037],
                                [107.55527343750006, 15.057031250000023],
                                [107.58964843750002, 15.118457031250017],
                                [107.63369140625005, 15.18984375],
                                [107.653125, 15.255224609374991],
                                [107.62167968750006, 15.309863281250017],
                                [107.56425781250002, 15.391601562499972],
                                [107.45957031250012, 15.4658203125],
                                [107.33876953125, 15.560498046875011],
                                [107.27939453125006, 15.618701171875045],
                                [107.16591796875005, 15.802490234375028],
                                [107.1888671875, 15.838623046875],
                                [107.36064453125002, 15.921728515624977],
                                [107.3919921875, 15.951660156250028],
                                [107.39638671875, 16.04301757812499],
                                [106.93066406249997, 16.353125],
                                [106.8927734375001, 16.396533203125074],
                                [106.85107421875003, 16.515625],
                                [106.83242187500005, 16.526269531250023],
                                [106.79160156250006, 16.490332031250006],
                                [106.73955078125007, 16.452539062500023],
                                [106.6564453125001, 16.49262695312501],
                                [106.54619140625002, 16.650732421874977],
                                [106.53369140625003, 16.821044921875057],
                                [106.52597656250006, 16.876611328124994],
                                [106.50224609375002, 16.95410156249997],
                                [106.26953125000003, 17.21679687500003],
                                [106.00625, 17.415283203125057],
                                [105.69140625000003, 17.737841796875045],
                                [105.58847656250012, 17.983691406250045],
                                [105.51855468749997, 18.077441406250045],
                                [105.45820312500004, 18.15429687499997],
                                [105.11455078125002, 18.40527343750003],
                                [105.08701171875006, 18.496240234374994],
                                [105.14541015625, 18.616796875000063],
                                [105.14648437500003, 18.650976562500006],
                                [103.89160156250003, 19.304980468750017],
                                [103.89638671875, 19.339990234375023],
                                [103.93203125, 19.366064453125006],
                                [104.0275390625001, 19.42045898437499],
                                [104.062890625, 19.48256835937505],
                                [104.05156250000007, 19.564160156249955],
                                [104.01347656250007, 19.64648437500003],
                                [104.03203125000002, 19.675146484375006],
                                [104.06279296875007, 19.678417968749983],
                                [104.25986328125006, 19.685498046874983],
                                [104.5462890625, 19.61054687500001],
                                [104.58789062500003, 19.61875],
                                [104.74316406250003, 19.754736328124977],
                                [104.80175781249997, 19.83613281250004],
                                [104.81513671875004, 19.90400390625001],
                                [104.9279296875001, 20.01811523437499],
                                [104.92919921875003, 20.082812500000017],
                                [104.88867187500003, 20.169091796875023],
                                [104.84785156250004, 20.202441406250045],
                                [104.69873046875003, 20.20532226562503],
                                [104.67695312500004, 20.224707031249977],
                                [104.66191406250007, 20.28901367187501],
                                [104.65644531250004, 20.32851562499999],
                                [104.6188476562501, 20.37451171875003],
                                [104.49619140625006, 20.413671875],
                                [104.39218750000012, 20.424755859374955],
                                [104.36777343750012, 20.44140624999997],
                                [104.40781250000012, 20.48574218750005],
                                [104.47861328125006, 20.529589843750017],
                                [104.53271484374997, 20.55488281250001],
                                [104.58320312500004, 20.646679687499955],
                                [104.34960937499997, 20.821093750000074],
                                [104.19531249999997, 20.913964843749966],
                                [104.10136718750002, 20.94550781250001],
                                [103.63505859375007, 20.697070312500017],
                                [103.46357421875004, 20.779833984375017],
                                [103.21074218750002, 20.840625],
                                [103.10449218749997, 20.891650390625045],
                                [102.88378906250003, 21.202587890624983],
                                [102.85117187500006, 21.26591796874999],
                                [102.94960937500005, 21.681347656249983],
                                [102.84521484374997, 21.73476562500005],
                                [102.81591796874997, 21.807373046875],
                                [102.7982421875, 21.797949218750034],
                                [102.77109375000006, 21.709667968749983],
                                [102.73857421875002, 21.67792968750001],
                                [102.66201171875005, 21.67602539062497],
                                [102.58251953125003, 21.90429687500003],
                                [102.12744140624997, 22.379199218750045],
                                [102.1759765625001, 22.414648437500006],
                                [102.2370117187501, 22.466015624999983],
                                [102.40644531250004, 22.70800781249997],
                                [102.47089843750004, 22.75092773437501],
                                [102.98193359374997, 22.4482421875],
                                [103.32666015625003, 22.769775390625057],
                                [103.49296875000007, 22.587988281250034],
                                [103.62021484375006, 22.782031250000045],
                                [103.94150390625006, 22.540087890625045],
                                [104.14306640624997, 22.800146484375006],
                                [104.37177734375004, 22.704052734374983],
                                [104.68730468750002, 22.822216796874983],
                                [104.86474609375003, 23.136376953125023],
                                [105.27539062500003, 23.34521484375003],
                                [105.8429687500001, 22.922802734374955],
                                [106.14843749999997, 22.970068359375006],
                                [106.2790039062501, 22.857470703125045],
                                [106.54179687500007, 22.908349609375023],
                                [106.78027343749997, 22.778906250000034],
                                [106.55039062500006, 22.501367187499994],
                                [106.66357421875003, 21.97890625000005],
                                [106.97099609375002, 21.923925781250034],
                                [107.35117187500012, 21.60888671874997],
                                [107.75927734374997, 21.655029296875057],
                                [107.97265624999997, 21.507958984375023]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Vietnam",
                    childNum: 4
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [169.49130859375006, -19.54013671875002],
                                [169.34726562500006, -19.623535156249957],
                                [169.2174804687501, -19.476367187500003],
                                [169.24746093750005, -19.3447265625],
                                [169.49130859375006, -19.54013671875002]
                            ]
                        ],
                        [
                            [
                                [169.334375, -18.940234375000017],
                                [168.98691406250006, -18.87128906250001],
                                [169.01582031250004, -18.64375],
                                [169.14384765625002, -18.63105468750001],
                                [169.334375, -18.940234375000017]
                            ]
                        ],
                        [
                            [
                                [168.44580078124997, -17.54218750000004],
                                [168.58496093750003, -17.695898437500006],
                                [168.52460937500004, -17.798046875000026],
                                [168.15820312500003, -17.710546874999963],
                                [168.2731445312501, -17.552246093749957],
                                [168.44580078124997, -17.54218750000004]
                            ]
                        ],
                        [
                            [
                                [168.44677734375003, -16.778808593749957],
                                [168.18144531250002, -16.804003906250017],
                                [168.13535156250006, -16.636914062499997],
                                [168.44677734375003, -16.778808593749957]
                            ]
                        ],
                        [
                            [
                                [168.29667968750007, -16.33652343749999],
                                [167.92900390625002, -16.22871093749997],
                                [168.16386718750002, -16.081640625000034],
                                [168.29667968750007, -16.33652343749999]
                            ]
                        ],
                        [
                            [
                                [167.4125, -16.095898437499997],
                                [167.83662109375004, -16.449707031249957],
                                [167.44931640625012, -16.554980468750003],
                                [167.34921875000006, -16.15449218750004],
                                [167.15146484375006, -16.080468749999966],
                                [167.19951171875002, -15.885058593750031],
                                [167.33574218750007, -15.916699218749997],
                                [167.4125, -16.095898437499997]
                            ]
                        ],
                        [
                            [
                                [167.9113281250001, -15.435937500000023],
                                [167.67421875, -15.4515625],
                                [168.00253906250012, -15.283203124999986],
                                [167.9113281250001, -15.435937500000023]
                            ]
                        ],
                        [
                            [
                                [166.74580078125004, -14.826855468750011],
                                [166.81015625000012, -15.15742187500004],
                                [167.0755859375, -14.935644531249977],
                                [167.20078125000012, -15.443066406249969],
                                [167.0939453125001, -15.580859374999974],
                                [166.75830078125003, -15.631152343750003],
                                [166.63105468750004, -15.406054687499974],
                                [166.56738281250003, -14.641796874999969],
                                [166.74580078125004, -14.826855468750011]
                            ]
                        ],
                        [
                            [
                                [167.58486328125, -14.260937500000011],
                                [167.43027343750012, -14.294921875],
                                [167.41074218750006, -14.19746093750004],
                                [167.50644531250012, -14.142187499999977],
                                [167.58486328125, -14.260937500000011]
                            ]
                        ],
                        [
                            [
                                [167.48886718750006, -13.907226562499972],
                                [167.3917968750001, -13.788378906250017],
                                [167.48105468750006, -13.709472656250014],
                                [167.48886718750006, -13.907226562499972]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Vanuatu",
                    childNum: 10
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [-171.4541015625, -14.04648437500002],
                                [-171.9119140625, -14.001660156250026],
                                [-172.04589843750003, -13.857128906249983],
                                [-171.60390624999997, -13.879199218750045],
                                [-171.4541015625, -14.04648437500002]
                            ]
                        ],
                        [
                            [
                                [-172.33349609375, -13.46523437499999],
                                [-172.17685546874998, -13.68466796875002],
                                [-172.224951171875, -13.804296874999963],
                                [-172.535693359375, -13.791699218749983],
                                [-172.77851562499998, -13.516796875000011],
                                [-172.33349609375, -13.46523437499999]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Samoa",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [53.76318359374997, 12.636816406249991],
                                [54.18740234375005, 12.664013671875026],
                                [54.511132812499994, 12.552783203125017],
                                [54.12949218750006, 12.360644531250045],
                                [53.71884765625006, 12.318994140624994],
                                [53.31582031250005, 12.533154296875011],
                                [53.53496093750002, 12.715771484374997],
                                [53.76318359374997, 12.636816406249991]
                            ]
                        ],
                        [
                            [
                                [42.75585937500003, 13.70429687500004],
                                [42.689746093750074, 13.673632812500017],
                                [42.7941406250001, 13.766113281250028],
                                [42.75585937500003, 13.70429687500004]
                            ]
                        ],
                        [
                            [
                                [42.787402343750074, 13.971484375000031],
                                [42.69404296875004, 14.007910156249991],
                                [42.76210937500005, 14.067480468750048],
                                [42.787402343750074, 13.971484375000031]
                            ]
                        ],
                        [
                            [
                                [53.08564453125004, 16.648388671874955],
                                [52.327734375, 16.293554687500063],
                                [52.17402343750004, 15.956835937500017],
                                [52.2174804687501, 15.655517578125],
                                [51.3224609375001, 15.22626953125004],
                                [49.34990234375002, 14.637792968749977],
                                [48.66835937499999, 14.050146484374977],
                                [47.9899414062501, 14.048095703125],
                                [47.40771484374997, 13.661621093750057],
                                [46.78886718750002, 13.465576171874986],
                                [45.65732421875006, 13.338720703124991],
                                [45.03867187500006, 12.815869140624969],
                                [44.617773437500006, 12.817236328124977],
                                [44.00585937499997, 12.607666015625],
                                [43.634375, 12.744482421874991],
                                [43.487597656250074, 12.69882812500002],
                                [43.23193359375003, 13.267089843750057],
                                [43.2824218750001, 13.692529296875037],
                                [43.08906250000004, 14.010986328125],
                                [42.93642578125005, 14.938574218749963],
                                [42.85566406250004, 15.132958984375037],
                                [42.65781250000006, 15.232812500000051],
                                [42.79902343750004, 15.326269531249991],
                                [42.71718750000005, 15.654638671875006],
                                [42.83964843750002, 16.032031250000074],
                                [42.79931640624997, 16.37177734375001],
                                [43.16503906249997, 16.689404296874955],
                                [43.19091796875003, 17.359375],
                                [43.41796875000003, 17.516259765625023],
                                [43.91699218749997, 17.32470703124997],
                                [45.14804687500006, 17.427441406249955],
                                [45.5353515625001, 17.30205078124999],
                                [46.72763671875006, 17.26557617187501],
                                [46.97568359375006, 16.953466796875034],
                                [47.14355468749997, 16.946679687499966],
                                [47.44179687499999, 17.111865234375045],
                                [47.57958984374997, 17.448339843750034],
                                [48.17216796875002, 18.156933593749983],
                                [49.04199218750003, 18.58178710937503],
                                [51.977636718750006, 18.996142578125074],
                                [53.08564453125004, 16.648388671874955]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "Yemen",
                    childNum: 4
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [37.85693359375003, -46.94423828124998],
                                [37.5900390625001, -46.90800781250006],
                                [37.78955078124997, -46.8375],
                                [37.85693359375003, -46.94423828124998]
                            ]
                        ],
                        [
                            [
                                [31.799609375000017, -23.8921875],
                                [31.98583984374997, -24.460644531249983],
                                [31.921679687500017, -25.96875],
                                [31.335156250000097, -25.755566406249997],
                                [31.207324218750074, -25.843359375000034],
                                [31.08808593750004, -25.980664062500026],
                                [30.803320312500006, -26.41347656250001],
                                [30.806738281250006, -26.78525390624999],
                                [30.88330078124997, -26.792382812500023],
                                [30.938085937500006, -26.91582031250003],
                                [31.06337890625005, -27.1123046875],
                                [31.274023437500063, -27.23837890625002],
                                [31.469531250000017, -27.29550781250002],
                                [31.74257812500005, -27.309960937500037],
                                [31.95839843750005, -27.305859375],
                                [31.946093750000017, -27.173632812499974],
                                [31.96718750000005, -26.96064453125001],
                                [31.994726562500006, -26.817480468749977],
                                [32.024804687499994, -26.81113281250002],
                                [32.112890625, -26.83945312500002],
                                [32.19960937499999, -26.833496093749957],
                                [32.35351562499997, -26.861621093750003],
                                [32.7765625000001, -26.850976562499966],
                                [32.88613281250005, -26.849316406249983],
                                [32.53476562500006, -28.19970703125003],
                                [32.285742187500006, -28.62148437499998],
                                [31.335156250000097, -29.378125],
                                [29.97119140625003, -31.322070312500017],
                                [28.449414062500068, -32.62460937499999],
                                [27.077441406250074, -33.52119140625004],
                                [26.429492187500045, -33.75957031250002],
                                [25.80585937500001, -33.737109374999974],
                                [25.574218750000057, -34.03535156249998],
                                [25.00292968750003, -33.97363281250003],
                                [24.8271484375, -34.16894531250003],
                                [24.595507812500074, -34.17451171875],
                                [23.697851562500063, -33.99277343750002],
                                [23.268164062500006, -34.08115234374999],
                                [22.553808593750063, -34.01005859374999],
                                [22.24550781250005, -34.06914062500003],
                                [21.788964843750023, -34.37265624999996],
                                [20.529882812500034, -34.4630859375],
                                [20.020605468750006, -34.785742187500006],
                                [19.298242187500023, -34.61503906249996],
                                [19.330761718750068, -34.49238281250001],
                                [19.098339843750068, -34.350097656249986],
                                [18.831347656250017, -34.36406249999999],
                                [18.75214843750004, -34.08261718750002],
                                [18.50039062499999, -34.10927734375004],
                                [18.46162109375001, -34.346875],
                                [18.35205078124997, -34.1884765625],
                                [18.43300781250005, -33.71728515625003],
                                [17.851074218750057, -32.82744140625002],
                                [17.96523437500005, -32.70859374999996],
                                [18.125, -32.74912109374996],
                                [18.325292968750034, -32.50498046874996],
                                [18.21083984375008, -31.74248046874996],
                                [17.34707031250005, -30.44482421875],
                                [16.95, -29.40341796875002],
                                [16.739453124999983, -29.009375],
                                [16.447558593750045, -28.61757812499998],
                                [16.755761718750023, -28.45214843750003],
                                [16.7875, -28.39472656249997],
                                [16.81015625, -28.264550781249994],
                                [16.841210937500023, -28.21894531250004],
                                [16.875292968750045, -28.12792968749997],
                                [16.93330078125004, -28.06962890624999],
                                [17.05625, -28.03105468750003],
                                [17.1884765625, -28.13251953125001],
                                [17.358691406250017, -28.269433593750023],
                                [17.44794921875001, -28.698144531249966],
                                [18.310839843750017, -28.88623046875],
                                [19.16171875, -28.93876953124996],
                                [19.245800781250068, -28.90166015625003],
                                [19.31269531250004, -28.733300781250023],
                                [19.539843750000017, -28.574609375000023],
                                [19.98046875, -28.45126953125002],
                                [19.98046875, -28.310351562500003],
                                [19.98046875, -24.77675781249998],
                                [20.430664062500057, -25.14707031250002],
                                [20.79316406250001, -25.915625],
                                [20.641406250000017, -26.7421875],
                                [20.739843749999977, -26.84882812499997],
                                [21.694726562500023, -26.840917968749963],
                                [21.738085937500045, -26.806835937500026],
                                [21.788281250000068, -26.710058593750034],
                                [22.01093750000004, -26.635839843750006],
                                [22.090917968749977, -26.580175781250034],
                                [22.217578125000045, -26.38886718749997],
                                [22.47089843750004, -26.219042968750003],
                                [22.548632812500074, -26.178417968749997],
                                [22.59765625000003, -26.13271484375001],
                                [22.878808593750023, -25.457910156250023],
                                [23.148730468750017, -25.288671875],
                                [23.389257812500006, -25.291406250000023],
                                [23.89375, -25.600878906250017],
                                [23.96953124999999, -25.62607421874999],
                                [24.192968750000034, -25.632910156249963],
                                [24.33056640625, -25.742871093749983],
                                [25.21337890625, -25.75625],
                                [25.518164062500006, -25.66279296875001],
                                [25.91210937499997, -24.747460937499966],
                                [26.031835937500034, -24.70244140625003],
                                [26.130859375000057, -24.671484375000034],
                                [26.39716796875004, -24.61357421874996],
                                [26.451757812500063, -24.582714843749983],
                                [26.835058593750063, -24.240820312499963],
                                [27.085546875000034, -23.577929687500003],
                                [27.7685546875, -23.14892578125],
                                [27.812597656250006, -23.108007812500006],
                                [28.210156249999983, -22.693652343749974],
                                [28.83984375000003, -22.480859374999966],
                                [28.94580078125003, -22.39511718749999],
                                [29.013476562500045, -22.27841796875002],
                                [29.129882812500057, -22.21328125],
                                [29.364843750000063, -22.19394531250005],
                                [29.37744140625003, -22.19277343749998],
                                [29.66308593749997, -22.146289062500017],
                                [29.90234375000003, -22.184179687500006],
                                [30.19042968750003, -22.291113281250034],
                                [30.460156250000097, -22.329003906250023],
                                [30.71162109375004, -22.297851562499986],
                                [31.07343750000004, -22.30781249999997],
                                [31.19726562499997, -22.344921874999983],
                                [31.287890625000074, -22.402050781249983],
                                [31.54560546875004, -23.48232421874998],
                                [31.799609375000017, -23.8921875]
                            ],
                            [
                                [27.19355468750001, -29.94130859375001],
                                [27.364062500000017, -30.27919921875001],
                                [27.753125, -30.6],
                                [28.05683593750001, -30.63105468750001],
                                [28.128710937500017, -30.52509765625001],
                                [28.39208984375003, -30.14755859375002],
                                [28.646875, -30.1265625],
                                [29.09804687500005, -29.919042968750006],
                                [29.142187500000063, -29.70097656249999],
                                [29.293554687500006, -29.56689453125003],
                                [29.348828125000097, -29.441992187499977],
                                [29.38671874999997, -29.319726562500023],
                                [29.301367187500006, -29.08984375],
                                [28.625781250000017, -28.581738281250054],
                                [28.583398437499994, -28.59414062499999],
                                [28.471875, -28.615820312499977],
                                [28.23261718750004, -28.701269531249977],
                                [28.084375, -28.779980468750026],
                                [27.95986328125008, -28.87333984375003],
                                [27.73554687500004, -28.940039062500034],
                                [27.294531250000063, -29.519335937500017],
                                [27.056933593750074, -29.62558593749999],
                                [27.19355468750001, -29.94130859375001]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "South Africa",
                    childNum: 2
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [33.148046875, -9.603515625],
                            [33.25, -9.759570312500003],
                            [33.35097656250002, -9.862207031250009],
                            [33.33710937500001, -9.954003906250009],
                            [33.3115234375, -10.037988281250009],
                            [33.52890625, -10.234667968750003],
                            [33.53759765625, -10.3515625],
                            [33.5537109375, -10.391308593750011],
                            [33.66152343750002, -10.553125],
                            [33.29277343750002, -10.85234375],
                            [33.37978515625002, -11.157910156250011],
                            [33.26835937500002, -11.40390625],
                            [33.23271484375002, -11.417675781250011],
                            [33.22636718750002, -11.534863281250011],
                            [33.30390625000001, -11.690820312500009],
                            [33.25234375000002, -12.112597656250003],
                            [33.34013671875002, -12.308300781250011],
                            [33.512304687500006, -12.347753906250006],
                            [32.975195312500006, -12.701367187500011],
                            [32.96757812500002, -13.225],
                            [32.67041015625, -13.590429687500006],
                            [32.797460937500006, -13.6884765625],
                            [32.98125, -14.009375],
                            [33.148046875, -13.94091796875],
                            [33.201757812500006, -14.013378906250011],
                            [30.231835937500023, -14.990332031250006],
                            [30.39609375, -15.64306640625],
                            [29.4873046875, -15.69677734375],
                            [28.9130859375, -15.98779296875],
                            [28.760546875000017, -16.53212890625001],
                            [27.932226562500006, -16.89619140625001],
                            [27.020800781250017, -17.95839843750001],
                            [26.779882812500006, -18.04150390625],
                            [26.333398437500023, -17.929296875],
                            [25.995898437500017, -17.969824218750006],
                            [25.2587890625, -17.793554687500006],
                            [25.001757812500017, -17.56855468750001],
                            [24.73291015625, -17.51777343750001],
                            [24.27490234375, -17.481054687500006],
                            [23.380664062500017, -17.640625],
                            [22.193945312500006, -16.628125],
                            [21.979785156250017, -15.95556640625],
                            [21.979394531250023, -14.440527343750006],
                            [21.979296875000017, -14.11962890625],
                            [21.979101562500006, -13.798730468750009],
                            [21.978906250000023, -13.0009765625],
                            [22.209570312500006, -13.0009765625],
                            [23.843164062500023, -13.0009765625],
                            [23.962988281250006, -12.988476562500011],
                            [23.882421875, -12.799023437500011],
                            [23.886523437500017, -12.743261718750006],
                            [23.909375, -12.636132812500009],
                            [23.98388671875, -11.725],
                            [23.96650390625001, -10.871777343750011],
                            [24.36572265625, -11.1298828125],
                            [24.3779296875, -11.417089843750006],
                            [25.28876953125001, -11.21240234375],
                            [25.349414062500017, -11.623046875],
                            [26.025976562500006, -11.89013671875],
                            [26.824023437500017, -11.965234375],
                            [27.1591796875, -11.579199218750006],
                            [27.573828125, -12.22705078125],
                            [28.412890625000017, -12.51806640625],
                            [28.550878906250006, -12.836132812500011],
                            [28.730078125, -12.925488281250011],
                            [29.014257812500006, -13.368847656250011],
                            [29.20185546875001, -13.398339843750009],
                            [29.55419921875, -13.248925781250009],
                            [29.775195312500017, -13.438085937500006],
                            [29.79511718750001, -12.155468750000011],
                            [29.508203125000023, -12.228222656250011],
                            [29.48554687500001, -12.41845703125],
                            [29.064355468750023, -12.348828125000011],
                            [28.482519531250006, -11.812109375],
                            [28.383398437500006, -11.566699218750003],
                            [28.6455078125, -10.550195312500009],
                            [28.60419921875001, -9.678808593750006],
                            [28.400683593750017, -9.224804687500011],
                            [28.869531250000023, -8.785839843750011],
                            [28.89814453125001, -8.485449218750006],
                            [30.75117187500001, -8.193652343750003],
                            [30.830664062500006, -8.385546875],
                            [30.891992187500023, -8.473730468750006],
                            [30.968359375, -8.550976562500011],
                            [31.07636718750001, -8.611914062500006],
                            [31.3505859375, -8.60703125],
                            [31.44921875, -8.65390625],
                            [31.53486328125001, -8.71328125],
                            [31.55625, -8.80546875],
                            [31.673632812500017, -8.908789062500006],
                            [31.91865234375001, -8.9421875],
                            [31.921875, -9.019433593750009],
                            [31.94257812500001, -9.054003906250003],
                            [32.75664062500002, -9.322265625],
                            [32.919921875, -9.407421875000011],
                            [32.99599609375002, -9.622851562500003],
                            [33.148046875, -9.603515625]
                        ]
                    ]
                },
                properties: {
                    name: "Zambia",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [31.287890625000017, -22.40205078125001],
                            [31.07343750000001, -22.30781250000001],
                            [30.71162109375001, -22.2978515625],
                            [30.46015625000001, -22.32900390625001],
                            [30.1904296875, -22.291113281250006],
                            [29.90234375, -22.184179687500006],
                            [29.6630859375, -22.146289062500003],
                            [29.37744140625, -22.19277343750001],
                            [29.36484375, -22.193945312500006],
                            [29.315234375000017, -22.15771484375],
                            [29.237207031250023, -22.07949218750001],
                            [29.042382812500023, -22.018359375],
                            [29.02558593750001, -21.796875],
                            [28.014062500000023, -21.55419921875],
                            [27.66943359375, -21.064257812500003],
                            [27.679296875, -20.503027343750006],
                            [27.28076171875, -20.47871093750001],
                            [27.17822265625, -20.10097656250001],
                            [26.168066406250006, -19.53828125000001],
                            [25.939355468750023, -18.93867187500001],
                            [25.242285156250006, -17.969042968750003],
                            [25.2587890625, -17.793554687500006],
                            [25.995898437500017, -17.969824218750006],
                            [26.333398437500023, -17.929296875],
                            [26.779882812500006, -18.04150390625],
                            [27.020800781250017, -17.95839843750001],
                            [27.932226562500006, -16.89619140625001],
                            [28.760546875000017, -16.53212890625001],
                            [28.9130859375, -15.98779296875],
                            [29.4873046875, -15.69677734375],
                            [30.39609375, -15.64306640625],
                            [30.437792968750017, -15.995312500000011],
                            [31.236230468750023, -16.02363281250001],
                            [31.939843750000023, -16.428808593750006],
                            [32.94804687500002, -16.71230468750001],
                            [32.87626953125002, -16.88359375],
                            [32.99306640625002, -18.35957031250001],
                            [32.69970703125, -18.94091796875],
                            [32.84980468750001, -19.10439453125001],
                            [32.77763671875002, -19.388769531250006],
                            [32.992773437500006, -19.98486328125],
                            [32.49238281250001, -20.659765625],
                            [32.353613281250006, -21.136523437500003],
                            [32.429785156250006, -21.29707031250001],
                            [31.429492187500017, -22.298828125],
                            [31.287890625000017, -22.40205078125001]
                        ]
                    ]
                },
                properties: {
                    name: "Zimbabwe",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "Polygon",
                    coordinates: [
                        [
                            [74.00809389139292, 33.25375789331485],
                            [73.19660141888893, 33.898124784580936],
                            [73.13410859949555, 34.82510160558277],
                            [72.31128647748268, 35.77290936638241],
                            [73.08203125000107, 36.43949943991182],
                            [73.08961802927895, 36.86435907947333],
                            [73.116796875, 36.868554687499994],
                            [74.03886718750002, 36.825732421874996],
                            [74.54140625000002, 37.02216796875],
                            [74.69218750000002, 37.0357421875],
                            [74.8892578125, 36.952441406249996],
                            [74.94912109375002, 36.968359375],
                            [75.05390625000001, 36.987158203125],
                            [75.14521484375001, 36.9732421875],
                            [75.3466796875, 36.913476562499994],
                            [75.37685546875002, 36.883691406249994],
                            [75.42421875000002, 36.738232421875],
                            [75.46025390625002, 36.725048828125],
                            [75.57373046875, 36.759326171874996],
                            [75.66718750000001, 36.741992187499996],
                            [75.77216796875001, 36.694921875],
                            [75.84023437500002, 36.649707031249996],
                            [75.88496093750001, 36.600732421874994],
                            [75.93300781250002, 36.52158203125],
                            [75.95185546875001, 36.45810546875],
                            [75.97441406250002, 36.382421875],
                            [75.91230468750001, 36.048974609374994],
                            [76.07089843750003, 35.9830078125],
                            [76.14785156250002, 35.829003906249994],
                            [76.17783203125003, 35.810546875],
                            [76.25166015625001, 35.8109375],
                            [76.3857421875, 35.837158203125],
                            [76.50205078125003, 35.878222656249996],
                            [76.55126953125, 35.887060546875],
                            [76.5634765625, 35.772998046874996],
                            [76.6318359375, 35.729394531249994],
                            [76.7275390625, 35.678662109375],
                            [76.76689453124999, 35.66171875],
                            [76.81279296874999, 35.571826171874996],
                            [76.88222656250002, 35.4357421875],
                            [76.927734375, 35.346630859375],
                            [77.04863281249999, 35.109912109374996],
                            [77.00087890625002, 34.991992187499996],
                            [76.78291015625001, 34.900195312499996],
                            [76.75751953125001, 34.877832031249994],
                            [76.7490234375, 34.847558593749994],
                            [76.6962890625, 34.786914062499996],
                            [76.59443359375001, 34.73583984375],
                            [76.45673828125001, 34.756103515625],
                            [76.17246093750003, 34.667724609375],
                            [76.041015625, 34.669921875],
                            [75.93828125000002, 34.612548828125],
                            [75.86210937500002, 34.56025390625],
                            [75.70917968750001, 34.503076171874994],
                            [74.300390625, 34.765380859375],
                            [74.17197265625, 34.7208984375],
                            [74.05585937500001, 34.6806640625],
                            [73.96123046875002, 34.653466796874994],
                            [73.79453125, 34.378222656249996],
                            [73.80996093750002, 34.325341796874994],
                            [73.92460937500002, 34.287841796875],
                            [73.97236328125001, 34.236621093749996],
                            [73.9794921875, 34.191308593749994],
                            [73.90390625, 34.1080078125],
                            [73.94990234375001, 34.018798828125],
                            [74.24648437500002, 33.990185546875],
                            [73.97646484375002, 33.7212890625],
                            [74.15, 33.506982421874994],
                            [74.00809389139292, 33.25375789331485]
                        ]
                    ]
                },
                properties: {
                    name: "",
                    childNum: 1
                }
            }, {
                geometry: {
                    type: "MultiPolygon",
                    coordinates: [
                        [
                            [
                                [78.49194250885338, 32.53122786149202],
                                [78.10154031239509, 32.87658365066666],
                                [77.71342088235082, 32.6917648744551],
                                [77.06655516561037, 33.301666835953235],
                                [76.62299010270264, 33.32014871357439],
                                [76.32728006076415, 32.87658365066666],
                                [75.73585997688717, 32.78417426256088],
                                [75.62496871116024, 32.28516356678968],
                                [75.32221348233018, 32.28516356678968],
                                [74.98730468749997, 32.46220703124996],
                                [74.78886718750013, 32.4578125],
                                [74.6857421875001, 32.493798828124994],
                                [74.66328125000004, 32.75766601562495],
                                [74.63242187499995, 32.770898437500136],
                                [74.58828125000011, 32.7532226562501],
                                [74.35458984375012, 32.76870117187505],
                                [74.30546875000007, 32.81044921875002],
                                [74.30361328125005, 32.991796875000034],
                                [73.98984375000006, 33.22119140625006],
                                [74.15, 33.506982421874994],
                                [73.97646484375016, 33.72128906249998],
                                [74.24648437500011, 33.99018554687504],
                                [73.9499023437501, 34.018798828125],
                                [73.90390625000012, 34.10800781250006],
                                [73.97949218750009, 34.191308593749966],
                                [73.97236328125004, 34.23662109374996],
                                [73.92460937500007, 34.287841796875114],
                                [73.80996093750016, 34.32534179687511],
                                [73.79453125000006, 34.378222656250045],
                                [73.96123046875007, 34.653466796874994],
                                [74.05585937500015, 34.68066406250003],
                                [74.17197265624995, 34.72089843750004],
                                [74.30039062500006, 34.76538085937506],
                                [75.70917968750004, 34.50307617187508],
                                [75.86210937500002, 34.56025390625001],
                                [75.93828125000019, 34.612548828125],
                                [76.04101562500014, 34.66992187499997],
                                [76.17246093750006, 34.66772460937506],
                                [76.4567382812501, 34.756103515625114],
                                [76.5944335937501, 34.73583984375006],
                                [76.69628906249997, 34.78691406249999],
                                [76.74902343750014, 34.84755859375008],
                                [76.7575195312501, 34.87783203125005],
                                [76.7829101562501, 34.90019531249999],
                                [77.00087890625011, 34.99199218750002],
                                [77.03066406250011, 35.06235351562498],
                                [77.04863281250007, 35.109912109375074],
                                [77.42343749999995, 35.30258789062506],
                                [77.57158203125002, 35.37875976562495],
                                [77.69697265625015, 35.443261718750136],
                                [77.79941406250006, 35.49589843750002],
                                [78.0426757812501, 35.4797851562501],
                                [78.07578125000006, 35.13491210937502],
                                [78.15849609375002, 34.94648437499998],
                                [78.32695312500007, 34.60639648437498],
                                [78.86484375000006, 34.39033203125001],
                                [78.93642578125, 34.35195312500002],
                                [78.97060546875011, 34.22822265625004],
                                [78.72666015625006, 34.013378906249955],
                                [78.78378906250006, 33.80878906250004],
                                [78.86503906250002, 33.43110351562501],
                                [78.94843750000004, 33.346533203125006],
                                [79.1125, 33.22626953125001],
                                [79.13515625000005, 33.17192382812496],
                                [79.10283203125007, 33.05253906249996],
                                [79.14550781250003, 33.00146484375006],
                                [79.16992187500003, 32.497216796874994],
                                [78.91894531249997, 32.3582031250001],
                                [78.75351562500012, 32.49926757812506],
                                [78.73671875, 32.55839843750002],
                                [78.49194250885338, 32.53122786149202]
                            ]
                        ]
                    ]
                },
                properties: {
                    name: "",
                    childNum: 1
                }
            }]
        }) : n("ECharts Map is not loaded") : n("ECharts is not Loaded")
    }), $(".backbtn").click(() => {
        window.history.back()
    }), $(".header .right .car").click(function () {
        console.log(window.location.pathname)
        if (window.location.pathname !== "/Alipay") {
            window.location.pathname = "Alipay"
        }
    }), $(".header .right .vip").click(function () {
        console.log(window.location.pathname)
        if (window.location.pathname !== "/loft_HD") {
            window.location.pathname = "loft_HD"
        }
    });